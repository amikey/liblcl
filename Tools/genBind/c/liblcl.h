/*
   The code is automatically generated by the genBind tool. 
   Author: ying32
   https://github.com/ying32  
*/


#ifndef _LIBLCL_H
#define _LIBLCL_H

#ifdef __cplusplus
//extern "C" {
#define CChar const
#else
#define CChar
#endif

#ifdef __GNUC__
   // #pragma GCC diagnostic ignored "-Wint-to-pointer-cast"
#endif

#include <stdint.h>
#include <stdio.h>
#include <assert.h>

#ifdef __GNUC__
#include <pthread.h>
#endif

#ifdef _WIN32
    #include<Windows.h>
    #define LCLAPI __stdcall
#else
    #include <dlfcn.h>
    #include <stddef.h>
    #include <stdbool.h>
    // __cdecl 默认
    #define LCLAPI
    #define TRUE 1
    #define FALSE 0
#endif

#ifndef NULL
    #define NULL 0
#endif

//#ifdef __APPLE__
//    #include <Cocoa/Cocoa.h>
//#endif



// 非Windows下的类型定义
#ifndef _WIN32
    typedef int32_t BOOL;
#endif

#ifdef __linux__
    typedef void* PGdkWindow;
    //typedef uintptr_t TXId;
    typedef void* PGtkFixed;
#endif

#ifdef __APPLE__
    //#include <Cocoa/Cocoa.h>
    typedef void* MyNSWindow;
#endif

// printf("GetFunc: %s=%p\n", ""#name"", p##name);

// 获取dll函数地址
#define GET_FUNC_ADDR(name) \
if(!p##name) \
   p##name = get_proc_addr(""#name""); \
assert(p##name != NULL);

// 定义dll函数指针
#define DEFINE_FUNC_PTR(name) \
static void* p##name;

// 转换参数
#define COV_PARAM(name) \
(uintptr_t)name


/*--------------------常量定义--------------------*/

// Lazarus中的颜色表，Lazarus中的TColor与一般HTML的RGB有点不一样，反过来的以BGR表示.
#define clClSysNone  0x1FFFFFFF
#define clSysDefault  0x20000000

// Actual colors
#define clAliceblue  0xFFF8F0
#define clAntiquewhite  0xD7EBFA
#define clAqua  0xFFFF00
#define clAquamarine  0xD4FF7F
#define clAzure  0xFFFFF0
#define clBeige  0xDCF5F5
#define clBisque  0xC4E4FF
#define clBlack  0x000000
#define clBlanchedalmond  0xCDEBFF
#define clBlue  0xFF0000
#define clBlueviolet  0xE22B8A
#define clBrown  0x2A2AA5
#define clBurlywood  0x87B8DE
#define clCadetblue  0xA09E5F
#define clChartreuse  0x00FF7F
#define clChocolate  0x1E69D2
#define clCoral  0x507FFF
#define clCornflowerblue  0xED9564
#define clCornsilk  0xDCF8FF
#define clCrimson  0x3C14DC
#define clCyan  0xFFFF00
#define clDarkblue  0x8B0000
#define clDarkcyan  0x8B8B00
#define clDarkgoldenrod  0x0B86B8
#define clDarkgray  0xA9A9A9
#define clDarkgreen  0x006400
#define clDarkgrey  0xA9A9A9
#define clDarkkhaki  0x6BB7BD
#define clDarkmagenta  0x8B008B
#define clDarkolivegreen  0x2F6B55
#define clDarkorange  0x008CFF
#define clDarkorchid  0xCC3299
#define clDarkred  0x00008B
#define clDarksalmon  0x7A96E9
#define clDarkseagreen  0x8FBC8F
#define clDarkslateblue  0x8B3D48
#define clDarkslategray  0x4F4F2F
#define clDarkslategrey  0x4F4F2F
#define clDarkturquoise  0xD1CE00
#define clDarkviolet  0xD30094
#define clDeeppink  0x9314FF
#define clDeepskyblue  0xFFBF00
#define clDimgray  0x696969
#define clDimgrey  0x696969
#define clDodgerblue  0xFF901E
#define clFirebrick  0x2222B2
#define clFloralwhite  0xF0FAFF
#define clForestgreen  0x228B22
#define clFuchsia  0xFF00FF
#define clGainsboro  0xDCDCDC
#define clGhostwhite  0xFFF8F8
#define clGold  0x00D7FF
#define clGoldenrod  0x20A5DA
#define clGray  0x808080
#define clGreen  0x008000
#define clGreenyellow  0x2FFFAD
#define clGrey  0x808080
#define clHoneydew  0xF0FFF0
#define clHotpink  0xB469FF
#define clIndianred  0x5C5CCD
#define clIndigo  0x82004B
#define clIvory  0xF0FFFF
#define clKhaki  0x8CE6F0
#define clLavender  0xFAE6E6
#define clLavenderblush  0xF5F0FF
#define clLawngreen  0x00FC7C
#define clLemonchiffon  0xCDFAFF
#define clLightblue  0xE6D8AD
#define clLightcoral  0x8080F0
#define clLightcyan  0xFFFFE0
#define clLightgoldenrodyellow  0xD2FAFA
#define clLightgray  0xD3D3D3
#define clLightgreen  0x90EE90
#define clLightgrey  0xD3D3D3
#define clLightpink  0xC1B6FF
#define clLightsalmon  0x7AA0FF
#define clLightseagreen  0xAAB220
#define clLightskyblue  0xFACE87
#define clLightslategray  0x998877
#define clLightslategrey  0x998877
#define clLightsteelblue  0xDEC4B0
#define clLightyellow  0xE0FFFF
#define clLtGray  0xC0C0C0
#define clMedGray  0xA4A0A0
#define clDkGray  0x808080
#define clMoneyGreen  0xC0DCC0
#define clLegacySkyBlue  0xF0CAA6
#define clCream  0xF0FBFF
#define clLime  0x00FF00
#define clLimegreen  0x32CD32
#define clLinen  0xE6F0FA
#define clMagenta  0xFF00FF
#define clMaroon  0x000080
#define clMediumaquamarine  0xAACD66
#define clMediumblue  0xCD0000
#define clMediumorchid  0xD355BA
#define clMediumpurple  0xDB7093
#define clMediumseagreen  0x71B33C
#define clMediumslateblue  0xEE687B
#define clMediumspringgreen  0x9AFA00
#define clMediumturquoise  0xCCD148
#define clMediumvioletred  0x8515C7
#define clMidnightblue  0x701919
#define clMintcream  0xFAFFF5
#define clMistyrose  0xE1E4FF
#define clMoccasin  0xB5E4FF
#define clNavajowhite  0xADDEFF
#define clNavy  0x800000
#define clOldlace  0xE6F5FD
#define clOlive  0x008080
#define clOlivedrab  0x238E6B
#define clOrange  0x00A5FF
#define clOrangered  0x0045FF
#define clOrchid  0xD670DA
#define clPalegoldenrod  0xAAE8EE
#define clPalegreen  0x98FB98
#define clPaleturquoise  0xEEEEAF
#define clPalevioletred  0x9370DB
#define clPapayawhip  0xD5EFFF
#define clPeachpuff  0xB9DAFF
#define clPeru  0x3F85CD
#define clPink  0xCBC0FF
#define clPlum  0xDDA0DD
#define clPowderblue  0xE6E0B0
#define clPurple  0x800080
#define clRed  0x0000FF
#define clRosybrown  0x8F8FBC
#define clRoyalblue  0xE16941
#define clSaddlebrown  0x13458B
#define clSalmon  0x7280FA
#define clSandybrown  0x60A4F4
#define clSeagreen  0x578B2E
#define clSeashell  0xEEF5FF
#define clSienna  0x2D52A0
#define clSilver  0xC0C0C0
#define clSkyblue  0xEBCE87
#define clSlateblue  0xCD5A6A
#define clSlategray  0x908070
#define clSlategrey  0x908070
#define clSnow  0xFAFAFF
#define clSpringgreen  0x7FFF00
#define clSteelblue  0xB48246
#define clTan  0x8CB4D2
#define clTeal  0x808000
#define clThistle  0xD8BFD8
#define clTomato  0x4763FF
#define clTurquoise  0xD0E040
#define clViolet  0xEE82EE
#define clWheat  0xB3DEF5
#define clWhite  0xFFFFFF
#define clWhitesmoke  0xF5F5F5
#define clYellow  0x00FFFF
#define clYellowgreen  0x32CD9A
#define clBtnFace  0xFF00000F
#define clNull  0x00000000

// Virtual Keys, Standard Set
#define vkLButton  0x01 // 1
#define vkRButton  0x02 // 2
#define vkCancel  0x03 // 3
#define vkMButton  0x04 // 4
#define vkXButton1  0x05 // 5
#define vkXButton2  0x06 // 6
#define vkBack  0x08 // 8
#define vkTab  0x09 // 9
#define vkLineFeed  0x0A // 10
#define vkClear  0x0C // 12
#define vkReturn  0x0D // 13
#define vkShift  0x10 // 16
#define vkControl  0x11 // 17
#define vkMenu  0x12 // 18
#define vkPause  0x13 // 19
#define vkCapital  0x14 // 20
#define vkKana  0x15 // 21
#define vkHangul  0x15 // 21
#define vkJunja  0x17 // 23
#define vkFinal  0x18 // 24
#define vkHanja  0x19 // 25
#define vkKanji  0x19 // 25
#define vkConvert  0x1C // 28
#define vkNonConvert  0x1D // 29
#define vkAccept  0x1E // 30
#define vkModeChange  0x1F // 31
#define vkEscape  0x1B // 27
#define vkSpace  0x20 // 32
#define vkPrior  0x21 // 33
#define vkNext  0x22 // 34
#define vkEnd  0x23 // 35
#define vkHome  0x24 // 36
#define vkLeft  0x25 // 37
#define vkUp  0x26 // 38
#define vkRight  0x27 // 39
#define vkDown  0x28 // 40
#define vkSelect  0x29 // 41
#define vkPrint  0x2A // 42
#define vkExecute  0x2B // 43
#define vkSnapshot  0x2C // 44
#define vkInsert  0x2D // 45
#define vkDelete  0x2E // 46
#define vkHelp  0x2F // 47

// vk0 thru vk9 are the same as ASCII '0' thru '9' (0x30 - 0x39)
#define vk0  0x30 // 48
#define vk1  0x31 // 49
#define vk2  0x32 // 50
#define vk3  0x33 // 51
#define vk4  0x34 // 52
#define vk5  0x35 // 53
#define vk6  0x36 // 54
#define vk7  0x37 // 55
#define vk8  0x38 // 56
#define vk9  0x39 // 57

// vkA thru vkZ are the same as ASCII 'A' thru 'Z' (0x41 - 0x5A)
#define vkA  0x41 // 65
#define vkB  0x42 // 66
#define vkC  0x43 // 67
#define vkD  0x44 // 68
#define vkE  0x45 // 69
#define vkF  0x46 // 70
#define vkG  0x47 // 71
#define vkH  0x48 // 72
#define vkI  0x49 // 73
#define vkJ  0x4A // 74
#define vkK  0x4B // 75
#define vkL  0x4C // 76
#define vkM  0x4D // 77
#define vkN  0x4E // 78
#define vkO  0x4F // 79
#define vkP  0x50 // 80
#define vkQ  0x51 // 81
#define vkR  0x52 // 82
#define vkS  0x53 // 83
#define vkT  0x54 // 84
#define vkU  0x55 // 85
#define vkV  0x56 // 86
#define vkW  0x57 // 87
#define vkX  0x58 // 88
#define vkY  0x59 // 89
#define vkZ  0x5A // 90
#define vkLWin  0x5B // 91
#define vkRWin  0x5C // 92
#define vkApps  0x5D // 93
#define vkSleep  0x5F // 95
#define vkNumpad0  0x60 // 96
#define vkNumpad1  0x61 // 97
#define vkNumpad2  0x62 // 98
#define vkNumpad3  0x63 // 99
#define vkNumpad4  0x64 // 100
#define vkNumpad5  0x65 // 101
#define vkNumpad6  0x66 // 102
#define vkNumpad7  0x67 // 103
#define vkNumpad8  0x68 // 104
#define vkNumpad9  0x69 // 105
#define vkMultiply  0x6A // 106
#define vkAdd  0x6B // 107
#define vkSeparator  0x6C // 108
#define vkSubtract  0x6D // 109
#define vkDecimal  0x6E // 110
#define vkDivide  0x6F // 111
#define vkF1  0x70 // 112
#define vkF2  0x71 // 113
#define vkF3  0x72 // 114
#define vkF4  0x73 // 115
#define vkF5  0x74 // 116
#define vkF6  0x75 // 117
#define vkF7  0x76 // 118
#define vkF8  0x77 // 119
#define vkF9  0x78 // 120
#define vkF10  0x79 // 121
#define vkF11  0x7A // 122
#define vkF12  0x7B // 123
#define vkF13  0x7C // 124
#define vkF14  0x7D // 125
#define vkF15  0x7E // 126
#define vkF16  0x7F // 127
#define vkF17  0x80 // 128
#define vkF18  0x81 // 129
#define vkF19  0x82 // 130
#define vkF20  0x83 // 131
#define vkF21  0x84 // 132
#define vkF22  0x85 // 133
#define vkF23  0x86 // 134
#define vkF24  0x87 // 135
#define vkCamera  0x88 // 136
#define vkHardwareBack  0x89 // 137
#define vkNumLock  0x90 // 144
#define vkScroll  0x91 // 145
#define vkLShift  0xA0 // 160
#define vkRShift  0xA1 // 161
#define vkLControl  0xA2 // 162
#define vkRControl  0xA3 // 163
#define vkLMenu  0xA4 // 164
#define vkRMenu  0xA5 // 165
#define vkBrowserBack  0xA6 // 166
#define vkBrowserForward  0xA7 // 167
#define vkBrowserRefresh  0xA8 // 168
#define vkBrowserStop  0xA9 // 169
#define vkBrowserSearch  0xAA // 170
#define vkBrowserFavorites  0xAB // 171
#define vkBrowserHome  0xAC // 172
#define vkVolumeMute  0xAD // 173
#define vkVolumeDown  0xAE // 174
#define vkVolumeUp  0xAF // 175
#define vkMediaNextTrack  0xB0 // 176
#define vkMediaPrevTrack  0xB1 // 177
#define vkMediaStop  0xB2 // 178
#define vkMediaPlayPause  0xB3 // 179
#define vkLaunchMail  0xB4 // 180
#define vkLaunchMediaSelect  0xB5 // 181
#define vkLaunchApp1  0xB6 // 182
#define vkLaunchApp2  0xB7 // 183
#define vkSemicolon  0xBA // 186
#define vkEqual  0xBB // 187
#define vkComma  0xBC // 188
#define vkMinus  0xBD // 189
#define vkPeriod  0xBE // 190
#define vkSlash  0xBF // 191
#define vkTilde  0xC0 // 192
#define vkLeftBracket  0xDB // 219
#define vkBackslash  0xDC // 220
#define vkRightBracket  0xDD // 221
#define vkQuote  0xDE // 222
#define vkPara  0xDF // 223
#define vkOem102  0xE2 // 226
#define vkIcoHelp  0xE3 // 227
#define vkIco00  0xE4 // 228
#define vkProcessKey  0xE5 // 229
#define vkIcoClear  0xE6 // 230
#define vkPacket  0xE7 // 231
#define vkAttn  0xF6 // 246
#define vkCrsel  0xF7 // 247
#define vkExsel  0xF8 // 248
#define vkErEof  0xF9 // 249
#define vkPlay  0xFA // 250
#define vkZoom  0xFB // 251
#define vkNoname  0xFC // 252
#define vkPA1  0xFD // 253
#define vkOemClear  0xFE // 254
#define vkNone  0xFF // 255

// MessageBox or MessageDlg 返回值
#define idOK  1
#define idCancel  2
#define idAbort  3
#define idRetry  4
#define idIgnore  5
#define idYes  6
#define idNo  7
#define idClose  8
#define idHelp  9
#define idTryAgain  10
#define idContinue  11
#define mrNone  0
#define mrOk  idOK
#define mrCancel  idCancel
#define mrAbort  idAbort
#define mrRetry  idRetry
#define mrIgnore  idIgnore
#define mrYes  idYes
#define mrNo  idNo
#define mrClose  idClose
#define mrHelp  idHelp
#define mrTryAgain  idTryAgain
#define mrContinue  idContinue
#define mrAll  mrContinue + 1
#define mrNoToAll  mrAll + 1
#define mrYesToAll  mrNoToAll + 1

// Predefined Clipboard Formats
#ifndef _WIN32

#define CF_BITMAP  2
#define CF_DIB  8
#define CF_PALETTE  9
#define CF_ENHMETAFILE  14
#define CF_METAFILEPICT  3
#define CF_OEMTEXT  7
#define CF_TEXT  1
#define CF_UNICODETEXT  13
#define CF_DIF  5
#define CF_DSPBITMAP  130
#define CF_DSPENHMETAFILE  142
#define CF_DSPMETAFILEPICT  131
#define CF_DSPTEXT  129
#define CF_GDIOBJFIRST  768
#define CF_GDIOBJLAST  1023
#define CF_HDROP  15
#define CF_LOCALE  16
#define CF_OWNERDISPLAY  128
#define CF_PENDATA  10
#define CF_PRIVATEFIRST  512
#define CF_PRIVATELAST  767
#define CF_RIFF  11
#define CF_SYLK  4
#define CF_WAVE  12
#define CF_TIFF  6

#endif

// custom
#define CF_PICTURE  700
#define CF_HTML  701
#define CF_COMPONENT  702

// 光标定义
#define crHigh  TCursor(0)
#define crDefault  TCursor(0)
#define crNone  TCursor(-1)
#define crArrow  TCursor(-2)
#define crCross  TCursor(-3)
#define crIBeam  TCursor(-4)
#define crSize  TCursor(-22)
#define crSizeNESW  TCursor(-6) // diagonal north east - south west
#define crSizeNS  TCursor(-7)
#define crSizeNWSE  TCursor(-8)
#define crSizeWE  TCursor(-9)
#define crSizeNW  TCursor(-23)
#define crSizeN  TCursor(-24)
#define crSizeNE  TCursor(-25)
#define crSizeW  TCursor(-26)
#define crSizeE  TCursor(-27)
#define crSizeSW  TCursor(-28)
#define crSizeS  TCursor(-29)
#define crSizeSE  TCursor(-30)
#define crUpArrow  TCursor(-10)
#define crHourGlass  TCursor(-11)
#define crDrag  TCursor(-12)
#define crNoDrop  TCursor(-13)
#define crHSplit  TCursor(-14)
#define crVSplit  TCursor(-15)
#define crMultiDrag  TCursor(-16)
#define crSQLWait  TCursor(-17)
#define crNo  TCursor(-18)
#define crAppStart  TCursor(-19)
#define crHelp  TCursor(-20)
#define crHandPoint  TCursor(-21)
#define crSizeAll  TCursor(-22)
#define crLow  TCursor(-30)

/*--------------------枚举定义/集合定义--------------------*/
// 集合定义
typedef uint32_t TSet;


typedef enum {
    alNone,
    alTop,
    alBottom,
    alLeft,
    alRight,
    alClient,
    alCustom,
} TAlign;

typedef TSet TAlignSet;

typedef enum {
    bsNone,
    bsSingle,
    bsSizeable,
    bsDialog,
    bsToolWindow,
    bsSizeToolWin,
} TBorderStyle;

typedef enum {
    fsNormal,
    fsMDIChild,
    fsMDIForm,
    fsStayOnTop,
    fsSplash,
    fsSystemStayOnTop,
} TFormStyle;

typedef enum {
    poDesigned, // use bounds from the designer (read from stream)
    poDefault, // LCL decision (normally window manager decides)
    poDefaultPosOnly, // designed size and LCL position
    poDefaultSizeOnly, // designed position and LCL size
    poScreenCenter, // center form on screen (depends on DefaultMonitor)
    poDesktopCenter, // center form on desktop (total of all screens)
    poMainFormCenter, // center form on main form (depends on DefaultMonitor)
    poOwnerFormCenter, // center form on owner form (depends on DefaultMonitor)
    poWorkAreaCenter, // center form on working area (depends on DefaultMonitor)
} TPosition;

typedef enum {
    soBeginning,
    soCurrent,
    soEnd,
} TSeekOrigin;

typedef enum {
    pfDevice,
    pf1bit,
    pf4bit,
    pf8bit,
    pf15bit,
    pf16bit,
    pf24bit,
    pf32bit,
    pfCustom,
} TPixelFormat;

typedef enum {
    taLeftJustify,
    taRightJustify,
    taCenter,
} TAlignment;

typedef enum {
    bdLeftToRight,
    bdRightToLeft,
    bdRightToLeftNoAlign,
    bdRightToLeftReadingOnly,
} TBiDiMode;

typedef enum {
    taAlignTop,
    taAlignBottom,
    taVerticalCenter,
} TVerticalAlignment;

typedef enum {
    csDropDown, // like an TEdit plus a button to drop down the list, default
    csSimple, // like an TEdit plus a TListBox
    csDropDownList, // like TLabel plus a button to drop down the list
    csOwnerDrawFixed, // like csDropDownList, but custom drawn
    csOwnerDrawVariable, // like csDropDownList, but custom drawn and with each item can have another height
    csOwnerDrawEditableFixed, // like csOwnerDrawFixed, but with TEdit
    csOwnerDrawEditableVariable, // like csOwnerDrawVariable, but with TEdit
} TComboBoxStyle;

typedef enum {
    wsNormal,
    wsMinimized,
    wsMaximized,
    wsFullScreen,
} TWindowState;

typedef enum {
    tlTop,
    tlCenter,
    tlBottom,
} TTextLayout;

typedef enum {
    epNone,
    epPathEllipsis,
    epEndEllipsis,
    epWordEllipsis,
} TEllipsisPosition;

typedef enum {
    lbStandard,
    lbOwnerDrawFixed,
    lbOwnerDrawVariable,
    lbVirtual,
} TListBoxStyle;

typedef enum {
    paLeft,
    paRight,
    paCenter,
} TPopupAlignment;

typedef enum {
    tbRightButton,
    tbLeftButton,
} TTrackButton;

typedef enum {
    pbHorizontal,
    pbVertical,
    pbRightToLeft,
    pbTopDown,
} TProgressBarOrientation;

typedef enum {
    pbstNormal,
    pbstMarquee,
} TProgressBarStyle;

typedef enum {
    pbsNormal,
    pbsError,
    pbsPaused,
} TProgressBarState;

typedef enum {
    blGlyphLeft,
    blGlyphRight,
    blGlyphTop,
    blGlyphBottom,
} TButtonLayout;

typedef enum {
    bsUp, // button is up
    bsDisabled, // button disabled (grayed)
    bsDown, // button is down
    bsExclusive, // button is the only down in his group
    bsHot, // button is under mouse
} TButtonState;

typedef enum {
    bsAutoDetect,
    bsWin31,
    bsNew,
} TButtonStyle;

typedef enum {
    sbsNone,
    sbsSingle,
    sbsSunken,
} TStaticBorderStyle;

typedef enum {
    fsBold,
    fsItalic,
    fsUnderline,
    fsStrikeOut,
} TFontStyle;

typedef TSet TFontStyles;

typedef enum {
    ssNone,
    ssHorizontal,
    ssVertical,
    ssBoth,
    ssAutoHorizontal,
    ssAutoVertical,
    ssAutoBoth,
} TScrollStyle;

typedef enum {
    stNone,
    stData,
    stText,
    stBoth,
} TSortType;

typedef enum {
    arAlignBottom,
    arAlignLeft,
    arAlignRight,
    arAlignTop,
    arDefault,
    arSnapToGrid,
} TListArrangement;

typedef enum {
    vsIcon,
    vsSmallIcon,
    vsList,
    vsReport,
} TViewStyle;

typedef enum {
    isNone,
    isCut,
    isDropHilited,
    isFocused,
    isSelected,
    isActivating,
} TItemState;

typedef TSet TItemStates;

typedef enum {
    ctText,
    ctImage,
    ctState,
} TItemChange;

typedef enum {
    ifData,
    ifPartialString,
    ifExactString,
    ifNearest,
} TItemFind;

typedef enum {
    sdLeft,
    sdRight,
    sdAbove,
    sdBelow,
    sdAll,
} TSearchDirection;

typedef enum {
    htHandPoint,
    htUnderlineCold,
    htUnderlineHot,
} TListHotTrackStyle;

typedef TSet TListHotTrackStyles;

typedef enum {
    irText,
    irImage,
    irParam,
    irState,
    irIndent,
} TItemRequests;

typedef enum {
    bsSolid,
    bsClear,
    bsHorizontal,
    bsVertical,
    bsFDiagonal,
    bsBDiagonal,
    bsCross,
    bsDiagCross,
    bsImage,
    bsPattern,
} TBrushStyle;

typedef enum {
    psSolid,
    psDash,
    psDot,
    psDashDot,
    psDashDotDot,
    psinsideFrame,
    psPattern,
    psClear,
} TPenStyle;

typedef enum {
    btNext,
    btPrev,
} TUDBtnType;

typedef enum {
    tpTop,
    tpBottom,
    tpLeft,
    tpRight,
} TTabPosition;

typedef enum {
    tsTabs,
    tsButtons,
    tsFlatButtons,
} TTabStyle;

typedef enum {
    fpDefault,
    fpVariable,
    fpFixed,
} TFontPitch;

typedef enum {
    pmBlack,
    pmWhite,
    pmNop,
    pmNot,
    pmCopy,
    pmNotCopy,
    pmMergePenNot,
    pmMaskPenNot,
    pmMergeNotPen,
    pmMaskNotPen,
    pmMerge,
    pmNotMerge,
    pmMask,
    pmNotMask,
    pmXor,
    pmNotXor,
} TPenMode;

typedef enum {
    trHorizontal,
    trVertical,
} TTrackBarOrientation;

typedef enum {
    udHorizontal,
    udVertical,
} TUDOrientation;

typedef enum {
    fqDefault,
    fqDraft,
    fqProof,
    fqNonAntialiased,
    fqAntialiased,
    fqClearType,
    fqClearTypeNatural,
} TFontQuality;

typedef enum {
    caNone,
    caHide,
    caFree,
    caMinimize,
} TCloseAction;

typedef enum {
    bfNone,
    bfInfo,
    bfWarning,
    bfError,
} TBalloonFlags;

typedef enum {
    mtWarning,
    mtError,
    mtInformation,
    mtConfirmation,
    mtCustom,
} TMsgDlgType;

typedef enum {
    mbYes,
    mbNo,
    mbOK,
    mbCancel,
    mbAbort,
    mbRetry,
    mbIgnore,
    mbAll,
    mbNoToAll,
    mbYesToAll,
    mbHelp,
    mbClose,
} TMsgDlgBtn;

typedef TSet TMsgDlgButtons;

typedef enum {
    sltURL,
    sltID,
} TSysLinkType;

typedef enum {
    psText,
    psOwnerDraw,
} TStatusPanelStyle;

typedef enum {
    jpBestQuality,
    jpBestSpeed,
} TJPEGPerformance;

typedef enum {
    nsCut,
    nsDropHilite, // = Node.DropTarget
    nsFocused, // = Node.Focused
    nsSelected, // = Node.Selected
    nsMultiSelected, // = Node.MultiSelected
    nsExpanded, // = Node.Expanded
    nsHasChildren, // = Node.HasChildren
    nsDeleting, // = Node.Deleting, set on Destroy
    nsVisible, // = Node.Visible
    nsBound, // bound to a tree, e.g. has Parent or is top lvl node
} TNodeState;

typedef enum {
    naAdd, // add as last sibling of Destination
    naAddFirst, // add as first sibling of Destination
    naAddChild, // add as last child of Destination
    naAddChildFirst, // add as first child of Destination
    naInsert, // insert in front of Destination
    naInsertBehind, // insert behind Destination
} TNodeAttachMode;

typedef enum {
    taAddFirst,
    taAdd,
    taInsert,
} TAddMode;

typedef enum {
    msControlSelect,
    msShiftSelect,
    msVisibleOnly,
    msSiblingOnly,
} TMultiSelectStyles;

typedef TSet TMultiSelectStyle;

typedef enum {
    asNormal,
    asSuspended,
    asSuspendedEnabled,
} TActionListState;

typedef enum {
    gdHorizontal,
    gdVertical,
} TGradientDirection;

typedef enum {
    dSFocus,
    dSSelected,
    dSNormal,
    dSTransparent,
} TDrawingStyle;

typedef enum {
    itImage,
    itMask,
} TImageType;

typedef enum {
    rtBitmap,
    rtCursor,
    rtIcon,
} TResType;

typedef enum {
    lrDefaultColor,
    lrDefaultSize,
    lrFromFile,
    lrMap3DColors,
    lrTransparent,
    lrMonoChrome,
} TLoadResource;

typedef TSet TLoadResources;

typedef enum {
    cdDefault,
    cdDeviceDependent,
    cd4Bit,
    cd8Bit,
    cd16Bit,
    cd24Bit,
    cd32Bit,
} TColorDepth;

typedef enum {
    cbUnchecked,
    cbChecked,
    cbGrayed,
} TCheckBoxState;

typedef enum {
    tbsButton, // button (can be clicked)
    tbsCheck, // check item (click to toggle state, can be grouped)
    tbsDropDown, // button with dropdown button to show a popup menu
    tbsSeparator, // space holder
    tbsDivider, // space holder with line
    tbsButtonDrop, // button with arrow (not separated from each other)
} TToolButtonStyle;

typedef enum {
    gdoHotTrack,
    gdoGradient,
} TTBGradientDrawingOption;

typedef TSet TTBGradientDrawingOptions;

typedef enum {
    cdFullOpen,
    cdPreventFullOpen,
    cdShowHelp,
    cdSolidColor,
    cdAnyColor,
} TColorDialogOption;

typedef TSet TColorDialogOptions;

typedef enum {
    biSystemMenu,
    biMinimize,
    biMaximize,
    biHelp,
} TBorderIcon;

typedef TSet TBorderIcons;

typedef enum {
    fdAnsiOnly,
    fdTrueTypeOnly,
    fdEffects,
    fdFixedPitchOnly,
    fdForceFontExist,
    fdNoFaceSel,
    fdNoOEMFonts,
    fdNoSimulations,
    fdNoSizeSel,
    fdNoStyleSel,
    fdNoVectorFonts,
    fdShowHelp,
    fdWysiwyg,
    fdLimitSize,
    fdScalableOnly,
    fdApplyButton,
} TFontDialogOption;

typedef TSet TFontDialogOptions;

typedef enum {
    ofReadOnly,
    ofOverwritePrompt, // if selected file exists shows a message, that file
    ofHideReadOnly, // hide read only file
    ofNoChangeDir, // do not change current directory
    ofShowHelp, // show a help button
    ofNoValidate,
    ofAllowMultiSelect, // allow multiselection
    ofExtensionDifferent,
    ofPathMustExist, // shows an error message if selected path does not exist
    ofFileMustExist, // shows an error message if selected file does not exist
    ofCreatePrompt,
    ofShareAware,
    ofNoReadOnlyReturn, // do not return filenames that are readonly
    ofNoTestFileCreate,
    ofNoNetworkButton,
    ofNoLongNames,
    ofOldStyleDialog,
    ofNoDereferenceLinks, // do not resolve links while dialog is shown (only on Windows, see OFN_NODEREFERENCELINKS)
    ofNoResolveLinks, // do not resolve links after Execute
    ofEnableIncludeNotify,
    ofEnableSizing, // dialog can be resized, e.g. via the mouse
    ofDontAddToRecent, // do not add the path to the history list
    ofForceShowHidden, // show hidden files
    ofViewDetail, // details are OS and interface dependent
    ofAutoPreview, // details are OS and interface dependent
} TOpenOption;

typedef TSet TOpenOptions;

typedef enum {
    ofExNoPlacesBar,
} TOpenOptionEx;

typedef TSet TOpenOptionsEx;

typedef enum {
    prAllPages,
    prSelection,
    prPageNums,
    prCurrentPage,
} TPrintRange;

typedef enum {
    poPrintToFile,
    poPageNums,
    poSelection,
    poWarning,
    poHelp,
    poDisablePrintToFile,
    poBeforeBeginDoc,
} TPrintDialogOption;

typedef TSet TPrintDialogOptions;

typedef enum {
    psoDefaultMinMargins,
    psoDisableMargins,
    psoDisableOrientation,
    psoDisablePagePainting,
    psoDisablePaper,
    psoDisablePrinter,
    psoMargins,
    psoMinMargins,
    psoShowHelp,
    psoWarning,
    psoNoNetworkButton,
} TPageSetupDialogOption;

typedef TSet TPageSetupDialogOptions;

typedef enum {
    pkDotMatrix,
    pkHPPCL,
} TPrinterKind;

typedef enum {
    ptEnvelope,
    ptPaper,
} TPageType;

typedef enum {
    pmDefault,
    pmMillimeters,
    pmInches,
} TPageMeasureUnits;

typedef enum {
    soStrictDelimiter,
    soWriteBOM,
    soTrailingLineBreak,
    soUseLocale,
} TStringsOption;

typedef TSet TStringsOptions;

typedef enum {
    ssShift,
    ssAlt,
    ssCtrl,
    ssLeft,
    ssRight,
    ssMiddle,
    ssDouble,
    ssMeta,
    ssSuper,
    ssHyper,
    ssAltGr,
    ssCaps,
    ssNum,
    ssScroll,
    ssTriple,
    ssQuad,
    ssExtra1,
    ssExtra2,
} TShiftStateEnum;

typedef TSet TShiftState;

typedef enum {
    mbLeft,
    mbRight,
    mbMiddle,
    mbExtra1,
    mbExtra2,
} TMouseButton;

typedef enum {
    fsSurface,
    fsBorder,
} TFillStyle;

typedef enum {
    fmAlternate,
    fmWinding,
} TFillMode;

typedef enum {
    csHandleValid,
    csFontValid,
    csPenValid,
    csBrushValid,
    csRegionValid,
} TCanvasStates;

typedef TSet TCanvasState;

typedef enum {
    coLeftToRight,
    coRightToLeft,
} TCanvasOrientation;

typedef enum {
    tfBottom,
    tfCalcRect,
    tfCenter,
    tfEditControl,
    tfEndEllipsis,
    tfPathEllipsis,
    tfExpandTabs,
    tfExternalLeading,
    tfLeft,
    tfModifyString,
    tfNoClip,
    tfNoPrefix,
    tfRight,
    tfRtlReading,
    tfSingleLine,
    tfTop,
    tfVerticalCenter,
    tfWordBreak,
    tfHidePrefix,
    tfNoFullWidthCharBreak,
    tfPrefixOnly,
    tfTabStop,
    tfWordEllipsis,
    tfComposited,
} TTextFormats;

typedef TSet TTextFormat;

typedef enum {
    bvNone,
    bvLowered,
    bvRaised,
    bvSpace,
} TBevelCut;

typedef enum {
    beLeft,
    beTop,
    beRight,
    beBottom,
} TBevelEdge;

typedef TSet TBevelEdges;

typedef enum {
    bkNone,
    bkTile,
    bkSoft,
    bkFlat,
} TBevelKind;

typedef enum {
    tmBottomRight,
    tmTopLeft,
    tmBoth,
} TTickMark;

typedef enum {
    tsNone,
    tsAuto,
    tsManual,
} TTickStyle;

typedef enum {
    ptNone,
    ptTop,
    ptLeft,
    ptBottom,
    ptRight,
} TPositionToolTip;

typedef enum {
    dtkDate,
    dtkTime,
    dtkDateTime,
} TDateTimeKind;

typedef enum {
    dmComboBox,
    dmUpDown,
    dmNone,
} TDTDateMode;

typedef enum {
    dfShort,
    dfLong,
} TDTDateFormat;

typedef enum {
    dtaLeft,
    dtaRight,
    dtaDefault,
} TDTCalAlignment;

typedef enum {
    dowMonday,
    dowTuesday,
    dowWednesday,
    dowThursday,
    dowFriday,
    dowSaturday,
    dowSunday,
    dowLocaleDefault,
} TCalDayOfWeek;

typedef enum {
    stWholeWord,
    stMatchCase,
} TSearchType;

typedef TSet TSearchTypes;

typedef enum {
    nsNone,
    nsBullte,
} TNumberingStyle;

typedef enum {
    atSelected,
    atDefaultText,
} TAttributeType;

typedef enum {
    caBold,
    caColor,
    caFace,
    caItalic,
    caSize,
    caStrikeOut,
    caUnderline,
    caProtected,
} TConsistentAttribute;

typedef TSet TConsistentAttributes;

typedef enum {
    iaTop,
    iaLeft,
} TIconArrangement;

typedef enum {
    hsGradient,
    hsImage,
    hsThemed,
} THeaderStyle;

typedef enum {
    iiaLeft,
    iiaRight,
    iiaTop,
    iiaBottom,
    iiaCenter,
} TImageAlignment;

typedef enum {
    akTop,
    akLeft,
    akRight,
    akBottom,
} TAnchorKind;

typedef TSet TAnchors;

typedef enum {
    odSelected,
    odGrayed,
    odDisabled,
    odChecked,
    odFocused,
    odDefault,
    odHotLight,
    odInactive,
    odNoAccel,
    odNoFocusRect,
    odReserved1,
    odReserved2,
    odComboBoxEdit,
    odBackgroundPainted, // item background already painted
} TOwnerDrawStateType;

typedef TSet TOwnerDrawState;

typedef enum {
    bkCustom,
    bkOK,
    bkCancel,
    bkHelp,
    bkYes,
    bkNo,
    bkClose,
    bkAbort,
    bkRetry,
    bkIgnore,
    bkAll,
    bkNoToAll,
    bkYesToAll,
} TBitBtnKind;

typedef enum {
    sbHorizontal,
    sbVertical,
} TScrollBarKind;

typedef enum {
    ssRegular,
    ssFlat,
    ssHotTrack,
} TScrollBarStyle;

typedef enum {
    stRectangle,
    stSquare,
    stRoundRect,
    stRoundSquare,
    stEllipse,
    stCircle,
    stSquaredDiamond,
    stDiamond,
    stTriangle,
    stTriangleLeft,
    stTriangleRight,
    stTriangleDown,
    stStar,
    stStarDown,
} TShapeType;

typedef enum {
    bsBox,
    bsFrame,
    bsTopLine,
    bsBottomLine,
    bsLeftLine,
    bsRightLine,
    bsSpacer,
} TBevelShape;

typedef enum {
    gkText,
    gkHorizontalBar,
    gkVerticalBar,
    gkPie,
    gkNeedle,
    gkHalfPie,
} TGaugeKind;

typedef enum {
    dtControl,
    dtItem,
    dtSubItem,
} TCustomDrawTarget;

typedef enum {
    cdPrePaint,
    cdPostPaint,
    cdPreErase,
    cdPostErase,
} TCustomDrawStage;

typedef enum {
    cdsSelected,
    cdsGrayed,
    cdsDisabled,
    cdsChecked,
    cdsFocused,
    cdsDefault,
    cdsHot,
    cdsMarked,
    cdsIndeterminate,
} TCustomDrawStateFlag;

typedef TSet TCustomDrawState;

typedef enum {
    drBounds,
    drIcon,
    drLabel,
    drSelectBounds,
} TDisplayCode;

typedef enum {
    sdAllowCreate,
    sdPerformCreate,
    sdPrompt,
} TSelectDirOpt;

typedef TSet TSelectDirOpts;

typedef enum {
    frDown,
    frFindNext,
    frHideMatchCase,
    frHideWholeWord,
    frHideUpDown,
    frMatchCase,
    frDisableMatchCase,
    frDisableUpDown,
    frDisableWholeWord,
    frReplace,
    frReplaceAll,
    frWholeWord,
    frShowHelp,
    frEntireScope,
    frHideEntireScope,
    frPromptOnReplace,
    frHidePromptOnReplace,
    frButtonsAtBottom,
} TFindOption;

typedef TSet TFindOptions;

typedef enum {
    dmManual,
    dmAutomatic,
} TDragMode;

typedef enum {
    dsDragEnter,
    dsDragLeave,
    dsDragMove,
} TDragState;

typedef enum {
    dkDrag,
    dkDock,
} TDragKind;

typedef enum {
    ecNormal,
    ecUpperCase,
    ecLowerCase,
} TEditCharCase;

typedef enum {
    ebLeft,
    ebTop,
    ebRight,
    ebBottom,
} TEdgeBorder;

typedef TSet TEdgeBorders;

typedef enum {
    esNone,
    esRaised,
    esLowered,
} TEdgeStyle;

typedef enum {
    gdsClassic,
    gdsThemed,
    gdsGradient,
} TGridDrawingStyle;

typedef enum {
    goFixedVertLine,
    goFixedHorzLine,
    goVertLine,
    goHorzLine,
    goRangeSelect,
    goDrawFocusSelected,
    goRowSizing,
    goColSizing,
    goRowMoving,
    goColMoving,
    goEditing,
    goAutoAddRows,
    goTabs,
    goRowSelect,
    goAlwaysShowEditor,
    goThumbTracking,
    goColSpanning, // Enable cellextent calcs
    goRelaxedRowSelect, // User can see focused cell on goRowSelect
    goDblClickAutoSize, // dblclicking columns borders (on hdrs) resize col.
    goSmoothScroll, // Switch scrolling mode (pixel scroll is by default)
    goFixedRowNumbering, // Ya
    goScrollKeepVisible, // keeps focused cell visible while scrolling
    goHeaderHotTracking, // Header cells change look when mouse is over them
    goHeaderPushedLook, // Header cells looks pushed when clicked
    goSelectionActive, // Setting grid.Selection moves also cell cursor
    goFixedColSizing, // Allow to resize fixed columns
    goDontScrollPartCell, // clicking partially visible cells will not scroll
    goCellHints, // show individual cell hints
    goTruncCellHints, // show cell hints if cell text is too long
    goCellEllipsis, // show "..." if cell text is too long
    goAutoAddRowsSkipContentCheck, // BB Also add a row (if AutoAddRows in Options) if last row is empty
    goRowHighlight, // Highlight the current Row
} TGridOption;

typedef TSet TGridOptions;

typedef enum {
    gdSelected,
    gdFocused,
    gdFixed,
    gdHot,
    gdPushed,
    gdRowHighlight,
} TGridDrawStates;

typedef TSet TGridDrawState;

typedef enum {
    hsText,
    hsOwnerDraw,
} THeaderSectionStyle;

typedef enum {
    lpAbove,
    lpBelow,
    lpLeft,
    lpRight,
} TLabelPosition;

typedef enum {
    fsLeftRightTopBottom,
    fsRightLeftTopBottom,
    fsLeftRightBottomTop,
    fsRightLeftBottomTop,
    fsTopBottomLeftRight,
    fsBottomTopLeftRight,
    fsTopBottomRightLeft,
    fsBottomTopRightLeft,
} TFlowStyle;

typedef enum {
    bmNone,
    bmClick,
    bmDblClick,
} TCoolBandMaximize;

typedef enum {
    mbNone,
    mbBreak,
    mbBarBreak,
} TMenuBreak;

typedef enum {
    tsTrackBegin,
    tsTrackMove,
    tsTrackEnd,
} TSectionTrackState;

typedef enum {
    csLButtonDown,
    csClicked,
    csPalette,
    csReadingState,
    csFocusing,
    csCreating, // not used, exists for Delphi compatibility
    csPaintCopy,
    csCustomPaint,
    csDestroyingHandle,
    csDocking,
    csVisibleSetInLoading,
} TControlStateType;

typedef TSet TControlState;

typedef enum {
    csAcceptsControls, // can have children in the designer
    csCaptureMouse, // auto capture mouse when clicked
    csDesignInteractive, // wants mouse events in design mode
    csClickEvents, // handles mouse events
    csFramed, // not implemented, has 3d frame
    csSetCaption, // if Name=Caption, changing the Name changes the Caption
    csOpaque, // the control paints its area completely
    csDoubleClicks, // understands mouse double clicks
    csTripleClicks, // understands mouse triple clicks
    csQuadClicks, // understands mouse quad clicks
    csFixedWidth, // cannot change its width
    csFixedHeight, // cannot change its height (for example combobox)
    csNoDesignVisible, // is invisible in the designer
    csReplicatable, // PaintTo works
    csNoStdEvents, // standard events such as mouse, key, and click events are ignored.
    csDisplayDragImage, // display images from dragimagelist during drag operation over control
    csReflector, // not implemented, the controls respond to size, focus and dlg messages - it can be used as ActiveX control under Windows
    csActionClient, // Action is set
    csMenuEvents, // not implemented
    csNoFocus, // control will not take focus when clicked with mouse.
    csNeedsBorderPaint, // not implemented
    csParentBackground, // tells WinXP to paint the theme background of parent on controls background
    csDesignNoSmoothResize, // when resizing control in the designer do not SetBounds while dragging
    csDesignFixedBounds, // can not be moved nor resized in designer
    csHasDefaultAction, // implements useful ExecuteDefaultAction
    csHasCancelAction, // implements useful ExecuteCancelAction
    csNoDesignSelectable, // can not be selected at design time
    csOwnedChildrenNotSelectable, // child controls owned by this control are NOT selectable in the designer
    csAutoSize0x0, // if the preferred size is 0x0 then control is shrinked ot 0x0
    csAutoSizeKeepChildLeft, // when AutoSize=true do not move children horizontally
    csAutoSizeKeepChildTop, // when AutoSize=true do not move children vertically
    csRequiresKeyboardInput, // If the device has no physical keyboard then show the virtual keyboard when this control gets focus (therefore available only to TWinControl descendents)
} TControlStyleType;

typedef TSet TControlStyle;

typedef enum {
    maDefault,
    maActivate,
    maActivateAndEat,
    maNoActivate,
    maNoActivateAndEat,
} TMouseActivate;

typedef enum {
    none,
    indeterminate,
    normal,
    error,
    paused,
} TTaskBarProgressState;

typedef enum {
    bmDIB,
    bmDDB,
} TBitmapHandleType;

typedef enum {
    psNoDefine,
    psReady,
    psPrinting,
    psStopped,
} TPrinterState;

typedef enum {
    poPortrait,
    poLandscape,
    poReverseLandscape,
    poReversePortrait,
} TPrinterOrientation;

typedef enum {
    pcCopies,
    pcOrientation,
    pcCollation,
} TPrinterCapability;

typedef TSet TPrinterCapabilities;

typedef enum {
    ptLocal,
    ptNetWork,
} TPrinterType;

typedef enum {
    rsUninitialized,
    rsLoading,
    rsLoaded,
    rsInterActive,
    rsComplete,
} TReadyState;

typedef enum {
    seUnknown,
    seANSI,
    seUnicode,
    seUTF8,
} TStringEncoding;

typedef enum {
    stDefault, // use default rules for showing taskbar item
    stAlways, // always show taskbar item for the form
    stNever, // never show taskbar item for the form
} TShowInTaskbar;

typedef enum {
    tcbOk,
    tcbYes,
    tcbNo,
    tcbCancel,
    tcbRetry,
    tcbClose,
} TTaskDialogCommonButton;

typedef TSet TTaskDialogCommonButtons;

typedef enum {
    tfEnableHyperlinks,
    tfUseHiconMain,
    tfUseHiconFooter,
    tfAllowDialogCancellation,
    tfUseCommandLinks,
    tfUseCommandLinksNoIcon,
    tfExpandFooterArea,
    tfExpandedByDefault,
    tfVerificationFlagChecked,
    tfShowProgressBar,
    tfShowMarqueeProgressBar,
    tfCallbackTimer,
    tfPositionRelativeToWindow,
    tfRtlLayout,
    tfNoDefaultRadioButton,
    tfCanBeMinimized,
} TTaskDialogFlag;

typedef TSet TTaskDialogFlags;

typedef enum {
    tdiNone,
    tdiWarning,
    tdiError,
    tdiInformation,
    tdiShield,
    tdiQuestion,
} TTaskDialogIcon;

typedef enum {
    csExDropDown,
    csExSimple,
    csExDropDownList,
} TComboBoxExStyle;

typedef enum {
    csExCaseSensitive,
    csExNoEditImage,
    csExNoEditImageIndent,
    csExNoSizeLimit,
    csExPathWordBreak,
} TComboBoxExStyleEx;

typedef TSet TComboBoxExStyles;

typedef enum {
    acoAutoSuggest,
    acoAutoAppend,
    acoSearch,
    acoFilterPrefixes,
    acoUseTab,
    acoUpDownKeyDropsList,
    acoRtlReading,
} TAutoCompleteOption;

typedef TSet TAutoCompleteOptions;

typedef enum {
    dmDesktop,
    dmPrimary,
    dmMainForm,
    dmActiveForm,
} TDefaultMonitor;

typedef enum {
    tmAuto,
    tmFixed,
} TTransparentMode;

typedef enum {
    dimNormal,
    dimCenter,
    dimStretch,
} TDrawImageMode;

typedef enum {
    lboDrawFocusRect, // draw focus rect in case of owner drawing
} TListBoxOption;

typedef TSet TListBoxOptions;

typedef enum {
    amDontCare, // default antialiasing
    amOn, // enabled
    amOff, // disabled
} TAntialiasingMode;

typedef enum {
    sdAscending,
    sdDescending,
} TSortDirection;

typedef enum {
    tvestTheme, // use themed sign
    tvestPlusMinus, // use +/- sign
    tvestArrow, // use blank arrow
    tvestArrowFill, // use filled arrow
} TTreeViewExpandSignType;

typedef enum {
    tvoAllowMultiselect,
    tvoAutoExpand,
    tvoAutoInsertMark,
    tvoAutoItemHeight,
    tvoHideSelection,
    tvoHotTrack,
    tvoKeepCollapsedNodes,
    tvoReadOnly,
    tvoRightClickSelect,
    tvoRowSelect,
    tvoShowButtons,
    tvoShowLines,
    tvoShowRoot,
    tvoShowSeparators,
    tvoToolTips,
    tvoNoDoubleClickExpand,
    tvoThemedDraw,
} TTreeViewOption;

typedef TSet TTreeViewOptions;

typedef enum {
    gsmAlways, // always show
    gsmNever, // never show
    gsmApplication, // depends on application settings
    gsmSystem, // depends on system settings
} TGlyphShowMode;

typedef enum {
    nboShowCloseButtons,
    nboMultiLine,
    nboHidePageListPopup,
    nboKeyboardTabSwitch,
    nboShowAddTabButton,
    nboDoChangeOnSetIndex,
} TCTabControlOption;

typedef TSet TCTabControlOptions;

typedef enum {
    asrTop,
    asrBottom,
    asrCenter,
} TAnchorSideReference;

typedef enum {
    ccaFill,
    ccaLeftTop,
    ccaRightBottom,
    ccaCenter,
} TControlCellAlign;

typedef TSet TControlCellAligns;

typedef enum {
    crsAnchorAligning, // (like Delphi)
    crsScaleChilds, // scale children equally, keep space between children fixed
    crsHomogenousChildResize, // enlarge children equally (i.e. by the same amount of pixel)
    crsHomogenousSpaceResize, // enlarge space between children equally
} TChildControlResizeStyle;

typedef enum {
    cclNone,
    cclLeftToRightThenTopToBottom, // if BiDiMode <> bdLeftToRight then it becomes RightToLeft
    cclTopToBottomThenLeftToRight,
} TControlChildrenLayout;

typedef enum {
    clHorizontalThenVertical,
    clVerticalThenHorizontal,
} TColumnLayout;

typedef enum {
    siNone,
    siAscending,
    siDescending,
} TSortIndicator;

typedef enum {
    cbsAuto,
    cbsEllipsis,
    cbsNone,
    cbsPickList,
    cbsCheckboxColumn,
    cbsButton,
    cbsButtonColumn,
} TColumnButtonStyle;

typedef enum {
    gzNormal,
    gzFixedCols,
    gzFixedRows,
    gzFixedCells,
    gzInvalid,
} TGridZone;

typedef TSet TGridZoneSet;

typedef enum {
    soAscending,
    soDescending,
} TSortOrder;

typedef enum {
    aaNone,
    aaDown,
    aaRight,
    aaLeft,
    aaRightDown,
    aaLeftDown,
    aaRightUp,
    aaLeftUp,
} TAutoAdvance;

typedef enum {
    chpAll,
    chpAllNoDefault,
    chpTruncOnly,
} TCellHintPriority;

typedef enum {
    mwCursor,
    mwGrid,
} TMouseWheelOption;

typedef enum {
    goScrollToLastCol, // allow scrolling to last column (so that last column can be leftcol)
    goScrollToLastRow, // allow scrolling to last row (so that last row can be toprow)
} TGridOption2;

typedef TSet TGridOptions2;

typedef enum {
    rsmSingle,
    rsmMulti,
} TRangeSelectMode;

typedef enum {
    tsLazarus,
    tsStandard,
    tsNative,
} TTitleStyle;

typedef enum {
    poNone,
    poHeaderClick,
} TPrefixOption;

typedef enum {
    dsShowHeadings,
    dsShowDayNames,
    dsNoMonthChange,
    dsShowWeekNumbers,
    dsStartMonday,
} TDisplaySetting;

typedef enum {
    tf12, // 12 hours format, with am/pm string
    tf24, // 24 hours format
} TTimeFormat;

typedef enum {
    tdHM, // hour and minute
    tdHMS, // hour Minute and second
    tdHMSMs, // hour Minute Second and milisecond
} TTimeDisplay;

typedef enum {
    asClassicSmaller,
    asClassicLarger,
    asModernSmaller,
    asModernLarger,
    asYetAnotherShape,
    asTheme,
} TArrowShape;

typedef enum {
    ddoDMY,
    ddoMDY,
    ddoYMD,
    ddoTryDefault,
} TDateDisplayOrder;

typedef enum {
    dtpDay,
    dtpMonth,
    dtpYear,
    dtpHour,
    dtpMinute,
    dtpSecond,
    dtpMiliSec,
    dtpAMPM,
} TDateTimePart;

typedef TSet TDateTimeParts;

typedef enum {
    dtpoDoChangeOnSetDateTime,
    dtpoEnabledIfUnchecked,
    dtpoAutoCheck,
    dtpoFlatButton,
} TDateTimePickerOption;

typedef TSet TDateTimePickerOptions;

typedef enum {
    ioHorizontal,
    ioVertical,
} TImageOrientation;

typedef enum {
    lapDefault, // widgetset dependent
    lapFixedLayout, // A fixed absolute layout in all platforms
    lapAutoAdjustWithoutHorizontalScrolling, // Smartphone platforms use this one,
    lapAutoAdjustForDPI, // For desktops using High DPI, scale x and y to fit the DPI
} TLayoutAdjustmentPolicy;

typedef enum {
    htAbove,
    htBelow,
    htNowhere,
    htOnItem,
    htOnButton,
    htOnIcon,
    htOnIndent,
    htOnLabel,
    htOnRight,
    htOnStateIcon,
    htToLeft,
    htToRight,
} THitTest;

typedef TSet THitTests;

typedef enum {
    lisCut,
    lisDropTarget,
    lisFocused,
    lisSelected,
} TListItemState;

typedef TSet TListItemStates;

typedef enum {
    pcfText,
    pcfBitmap,
    pcfPixmap,
    pcfIcon,
    pcfPicture,
    pcfMetaFilePict,
    pcfObject,
    pcfComponent,
    pcfCustomData,
} TPredefinedClipboardFormat;

typedef enum {
    waAuto, // auto
    waForce, // always wrap after this control
    waAvoid, // try not to wrap after this control, if the control is already at the beginning of the row, wrap though
    waForbid, // never wrap after this control
} TWrapAfter;

/*--------------------类型定义--------------------*/

typedef struct TPoint {
    int32_t x;
    int32_t y;
} TPoint;

typedef struct TRect {
    int32_t left;
    int32_t top;
    int32_t right;
    int32_t bottom;
} TRect;

typedef struct TSize {
    int32_t cx;
    int32_t cy;
} TSize;

#ifndef _WIN32


typedef uintptr_t HWND;

typedef uintptr_t HBITMAP;

typedef uintptr_t HMENU;

typedef uintptr_t HICON;

typedef uintptr_t HDC;

typedef uintptr_t HFONT;

typedef uintptr_t HBRUSH;

typedef uintptr_t HPEN;

typedef uintptr_t HKEY;

typedef uintptr_t HMONITOR;

typedef uintptr_t HGDIOBJ;

typedef uintptr_t HMODULE;

typedef uint32_t COLORREF;

typedef uint32_t DWORD;

typedef HICON HCURSOR;

#endif


typedef uintptr_t HINST;

#ifndef _WIN32


typedef uintptr_t LPCWSTR;

typedef uintptr_t HRGN;

typedef uint32_t UINT;

typedef uintptr_t LPARAM;

typedef uintptr_t WPARAM;

typedef uintptr_t LRESULT;

#endif


typedef uintptr_t HResult;

#ifndef _WIN32


typedef uintptr_t HPALETTE;

typedef uintptr_t HRSRC;

typedef uintptr_t HGLOBAL;

#endif


typedef uintptr_t TFNWndEnumProc;

typedef uint64_t TXID;

typedef uint16_t ATOM;

typedef uint16_t TAtom;

typedef uintptr_t SIZE_T;

typedef uintptr_t DWORD_PTR;

typedef struct TUTF8Char {
    byte len;
    byte content[7];
} TUTF8Char;

typedef struct TMsg {
    HWND hwnd;
    uint32_t message;
    uintptr_t wParam;
    uintptr_t lParam;
    uint32_t time;
    TPoint pt;
} TMsg;

typedef struct TCursorInfo {
    uint32_t cbSize;
    uint32_t flags;
    HCURSOR hCursor;
    TPoint ptScreenPos;
} TCursorInfo;

typedef struct TWndClass {
    uint32_t style;
    uintptr_t lpfnWndProc;
    int32_t cbClsExtra;
    int32_t cbWndExtra;
    uintptr_t hInstance;
    HICON hIcon;
    HCURSOR hCursor;
    HBRUSH hbrBackground;
    LPCWSTR lpszMenuName;
    LPCWSTR lpszClassName;
} TWndClass;

typedef int32_t TModalResult;

typedef uint32_t TColor;

typedef uintptr_t THelpEventData;

typedef int16_t TTabOrder;

typedef uintptr_t PFNLVCOMPARE;

typedef uintptr_t PFNTVCOMPARE;

typedef int32_t Integer;

typedef uint32_t Cardinal;

typedef float Single;

typedef uint16_t Word;

typedef uint8_t Byte;

typedef uint8_t TFontCharset;

typedef int32_t TSpacingSize;

typedef uint16_t Char;

typedef uintptr_t TClass;

typedef uintptr_t TThreadID;

typedef uintptr_t TClipboardFormat;

typedef struct TGridCoord {
    int32_t x;
    int32_t y;
} TGridCoord;

typedef uintptr_t TCustomData;

typedef TRect TGridRect;

typedef uintptr_t IObjectArray;

typedef struct TSysLocale {
    int32_t defaultLCID;
    int32_t priLangID;
    int32_t subLangID;
    BOOL farEast;
    BOOL middleEast;
} TSysLocale;

typedef struct TSmallPoint {
    int16_t x;
    int16_t y;
} TSmallPoint;

typedef struct TGUID {
    uint32_t d1;
    uint16_t d2;
    uint16_t d3;
    uint8_t d4[8];
} TGUID;

typedef struct TLibResource {
    char* name;
    uintptr_t ptr;
} TLibResource;

typedef struct TResItem {
    uintptr_t name;
    uintptr_t value;
} TResItem;

typedef int32_t TConstraintSize;

typedef struct TAlignInfo {
    uintptr_t alignList;
    int32_t controlIndex;
    TAlign align;
    int32_t scratch;
} TAlignInfo;

typedef struct TCreateParams {
    LPCWSTR caption;
    uint32_t style;
    uint32_t exStyle;
    int32_t x;
    int32_t y;
    int32_t width;
    int32_t height;
    HWND wndParent;
    uintptr_t param;
    TWndClass windowClass;
    int8_t winClassName[64];
} TCreateParams;

typedef TBorderStyle TFormBorderStyle;

typedef int16_t TCursor;

typedef int32_t TLeftRight;

typedef TComboBoxStyle TColorBoxStyle;

typedef TAlignment TLinkAlignment;

typedef int32_t TNumGlyphs;

typedef TPixelFormat TJPEGPixelFormat;

typedef uint16_t TShortCut;

typedef int16_t TScrollBarInc;

typedef int32_t TBevelStyle;

typedef int32_t TLibType;

#if defined(_WIN64) || defined(__x86_64__)

typedef struct TDWordFiller {
    uint8_t filler[4];
} TDWordFiller;

typedef struct TWMKey {
    uint32_t msg;
    TDWordFiller msgFiller;
    uint16_t charCode[2];
    TDWordFiller charCodeUnusedFiller;
    uint32_t keyData;
    TDWordFiller keyDataFiller;
    uintptr_t result;
} TWMKey;

typedef struct TMessage {
    uint32_t msg;
    uint32_t _UnusedMsg;
    WPARAM wParam;
    LPARAM lParam;
    LRESULT result;
} TMessage;
#else

typedef struct TDWordFiller {
} TDWordFiller;

typedef struct TWMKey {
    uint32_t msg;
    TDWordFiller msgFiller;
    uint16_t charCode[2];
    TDWordFiller charCodeUnusedFiller;
    uint32_t keyData;
    TDWordFiller keyDataFiller;
    uintptr_t result;
} TWMKey;

typedef struct TMessage {
    uint32_t msg;
    WPARAM wParam;
    LPARAM lParam;
    LRESULT result;
} TMessage;
#endif


/*--------------------类的定义--------------------*/
typedef void* TObject;
typedef void* TComponent;
typedef void* TControl;
typedef void* TWinControl;
typedef void* TGraphic;
typedef void* TStrings;
typedef void* TStream;
typedef void* TCheckBox;
typedef void* TRadioButton;
typedef void* TGroupBox;
typedef void* TLabel;
typedef void* TListBox;
typedef void* TComboBox;
typedef void* TPanel;
typedef void* TImage;
typedef void* TLinkLabel;
typedef void* TSpeedButton;
typedef void* TSplitter;
typedef void* TRadioGroup;
typedef void* TStaticText;
typedef void* TColorBox;
typedef void* TColorListBox;
typedef void* TTrayIcon;
typedef void* TOpenDialog;
typedef void* TSaveDialog;
typedef void* TColorDialog;
typedef void* TFontDialog;
typedef void* TPrintDialog;
typedef void* TOpenPictureDialog;
typedef void* TSavePictureDialog;
typedef void* TSelectDirectoryDialog;
typedef void* TRichEdit;
typedef void* TTrackBar;
typedef void* TImageList;
typedef void* TUpDown;
typedef void* TProgressBar;
typedef void* TDateTimePicker;
typedef void* TMonthCalendar;
typedef void* TListView;
typedef void* TTreeView;
typedef void* TStatusBar;
typedef void* TToolBar;
typedef void* TBitBtn;
typedef void* TIcon;
typedef void* TBitmap;
typedef void* TMemo;
typedef void* TMemoryStream;
typedef void* TFont;
typedef void* TPopupMenu;
typedef void* TStringList;
typedef void* TBrush;
typedef void* TPen;
typedef void* TMenuItem;
typedef void* TPicture;
typedef void* TListColumns;
typedef void* TListItems;
typedef void* TTreeNodes;
typedef void* TListItem;
typedef void* TTreeNode;
typedef void* TPageControl;
typedef void* TTabSheet;
typedef void* TButton;
typedef void* TEdit;
typedef void* TScreen;
typedef void* TMouse;
typedef void* TListColumn;
typedef void* TCollectionItem;
typedef void* TStatusPanels;
typedef void* TStatusPanel;
typedef void* TSpinEdit;
typedef void* TFloatSpinEdit;
typedef void* TDirectoryEdit;
typedef void* TColorButton;
typedef void* TMiniWebview;
typedef void* TCanvas;
typedef void* TApplication;
typedef void* TMainMenu;
typedef void* TPngImage;
typedef void* TJPEGImage;
typedef void* TGIFImage;
typedef void* TActionList;
typedef void* TAction;
typedef void* TToolButton;
typedef void* TIniFile;
typedef void* TRegistry;
typedef void* TClipboard;
typedef void* TMonitor;
typedef void* TPaintBox;
typedef void* TTimer;
typedef void* TList;
typedef void* TForm;
typedef void* TParaAttributes;
typedef void* TTextAttributes;
typedef void* TIconOptions;
typedef void* Exception;
typedef void* TScrollBar;
typedef void* TMaskEdit;
typedef void* TShape;
typedef void* TBevel;
typedef void* TScrollBox;
typedef void* TCheckListBox;
typedef void* TGauge;
typedef void* TImageButton;
typedef void* TFindDialog;
typedef void* TReplaceDialog;
typedef void* TPrinterSetupDialog;
typedef void* TPageSetupDialog;
typedef void* TDragObject;
typedef void* TDragDockObject;
typedef void* TStringGrid;
typedef void* TDrawGrid;
typedef void* TValueListEditor;
typedef void* THeaderControl;
typedef void* THeaderSection;
typedef void* THeaderSections;
typedef void* TLabeledEdit;
typedef void* TBoundLabel;
typedef void* TFlowPanel;
typedef void* TFlowPanelControlList;
typedef void* TFlowPanelControl;
typedef void* TCoolBar;
typedef void* TCoolBands;
typedef void* TCoolBand;
typedef void* TCollection;
typedef void* TPrinter;
typedef void* TTaskDialog;
typedef void* TTaskDialogButtons;
typedef void* TTaskDialogButtonItem;
typedef void* TTaskDialogRadioButtonItem;
typedef void* TTaskDialogBaseButtonItem;
typedef void* TComboBoxEx;
typedef void* TComboExItems;
typedef void* TComboExItem;
typedef void* TFrame;
typedef void* TControlScrollBar;
typedef void* TSizeConstraints;
typedef void* TXButton;
typedef void* TAnchorSide;
typedef void* TControlBorderSpacing;
typedef void* TControlChildSizing;
typedef void* TCheckGroup;
typedef void* TToggleBox;
typedef void* TCheckComboBox;
typedef void* TGridColumnTitle;
typedef void* TGridColumn;
typedef void* TGridColumns;

/*--------------------事件定义--------------------*/
// void (TObject sender)
typedef void(*TNotifyEvent)(TObject);

// void (TObject sender, TUDBtnType button)
typedef void(*TUDClickEvent)(TObject, TUDBtnType);

// void (TObject sender, TCloseAction* action)
typedef void(*TCloseEvent)(TObject, TCloseAction*);

// void (TObject sender, BOOL* canClose)
typedef void(*TCloseQueryEvent)(TObject, BOOL*);

// void (TObject sender, TMenuItem source, BOOL rebuild)
typedef void(*TMenuChangeEvent)(TObject, TMenuItem, BOOL);

// void (TObject sender, char* link, TSysLinkType linkType)
typedef void(*TSysLinkEvent)(TObject, char*, TSysLinkType);

// void (TObject sender, Exception e)
typedef void(*TExceptionEvent)(TObject, Exception);

// void (TObject sender, Char* key, TShiftState shift)
typedef void(*TKeyEvent)(TObject, Char*, TShiftState);

// void (TObject sender, Char* key)
typedef void(*TKeyPressEvent)(TObject, Char*);

// void (TObject sender, TMouseButton button, TShiftState shift, int32_t x, int32_t y)
typedef void(*TMouseEvent)(TObject, TMouseButton, TShiftState, int32_t, int32_t);

// void (TObject sender, TShiftState shift, int32_t x, int32_t y)
typedef void(*TMouseMoveEvent)(TObject, TShiftState, int32_t, int32_t);

// void (TObject sender, TShiftState shift, int32_t wheelDelta, int32_t x, int32_t y, BOOL* handled)
typedef void(*TMouseWheelEvent)(TObject, TShiftState, int32_t, int32_t, int32_t, BOOL*);

// void (TWinControl control, int32_t index, TRect* aRect, TOwnerDrawState state)
typedef void(*TDrawItemEvent)(TWinControl, int32_t, TRect*, TOwnerDrawState);

// void (TObject sender, TListColumn column)
typedef void(*TLVColumnClickEvent)(TObject, TListColumn);

// void (TObject sender, TListColumn column, TPoint* point)
typedef void(*TLVColumnRClickEvent)(TObject, TListColumn, TPoint*);

// void (TObject sender, TListItem item, BOOL selected)
typedef void(*TLVSelectItemEvent)(TObject, TListItem, BOOL);

// void (TObject sender, TListItem item)
typedef void(*TLVCheckedItemEvent)(TObject, TListItem);

// void (TObject sender, TListItem item1, TListItem item2, int32_t data, int32_t* compare)
typedef void(*TLVCompareEvent)(TObject, TListItem, TListItem, int32_t, int32_t*);

// void (TObject sender, TListItem item, TItemChange change)
typedef void(*TLVChangeEvent)(TObject, TListItem, TItemChange);

// void (TObject sender, TListItem item)
typedef void(*TLVNotifyEvent)(TObject, TListItem);

// void (TListView sender, TRect* aRect, TCustomDrawStage stage, BOOL* defaultDraw)
typedef void(*TLVAdvancedCustomDrawEvent)(TListView, TRect*, TCustomDrawStage, BOOL*);

// void (TListView sender, TListItem item, TCustomDrawState state, TCustomDrawStage Stage, BOOL* defaultDraw)
typedef void(*TLVAdvancedCustomDrawItemEvent)(TListView, TListItem, TCustomDrawState, TCustomDrawStage, BOOL*);

// void (TListView sender, TListItem item, int32_t subItem, TCustomDrawState state, TCustomDrawStage stage, BOOL* defaultDraw)
typedef void(*TLVAdvancedCustomDrawSubItemEvent)(TListView, TListItem, int32_t, TCustomDrawState, TCustomDrawStage, BOOL*);

// void (TObject sender, TTreeNode node1, TTreeNode node2, int32_t data, int32_t* compare)
typedef void(*TTVCompareEvent)(TObject, TTreeNode, TTreeNode, int32_t, int32_t*);

// void (TObject sender, TTreeNode node)
typedef void(*TTVExpandedEvent)(TObject, TTreeNode);

// void (TObject sender, TTreeNode node)
typedef void(*TTVChangedEvent)(TObject, TTreeNode);

// void (TTreeView sender, TRect* aRect, TCustomDrawStage stage, BOOL* defaultDraw)
typedef void(*TTVAdvancedCustomDrawEvent)(TTreeView, TRect*, TCustomDrawStage, BOOL*);

// void (TTreeView sender, TTreeNode node, TCustomDrawState state, TCustomDrawStage stage, BOOL* paintImages, BOOL* defaultDraw)
typedef void(*TTVAdvancedCustomDrawItemEvent)(TTreeView, TTreeNode, TCustomDrawState, TCustomDrawStage, BOOL*, BOOL*);

// void (TObject sender, int32_t tabIndex, int32_t* imageIndex)
typedef void(*TTabGetImageEvent)(TObject, int32_t, int32_t*);

// void (TToolBar sender, TRect* aRect, TCustomDrawStage stage, BOOL* defaultDraw)
typedef void(*TTBAdvancedCustomDrawEvent)(TToolBar, TRect*, TCustomDrawStage, BOOL*);

// void ()
typedef void(*TThreadProc)();

// void (TObject sender, void* aFileNames, intptr_t len)
typedef void(*TDropFilesEvent)(TObject, void*, intptr_t);

// void (TObject sender, int32_t* minWidth, int32_t* minHeight, int32_t* maxWidth, int32_t* maxHeight)
typedef void(*TConstrainedResizeEvent)(TObject, int32_t*, int32_t*, int32_t*, int32_t*);

// void (uint16_t command, THelpEventData data, BOOL* callhelp, BOOL* result)
typedef void(*THelpEvent)(uint16_t, THelpEventData, BOOL*, BOOL*);

// void (TWMKey* msg, BOOL* handled)
typedef void(*TShortCutEvent)(TWMKey*, BOOL*);

// void (TObject sender, TPoint* mousePos, BOOL* handled)
typedef void(*TContextPopupEvent)(TObject, TPoint*, BOOL*);

// void (TObject sender, TObject source, int32_t x, int32_t y, TDragState state, BOOL* accept)
typedef void(*TDragOverEvent)(TObject, TObject, int32_t, int32_t, TDragState, BOOL*);

// void (TObject sender, TObject source, int32_t x, int32_t y)
typedef void(*TDragDropEvent)(TObject, TObject, int32_t, int32_t);

// void (TObject sender, TObject target, int32_t x, int32_t y)
typedef void(*TEndDragEvent)(TObject, TObject, int32_t, int32_t);

// void (TObject sender, TDragDockObject source, int32_t x, int32_t y)
typedef void(*TDockDropEvent)(TObject, TDragDockObject, int32_t, int32_t);

// void (TObject sender, TDragDockObject source, int32_t x, int32_t y, TDragState state, BOOL* accept)
typedef void(*TDockOverEvent)(TObject, TDragDockObject, int32_t, int32_t, TDragState, BOOL*);

// void (TObject sender, TControl client, TControl newTarget, BOOL* allow)
typedef void(*TUnDockEvent)(TObject, TControl, TControl, BOOL*);

// void (TObject sender, TDragDockObject* dragObject)
typedef void(*TStartDockEvent)(TObject, TDragDockObject*);

// void (TObject sender, TControl dockClient, TRect* influenceRect, TPoint* mousePos, BOOL* canDock)
typedef void(*TGetSiteInfoEvent)(TObject, TControl, TRect*, TPoint*, BOOL*);

// void (TObject sender, TShiftState shift, TPoint* mousePos, BOOL* handled)
typedef void(*TMouseWheelUpDownEvent)(TObject, TShiftState, TPoint*, BOOL*);

// void (TObject sender, BOOL isColumn, int32_t sIndex, int32_t tIndex)
typedef void(*TGridOperationEvent)(TObject, BOOL, int32_t, int32_t);

// void (TObject sender, int32_t aCol, int32_t aRow, TRect* aRect, TGridDrawState state)
typedef void(*TDrawCellEvent)(TObject, int32_t, int32_t, TRect*, TGridDrawState);

// void (TObject sender, int32_t aCol, int32_t aRow)
typedef void(*TFixedCellClickEvent)(TObject, int32_t, int32_t);

// void (TObject sender, int32_t aCol, int32_t aRow, char** value)
typedef void(*TGetEditEvent)(TObject, int32_t, int32_t, char**);

// void (TObject sender, int32_t aCol, int32_t aRow, BOOL* canSelect)
typedef void(*TSelectCellEvent)(TObject, int32_t, int32_t, BOOL*);

// void (TObject sender, int32_t aCol, int32_t aRow, char* value)
typedef void(*TSetEditEvent)(TObject, int32_t, int32_t, char*);

// void (THeaderControl headerControl, THeaderSection section, TRect* aRect, BOOL pressed)
typedef void(*TDrawSectionEvent)(THeaderControl, THeaderSection, TRect*, BOOL);

// void (THeaderControl headerControl, THeaderSection section)
typedef void(*TSectionNotifyEvent)(THeaderControl, THeaderSection);

// void (THeaderControl headerControl, THeaderSection section, int32_t width, TSectionTrackState state)
typedef void(*TSectionTrackEvent)(THeaderControl, THeaderSection, int32_t, TSectionTrackState);

// void (TObject sender, THeaderSection fromSection, THeaderSection toSection, BOOL* allowDrag)
typedef void(*TSectionDragEvent)(TObject, THeaderSection, THeaderSection, BOOL*);

// void (THeaderControl headerControl, THeaderSection section)
typedef void(*TCustomSectionNotifyEvent)(THeaderControl, THeaderSection);

// void (TObject sender, TMouseButton button, TShiftState shift, int32_t x, int32_t y, int32_t hitTest, TMouseActivate* mouseActivate)
typedef void(*TMouseActivateEvent)(TObject, TMouseButton, TShiftState, int32_t, int32_t, int32_t, TMouseActivate*);

// void (TWinControl control, int32_t index, char** data)
typedef void(*TLBGetDataEvent)(TWinControl, int32_t, char**);

// void (TWinControl control, int32_t index, TObject dataObject)
typedef void(*TLBGetDataObjectEvent)(TWinControl, int32_t, TObject);

// void (TWinControl control, char* findString, int32_t result)
typedef void(*TLBFindDataEvent)(TWinControl, char*, int32_t);

// void (TWinControl control, int32_t index, int32_t* height)
typedef void(*TMeasureItemEvent)(TWinControl, int32_t, int32_t*);

// void (TObject sender, TListItem item, TItemChange change, BOOL* allowChange)
typedef void(*TLVChangingEvent)(TObject, TListItem, TItemChange, BOOL*);

// void (TObject sender, TListItem item)
typedef void(*TLVDataEvent)(TObject, TListItem);

// void (TObject sender, TItemFind find, char* findString, TPoint* findPosition, TCustomData findData, int32_t startIndex, TSearchDirection direction, BOOL warp, int32_t* index)
typedef void(*TLVDataFindEvent)(TObject, TItemFind, char*, TPoint*, TCustomData, int32_t, TSearchDirection, BOOL, int32_t*);

// void (TObject sender, TListItem item)
typedef void(*TLVDeletedEvent)(TObject, TListItem);

// void (TObject sender, TListItem item, BOOL* allowEdit)
typedef void(*TLVEditingEvent)(TObject, TListItem, BOOL*);

// void (TObject sender, TListItem item, char** s)
typedef void(*TLVEditedEvent)(TObject, TListItem, char**);

// void (TObject sender, TCanvas aCanvas, int32_t* width, int32_t* height)
typedef void(*TMenuMeasureItemEvent)(TObject, TCanvas, int32_t*, int32_t*);

// void (TObject sender, BOOL* allowChange)
typedef void(*TTabChangingEvent)(TObject, BOOL*);

// void (TObject sender, TTreeNode node, BOOL* allowChange)
typedef void(*TTVChangingEvent)(TObject, TTreeNode, BOOL*);

// void (TObject sender, TTreeNode node, BOOL* allowCollapse)
typedef void(*TTVCollapsingEvent)(TObject, TTreeNode, BOOL*);

// void (TObject sender, TTreeNode node, char** s)
typedef void(*TTVEditedEvent)(TObject, TTreeNode, char**);

// void (TObject sender, TTreeNode node, BOOL* allowEdit)
typedef void(*TTVEditingEvent)(TObject, TTreeNode, BOOL*);

// void (TObject sender, TTreeNode node, BOOL* allowExpansion)
typedef void(*TTVExpandingEvent)(TObject, TTreeNode, BOOL*);

// void (TObject sender, TTreeNode node, char** hint)
typedef void(*TTVHintEvent)(TObject, TTreeNode, char**);

// void (TObject sender, BOOL* allowChange)
typedef void(*TUDChangingEvent)(TObject, BOOL*);

// void (TObject sender, uint32_t winErrorCode, char* errorDescription, BOOL* handled)
typedef void(*TCreatingListErrorEvent)(TObject, uint32_t, char*, BOOL*);

// void (TListView sender, TRect* aRect, BOOL* defaultDraw)
typedef void(*TLVCustomDrawEvent)(TListView, TRect*, BOOL*);

// void (TListView sender, TListItem item, TCustomDrawState state, BOOL* defaultDraw)
typedef void(*TLVCustomDrawItemEvent)(TListView, TListItem, TCustomDrawState, BOOL*);

// void (TListView sender, TListItem item, int32_t subItem, TCustomDrawState state, BOOL* defaultDraw)
typedef void(*TLVCustomDrawSubItemEvent)(TListView, TListItem, int32_t, TCustomDrawState, BOOL*);

// void (TListView sender, TListItem item, TRect* rect, TOwnerDrawState state)
typedef void(*TLVDrawItemEvent)(TListView, TListItem, TRect*, TOwnerDrawState);

// void (TObject sender, int32_t startIndex, int32_t endIndex)
typedef void(*TLVDataHintEvent)(TObject, int32_t, int32_t);

// void (TTreeView sender, TRect* aRect, BOOL* defaultDraw)
typedef void(*TTVCustomDrawEvent)(TTreeView, TRect*, BOOL*);

// void (TTreeView sender, TTreeNode node, TCustomDrawState state, BOOL* defaultDraw)
typedef void(*TTVCustomDrawItemEvent)(TTreeView, TTreeNode, TCustomDrawState, BOOL*);

// void (TMessage* msg)
typedef void(*TWndProcEvent)(TMessage*);

// void (TObject sender, char* text)
typedef void(*TWebTitleChangeEvent)(TObject, char*);

// void (TObject sender, char* funcName, char* args, char** retVal)
typedef void(*TWebJSExternalEvent)(TObject, char*, char*, char**);

// void (TObject sender, TModalResult modalResult, BOOL* canClose)
typedef void(*TTaskDlgClickEvent)(TObject, TModalResult, BOOL*);

// void (TObject sender, uint32_t tickCount, BOOL* reset)
typedef void(*TTaskDlgTimerEvent)(TObject, uint32_t, BOOL*);

// void (TWinControl sender, TControl control, int32_t* newLeft, int32_t* newTop, int32_t* newWidth, int32_t* newHeight, TRect* alignRect, TAlignInfo alignInfo)
typedef void(*TAlignPositionEvent)(TWinControl, TControl, int32_t*, int32_t*, int32_t*, int32_t*, TRect*, TAlignInfo);

// void (TObject sender, int32_t index)
typedef void(*TCheckGroupClicked)(TObject, int32_t);

// void (TObject sender, int32_t aCol, int32_t aRow)
typedef void(*TOnSelectEvent)(TObject, int32_t, int32_t);

// void (TObject sender, int32_t aCol, int32_t aRow, TCheckBoxState aState)
typedef void(*TToggledCheckboxEvent)(TObject, int32_t, int32_t, TCheckBoxState);

// void (TObject sender, int32_t ACol, int32_t ARow, int32_t BCol, int32_t BRow, int32_t* result)
typedef void(*TOnCompareCells)(TObject, int32_t, int32_t, int32_t, int32_t, int32_t*);

// void (TObject sender, int32_t ACol, int32_t ARow, char** hintText)
typedef void(*TGetCellHintEvent)(TObject, int32_t, int32_t, char**);

// void (TObject sender, int32_t ACol, int32_t ARow, TCheckBoxState* value)
typedef void(*TGetCheckboxStateEvent)(TObject, int32_t, int32_t, TCheckBoxState*);

// void (TObject sender, int32_t ACol, int32_t ARow, TCheckBoxState Value)
typedef void(*TSetCheckboxStateEvent)(TObject, int32_t, int32_t, TCheckBoxState);

// void (TObject sender, BOOL isColumn, int32_t index)
typedef void(*THdrEvent)(TObject, BOOL, int32_t);

// void (TObject sender, BOOL isColumn, int32_t aIndex, int32_t aSize)
typedef void(*THeaderSizingEvent)(TObject, BOOL, int32_t, int32_t);

// void (TObject sender, int32_t aCol, int32_t aRow, TWinControl* editor)
typedef void(*TSelectEditorEvent)(TObject, int32_t, int32_t, TWinControl*);

// void (TObject sender, int32_t aCol, int32_t aRow, TCheckBoxState CheckedState, TBitmap* aBitmap)
typedef void(*TUserCheckBoxBitmapEvent)(TObject, int32_t, int32_t, TCheckBoxState, TBitmap*);

// void (TObject sender, int32_t aCol, int32_t aRow, char* oldValue, char** newValue)
typedef void(*TValidateEntryEvent)(TObject, int32_t, int32_t, char*, char**);

// void ()
typedef void(*TOnPrepareCanvasEvent)();

// void ()
typedef void(*TAcceptFileNameEvent)();

// void ()
typedef void(*TCheckItemChange)();

// void ()
typedef void(*TUTF8KeyPressEvent)();

// void ()
typedef void(*TMenuDrawItemEvent)();




// 集合加法，val...中存储为位的索引，下标为0
TSet Include(TSet s, uint8_t val) {
    return (TSet)(s | (1 << val));
}
//TSet Include(TSet s, ...) {
//    uint32_t r = (uint32_t)s;
//    va_list varlist;
//    va_start(varlist, s);
//    uint8_t val;
//    while ((val = va_arg(varlist, int)) != -1) {
//        r |= (1 << (uint8_t)val);
//    }
//    va_end(varlist);
//    return (TSet)r;
//}

// 集合减法，val...中存储为位的索引，下标为0
TSet Exclude(TSet s, uint8_t val) {
    return (TSet)(s & (~(1 << val)));
}
//TSet Exclude(TSet s, ...) {
//    uint32_t r = (uint32_t)s;
//    va_list varlist;
//    va_start(varlist, s);
//    uint8_t val;
//    while ((val = va_arg(varlist, int)) != -1) {
//        r &= ~(1 << (uint8_t)val);
//    }
//    va_end(varlist);
//    return (TSet)r;
//}

// 集合类型的判断，val表示位数，下标为0
BOOL InSet(uint32_t s, uint8_t val) {
    if ((s&(1 << val)) != 0) {
        return TRUE;
    }
    return FALSE;
}


// liblcl句柄
static uintptr_t libHandle;

// 用于处理异常的模拟call
typedef uint64_t(LCLAPI *MYSYSCALL)(void*, intptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t);

// 函数指针
static MYSYSCALL pMySyscall;

// 异常处理函数实体
#define MySyscall(addr, len, a1, a2 , a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) \
    pMySyscall((void*)addr, (intptr_t)len, COV_PARAM(a1), COV_PARAM(a2), COV_PARAM(a3), COV_PARAM(a4), COV_PARAM(a5), COV_PARAM(a6), COV_PARAM(a7), COV_PARAM(a8), COV_PARAM(a9), COV_PARAM(a10), COV_PARAM(a11), COV_PARAM(a12))

// 全局实例类定义
TApplication Application;
TScreen Screen;
TMouse Mouse;
TClipboard Clipboard;
TPrinter Printer;

// 全局互斥锁
#ifdef __GNUC__
static pthread_mutex_t threadSyncMutex;
#else
static RTL_CRITICAL_SECTION threadSyncMutex;
#endif

// 初始liblcl库
static void init_lib_lcl();
// 反向初始liblcl库
static void un_init_lib_lcl();


// 获取过程地址
static void* get_proc_addr(const char *name) {
#ifdef _WIN32
    return (void*)GetProcAddress((HMODULE)libHandle, name);
#else
    return (void*)dlsym((void*)libHandle, name);
#endif
}

// 加载库
BOOL load_liblcl(const char *name) {
    if(libHandle > 0)
        return TRUE;
#ifdef _WIN32
    libHandle = (uintptr_t)LoadLibraryA(name);
#else
    libHandle = (uintptr_t)dlopen(name, RTLD_LAZY|RTLD_GLOBAL);
#endif
    if(libHandle > 0) {
         pMySyscall = (MYSYSCALL)get_proc_addr("MySyscall");
         // 初始库
         init_lib_lcl();
    }
    return libHandle > 0;
}

// 关闭库
void close_liblcl() {
    if(libHandle > 0) {
	#ifdef _WIN32
	    FreeLibrary((HMODULE)libHandle);
	#else
	    dlclose((void*)libHandle);
	#endif
        libHandle = 0;
        un_init_lib_lcl();
    }
}

/*--------------------一些其它函数--------------------*/

DEFINE_FUNC_PTR(DLibStringEncoding)
TStringEncoding
LibStringEncoding() {
    GET_FUNC_ADDR(DLibStringEncoding)
    return (TStringEncoding)MySyscall(pDLibStringEncoding, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DLibVersion)
uint32_t
LibVersion() {
    GET_FUNC_ADDR(DLibVersion)
    return (uint32_t)MySyscall(pDLibVersion, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DSysLocale)
void
SysLocale(TSysLocale* AInfo) {
    GET_FUNC_ADDR(DSysLocale)
    MySyscall(pDSysLocale, 1, AInfo ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_Instance)
TApplication
Application_Instance() {
    GET_FUNC_ADDR(Application_Instance)
    return (TApplication)MySyscall(pApplication_Instance, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Mouse_Instance)
TMouse
Mouse_Instance() {
    GET_FUNC_ADDR(Mouse_Instance)
    return (TMouse)MySyscall(pMouse_Instance, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_Instance)
TScreen
Screen_Instance() {
    GET_FUNC_ADDR(Screen_Instance)
    return (TScreen)MySyscall(pScreen_Instance, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DTextToShortCut)
TShortCut
TextToShortCut(CChar char* AText) {
    GET_FUNC_ADDR(DTextToShortCut)
    return (TShortCut)MySyscall(pDTextToShortCut, 1, AText ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DShortCutToText)
char*
ShortCutToText(TShortCut AVal) {
    GET_FUNC_ADDR(DShortCutToText)
    return (char*)MySyscall(pDShortCutToText, 1, AVal ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_Instance)
TClipboard
Clipboard_Instance() {
    GET_FUNC_ADDR(Clipboard_Instance)
    return (TClipboard)MySyscall(pClipboard_Instance, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DPredefinedClipboardFormat)
TClipboardFormat
PredefinedClipboardFormat(TPredefinedClipboardFormat AFormat) {
    GET_FUNC_ADDR(DPredefinedClipboardFormat)
    return (TClipboardFormat)MySyscall(pDPredefinedClipboardFormat, 1, AFormat ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DSetClipboard)
TClipboard
SetClipboard(TClipboard ANewClipboard) {
    GET_FUNC_ADDR(DSetClipboard)
    return (TClipboard)MySyscall(pDSetClipboard, 1, ANewClipboard ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}
#ifndef _WIN32


DEFINE_FUNC_PTR(DSendMessage)
LRESULT
SendMessage(HWND hWd, uint32_t msg, WPARAM wParam, LPARAM lParam) {
    GET_FUNC_ADDR(DSendMessage)
    return (LRESULT)MySyscall(pDSendMessage, 4, hWd, msg, wParam, lParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DPostMessage)
BOOL
PostMessage(HWND hWd, uint32_t msg, WPARAM wParam, LPARAM lParam) {
    GET_FUNC_ADDR(DPostMessage)
    return (BOOL)MySyscall(pDPostMessage, 4, hWd, msg, wParam, lParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DIsIconic)
BOOL
IsIconic(HWND hWnd) {
    GET_FUNC_ADDR(DIsIconic)
    return (BOOL)MySyscall(pDIsIconic, 1, hWnd ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DIsWindow)
BOOL
IsWindow(HWND hWnd) {
    GET_FUNC_ADDR(DIsWindow)
    return (BOOL)MySyscall(pDIsWindow, 1, hWnd ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DIsZoomed)
BOOL
IsZoomed(HWND hWnd) {
    GET_FUNC_ADDR(DIsZoomed)
    return (BOOL)MySyscall(pDIsZoomed, 1, hWnd ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DIsWindowVisible)
BOOL
IsWindowVisible(HWND hWnd) {
    GET_FUNC_ADDR(DIsWindowVisible)
    return (BOOL)MySyscall(pDIsWindowVisible, 1, hWnd ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DGetDC)
HDC
GetDC(HWND hWnd) {
    GET_FUNC_ADDR(DGetDC)
    return (HDC)MySyscall(pDGetDC, 1, hWnd ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DReleaseDC)
int32_t
ReleaseDC(HWND hWnd, HDC dc) {
    GET_FUNC_ADDR(DReleaseDC)
    return (int32_t)MySyscall(pDReleaseDC, 2, hWnd, dc ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DSetForegroundWindow)
BOOL
SetForegroundWindow(HWND hWnd) {
    GET_FUNC_ADDR(DSetForegroundWindow)
    return (BOOL)MySyscall(pDSetForegroundWindow, 1, hWnd ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DRegisterClipboardFormat)
TClipboardFormat
RegisterClipboardFormat(CChar char* AFormat) {
    GET_FUNC_ADDR(DRegisterClipboardFormat)
    return (TClipboardFormat)MySyscall(pDRegisterClipboardFormat, 1, AFormat ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DWindowFromPoint)
HWND
WindowFromPoint(TPoint* point) {
    GET_FUNC_ADDR(DWindowFromPoint)
    return (HWND)MySyscall(pDWindowFromPoint, 1, point ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

#endif


DEFINE_FUNC_PTR(SetEventCallback)
void
SetEventCallback(void* APtr) {
    GET_FUNC_ADDR(SetEventCallback)
    MySyscall(pSetEventCallback, 1, APtr ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SetMessageCallback)
void
SetMessageCallback(void* APtr) {
    GET_FUNC_ADDR(SetMessageCallback)
    MySyscall(pSetMessageCallback, 1, APtr ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SetThreadSyncCallback)
void
SetThreadSyncCallback(void* APtr) {
    GET_FUNC_ADDR(SetThreadSyncCallback)
    MySyscall(pSetThreadSyncCallback, 1, APtr ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SetExceptionHandlerCallback)
void
SetExceptionHandlerCallback(void* APtr) {
    GET_FUNC_ADDR(SetExceptionHandlerCallback)
    MySyscall(pSetExceptionHandlerCallback, 1, APtr ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SetRequestCallCreateParamsCallback)
void
SetRequestCallCreateParamsCallback(void* APtr) {
    GET_FUNC_ADDR(SetRequestCallCreateParamsCallback)
    MySyscall(pSetRequestCallCreateParamsCallback, 1, APtr ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SetRemoveEventCallback)
void
SetRemoveEventCallback(void* APtr) {
    GET_FUNC_ADDR(SetRemoveEventCallback)
    MySyscall(pSetRemoveEventCallback, 1, APtr ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DGetStringArrOf)
char*
GetStringArrOf(void* P, intptr_t AIndex) {
    GET_FUNC_ADDR(DGetStringArrOf)
    return (char*)MySyscall(pDGetStringArrOf, 2, P, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DStrLen)
intptr_t
StrLen(CChar char* p) {
    GET_FUNC_ADDR(DStrLen)
    return (intptr_t)MySyscall(pDStrLen, 1, p ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DShowMessage)
void
ShowMessage(CChar char* AMsg) {
    GET_FUNC_ADDR(DShowMessage)
    MySyscall(pDShowMessage, 1, AMsg ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DGetMainInstance)
HINST
GetMainInstance() {
    GET_FUNC_ADDR(DGetMainInstance)
    return (HINST)MySyscall(pDGetMainInstance, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DMessageDlg)
int32_t
MessageDlg(CChar char* Msg, TMsgDlgType DlgType, TMsgDlgButtons Buttons, int32_t HelpCtx) {
    GET_FUNC_ADDR(DMessageDlg)
    return (int32_t)MySyscall(pDMessageDlg, 4, Msg, DlgType, Buttons, HelpCtx ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DSynchronize)
void
Synchronize(BOOL AUseMsg) {
    GET_FUNC_ADDR(DSynchronize)
    MySyscall(pDSynchronize, 1, AUseMsg ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DMainThreadId)
TThreadID
MainThreadId() {
    GET_FUNC_ADDR(DMainThreadId)
    return (TThreadID)MySyscall(pDMainThreadId, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DCurrentThreadId)
TThreadID
CurrentThreadId() {
    GET_FUNC_ADDR(DCurrentThreadId)
    return (TThreadID)MySyscall(pDCurrentThreadId, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DSysOpen)
void
SysOpen(CChar char* FileName) {
    GET_FUNC_ADDR(DSysOpen)
    MySyscall(pDSysOpen, 1, FileName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DExtractFilePath)
char*
ExtractFilePath(CChar char* AFileName) {
    GET_FUNC_ADDR(DExtractFilePath)
    return (char*)MySyscall(pDExtractFilePath, 1, AFileName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DFileExists)
BOOL
FileExists(CChar char* AFileName) {
    GET_FUNC_ADDR(DFileExists)
    return (BOOL)MySyscall(pDFileExists, 1, AFileName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DSelectDirectory1)
BOOL
SelectDirectory1(CChar char** Directory, TSelectDirOpts Options, int32_t HelpCtx) {
    GET_FUNC_ADDR(DSelectDirectory1)
    return (BOOL)MySyscall(pDSelectDirectory1, 3, Directory, Options, HelpCtx ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DSelectDirectory2)
BOOL
SelectDirectory2(CChar char* Caption, CChar char* Root, BOOL AShowHidden, CChar char** Directory) {
    GET_FUNC_ADDR(DSelectDirectory2)
    return (BOOL)MySyscall(pDSelectDirectory2, 4, Caption, Root, AShowHidden, Directory ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DInputBox)
char*
InputBox(CChar char* ACaption, CChar char* APrompt, CChar char* ADefault) {
    GET_FUNC_ADDR(DInputBox)
    return (char*)MySyscall(pDInputBox, 3, ACaption, APrompt, ADefault ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DInputQuery)
BOOL
InputQuery(CChar char* ACaption, CChar char* APrompt, CChar char* Value, CChar char** AOut) {
    GET_FUNC_ADDR(DInputQuery)
    return (BOOL)MySyscall(pDInputQuery, 4, ACaption, APrompt, Value, AOut ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DPasswordBox)
char*
PasswordBox(CChar char* ACaption, CChar char* APrompt) {
    GET_FUNC_ADDR(DPasswordBox)
    return (char*)MySyscall(pDPasswordBox, 2, ACaption, APrompt ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DInputCombo)
int32_t
InputCombo(CChar char* ACaption, CChar char* APrompt, TStrings AList) {
    GET_FUNC_ADDR(DInputCombo)
    return (int32_t)MySyscall(pDInputCombo, 3, ACaption, APrompt, AList ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DInputComboEx)
char*
InputComboEx(CChar char* ACaption, CChar char* APrompt, TStrings AList, BOOL AllowCustomText) {
    GET_FUNC_ADDR(DInputComboEx)
    return (char*)MySyscall(pDInputComboEx, 4, ACaption, APrompt, AList, AllowCustomText ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}
#ifdef _WIN32


DEFINE_FUNC_PTR(DCreateURLShortCut)
void
CreateURLShortCut(CChar char* ADestPath, CChar char* AShortCutName, CChar char* AURL) {
    GET_FUNC_ADDR(DCreateURLShortCut)
    MySyscall(pDCreateURLShortCut, 3, ADestPath, AShortCutName, AURL ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DCreateShortCut)
BOOL
CreateShortCut(CChar char* ADestPath, CChar char* AShortCutName, CChar char* ASrcFileName, CChar char* AIconFileName, CChar char* ADescription, CChar char* ACmdArgs) {
    GET_FUNC_ADDR(DCreateShortCut)
    return (BOOL)MySyscall(pDCreateShortCut, 6, ADestPath, AShortCutName, ASrcFileName, AIconFileName, ADescription, ACmdArgs ,0 ,0 ,0 ,0 ,0 ,0);
}

#endif


DEFINE_FUNC_PTR(DSetPropertyValue)
void
SetPropertyValue(TObject Instance, CChar char* PropName, CChar char* Value) {
    GET_FUNC_ADDR(DSetPropertyValue)
    MySyscall(pDSetPropertyValue, 3, Instance, PropName, Value ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DSetPropertySecValue)
void
SetPropertySecValue(TObject Instance, CChar char* PropName, CChar char* SecPropName, CChar char* Value) {
    GET_FUNC_ADDR(DSetPropertySecValue)
    MySyscall(pDSetPropertySecValue, 4, Instance, PropName, SecPropName, Value ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DGUIDToString)
char*
GUIDToString(TGUID AGUID) {
    GET_FUNC_ADDR(DGUIDToString)
    return (char*)MySyscall(pDGUIDToString, 1, &AGUID ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DStringToGUID)
TGUID
StringToGUID(CChar char* AGUIDStr) {
    GET_FUNC_ADDR(DStringToGUID)
    TGUID result;
    MySyscall(pDStringToGUID, 2, AGUIDStr, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DCreateGUID)
TGUID
CreateGUID() {
    GET_FUNC_ADDR(DCreateGUID)
    TGUID result;
    MySyscall(pDCreateGUID, 1, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Printer_Instance)
TPrinter
Printer_Instance() {
    GET_FUNC_ADDR(Printer_Instance)
    return (TPrinter)MySyscall(pPrinter_Instance, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DLibAbout)
char*
LibAbout() {
    GET_FUNC_ADDR(DLibAbout)
    return (char*)MySyscall(pDLibAbout, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DGetLibResourceCount)
int32_t
GetLibResourceCount() {
    GET_FUNC_ADDR(DGetLibResourceCount)
    return (int32_t)MySyscall(pDGetLibResourceCount, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DGetLibResourceItem)
TResItem
GetLibResourceItem(int32_t AIndex) {
    GET_FUNC_ADDR(DGetLibResourceItem)
    TResItem result;
    MySyscall(pDGetLibResourceItem, 2, AIndex, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DModifyLibResource)
void
ModifyLibResource(void* APtr, CChar char* AValue) {
    GET_FUNC_ADDR(DModifyLibResource)
    MySyscall(pDModifyLibResource, 2, APtr, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DGetLibType)
TLibType
GetLibType() {
    GET_FUNC_ADDR(DGetLibType)
    return (TLibType)MySyscall(pDGetLibType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DInitGoDll)
void
InitGoDll(TThreadID AMainThreadId) {
    GET_FUNC_ADDR(DInitGoDll)
    MySyscall(pDInitGoDll, 1, AMainThreadId ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DFindControl)
TWinControl
FindControl(HWND AHandle) {
    GET_FUNC_ADDR(DFindControl)
    return (TWinControl)MySyscall(pDFindControl, 1, AHandle ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DFindLCLControl)
TControl
FindLCLControl(TPoint AScreenPos) {
    GET_FUNC_ADDR(DFindLCLControl)
    return (TControl)MySyscall(pDFindLCLControl, 1, &AScreenPos ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DFindOwnerControl)
TWinControl
FindOwnerControl(HWND Handle) {
    GET_FUNC_ADDR(DFindOwnerControl)
    return (TWinControl)MySyscall(pDFindOwnerControl, 1, Handle ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DFindControlAtPosition)
TControl
FindControlAtPosition(TPoint APosition, BOOL AllowDisabled) {
    GET_FUNC_ADDR(DFindControlAtPosition)
    return (TControl)MySyscall(pDFindControlAtPosition, 2, &APosition, AllowDisabled ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DFindLCLWindow)
TWinControl
FindLCLWindow(TPoint AScreenPos, BOOL AllowDisabled) {
    GET_FUNC_ADDR(DFindLCLWindow)
    return (TWinControl)MySyscall(pDFindLCLWindow, 2, &AScreenPos, AllowDisabled ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DFindDragTarget)
TControl
FindDragTarget(TPoint APosition, BOOL AllowDisabled) {
    GET_FUNC_ADDR(DFindDragTarget)
    return (TControl)MySyscall(pDFindDragTarget, 2, &APosition, AllowDisabled ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

#ifdef __linux__


DEFINE_FUNC_PTR(GtkWidget_GetGtkFixed)
PGtkFixed
GtkWidget_GetGtkFixed(HWND Ah) {
    GET_FUNC_ADDR(GtkWidget_GetGtkFixed)
    return (PGtkFixed)MySyscall(pGtkWidget_GetGtkFixed, 1, Ah ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GdkWindow_FromForm)
PGdkWindow
GdkWindow_FromForm(TForm AForm) {
    GET_FUNC_ADDR(GdkWindow_FromForm)
    return (PGdkWindow)MySyscall(pGdkWindow_FromForm, 1, AForm ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GdkWindow_GetXId)
void
GdkWindow_GetXId(PGdkWindow AW, TXId* AXId) {
    GET_FUNC_ADDR(GdkWindow_GetXId)
    MySyscall(pGdkWindow_GetXId, 2, AW, AXId ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GtkWidget_Window)
PGdkWindow
GtkWidget_Window(HWND Ah) {
    GET_FUNC_ADDR(GtkWidget_Window)
    return (PGdkWindow)MySyscall(pGtkWidget_Window, 1, Ah ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

#endif


#ifdef __APPLE__


DEFINE_FUNC_PTR(NSWindow_FromForm)
MyNSWindow
NSWindow_FromForm(TForm AForm) {
    GET_FUNC_ADDR(NSWindow_FromForm)
    return (MyNSWindow)MySyscall(pNSWindow_FromForm, 1, AForm ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

#endif


DEFINE_FUNC_PTR(ResFormLoadFromResourceName)
void
ResFormLoadFromResourceName(uintptr_t AInstance, CChar char* AResName, TComponent ARoot) {
    GET_FUNC_ADDR(ResFormLoadFromResourceName)
    MySyscall(pResFormLoadFromResourceName, 3, AInstance, AResName, ARoot ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ResFormLoadFromFile)
void
ResFormLoadFromFile(CChar char* AFileName, TComponent ARoot) {
    GET_FUNC_ADDR(ResFormLoadFromFile)
    MySyscall(pResFormLoadFromFile, 2, AFileName, ARoot ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ResFormLoadFromStream)
void
ResFormLoadFromStream(TStream AStream, TComponent ARoot) {
    GET_FUNC_ADDR(ResFormLoadFromStream)
    MySyscall(pResFormLoadFromStream, 2, AStream, ARoot ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ResFormRegisterFormResource)
BOOL
ResFormRegisterFormResource(CChar char* AClassName, void* AData, int32_t ALen) {
    GET_FUNC_ADDR(ResFormRegisterFormResource)
    return (BOOL)MySyscall(pResFormRegisterFormResource, 3, AClassName, AData, ALen ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ResFormLoadFromClassName)
BOOL
ResFormLoadFromClassName(CChar char* AClassName, TComponent ARoot) {
    GET_FUNC_ADDR(ResFormLoadFromClassName)
    return (BOOL)MySyscall(pResFormLoadFromClassName, 2, AClassName, ARoot ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}
/*--------------------类成员函数--------------------*/

// -------------------TObject-------------------

DEFINE_FUNC_PTR(Object_Create)
TObject
Object_Create() {
    GET_FUNC_ADDR(Object_Create)
    return (TObject)MySyscall(pObject_Create, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Object_Free)
void
Object_Free(TObject AObj) {
    GET_FUNC_ADDR(Object_Free)
    MySyscall(pObject_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Object_ClassType)
TClass
Object_ClassType(TObject AObj) {
    GET_FUNC_ADDR(Object_ClassType)
    return (TClass)MySyscall(pObject_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Object_ClassName)
char*
Object_ClassName(TObject AObj) {
    GET_FUNC_ADDR(Object_ClassName)
    return (char*)MySyscall(pObject_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Object_InstanceSize)
int32_t
Object_InstanceSize(TObject AObj) {
    GET_FUNC_ADDR(Object_InstanceSize)
    return (int32_t)MySyscall(pObject_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Object_InheritsFrom)
BOOL
Object_InheritsFrom(TObject AObj, TClass AClass) {
    GET_FUNC_ADDR(Object_InheritsFrom)
    return (BOOL)MySyscall(pObject_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Object_Equals)
BOOL
Object_Equals(TObject AObj, TObject Obj) {
    GET_FUNC_ADDR(Object_Equals)
    return (BOOL)MySyscall(pObject_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Object_GetHashCode)
int32_t
Object_GetHashCode(TObject AObj) {
    GET_FUNC_ADDR(Object_GetHashCode)
    return (int32_t)MySyscall(pObject_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Object_ToString)
char*
Object_ToString(TObject AObj) {
    GET_FUNC_ADDR(Object_ToString)
    return (char*)MySyscall(pObject_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Object_StaticClassType)
TClass
Object_StaticClassType() {
    GET_FUNC_ADDR(Object_StaticClassType)
    return (TClass)MySyscall(pObject_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TComponent-------------------

DEFINE_FUNC_PTR(Component_Create)
TComponent
Component_Create(TComponent AOwner) {
    GET_FUNC_ADDR(Component_Create)
    return (TComponent)MySyscall(pComponent_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Component_Free)
void
Component_Free(TComponent AObj) {
    GET_FUNC_ADDR(Component_Free)
    MySyscall(pComponent_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Component_FindComponent)
TComponent
Component_FindComponent(TComponent AObj, CChar char* AName) {
    GET_FUNC_ADDR(Component_FindComponent)
    return (TComponent)MySyscall(pComponent_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Component_GetNamePath)
char*
Component_GetNamePath(TComponent AObj) {
    GET_FUNC_ADDR(Component_GetNamePath)
    return (char*)MySyscall(pComponent_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Component_HasParent)
BOOL
Component_HasParent(TComponent AObj) {
    GET_FUNC_ADDR(Component_HasParent)
    return (BOOL)MySyscall(pComponent_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Component_Assign)
void
Component_Assign(TComponent AObj, TObject Source) {
    GET_FUNC_ADDR(Component_Assign)
    MySyscall(pComponent_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Component_ClassType)
TClass
Component_ClassType(TComponent AObj) {
    GET_FUNC_ADDR(Component_ClassType)
    return (TClass)MySyscall(pComponent_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Component_ClassName)
char*
Component_ClassName(TComponent AObj) {
    GET_FUNC_ADDR(Component_ClassName)
    return (char*)MySyscall(pComponent_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Component_InstanceSize)
int32_t
Component_InstanceSize(TComponent AObj) {
    GET_FUNC_ADDR(Component_InstanceSize)
    return (int32_t)MySyscall(pComponent_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Component_InheritsFrom)
BOOL
Component_InheritsFrom(TComponent AObj, TClass AClass) {
    GET_FUNC_ADDR(Component_InheritsFrom)
    return (BOOL)MySyscall(pComponent_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Component_Equals)
BOOL
Component_Equals(TComponent AObj, TObject Obj) {
    GET_FUNC_ADDR(Component_Equals)
    return (BOOL)MySyscall(pComponent_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Component_GetHashCode)
int32_t
Component_GetHashCode(TComponent AObj) {
    GET_FUNC_ADDR(Component_GetHashCode)
    return (int32_t)MySyscall(pComponent_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Component_ToString)
char*
Component_ToString(TComponent AObj) {
    GET_FUNC_ADDR(Component_ToString)
    return (char*)MySyscall(pComponent_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Component_GetComponentCount)
int32_t
Component_GetComponentCount(TComponent AObj) {
    GET_FUNC_ADDR(Component_GetComponentCount)
    return (int32_t)MySyscall(pComponent_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Component_GetComponentIndex)
int32_t
Component_GetComponentIndex(TComponent AObj) {
    GET_FUNC_ADDR(Component_GetComponentIndex)
    return (int32_t)MySyscall(pComponent_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Component_SetComponentIndex)
void
Component_SetComponentIndex(TComponent AObj, int32_t AValue) {
    GET_FUNC_ADDR(Component_SetComponentIndex)
    MySyscall(pComponent_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Component_GetOwner)
TComponent
Component_GetOwner(TComponent AObj) {
    GET_FUNC_ADDR(Component_GetOwner)
    return (TComponent)MySyscall(pComponent_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Component_GetName)
char*
Component_GetName(TComponent AObj) {
    GET_FUNC_ADDR(Component_GetName)
    return (char*)MySyscall(pComponent_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Component_SetName)
void
Component_SetName(TComponent AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Component_SetName)
    MySyscall(pComponent_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Component_GetTag)
intptr_t
Component_GetTag(TComponent AObj) {
    GET_FUNC_ADDR(Component_GetTag)
    return (intptr_t)MySyscall(pComponent_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Component_SetTag)
void
Component_SetTag(TComponent AObj, intptr_t AValue) {
    GET_FUNC_ADDR(Component_SetTag)
    MySyscall(pComponent_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Component_GetComponents)
TComponent
Component_GetComponents(TComponent AObj, int32_t AIndex) {
    GET_FUNC_ADDR(Component_GetComponents)
    return (TComponent)MySyscall(pComponent_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Component_StaticClassType)
TClass
Component_StaticClassType() {
    GET_FUNC_ADDR(Component_StaticClassType)
    return (TClass)MySyscall(pComponent_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TControl-------------------

DEFINE_FUNC_PTR(Control_Create)
TControl
Control_Create(TComponent AOwner) {
    GET_FUNC_ADDR(Control_Create)
    return (TControl)MySyscall(pControl_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_Free)
void
Control_Free(TControl AObj) {
    GET_FUNC_ADDR(Control_Free)
    MySyscall(pControl_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_BringToFront)
void
Control_BringToFront(TControl AObj) {
    GET_FUNC_ADDR(Control_BringToFront)
    MySyscall(pControl_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_ClientToScreen)
TPoint
Control_ClientToScreen(TControl AObj, TPoint Point) {
    GET_FUNC_ADDR(Control_ClientToScreen)
    TPoint result;
    MySyscall(pControl_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Control_ClientToParent)
TPoint
Control_ClientToParent(TControl AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Control_ClientToParent)
    TPoint result;
    MySyscall(pControl_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Control_Dragging)
BOOL
Control_Dragging(TControl AObj) {
    GET_FUNC_ADDR(Control_Dragging)
    return (BOOL)MySyscall(pControl_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_HasParent)
BOOL
Control_HasParent(TControl AObj) {
    GET_FUNC_ADDR(Control_HasParent)
    return (BOOL)MySyscall(pControl_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_Hide)
void
Control_Hide(TControl AObj) {
    GET_FUNC_ADDR(Control_Hide)
    MySyscall(pControl_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_Invalidate)
void
Control_Invalidate(TControl AObj) {
    GET_FUNC_ADDR(Control_Invalidate)
    MySyscall(pControl_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_Perform)
intptr_t
Control_Perform(TControl AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(Control_Perform)
    return (intptr_t)MySyscall(pControl_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_Refresh)
void
Control_Refresh(TControl AObj) {
    GET_FUNC_ADDR(Control_Refresh)
    MySyscall(pControl_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_Repaint)
void
Control_Repaint(TControl AObj) {
    GET_FUNC_ADDR(Control_Repaint)
    MySyscall(pControl_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_ScreenToClient)
TPoint
Control_ScreenToClient(TControl AObj, TPoint Point) {
    GET_FUNC_ADDR(Control_ScreenToClient)
    TPoint result;
    MySyscall(pControl_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Control_ParentToClient)
TPoint
Control_ParentToClient(TControl AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Control_ParentToClient)
    TPoint result;
    MySyscall(pControl_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Control_SendToBack)
void
Control_SendToBack(TControl AObj) {
    GET_FUNC_ADDR(Control_SendToBack)
    MySyscall(pControl_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetBounds)
void
Control_SetBounds(TControl AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(Control_SetBounds)
    MySyscall(pControl_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_Show)
void
Control_Show(TControl AObj) {
    GET_FUNC_ADDR(Control_Show)
    MySyscall(pControl_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_Update)
void
Control_Update(TControl AObj) {
    GET_FUNC_ADDR(Control_Update)
    MySyscall(pControl_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetTextBuf)
int32_t
Control_GetTextBuf(TControl AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(Control_GetTextBuf)
    return (int32_t)MySyscall(pControl_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetTextLen)
int32_t
Control_GetTextLen(TControl AObj) {
    GET_FUNC_ADDR(Control_GetTextLen)
    return (int32_t)MySyscall(pControl_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetTextBuf)
void
Control_SetTextBuf(TControl AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(Control_SetTextBuf)
    MySyscall(pControl_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_FindComponent)
TComponent
Control_FindComponent(TControl AObj, CChar char* AName) {
    GET_FUNC_ADDR(Control_FindComponent)
    return (TComponent)MySyscall(pControl_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetNamePath)
char*
Control_GetNamePath(TControl AObj) {
    GET_FUNC_ADDR(Control_GetNamePath)
    return (char*)MySyscall(pControl_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_Assign)
void
Control_Assign(TControl AObj, TObject Source) {
    GET_FUNC_ADDR(Control_Assign)
    MySyscall(pControl_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_ClassType)
TClass
Control_ClassType(TControl AObj) {
    GET_FUNC_ADDR(Control_ClassType)
    return (TClass)MySyscall(pControl_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_ClassName)
char*
Control_ClassName(TControl AObj) {
    GET_FUNC_ADDR(Control_ClassName)
    return (char*)MySyscall(pControl_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_InstanceSize)
int32_t
Control_InstanceSize(TControl AObj) {
    GET_FUNC_ADDR(Control_InstanceSize)
    return (int32_t)MySyscall(pControl_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_InheritsFrom)
BOOL
Control_InheritsFrom(TControl AObj, TClass AClass) {
    GET_FUNC_ADDR(Control_InheritsFrom)
    return (BOOL)MySyscall(pControl_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_Equals)
BOOL
Control_Equals(TControl AObj, TObject Obj) {
    GET_FUNC_ADDR(Control_Equals)
    return (BOOL)MySyscall(pControl_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetHashCode)
int32_t
Control_GetHashCode(TControl AObj) {
    GET_FUNC_ADDR(Control_GetHashCode)
    return (int32_t)MySyscall(pControl_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_ToString)
char*
Control_ToString(TControl AObj) {
    GET_FUNC_ADDR(Control_ToString)
    return (char*)MySyscall(pControl_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_AnchorToNeighbour)
void
Control_AnchorToNeighbour(TControl AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Control_AnchorToNeighbour)
    MySyscall(pControl_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_AnchorParallel)
void
Control_AnchorParallel(TControl AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Control_AnchorParallel)
    MySyscall(pControl_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_AnchorHorizontalCenterTo)
void
Control_AnchorHorizontalCenterTo(TControl AObj, TControl ASibling) {
    GET_FUNC_ADDR(Control_AnchorHorizontalCenterTo)
    MySyscall(pControl_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_AnchorVerticalCenterTo)
void
Control_AnchorVerticalCenterTo(TControl AObj, TControl ASibling) {
    GET_FUNC_ADDR(Control_AnchorVerticalCenterTo)
    MySyscall(pControl_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_AnchorSame)
void
Control_AnchorSame(TControl AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(Control_AnchorSame)
    MySyscall(pControl_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_AnchorAsAlign)
void
Control_AnchorAsAlign(TControl AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(Control_AnchorAsAlign)
    MySyscall(pControl_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_AnchorClient)
void
Control_AnchorClient(TControl AObj, int32_t ASpace) {
    GET_FUNC_ADDR(Control_AnchorClient)
    MySyscall(pControl_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_ScaleDesignToForm)
int32_t
Control_ScaleDesignToForm(TControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(Control_ScaleDesignToForm)
    return (int32_t)MySyscall(pControl_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_ScaleFormToDesign)
int32_t
Control_ScaleFormToDesign(TControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(Control_ScaleFormToDesign)
    return (int32_t)MySyscall(pControl_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_Scale96ToForm)
int32_t
Control_Scale96ToForm(TControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(Control_Scale96ToForm)
    return (int32_t)MySyscall(pControl_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_ScaleFormTo96)
int32_t
Control_ScaleFormTo96(TControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(Control_ScaleFormTo96)
    return (int32_t)MySyscall(pControl_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_Scale96ToFont)
int32_t
Control_Scale96ToFont(TControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(Control_Scale96ToFont)
    return (int32_t)MySyscall(pControl_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_ScaleFontTo96)
int32_t
Control_ScaleFontTo96(TControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(Control_ScaleFontTo96)
    return (int32_t)MySyscall(pControl_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_ScaleScreenToFont)
int32_t
Control_ScaleScreenToFont(TControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(Control_ScaleScreenToFont)
    return (int32_t)MySyscall(pControl_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_ScaleFontToScreen)
int32_t
Control_ScaleFontToScreen(TControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(Control_ScaleFontToScreen)
    return (int32_t)MySyscall(pControl_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_Scale96ToScreen)
int32_t
Control_Scale96ToScreen(TControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(Control_Scale96ToScreen)
    return (int32_t)MySyscall(pControl_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_ScaleScreenTo96)
int32_t
Control_ScaleScreenTo96(TControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(Control_ScaleScreenTo96)
    return (int32_t)MySyscall(pControl_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_AutoAdjustLayout)
void
Control_AutoAdjustLayout(TControl AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(Control_AutoAdjustLayout)
    MySyscall(pControl_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_FixDesignFontsPPI)
void
Control_FixDesignFontsPPI(TControl AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(Control_FixDesignFontsPPI)
    MySyscall(pControl_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_ScaleFontsPPI)
void
Control_ScaleFontsPPI(TControl AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(Control_ScaleFontsPPI)
    MySyscall(pControl_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetEnabled)
BOOL
Control_GetEnabled(TControl AObj) {
    GET_FUNC_ADDR(Control_GetEnabled)
    return (BOOL)MySyscall(pControl_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetEnabled)
void
Control_SetEnabled(TControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(Control_SetEnabled)
    MySyscall(pControl_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetAction)
TAction
Control_GetAction(TControl AObj) {
    GET_FUNC_ADDR(Control_GetAction)
    return (TAction)MySyscall(pControl_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetAction)
void
Control_SetAction(TControl AObj, TAction AValue) {
    GET_FUNC_ADDR(Control_SetAction)
    MySyscall(pControl_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetAlign)
TAlign
Control_GetAlign(TControl AObj) {
    GET_FUNC_ADDR(Control_GetAlign)
    return (TAlign)MySyscall(pControl_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetAlign)
void
Control_SetAlign(TControl AObj, TAlign AValue) {
    GET_FUNC_ADDR(Control_SetAlign)
    MySyscall(pControl_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetAnchors)
TAnchors
Control_GetAnchors(TControl AObj) {
    GET_FUNC_ADDR(Control_GetAnchors)
    return (TAnchors)MySyscall(pControl_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetAnchors)
void
Control_SetAnchors(TControl AObj, TAnchors AValue) {
    GET_FUNC_ADDR(Control_SetAnchors)
    MySyscall(pControl_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetBiDiMode)
TBiDiMode
Control_GetBiDiMode(TControl AObj) {
    GET_FUNC_ADDR(Control_GetBiDiMode)
    return (TBiDiMode)MySyscall(pControl_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetBiDiMode)
void
Control_SetBiDiMode(TControl AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(Control_SetBiDiMode)
    MySyscall(pControl_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetBoundsRect)
TRect
Control_GetBoundsRect(TControl AObj) {
    GET_FUNC_ADDR(Control_GetBoundsRect)
    TRect result;
    MySyscall(pControl_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Control_SetBoundsRect)
void
Control_SetBoundsRect(TControl AObj, TRect AValue) {
    GET_FUNC_ADDR(Control_SetBoundsRect)
    MySyscall(pControl_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetClientHeight)
int32_t
Control_GetClientHeight(TControl AObj) {
    GET_FUNC_ADDR(Control_GetClientHeight)
    return (int32_t)MySyscall(pControl_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetClientHeight)
void
Control_SetClientHeight(TControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(Control_SetClientHeight)
    MySyscall(pControl_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetClientOrigin)
TPoint
Control_GetClientOrigin(TControl AObj) {
    GET_FUNC_ADDR(Control_GetClientOrigin)
    TPoint result;
    MySyscall(pControl_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Control_GetClientRect)
TRect
Control_GetClientRect(TControl AObj) {
    GET_FUNC_ADDR(Control_GetClientRect)
    TRect result;
    MySyscall(pControl_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Control_GetClientWidth)
int32_t
Control_GetClientWidth(TControl AObj) {
    GET_FUNC_ADDR(Control_GetClientWidth)
    return (int32_t)MySyscall(pControl_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetClientWidth)
void
Control_SetClientWidth(TControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(Control_SetClientWidth)
    MySyscall(pControl_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetConstraints)
TSizeConstraints
Control_GetConstraints(TControl AObj) {
    GET_FUNC_ADDR(Control_GetConstraints)
    return (TSizeConstraints)MySyscall(pControl_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetConstraints)
void
Control_SetConstraints(TControl AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(Control_SetConstraints)
    MySyscall(pControl_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetControlState)
TControlState
Control_GetControlState(TControl AObj) {
    GET_FUNC_ADDR(Control_GetControlState)
    return (TControlState)MySyscall(pControl_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetControlState)
void
Control_SetControlState(TControl AObj, TControlState AValue) {
    GET_FUNC_ADDR(Control_SetControlState)
    MySyscall(pControl_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetControlStyle)
TControlStyle
Control_GetControlStyle(TControl AObj) {
    GET_FUNC_ADDR(Control_GetControlStyle)
    return (TControlStyle)MySyscall(pControl_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetControlStyle)
void
Control_SetControlStyle(TControl AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(Control_SetControlStyle)
    MySyscall(pControl_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetFloating)
BOOL
Control_GetFloating(TControl AObj) {
    GET_FUNC_ADDR(Control_GetFloating)
    return (BOOL)MySyscall(pControl_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetShowHint)
BOOL
Control_GetShowHint(TControl AObj) {
    GET_FUNC_ADDR(Control_GetShowHint)
    return (BOOL)MySyscall(pControl_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetShowHint)
void
Control_SetShowHint(TControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(Control_SetShowHint)
    MySyscall(pControl_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetVisible)
BOOL
Control_GetVisible(TControl AObj) {
    GET_FUNC_ADDR(Control_GetVisible)
    return (BOOL)MySyscall(pControl_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetVisible)
void
Control_SetVisible(TControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(Control_SetVisible)
    MySyscall(pControl_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetParent)
TWinControl
Control_GetParent(TControl AObj) {
    GET_FUNC_ADDR(Control_GetParent)
    return (TWinControl)MySyscall(pControl_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetParent)
void
Control_SetParent(TControl AObj, TWinControl AValue) {
    GET_FUNC_ADDR(Control_SetParent)
    MySyscall(pControl_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetLeft)
int32_t
Control_GetLeft(TControl AObj) {
    GET_FUNC_ADDR(Control_GetLeft)
    return (int32_t)MySyscall(pControl_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetLeft)
void
Control_SetLeft(TControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(Control_SetLeft)
    MySyscall(pControl_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetTop)
int32_t
Control_GetTop(TControl AObj) {
    GET_FUNC_ADDR(Control_GetTop)
    return (int32_t)MySyscall(pControl_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetTop)
void
Control_SetTop(TControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(Control_SetTop)
    MySyscall(pControl_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetWidth)
int32_t
Control_GetWidth(TControl AObj) {
    GET_FUNC_ADDR(Control_GetWidth)
    return (int32_t)MySyscall(pControl_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetWidth)
void
Control_SetWidth(TControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(Control_SetWidth)
    MySyscall(pControl_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetHeight)
int32_t
Control_GetHeight(TControl AObj) {
    GET_FUNC_ADDR(Control_GetHeight)
    return (int32_t)MySyscall(pControl_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetHeight)
void
Control_SetHeight(TControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(Control_SetHeight)
    MySyscall(pControl_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetCursor)
TCursor
Control_GetCursor(TControl AObj) {
    GET_FUNC_ADDR(Control_GetCursor)
    return (TCursor)MySyscall(pControl_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetCursor)
void
Control_SetCursor(TControl AObj, TCursor AValue) {
    GET_FUNC_ADDR(Control_SetCursor)
    MySyscall(pControl_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetHint)
char*
Control_GetHint(TControl AObj) {
    GET_FUNC_ADDR(Control_GetHint)
    return (char*)MySyscall(pControl_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetHint)
void
Control_SetHint(TControl AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Control_SetHint)
    MySyscall(pControl_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetComponentCount)
int32_t
Control_GetComponentCount(TControl AObj) {
    GET_FUNC_ADDR(Control_GetComponentCount)
    return (int32_t)MySyscall(pControl_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetComponentIndex)
int32_t
Control_GetComponentIndex(TControl AObj) {
    GET_FUNC_ADDR(Control_GetComponentIndex)
    return (int32_t)MySyscall(pControl_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetComponentIndex)
void
Control_SetComponentIndex(TControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(Control_SetComponentIndex)
    MySyscall(pControl_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetOwner)
TComponent
Control_GetOwner(TControl AObj) {
    GET_FUNC_ADDR(Control_GetOwner)
    return (TComponent)MySyscall(pControl_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetName)
char*
Control_GetName(TControl AObj) {
    GET_FUNC_ADDR(Control_GetName)
    return (char*)MySyscall(pControl_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetName)
void
Control_SetName(TControl AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Control_SetName)
    MySyscall(pControl_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetTag)
intptr_t
Control_GetTag(TControl AObj) {
    GET_FUNC_ADDR(Control_GetTag)
    return (intptr_t)MySyscall(pControl_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetTag)
void
Control_SetTag(TControl AObj, intptr_t AValue) {
    GET_FUNC_ADDR(Control_SetTag)
    MySyscall(pControl_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetAnchorSideLeft)
TAnchorSide
Control_GetAnchorSideLeft(TControl AObj) {
    GET_FUNC_ADDR(Control_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pControl_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetAnchorSideLeft)
void
Control_SetAnchorSideLeft(TControl AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Control_SetAnchorSideLeft)
    MySyscall(pControl_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetAnchorSideTop)
TAnchorSide
Control_GetAnchorSideTop(TControl AObj) {
    GET_FUNC_ADDR(Control_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pControl_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetAnchorSideTop)
void
Control_SetAnchorSideTop(TControl AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Control_SetAnchorSideTop)
    MySyscall(pControl_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetAnchorSideRight)
TAnchorSide
Control_GetAnchorSideRight(TControl AObj) {
    GET_FUNC_ADDR(Control_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pControl_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetAnchorSideRight)
void
Control_SetAnchorSideRight(TControl AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Control_SetAnchorSideRight)
    MySyscall(pControl_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetAnchorSideBottom)
TAnchorSide
Control_GetAnchorSideBottom(TControl AObj) {
    GET_FUNC_ADDR(Control_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pControl_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetAnchorSideBottom)
void
Control_SetAnchorSideBottom(TControl AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Control_SetAnchorSideBottom)
    MySyscall(pControl_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetBorderSpacing)
TControlBorderSpacing
Control_GetBorderSpacing(TControl AObj) {
    GET_FUNC_ADDR(Control_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pControl_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_SetBorderSpacing)
void
Control_SetBorderSpacing(TControl AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(Control_SetBorderSpacing)
    MySyscall(pControl_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetComponents)
TComponent
Control_GetComponents(TControl AObj, int32_t AIndex) {
    GET_FUNC_ADDR(Control_GetComponents)
    return (TComponent)MySyscall(pControl_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_GetAnchorSide)
TAnchorSide
Control_GetAnchorSide(TControl AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(Control_GetAnchorSide)
    return (TAnchorSide)MySyscall(pControl_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Control_StaticClassType)
TClass
Control_StaticClassType() {
    GET_FUNC_ADDR(Control_StaticClassType)
    return (TClass)MySyscall(pControl_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TWinControl-------------------

DEFINE_FUNC_PTR(WinControl_Create)
TWinControl
WinControl_Create(TComponent AOwner) {
    GET_FUNC_ADDR(WinControl_Create)
    return (TWinControl)MySyscall(pWinControl_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_Free)
void
WinControl_Free(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_Free)
    MySyscall(pWinControl_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_CanFocus)
BOOL
WinControl_CanFocus(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_CanFocus)
    return (BOOL)MySyscall(pWinControl_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_ContainsControl)
BOOL
WinControl_ContainsControl(TWinControl AObj, TControl Control) {
    GET_FUNC_ADDR(WinControl_ContainsControl)
    return (BOOL)MySyscall(pWinControl_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_ControlAtPos)
TControl
WinControl_ControlAtPos(TWinControl AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(WinControl_ControlAtPos)
    return (TControl)MySyscall(pWinControl_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_DisableAlign)
void
WinControl_DisableAlign(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_DisableAlign)
    MySyscall(pWinControl_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_EnableAlign)
void
WinControl_EnableAlign(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_EnableAlign)
    MySyscall(pWinControl_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_FindChildControl)
TControl
WinControl_FindChildControl(TWinControl AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(WinControl_FindChildControl)
    return (TControl)MySyscall(pWinControl_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_FlipChildren)
void
WinControl_FlipChildren(TWinControl AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(WinControl_FlipChildren)
    MySyscall(pWinControl_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_Focused)
BOOL
WinControl_Focused(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_Focused)
    return (BOOL)MySyscall(pWinControl_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_HandleAllocated)
BOOL
WinControl_HandleAllocated(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_HandleAllocated)
    return (BOOL)MySyscall(pWinControl_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_InsertControl)
void
WinControl_InsertControl(TWinControl AObj, TControl AControl) {
    GET_FUNC_ADDR(WinControl_InsertControl)
    MySyscall(pWinControl_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_Invalidate)
void
WinControl_Invalidate(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_Invalidate)
    MySyscall(pWinControl_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_PaintTo)
void
WinControl_PaintTo(TWinControl AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(WinControl_PaintTo)
    MySyscall(pWinControl_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_RemoveControl)
void
WinControl_RemoveControl(TWinControl AObj, TControl AControl) {
    GET_FUNC_ADDR(WinControl_RemoveControl)
    MySyscall(pWinControl_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_Realign)
void
WinControl_Realign(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_Realign)
    MySyscall(pWinControl_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_Repaint)
void
WinControl_Repaint(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_Repaint)
    MySyscall(pWinControl_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_ScaleBy)
void
WinControl_ScaleBy(TWinControl AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(WinControl_ScaleBy)
    MySyscall(pWinControl_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_ScrollBy)
void
WinControl_ScrollBy(TWinControl AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(WinControl_ScrollBy)
    MySyscall(pWinControl_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetBounds)
void
WinControl_SetBounds(TWinControl AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(WinControl_SetBounds)
    MySyscall(pWinControl_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetFocus)
void
WinControl_SetFocus(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_SetFocus)
    MySyscall(pWinControl_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_Update)
void
WinControl_Update(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_Update)
    MySyscall(pWinControl_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_BringToFront)
void
WinControl_BringToFront(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_BringToFront)
    MySyscall(pWinControl_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_ClientToScreen)
TPoint
WinControl_ClientToScreen(TWinControl AObj, TPoint Point) {
    GET_FUNC_ADDR(WinControl_ClientToScreen)
    TPoint result;
    MySyscall(pWinControl_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(WinControl_ClientToParent)
TPoint
WinControl_ClientToParent(TWinControl AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(WinControl_ClientToParent)
    TPoint result;
    MySyscall(pWinControl_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(WinControl_Dragging)
BOOL
WinControl_Dragging(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_Dragging)
    return (BOOL)MySyscall(pWinControl_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_HasParent)
BOOL
WinControl_HasParent(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_HasParent)
    return (BOOL)MySyscall(pWinControl_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_Hide)
void
WinControl_Hide(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_Hide)
    MySyscall(pWinControl_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_Perform)
intptr_t
WinControl_Perform(TWinControl AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(WinControl_Perform)
    return (intptr_t)MySyscall(pWinControl_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_Refresh)
void
WinControl_Refresh(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_Refresh)
    MySyscall(pWinControl_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_ScreenToClient)
TPoint
WinControl_ScreenToClient(TWinControl AObj, TPoint Point) {
    GET_FUNC_ADDR(WinControl_ScreenToClient)
    TPoint result;
    MySyscall(pWinControl_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(WinControl_ParentToClient)
TPoint
WinControl_ParentToClient(TWinControl AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(WinControl_ParentToClient)
    TPoint result;
    MySyscall(pWinControl_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(WinControl_SendToBack)
void
WinControl_SendToBack(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_SendToBack)
    MySyscall(pWinControl_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_Show)
void
WinControl_Show(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_Show)
    MySyscall(pWinControl_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetTextBuf)
int32_t
WinControl_GetTextBuf(TWinControl AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(WinControl_GetTextBuf)
    return (int32_t)MySyscall(pWinControl_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetTextLen)
int32_t
WinControl_GetTextLen(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetTextLen)
    return (int32_t)MySyscall(pWinControl_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetTextBuf)
void
WinControl_SetTextBuf(TWinControl AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(WinControl_SetTextBuf)
    MySyscall(pWinControl_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_FindComponent)
TComponent
WinControl_FindComponent(TWinControl AObj, CChar char* AName) {
    GET_FUNC_ADDR(WinControl_FindComponent)
    return (TComponent)MySyscall(pWinControl_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetNamePath)
char*
WinControl_GetNamePath(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetNamePath)
    return (char*)MySyscall(pWinControl_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_Assign)
void
WinControl_Assign(TWinControl AObj, TObject Source) {
    GET_FUNC_ADDR(WinControl_Assign)
    MySyscall(pWinControl_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_ClassType)
TClass
WinControl_ClassType(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_ClassType)
    return (TClass)MySyscall(pWinControl_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_ClassName)
char*
WinControl_ClassName(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_ClassName)
    return (char*)MySyscall(pWinControl_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_InstanceSize)
int32_t
WinControl_InstanceSize(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_InstanceSize)
    return (int32_t)MySyscall(pWinControl_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_InheritsFrom)
BOOL
WinControl_InheritsFrom(TWinControl AObj, TClass AClass) {
    GET_FUNC_ADDR(WinControl_InheritsFrom)
    return (BOOL)MySyscall(pWinControl_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_Equals)
BOOL
WinControl_Equals(TWinControl AObj, TObject Obj) {
    GET_FUNC_ADDR(WinControl_Equals)
    return (BOOL)MySyscall(pWinControl_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetHashCode)
int32_t
WinControl_GetHashCode(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetHashCode)
    return (int32_t)MySyscall(pWinControl_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_ToString)
char*
WinControl_ToString(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_ToString)
    return (char*)MySyscall(pWinControl_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_AnchorToNeighbour)
void
WinControl_AnchorToNeighbour(TWinControl AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(WinControl_AnchorToNeighbour)
    MySyscall(pWinControl_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_AnchorParallel)
void
WinControl_AnchorParallel(TWinControl AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(WinControl_AnchorParallel)
    MySyscall(pWinControl_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_AnchorHorizontalCenterTo)
void
WinControl_AnchorHorizontalCenterTo(TWinControl AObj, TControl ASibling) {
    GET_FUNC_ADDR(WinControl_AnchorHorizontalCenterTo)
    MySyscall(pWinControl_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_AnchorVerticalCenterTo)
void
WinControl_AnchorVerticalCenterTo(TWinControl AObj, TControl ASibling) {
    GET_FUNC_ADDR(WinControl_AnchorVerticalCenterTo)
    MySyscall(pWinControl_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_AnchorSame)
void
WinControl_AnchorSame(TWinControl AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(WinControl_AnchorSame)
    MySyscall(pWinControl_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_AnchorAsAlign)
void
WinControl_AnchorAsAlign(TWinControl AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(WinControl_AnchorAsAlign)
    MySyscall(pWinControl_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_AnchorClient)
void
WinControl_AnchorClient(TWinControl AObj, int32_t ASpace) {
    GET_FUNC_ADDR(WinControl_AnchorClient)
    MySyscall(pWinControl_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_ScaleDesignToForm)
int32_t
WinControl_ScaleDesignToForm(TWinControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(WinControl_ScaleDesignToForm)
    return (int32_t)MySyscall(pWinControl_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_ScaleFormToDesign)
int32_t
WinControl_ScaleFormToDesign(TWinControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(WinControl_ScaleFormToDesign)
    return (int32_t)MySyscall(pWinControl_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_Scale96ToForm)
int32_t
WinControl_Scale96ToForm(TWinControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(WinControl_Scale96ToForm)
    return (int32_t)MySyscall(pWinControl_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_ScaleFormTo96)
int32_t
WinControl_ScaleFormTo96(TWinControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(WinControl_ScaleFormTo96)
    return (int32_t)MySyscall(pWinControl_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_Scale96ToFont)
int32_t
WinControl_Scale96ToFont(TWinControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(WinControl_Scale96ToFont)
    return (int32_t)MySyscall(pWinControl_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_ScaleFontTo96)
int32_t
WinControl_ScaleFontTo96(TWinControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(WinControl_ScaleFontTo96)
    return (int32_t)MySyscall(pWinControl_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_ScaleScreenToFont)
int32_t
WinControl_ScaleScreenToFont(TWinControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(WinControl_ScaleScreenToFont)
    return (int32_t)MySyscall(pWinControl_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_ScaleFontToScreen)
int32_t
WinControl_ScaleFontToScreen(TWinControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(WinControl_ScaleFontToScreen)
    return (int32_t)MySyscall(pWinControl_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_Scale96ToScreen)
int32_t
WinControl_Scale96ToScreen(TWinControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(WinControl_Scale96ToScreen)
    return (int32_t)MySyscall(pWinControl_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_ScaleScreenTo96)
int32_t
WinControl_ScaleScreenTo96(TWinControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(WinControl_ScaleScreenTo96)
    return (int32_t)MySyscall(pWinControl_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_AutoAdjustLayout)
void
WinControl_AutoAdjustLayout(TWinControl AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(WinControl_AutoAdjustLayout)
    MySyscall(pWinControl_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_FixDesignFontsPPI)
void
WinControl_FixDesignFontsPPI(TWinControl AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(WinControl_FixDesignFontsPPI)
    MySyscall(pWinControl_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_ScaleFontsPPI)
void
WinControl_ScaleFontsPPI(TWinControl AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(WinControl_ScaleFontsPPI)
    MySyscall(pWinControl_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetDockClientCount)
int32_t
WinControl_GetDockClientCount(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetDockClientCount)
    return (int32_t)MySyscall(pWinControl_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetDockSite)
BOOL
WinControl_GetDockSite(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetDockSite)
    return (BOOL)MySyscall(pWinControl_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetDockSite)
void
WinControl_SetDockSite(TWinControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(WinControl_SetDockSite)
    MySyscall(pWinControl_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetDoubleBuffered)
BOOL
WinControl_GetDoubleBuffered(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetDoubleBuffered)
    return (BOOL)MySyscall(pWinControl_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetDoubleBuffered)
void
WinControl_SetDoubleBuffered(TWinControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(WinControl_SetDoubleBuffered)
    MySyscall(pWinControl_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetMouseInClient)
BOOL
WinControl_GetMouseInClient(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetMouseInClient)
    return (BOOL)MySyscall(pWinControl_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetVisibleDockClientCount)
int32_t
WinControl_GetVisibleDockClientCount(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pWinControl_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetBrush)
TBrush
WinControl_GetBrush(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetBrush)
    return (TBrush)MySyscall(pWinControl_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetControlCount)
int32_t
WinControl_GetControlCount(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetControlCount)
    return (int32_t)MySyscall(pWinControl_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetHandle)
HWND
WinControl_GetHandle(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetHandle)
    return (HWND)MySyscall(pWinControl_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetParentDoubleBuffered)
BOOL
WinControl_GetParentDoubleBuffered(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pWinControl_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetParentDoubleBuffered)
void
WinControl_SetParentDoubleBuffered(TWinControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(WinControl_SetParentDoubleBuffered)
    MySyscall(pWinControl_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetParentWindow)
HWND
WinControl_GetParentWindow(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetParentWindow)
    return (HWND)MySyscall(pWinControl_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetParentWindow)
void
WinControl_SetParentWindow(TWinControl AObj, HWND AValue) {
    GET_FUNC_ADDR(WinControl_SetParentWindow)
    MySyscall(pWinControl_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetShowing)
BOOL
WinControl_GetShowing(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetShowing)
    return (BOOL)MySyscall(pWinControl_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetTabOrder)
TTabOrder
WinControl_GetTabOrder(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetTabOrder)
    return (TTabOrder)MySyscall(pWinControl_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetTabOrder)
void
WinControl_SetTabOrder(TWinControl AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(WinControl_SetTabOrder)
    MySyscall(pWinControl_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetTabStop)
BOOL
WinControl_GetTabStop(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetTabStop)
    return (BOOL)MySyscall(pWinControl_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetTabStop)
void
WinControl_SetTabStop(TWinControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(WinControl_SetTabStop)
    MySyscall(pWinControl_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetUseDockManager)
BOOL
WinControl_GetUseDockManager(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetUseDockManager)
    return (BOOL)MySyscall(pWinControl_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetUseDockManager)
void
WinControl_SetUseDockManager(TWinControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(WinControl_SetUseDockManager)
    MySyscall(pWinControl_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetEnabled)
BOOL
WinControl_GetEnabled(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetEnabled)
    return (BOOL)MySyscall(pWinControl_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetEnabled)
void
WinControl_SetEnabled(TWinControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(WinControl_SetEnabled)
    MySyscall(pWinControl_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetAction)
TAction
WinControl_GetAction(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetAction)
    return (TAction)MySyscall(pWinControl_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetAction)
void
WinControl_SetAction(TWinControl AObj, TAction AValue) {
    GET_FUNC_ADDR(WinControl_SetAction)
    MySyscall(pWinControl_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetAlign)
TAlign
WinControl_GetAlign(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetAlign)
    return (TAlign)MySyscall(pWinControl_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetAlign)
void
WinControl_SetAlign(TWinControl AObj, TAlign AValue) {
    GET_FUNC_ADDR(WinControl_SetAlign)
    MySyscall(pWinControl_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetAnchors)
TAnchors
WinControl_GetAnchors(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetAnchors)
    return (TAnchors)MySyscall(pWinControl_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetAnchors)
void
WinControl_SetAnchors(TWinControl AObj, TAnchors AValue) {
    GET_FUNC_ADDR(WinControl_SetAnchors)
    MySyscall(pWinControl_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetBiDiMode)
TBiDiMode
WinControl_GetBiDiMode(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetBiDiMode)
    return (TBiDiMode)MySyscall(pWinControl_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetBiDiMode)
void
WinControl_SetBiDiMode(TWinControl AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(WinControl_SetBiDiMode)
    MySyscall(pWinControl_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetBoundsRect)
TRect
WinControl_GetBoundsRect(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetBoundsRect)
    TRect result;
    MySyscall(pWinControl_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(WinControl_SetBoundsRect)
void
WinControl_SetBoundsRect(TWinControl AObj, TRect AValue) {
    GET_FUNC_ADDR(WinControl_SetBoundsRect)
    MySyscall(pWinControl_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetClientHeight)
int32_t
WinControl_GetClientHeight(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetClientHeight)
    return (int32_t)MySyscall(pWinControl_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetClientHeight)
void
WinControl_SetClientHeight(TWinControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(WinControl_SetClientHeight)
    MySyscall(pWinControl_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetClientOrigin)
TPoint
WinControl_GetClientOrigin(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetClientOrigin)
    TPoint result;
    MySyscall(pWinControl_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(WinControl_GetClientRect)
TRect
WinControl_GetClientRect(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetClientRect)
    TRect result;
    MySyscall(pWinControl_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(WinControl_GetClientWidth)
int32_t
WinControl_GetClientWidth(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetClientWidth)
    return (int32_t)MySyscall(pWinControl_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetClientWidth)
void
WinControl_SetClientWidth(TWinControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(WinControl_SetClientWidth)
    MySyscall(pWinControl_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetConstraints)
TSizeConstraints
WinControl_GetConstraints(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetConstraints)
    return (TSizeConstraints)MySyscall(pWinControl_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetConstraints)
void
WinControl_SetConstraints(TWinControl AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(WinControl_SetConstraints)
    MySyscall(pWinControl_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetControlState)
TControlState
WinControl_GetControlState(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetControlState)
    return (TControlState)MySyscall(pWinControl_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetControlState)
void
WinControl_SetControlState(TWinControl AObj, TControlState AValue) {
    GET_FUNC_ADDR(WinControl_SetControlState)
    MySyscall(pWinControl_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetControlStyle)
TControlStyle
WinControl_GetControlStyle(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetControlStyle)
    return (TControlStyle)MySyscall(pWinControl_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetControlStyle)
void
WinControl_SetControlStyle(TWinControl AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(WinControl_SetControlStyle)
    MySyscall(pWinControl_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetFloating)
BOOL
WinControl_GetFloating(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetFloating)
    return (BOOL)MySyscall(pWinControl_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetShowHint)
BOOL
WinControl_GetShowHint(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetShowHint)
    return (BOOL)MySyscall(pWinControl_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetShowHint)
void
WinControl_SetShowHint(TWinControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(WinControl_SetShowHint)
    MySyscall(pWinControl_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetVisible)
BOOL
WinControl_GetVisible(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetVisible)
    return (BOOL)MySyscall(pWinControl_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetVisible)
void
WinControl_SetVisible(TWinControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(WinControl_SetVisible)
    MySyscall(pWinControl_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetParent)
TWinControl
WinControl_GetParent(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetParent)
    return (TWinControl)MySyscall(pWinControl_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetParent)
void
WinControl_SetParent(TWinControl AObj, TWinControl AValue) {
    GET_FUNC_ADDR(WinControl_SetParent)
    MySyscall(pWinControl_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetLeft)
int32_t
WinControl_GetLeft(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetLeft)
    return (int32_t)MySyscall(pWinControl_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetLeft)
void
WinControl_SetLeft(TWinControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(WinControl_SetLeft)
    MySyscall(pWinControl_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetTop)
int32_t
WinControl_GetTop(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetTop)
    return (int32_t)MySyscall(pWinControl_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetTop)
void
WinControl_SetTop(TWinControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(WinControl_SetTop)
    MySyscall(pWinControl_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetWidth)
int32_t
WinControl_GetWidth(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetWidth)
    return (int32_t)MySyscall(pWinControl_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetWidth)
void
WinControl_SetWidth(TWinControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(WinControl_SetWidth)
    MySyscall(pWinControl_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetHeight)
int32_t
WinControl_GetHeight(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetHeight)
    return (int32_t)MySyscall(pWinControl_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetHeight)
void
WinControl_SetHeight(TWinControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(WinControl_SetHeight)
    MySyscall(pWinControl_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetCursor)
TCursor
WinControl_GetCursor(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetCursor)
    return (TCursor)MySyscall(pWinControl_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetCursor)
void
WinControl_SetCursor(TWinControl AObj, TCursor AValue) {
    GET_FUNC_ADDR(WinControl_SetCursor)
    MySyscall(pWinControl_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetHint)
char*
WinControl_GetHint(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetHint)
    return (char*)MySyscall(pWinControl_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetHint)
void
WinControl_SetHint(TWinControl AObj, CChar char* AValue) {
    GET_FUNC_ADDR(WinControl_SetHint)
    MySyscall(pWinControl_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetComponentCount)
int32_t
WinControl_GetComponentCount(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetComponentCount)
    return (int32_t)MySyscall(pWinControl_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetComponentIndex)
int32_t
WinControl_GetComponentIndex(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetComponentIndex)
    return (int32_t)MySyscall(pWinControl_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetComponentIndex)
void
WinControl_SetComponentIndex(TWinControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(WinControl_SetComponentIndex)
    MySyscall(pWinControl_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetOwner)
TComponent
WinControl_GetOwner(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetOwner)
    return (TComponent)MySyscall(pWinControl_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetName)
char*
WinControl_GetName(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetName)
    return (char*)MySyscall(pWinControl_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetName)
void
WinControl_SetName(TWinControl AObj, CChar char* AValue) {
    GET_FUNC_ADDR(WinControl_SetName)
    MySyscall(pWinControl_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetTag)
intptr_t
WinControl_GetTag(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetTag)
    return (intptr_t)MySyscall(pWinControl_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetTag)
void
WinControl_SetTag(TWinControl AObj, intptr_t AValue) {
    GET_FUNC_ADDR(WinControl_SetTag)
    MySyscall(pWinControl_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetAnchorSideLeft)
TAnchorSide
WinControl_GetAnchorSideLeft(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pWinControl_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetAnchorSideLeft)
void
WinControl_SetAnchorSideLeft(TWinControl AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(WinControl_SetAnchorSideLeft)
    MySyscall(pWinControl_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetAnchorSideTop)
TAnchorSide
WinControl_GetAnchorSideTop(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pWinControl_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetAnchorSideTop)
void
WinControl_SetAnchorSideTop(TWinControl AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(WinControl_SetAnchorSideTop)
    MySyscall(pWinControl_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetAnchorSideRight)
TAnchorSide
WinControl_GetAnchorSideRight(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pWinControl_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetAnchorSideRight)
void
WinControl_SetAnchorSideRight(TWinControl AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(WinControl_SetAnchorSideRight)
    MySyscall(pWinControl_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetAnchorSideBottom)
TAnchorSide
WinControl_GetAnchorSideBottom(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pWinControl_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetAnchorSideBottom)
void
WinControl_SetAnchorSideBottom(TWinControl AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(WinControl_SetAnchorSideBottom)
    MySyscall(pWinControl_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetChildSizing)
TControlChildSizing
WinControl_GetChildSizing(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetChildSizing)
    return (TControlChildSizing)MySyscall(pWinControl_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetChildSizing)
void
WinControl_SetChildSizing(TWinControl AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(WinControl_SetChildSizing)
    MySyscall(pWinControl_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetBorderSpacing)
TControlBorderSpacing
WinControl_GetBorderSpacing(TWinControl AObj) {
    GET_FUNC_ADDR(WinControl_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pWinControl_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_SetBorderSpacing)
void
WinControl_SetBorderSpacing(TWinControl AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(WinControl_SetBorderSpacing)
    MySyscall(pWinControl_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetDockClients)
TControl
WinControl_GetDockClients(TWinControl AObj, int32_t Index) {
    GET_FUNC_ADDR(WinControl_GetDockClients)
    return (TControl)MySyscall(pWinControl_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetControls)
TControl
WinControl_GetControls(TWinControl AObj, int32_t Index) {
    GET_FUNC_ADDR(WinControl_GetControls)
    return (TControl)MySyscall(pWinControl_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetComponents)
TComponent
WinControl_GetComponents(TWinControl AObj, int32_t AIndex) {
    GET_FUNC_ADDR(WinControl_GetComponents)
    return (TComponent)MySyscall(pWinControl_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_GetAnchorSide)
TAnchorSide
WinControl_GetAnchorSide(TWinControl AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(WinControl_GetAnchorSide)
    return (TAnchorSide)MySyscall(pWinControl_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(WinControl_StaticClassType)
TClass
WinControl_StaticClassType() {
    GET_FUNC_ADDR(WinControl_StaticClassType)
    return (TClass)MySyscall(pWinControl_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TGraphic-------------------

DEFINE_FUNC_PTR(Graphic_Create)
TGraphic
Graphic_Create() {
    GET_FUNC_ADDR(Graphic_Create)
    return (TGraphic)MySyscall(pGraphic_Create, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_Free)
void
Graphic_Free(TGraphic AObj) {
    GET_FUNC_ADDR(Graphic_Free)
    MySyscall(pGraphic_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_Equals)
BOOL
Graphic_Equals(TGraphic AObj, TObject Obj) {
    GET_FUNC_ADDR(Graphic_Equals)
    return (BOOL)MySyscall(pGraphic_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_LoadFromFile)
void
Graphic_LoadFromFile(TGraphic AObj, CChar char* Filename) {
    GET_FUNC_ADDR(Graphic_LoadFromFile)
    MySyscall(pGraphic_LoadFromFile, 2, AObj, Filename ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_SaveToFile)
void
Graphic_SaveToFile(TGraphic AObj, CChar char* Filename) {
    GET_FUNC_ADDR(Graphic_SaveToFile)
    MySyscall(pGraphic_SaveToFile, 2, AObj, Filename ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_LoadFromStream)
void
Graphic_LoadFromStream(TGraphic AObj, TStream Stream) {
    GET_FUNC_ADDR(Graphic_LoadFromStream)
    MySyscall(pGraphic_LoadFromStream, 2, AObj, Stream ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_SaveToStream)
void
Graphic_SaveToStream(TGraphic AObj, TStream Stream) {
    GET_FUNC_ADDR(Graphic_SaveToStream)
    MySyscall(pGraphic_SaveToStream, 2, AObj, Stream ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_Assign)
void
Graphic_Assign(TGraphic AObj, TObject Source) {
    GET_FUNC_ADDR(Graphic_Assign)
    MySyscall(pGraphic_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_GetNamePath)
char*
Graphic_GetNamePath(TGraphic AObj) {
    GET_FUNC_ADDR(Graphic_GetNamePath)
    return (char*)MySyscall(pGraphic_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_ClassType)
TClass
Graphic_ClassType(TGraphic AObj) {
    GET_FUNC_ADDR(Graphic_ClassType)
    return (TClass)MySyscall(pGraphic_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_ClassName)
char*
Graphic_ClassName(TGraphic AObj) {
    GET_FUNC_ADDR(Graphic_ClassName)
    return (char*)MySyscall(pGraphic_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_InstanceSize)
int32_t
Graphic_InstanceSize(TGraphic AObj) {
    GET_FUNC_ADDR(Graphic_InstanceSize)
    return (int32_t)MySyscall(pGraphic_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_InheritsFrom)
BOOL
Graphic_InheritsFrom(TGraphic AObj, TClass AClass) {
    GET_FUNC_ADDR(Graphic_InheritsFrom)
    return (BOOL)MySyscall(pGraphic_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_GetHashCode)
int32_t
Graphic_GetHashCode(TGraphic AObj) {
    GET_FUNC_ADDR(Graphic_GetHashCode)
    return (int32_t)MySyscall(pGraphic_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_ToString)
char*
Graphic_ToString(TGraphic AObj) {
    GET_FUNC_ADDR(Graphic_ToString)
    return (char*)MySyscall(pGraphic_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_GetEmpty)
BOOL
Graphic_GetEmpty(TGraphic AObj) {
    GET_FUNC_ADDR(Graphic_GetEmpty)
    return (BOOL)MySyscall(pGraphic_GetEmpty, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_GetHeight)
int32_t
Graphic_GetHeight(TGraphic AObj) {
    GET_FUNC_ADDR(Graphic_GetHeight)
    return (int32_t)MySyscall(pGraphic_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_SetHeight)
void
Graphic_SetHeight(TGraphic AObj, int32_t AValue) {
    GET_FUNC_ADDR(Graphic_SetHeight)
    MySyscall(pGraphic_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_GetModified)
BOOL
Graphic_GetModified(TGraphic AObj) {
    GET_FUNC_ADDR(Graphic_GetModified)
    return (BOOL)MySyscall(pGraphic_GetModified, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_SetModified)
void
Graphic_SetModified(TGraphic AObj, BOOL AValue) {
    GET_FUNC_ADDR(Graphic_SetModified)
    MySyscall(pGraphic_SetModified, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_GetPalette)
HPALETTE
Graphic_GetPalette(TGraphic AObj) {
    GET_FUNC_ADDR(Graphic_GetPalette)
    return (HPALETTE)MySyscall(pGraphic_GetPalette, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_SetPalette)
void
Graphic_SetPalette(TGraphic AObj, HPALETTE AValue) {
    GET_FUNC_ADDR(Graphic_SetPalette)
    MySyscall(pGraphic_SetPalette, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_GetPaletteModified)
BOOL
Graphic_GetPaletteModified(TGraphic AObj) {
    GET_FUNC_ADDR(Graphic_GetPaletteModified)
    return (BOOL)MySyscall(pGraphic_GetPaletteModified, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_SetPaletteModified)
void
Graphic_SetPaletteModified(TGraphic AObj, BOOL AValue) {
    GET_FUNC_ADDR(Graphic_SetPaletteModified)
    MySyscall(pGraphic_SetPaletteModified, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_GetTransparent)
BOOL
Graphic_GetTransparent(TGraphic AObj) {
    GET_FUNC_ADDR(Graphic_GetTransparent)
    return (BOOL)MySyscall(pGraphic_GetTransparent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_SetTransparent)
void
Graphic_SetTransparent(TGraphic AObj, BOOL AValue) {
    GET_FUNC_ADDR(Graphic_SetTransparent)
    MySyscall(pGraphic_SetTransparent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_GetWidth)
int32_t
Graphic_GetWidth(TGraphic AObj) {
    GET_FUNC_ADDR(Graphic_GetWidth)
    return (int32_t)MySyscall(pGraphic_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_SetWidth)
void
Graphic_SetWidth(TGraphic AObj, int32_t AValue) {
    GET_FUNC_ADDR(Graphic_SetWidth)
    MySyscall(pGraphic_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_SetOnChange)
void
Graphic_SetOnChange(TGraphic AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Graphic_SetOnChange)
    MySyscall(pGraphic_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Graphic_StaticClassType)
TClass
Graphic_StaticClassType() {
    GET_FUNC_ADDR(Graphic_StaticClassType)
    return (TClass)MySyscall(pGraphic_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TStrings-------------------

DEFINE_FUNC_PTR(Strings_Create)
TStrings
Strings_Create() {
    GET_FUNC_ADDR(Strings_Create)
    return (TStrings)MySyscall(pStrings_Create, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_Free)
void
Strings_Free(TStrings AObj) {
    GET_FUNC_ADDR(Strings_Free)
    MySyscall(pStrings_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_Add)
int32_t
Strings_Add(TStrings AObj, CChar char* S) {
    GET_FUNC_ADDR(Strings_Add)
    return (int32_t)MySyscall(pStrings_Add, 2, AObj, S ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_AddObject)
int32_t
Strings_AddObject(TStrings AObj, CChar char* S, TObject AObject) {
    GET_FUNC_ADDR(Strings_AddObject)
    return (int32_t)MySyscall(pStrings_AddObject, 3, AObj, S, AObject ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_Append)
void
Strings_Append(TStrings AObj, CChar char* S) {
    GET_FUNC_ADDR(Strings_Append)
    MySyscall(pStrings_Append, 2, AObj, S ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_Assign)
void
Strings_Assign(TStrings AObj, TObject Source) {
    GET_FUNC_ADDR(Strings_Assign)
    MySyscall(pStrings_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_BeginUpdate)
void
Strings_BeginUpdate(TStrings AObj) {
    GET_FUNC_ADDR(Strings_BeginUpdate)
    MySyscall(pStrings_BeginUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_Clear)
void
Strings_Clear(TStrings AObj) {
    GET_FUNC_ADDR(Strings_Clear)
    MySyscall(pStrings_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_Delete)
void
Strings_Delete(TStrings AObj, int32_t Index) {
    GET_FUNC_ADDR(Strings_Delete)
    MySyscall(pStrings_Delete, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_EndUpdate)
void
Strings_EndUpdate(TStrings AObj) {
    GET_FUNC_ADDR(Strings_EndUpdate)
    MySyscall(pStrings_EndUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_Equals)
BOOL
Strings_Equals(TStrings AObj, TStrings Strings) {
    GET_FUNC_ADDR(Strings_Equals)
    return (BOOL)MySyscall(pStrings_Equals, 2, AObj, Strings ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_Exchange)
void
Strings_Exchange(TStrings AObj, int32_t Index1, int32_t Index2) {
    GET_FUNC_ADDR(Strings_Exchange)
    MySyscall(pStrings_Exchange, 3, AObj, Index1, Index2 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_IndexOf)
int32_t
Strings_IndexOf(TStrings AObj, CChar char* S) {
    GET_FUNC_ADDR(Strings_IndexOf)
    return (int32_t)MySyscall(pStrings_IndexOf, 2, AObj, S ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_IndexOfName)
int32_t
Strings_IndexOfName(TStrings AObj, CChar char* Name) {
    GET_FUNC_ADDR(Strings_IndexOfName)
    return (int32_t)MySyscall(pStrings_IndexOfName, 2, AObj, Name ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_IndexOfObject)
int32_t
Strings_IndexOfObject(TStrings AObj, TObject AObject) {
    GET_FUNC_ADDR(Strings_IndexOfObject)
    return (int32_t)MySyscall(pStrings_IndexOfObject, 2, AObj, AObject ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_Insert)
void
Strings_Insert(TStrings AObj, int32_t Index, CChar char* S) {
    GET_FUNC_ADDR(Strings_Insert)
    MySyscall(pStrings_Insert, 3, AObj, Index, S ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_InsertObject)
void
Strings_InsertObject(TStrings AObj, int32_t Index, CChar char* S, TObject AObject) {
    GET_FUNC_ADDR(Strings_InsertObject)
    MySyscall(pStrings_InsertObject, 4, AObj, Index, S, AObject ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_LoadFromFile)
void
Strings_LoadFromFile(TStrings AObj, CChar char* FileName) {
    GET_FUNC_ADDR(Strings_LoadFromFile)
    MySyscall(pStrings_LoadFromFile, 2, AObj, FileName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_LoadFromStream)
void
Strings_LoadFromStream(TStrings AObj, TStream Stream) {
    GET_FUNC_ADDR(Strings_LoadFromStream)
    MySyscall(pStrings_LoadFromStream, 2, AObj, Stream ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_Move)
void
Strings_Move(TStrings AObj, int32_t CurIndex, int32_t NewIndex) {
    GET_FUNC_ADDR(Strings_Move)
    MySyscall(pStrings_Move, 3, AObj, CurIndex, NewIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_SaveToFile)
void
Strings_SaveToFile(TStrings AObj, CChar char* FileName) {
    GET_FUNC_ADDR(Strings_SaveToFile)
    MySyscall(pStrings_SaveToFile, 2, AObj, FileName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_SaveToStream)
void
Strings_SaveToStream(TStrings AObj, TStream Stream) {
    GET_FUNC_ADDR(Strings_SaveToStream)
    MySyscall(pStrings_SaveToStream, 2, AObj, Stream ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_GetNamePath)
char*
Strings_GetNamePath(TStrings AObj) {
    GET_FUNC_ADDR(Strings_GetNamePath)
    return (char*)MySyscall(pStrings_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_ClassType)
TClass
Strings_ClassType(TStrings AObj) {
    GET_FUNC_ADDR(Strings_ClassType)
    return (TClass)MySyscall(pStrings_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_ClassName)
char*
Strings_ClassName(TStrings AObj) {
    GET_FUNC_ADDR(Strings_ClassName)
    return (char*)MySyscall(pStrings_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_InstanceSize)
int32_t
Strings_InstanceSize(TStrings AObj) {
    GET_FUNC_ADDR(Strings_InstanceSize)
    return (int32_t)MySyscall(pStrings_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_InheritsFrom)
BOOL
Strings_InheritsFrom(TStrings AObj, TClass AClass) {
    GET_FUNC_ADDR(Strings_InheritsFrom)
    return (BOOL)MySyscall(pStrings_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_GetHashCode)
int32_t
Strings_GetHashCode(TStrings AObj) {
    GET_FUNC_ADDR(Strings_GetHashCode)
    return (int32_t)MySyscall(pStrings_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_ToString)
char*
Strings_ToString(TStrings AObj) {
    GET_FUNC_ADDR(Strings_ToString)
    return (char*)MySyscall(pStrings_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_GetCapacity)
int32_t
Strings_GetCapacity(TStrings AObj) {
    GET_FUNC_ADDR(Strings_GetCapacity)
    return (int32_t)MySyscall(pStrings_GetCapacity, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_SetCapacity)
void
Strings_SetCapacity(TStrings AObj, int32_t AValue) {
    GET_FUNC_ADDR(Strings_SetCapacity)
    MySyscall(pStrings_SetCapacity, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_GetCommaText)
char*
Strings_GetCommaText(TStrings AObj) {
    GET_FUNC_ADDR(Strings_GetCommaText)
    return (char*)MySyscall(pStrings_GetCommaText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_SetCommaText)
void
Strings_SetCommaText(TStrings AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Strings_SetCommaText)
    MySyscall(pStrings_SetCommaText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_GetCount)
int32_t
Strings_GetCount(TStrings AObj) {
    GET_FUNC_ADDR(Strings_GetCount)
    return (int32_t)MySyscall(pStrings_GetCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_GetDelimiter)
Char
Strings_GetDelimiter(TStrings AObj) {
    GET_FUNC_ADDR(Strings_GetDelimiter)
    return (Char)MySyscall(pStrings_GetDelimiter, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_SetDelimiter)
void
Strings_SetDelimiter(TStrings AObj, Char AValue) {
    GET_FUNC_ADDR(Strings_SetDelimiter)
    MySyscall(pStrings_SetDelimiter, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_GetNameValueSeparator)
Char
Strings_GetNameValueSeparator(TStrings AObj) {
    GET_FUNC_ADDR(Strings_GetNameValueSeparator)
    return (Char)MySyscall(pStrings_GetNameValueSeparator, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_SetNameValueSeparator)
void
Strings_SetNameValueSeparator(TStrings AObj, Char AValue) {
    GET_FUNC_ADDR(Strings_SetNameValueSeparator)
    MySyscall(pStrings_SetNameValueSeparator, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_GetText)
char*
Strings_GetText(TStrings AObj) {
    GET_FUNC_ADDR(Strings_GetText)
    return (char*)MySyscall(pStrings_GetText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_SetText)
void
Strings_SetText(TStrings AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Strings_SetText)
    MySyscall(pStrings_SetText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_GetObjects)
TObject
Strings_GetObjects(TStrings AObj, int32_t Index) {
    GET_FUNC_ADDR(Strings_GetObjects)
    return (TObject)MySyscall(pStrings_GetObjects, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_SetObjects)
void
Strings_SetObjects(TStrings AObj, int32_t Index, TObject AValue) {
    GET_FUNC_ADDR(Strings_SetObjects)
    MySyscall(pStrings_SetObjects, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_GetValues)
char*
Strings_GetValues(TStrings AObj, CChar char* Name) {
    GET_FUNC_ADDR(Strings_GetValues)
    return (char*)MySyscall(pStrings_GetValues, 2, AObj, Name ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_SetValues)
void
Strings_SetValues(TStrings AObj, CChar char* Name, CChar char* AValue) {
    GET_FUNC_ADDR(Strings_SetValues)
    MySyscall(pStrings_SetValues, 3, AObj, Name, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_GetValueFromIndex)
char*
Strings_GetValueFromIndex(TStrings AObj, int32_t Index) {
    GET_FUNC_ADDR(Strings_GetValueFromIndex)
    return (char*)MySyscall(pStrings_GetValueFromIndex, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_SetValueFromIndex)
void
Strings_SetValueFromIndex(TStrings AObj, int32_t Index, CChar char* AValue) {
    GET_FUNC_ADDR(Strings_SetValueFromIndex)
    MySyscall(pStrings_SetValueFromIndex, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_GetStrings)
char*
Strings_GetStrings(TStrings AObj, int32_t Index) {
    GET_FUNC_ADDR(Strings_GetStrings)
    return (char*)MySyscall(pStrings_GetStrings, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_SetStrings)
void
Strings_SetStrings(TStrings AObj, int32_t Index, CChar char* AValue) {
    GET_FUNC_ADDR(Strings_SetStrings)
    MySyscall(pStrings_SetStrings, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Strings_StaticClassType)
TClass
Strings_StaticClassType() {
    GET_FUNC_ADDR(Strings_StaticClassType)
    return (TClass)MySyscall(pStrings_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TStream-------------------

// -------------------TCheckBox-------------------

DEFINE_FUNC_PTR(CheckBox_Create)
TCheckBox
CheckBox_Create(TComponent AOwner) {
    GET_FUNC_ADDR(CheckBox_Create)
    return (TCheckBox)MySyscall(pCheckBox_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_Free)
void
CheckBox_Free(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_Free)
    MySyscall(pCheckBox_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_CanFocus)
BOOL
CheckBox_CanFocus(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_CanFocus)
    return (BOOL)MySyscall(pCheckBox_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_ContainsControl)
BOOL
CheckBox_ContainsControl(TCheckBox AObj, TControl Control) {
    GET_FUNC_ADDR(CheckBox_ContainsControl)
    return (BOOL)MySyscall(pCheckBox_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_ControlAtPos)
TControl
CheckBox_ControlAtPos(TCheckBox AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(CheckBox_ControlAtPos)
    return (TControl)MySyscall(pCheckBox_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_DisableAlign)
void
CheckBox_DisableAlign(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_DisableAlign)
    MySyscall(pCheckBox_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_EnableAlign)
void
CheckBox_EnableAlign(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_EnableAlign)
    MySyscall(pCheckBox_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_FindChildControl)
TControl
CheckBox_FindChildControl(TCheckBox AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(CheckBox_FindChildControl)
    return (TControl)MySyscall(pCheckBox_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_FlipChildren)
void
CheckBox_FlipChildren(TCheckBox AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(CheckBox_FlipChildren)
    MySyscall(pCheckBox_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_Focused)
BOOL
CheckBox_Focused(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_Focused)
    return (BOOL)MySyscall(pCheckBox_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_HandleAllocated)
BOOL
CheckBox_HandleAllocated(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_HandleAllocated)
    return (BOOL)MySyscall(pCheckBox_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_InsertControl)
void
CheckBox_InsertControl(TCheckBox AObj, TControl AControl) {
    GET_FUNC_ADDR(CheckBox_InsertControl)
    MySyscall(pCheckBox_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_Invalidate)
void
CheckBox_Invalidate(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_Invalidate)
    MySyscall(pCheckBox_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_PaintTo)
void
CheckBox_PaintTo(TCheckBox AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(CheckBox_PaintTo)
    MySyscall(pCheckBox_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_RemoveControl)
void
CheckBox_RemoveControl(TCheckBox AObj, TControl AControl) {
    GET_FUNC_ADDR(CheckBox_RemoveControl)
    MySyscall(pCheckBox_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_Realign)
void
CheckBox_Realign(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_Realign)
    MySyscall(pCheckBox_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_Repaint)
void
CheckBox_Repaint(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_Repaint)
    MySyscall(pCheckBox_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_ScaleBy)
void
CheckBox_ScaleBy(TCheckBox AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(CheckBox_ScaleBy)
    MySyscall(pCheckBox_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_ScrollBy)
void
CheckBox_ScrollBy(TCheckBox AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(CheckBox_ScrollBy)
    MySyscall(pCheckBox_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetBounds)
void
CheckBox_SetBounds(TCheckBox AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(CheckBox_SetBounds)
    MySyscall(pCheckBox_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetFocus)
void
CheckBox_SetFocus(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_SetFocus)
    MySyscall(pCheckBox_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_Update)
void
CheckBox_Update(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_Update)
    MySyscall(pCheckBox_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_BringToFront)
void
CheckBox_BringToFront(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_BringToFront)
    MySyscall(pCheckBox_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_ClientToScreen)
TPoint
CheckBox_ClientToScreen(TCheckBox AObj, TPoint Point) {
    GET_FUNC_ADDR(CheckBox_ClientToScreen)
    TPoint result;
    MySyscall(pCheckBox_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckBox_ClientToParent)
TPoint
CheckBox_ClientToParent(TCheckBox AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(CheckBox_ClientToParent)
    TPoint result;
    MySyscall(pCheckBox_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckBox_Dragging)
BOOL
CheckBox_Dragging(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_Dragging)
    return (BOOL)MySyscall(pCheckBox_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_HasParent)
BOOL
CheckBox_HasParent(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_HasParent)
    return (BOOL)MySyscall(pCheckBox_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_Hide)
void
CheckBox_Hide(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_Hide)
    MySyscall(pCheckBox_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_Perform)
intptr_t
CheckBox_Perform(TCheckBox AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(CheckBox_Perform)
    return (intptr_t)MySyscall(pCheckBox_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_Refresh)
void
CheckBox_Refresh(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_Refresh)
    MySyscall(pCheckBox_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_ScreenToClient)
TPoint
CheckBox_ScreenToClient(TCheckBox AObj, TPoint Point) {
    GET_FUNC_ADDR(CheckBox_ScreenToClient)
    TPoint result;
    MySyscall(pCheckBox_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckBox_ParentToClient)
TPoint
CheckBox_ParentToClient(TCheckBox AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(CheckBox_ParentToClient)
    TPoint result;
    MySyscall(pCheckBox_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckBox_SendToBack)
void
CheckBox_SendToBack(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_SendToBack)
    MySyscall(pCheckBox_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_Show)
void
CheckBox_Show(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_Show)
    MySyscall(pCheckBox_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetTextBuf)
int32_t
CheckBox_GetTextBuf(TCheckBox AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(CheckBox_GetTextBuf)
    return (int32_t)MySyscall(pCheckBox_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetTextLen)
int32_t
CheckBox_GetTextLen(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetTextLen)
    return (int32_t)MySyscall(pCheckBox_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetTextBuf)
void
CheckBox_SetTextBuf(TCheckBox AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(CheckBox_SetTextBuf)
    MySyscall(pCheckBox_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_FindComponent)
TComponent
CheckBox_FindComponent(TCheckBox AObj, CChar char* AName) {
    GET_FUNC_ADDR(CheckBox_FindComponent)
    return (TComponent)MySyscall(pCheckBox_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetNamePath)
char*
CheckBox_GetNamePath(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetNamePath)
    return (char*)MySyscall(pCheckBox_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_Assign)
void
CheckBox_Assign(TCheckBox AObj, TObject Source) {
    GET_FUNC_ADDR(CheckBox_Assign)
    MySyscall(pCheckBox_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_ClassType)
TClass
CheckBox_ClassType(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_ClassType)
    return (TClass)MySyscall(pCheckBox_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_ClassName)
char*
CheckBox_ClassName(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_ClassName)
    return (char*)MySyscall(pCheckBox_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_InstanceSize)
int32_t
CheckBox_InstanceSize(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_InstanceSize)
    return (int32_t)MySyscall(pCheckBox_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_InheritsFrom)
BOOL
CheckBox_InheritsFrom(TCheckBox AObj, TClass AClass) {
    GET_FUNC_ADDR(CheckBox_InheritsFrom)
    return (BOOL)MySyscall(pCheckBox_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_Equals)
BOOL
CheckBox_Equals(TCheckBox AObj, TObject Obj) {
    GET_FUNC_ADDR(CheckBox_Equals)
    return (BOOL)MySyscall(pCheckBox_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetHashCode)
int32_t
CheckBox_GetHashCode(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetHashCode)
    return (int32_t)MySyscall(pCheckBox_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_ToString)
char*
CheckBox_ToString(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_ToString)
    return (char*)MySyscall(pCheckBox_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_AnchorToNeighbour)
void
CheckBox_AnchorToNeighbour(TCheckBox AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(CheckBox_AnchorToNeighbour)
    MySyscall(pCheckBox_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_AnchorParallel)
void
CheckBox_AnchorParallel(TCheckBox AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(CheckBox_AnchorParallel)
    MySyscall(pCheckBox_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_AnchorHorizontalCenterTo)
void
CheckBox_AnchorHorizontalCenterTo(TCheckBox AObj, TControl ASibling) {
    GET_FUNC_ADDR(CheckBox_AnchorHorizontalCenterTo)
    MySyscall(pCheckBox_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_AnchorVerticalCenterTo)
void
CheckBox_AnchorVerticalCenterTo(TCheckBox AObj, TControl ASibling) {
    GET_FUNC_ADDR(CheckBox_AnchorVerticalCenterTo)
    MySyscall(pCheckBox_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_AnchorSame)
void
CheckBox_AnchorSame(TCheckBox AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(CheckBox_AnchorSame)
    MySyscall(pCheckBox_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_AnchorAsAlign)
void
CheckBox_AnchorAsAlign(TCheckBox AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(CheckBox_AnchorAsAlign)
    MySyscall(pCheckBox_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_AnchorClient)
void
CheckBox_AnchorClient(TCheckBox AObj, int32_t ASpace) {
    GET_FUNC_ADDR(CheckBox_AnchorClient)
    MySyscall(pCheckBox_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_ScaleDesignToForm)
int32_t
CheckBox_ScaleDesignToForm(TCheckBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckBox_ScaleDesignToForm)
    return (int32_t)MySyscall(pCheckBox_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_ScaleFormToDesign)
int32_t
CheckBox_ScaleFormToDesign(TCheckBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckBox_ScaleFormToDesign)
    return (int32_t)MySyscall(pCheckBox_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_Scale96ToForm)
int32_t
CheckBox_Scale96ToForm(TCheckBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckBox_Scale96ToForm)
    return (int32_t)MySyscall(pCheckBox_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_ScaleFormTo96)
int32_t
CheckBox_ScaleFormTo96(TCheckBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckBox_ScaleFormTo96)
    return (int32_t)MySyscall(pCheckBox_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_Scale96ToFont)
int32_t
CheckBox_Scale96ToFont(TCheckBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckBox_Scale96ToFont)
    return (int32_t)MySyscall(pCheckBox_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_ScaleFontTo96)
int32_t
CheckBox_ScaleFontTo96(TCheckBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckBox_ScaleFontTo96)
    return (int32_t)MySyscall(pCheckBox_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_ScaleScreenToFont)
int32_t
CheckBox_ScaleScreenToFont(TCheckBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckBox_ScaleScreenToFont)
    return (int32_t)MySyscall(pCheckBox_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_ScaleFontToScreen)
int32_t
CheckBox_ScaleFontToScreen(TCheckBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckBox_ScaleFontToScreen)
    return (int32_t)MySyscall(pCheckBox_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_Scale96ToScreen)
int32_t
CheckBox_Scale96ToScreen(TCheckBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckBox_Scale96ToScreen)
    return (int32_t)MySyscall(pCheckBox_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_ScaleScreenTo96)
int32_t
CheckBox_ScaleScreenTo96(TCheckBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckBox_ScaleScreenTo96)
    return (int32_t)MySyscall(pCheckBox_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_AutoAdjustLayout)
void
CheckBox_AutoAdjustLayout(TCheckBox AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(CheckBox_AutoAdjustLayout)
    MySyscall(pCheckBox_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_FixDesignFontsPPI)
void
CheckBox_FixDesignFontsPPI(TCheckBox AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(CheckBox_FixDesignFontsPPI)
    MySyscall(pCheckBox_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_ScaleFontsPPI)
void
CheckBox_ScaleFontsPPI(TCheckBox AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(CheckBox_ScaleFontsPPI)
    MySyscall(pCheckBox_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetOnChange)
void
CheckBox_SetOnChange(TCheckBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckBox_SetOnChange)
    MySyscall(pCheckBox_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetAction)
TAction
CheckBox_GetAction(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetAction)
    return (TAction)MySyscall(pCheckBox_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetAction)
void
CheckBox_SetAction(TCheckBox AObj, TAction AValue) {
    GET_FUNC_ADDR(CheckBox_SetAction)
    MySyscall(pCheckBox_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetAlign)
TAlign
CheckBox_GetAlign(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetAlign)
    return (TAlign)MySyscall(pCheckBox_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetAlign)
void
CheckBox_SetAlign(TCheckBox AObj, TAlign AValue) {
    GET_FUNC_ADDR(CheckBox_SetAlign)
    MySyscall(pCheckBox_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetAlignment)
TLeftRight
CheckBox_GetAlignment(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetAlignment)
    return (TLeftRight)MySyscall(pCheckBox_GetAlignment, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetAlignment)
void
CheckBox_SetAlignment(TCheckBox AObj, TLeftRight AValue) {
    GET_FUNC_ADDR(CheckBox_SetAlignment)
    MySyscall(pCheckBox_SetAlignment, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetAllowGrayed)
BOOL
CheckBox_GetAllowGrayed(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetAllowGrayed)
    return (BOOL)MySyscall(pCheckBox_GetAllowGrayed, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetAllowGrayed)
void
CheckBox_SetAllowGrayed(TCheckBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckBox_SetAllowGrayed)
    MySyscall(pCheckBox_SetAllowGrayed, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetAnchors)
TAnchors
CheckBox_GetAnchors(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetAnchors)
    return (TAnchors)MySyscall(pCheckBox_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetAnchors)
void
CheckBox_SetAnchors(TCheckBox AObj, TAnchors AValue) {
    GET_FUNC_ADDR(CheckBox_SetAnchors)
    MySyscall(pCheckBox_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetBiDiMode)
TBiDiMode
CheckBox_GetBiDiMode(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetBiDiMode)
    return (TBiDiMode)MySyscall(pCheckBox_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetBiDiMode)
void
CheckBox_SetBiDiMode(TCheckBox AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(CheckBox_SetBiDiMode)
    MySyscall(pCheckBox_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetCaption)
char*
CheckBox_GetCaption(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetCaption)
    return (char*)MySyscall(pCheckBox_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetCaption)
void
CheckBox_SetCaption(TCheckBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(CheckBox_SetCaption)
    MySyscall(pCheckBox_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetChecked)
BOOL
CheckBox_GetChecked(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetChecked)
    return (BOOL)MySyscall(pCheckBox_GetChecked, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetChecked)
void
CheckBox_SetChecked(TCheckBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckBox_SetChecked)
    MySyscall(pCheckBox_SetChecked, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetColor)
TColor
CheckBox_GetColor(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetColor)
    return (TColor)MySyscall(pCheckBox_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetColor)
void
CheckBox_SetColor(TCheckBox AObj, TColor AValue) {
    GET_FUNC_ADDR(CheckBox_SetColor)
    MySyscall(pCheckBox_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetConstraints)
TSizeConstraints
CheckBox_GetConstraints(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetConstraints)
    return (TSizeConstraints)MySyscall(pCheckBox_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetConstraints)
void
CheckBox_SetConstraints(TCheckBox AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(CheckBox_SetConstraints)
    MySyscall(pCheckBox_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetDoubleBuffered)
BOOL
CheckBox_GetDoubleBuffered(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetDoubleBuffered)
    return (BOOL)MySyscall(pCheckBox_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetDoubleBuffered)
void
CheckBox_SetDoubleBuffered(TCheckBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckBox_SetDoubleBuffered)
    MySyscall(pCheckBox_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetDragCursor)
TCursor
CheckBox_GetDragCursor(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetDragCursor)
    return (TCursor)MySyscall(pCheckBox_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetDragCursor)
void
CheckBox_SetDragCursor(TCheckBox AObj, TCursor AValue) {
    GET_FUNC_ADDR(CheckBox_SetDragCursor)
    MySyscall(pCheckBox_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetDragKind)
TDragKind
CheckBox_GetDragKind(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetDragKind)
    return (TDragKind)MySyscall(pCheckBox_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetDragKind)
void
CheckBox_SetDragKind(TCheckBox AObj, TDragKind AValue) {
    GET_FUNC_ADDR(CheckBox_SetDragKind)
    MySyscall(pCheckBox_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetDragMode)
TDragMode
CheckBox_GetDragMode(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetDragMode)
    return (TDragMode)MySyscall(pCheckBox_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetDragMode)
void
CheckBox_SetDragMode(TCheckBox AObj, TDragMode AValue) {
    GET_FUNC_ADDR(CheckBox_SetDragMode)
    MySyscall(pCheckBox_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetEnabled)
BOOL
CheckBox_GetEnabled(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetEnabled)
    return (BOOL)MySyscall(pCheckBox_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetEnabled)
void
CheckBox_SetEnabled(TCheckBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckBox_SetEnabled)
    MySyscall(pCheckBox_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetFont)
TFont
CheckBox_GetFont(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetFont)
    return (TFont)MySyscall(pCheckBox_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetFont)
void
CheckBox_SetFont(TCheckBox AObj, TFont AValue) {
    GET_FUNC_ADDR(CheckBox_SetFont)
    MySyscall(pCheckBox_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetParentColor)
BOOL
CheckBox_GetParentColor(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetParentColor)
    return (BOOL)MySyscall(pCheckBox_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetParentColor)
void
CheckBox_SetParentColor(TCheckBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckBox_SetParentColor)
    MySyscall(pCheckBox_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetParentDoubleBuffered)
BOOL
CheckBox_GetParentDoubleBuffered(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pCheckBox_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetParentDoubleBuffered)
void
CheckBox_SetParentDoubleBuffered(TCheckBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckBox_SetParentDoubleBuffered)
    MySyscall(pCheckBox_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetParentFont)
BOOL
CheckBox_GetParentFont(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetParentFont)
    return (BOOL)MySyscall(pCheckBox_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetParentFont)
void
CheckBox_SetParentFont(TCheckBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckBox_SetParentFont)
    MySyscall(pCheckBox_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetParentShowHint)
BOOL
CheckBox_GetParentShowHint(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetParentShowHint)
    return (BOOL)MySyscall(pCheckBox_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetParentShowHint)
void
CheckBox_SetParentShowHint(TCheckBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckBox_SetParentShowHint)
    MySyscall(pCheckBox_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetPopupMenu)
TPopupMenu
CheckBox_GetPopupMenu(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetPopupMenu)
    return (TPopupMenu)MySyscall(pCheckBox_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetPopupMenu)
void
CheckBox_SetPopupMenu(TCheckBox AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(CheckBox_SetPopupMenu)
    MySyscall(pCheckBox_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetShowHint)
BOOL
CheckBox_GetShowHint(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetShowHint)
    return (BOOL)MySyscall(pCheckBox_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetShowHint)
void
CheckBox_SetShowHint(TCheckBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckBox_SetShowHint)
    MySyscall(pCheckBox_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetState)
TCheckBoxState
CheckBox_GetState(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetState)
    return (TCheckBoxState)MySyscall(pCheckBox_GetState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetState)
void
CheckBox_SetState(TCheckBox AObj, TCheckBoxState AValue) {
    GET_FUNC_ADDR(CheckBox_SetState)
    MySyscall(pCheckBox_SetState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetTabOrder)
TTabOrder
CheckBox_GetTabOrder(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetTabOrder)
    return (TTabOrder)MySyscall(pCheckBox_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetTabOrder)
void
CheckBox_SetTabOrder(TCheckBox AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(CheckBox_SetTabOrder)
    MySyscall(pCheckBox_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetTabStop)
BOOL
CheckBox_GetTabStop(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetTabStop)
    return (BOOL)MySyscall(pCheckBox_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetTabStop)
void
CheckBox_SetTabStop(TCheckBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckBox_SetTabStop)
    MySyscall(pCheckBox_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetVisible)
BOOL
CheckBox_GetVisible(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetVisible)
    return (BOOL)MySyscall(pCheckBox_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetVisible)
void
CheckBox_SetVisible(TCheckBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckBox_SetVisible)
    MySyscall(pCheckBox_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetOnClick)
void
CheckBox_SetOnClick(TCheckBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckBox_SetOnClick)
    MySyscall(pCheckBox_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetOnContextPopup)
void
CheckBox_SetOnContextPopup(TCheckBox AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(CheckBox_SetOnContextPopup)
    MySyscall(pCheckBox_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetOnDragDrop)
void
CheckBox_SetOnDragDrop(TCheckBox AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(CheckBox_SetOnDragDrop)
    MySyscall(pCheckBox_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetOnDragOver)
void
CheckBox_SetOnDragOver(TCheckBox AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(CheckBox_SetOnDragOver)
    MySyscall(pCheckBox_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetOnEndDrag)
void
CheckBox_SetOnEndDrag(TCheckBox AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(CheckBox_SetOnEndDrag)
    MySyscall(pCheckBox_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetOnEnter)
void
CheckBox_SetOnEnter(TCheckBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckBox_SetOnEnter)
    MySyscall(pCheckBox_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetOnExit)
void
CheckBox_SetOnExit(TCheckBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckBox_SetOnExit)
    MySyscall(pCheckBox_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetOnKeyDown)
void
CheckBox_SetOnKeyDown(TCheckBox AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(CheckBox_SetOnKeyDown)
    MySyscall(pCheckBox_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetOnKeyPress)
void
CheckBox_SetOnKeyPress(TCheckBox AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(CheckBox_SetOnKeyPress)
    MySyscall(pCheckBox_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetOnKeyUp)
void
CheckBox_SetOnKeyUp(TCheckBox AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(CheckBox_SetOnKeyUp)
    MySyscall(pCheckBox_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetOnMouseDown)
void
CheckBox_SetOnMouseDown(TCheckBox AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(CheckBox_SetOnMouseDown)
    MySyscall(pCheckBox_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetOnMouseEnter)
void
CheckBox_SetOnMouseEnter(TCheckBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckBox_SetOnMouseEnter)
    MySyscall(pCheckBox_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetOnMouseLeave)
void
CheckBox_SetOnMouseLeave(TCheckBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckBox_SetOnMouseLeave)
    MySyscall(pCheckBox_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetOnMouseMove)
void
CheckBox_SetOnMouseMove(TCheckBox AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(CheckBox_SetOnMouseMove)
    MySyscall(pCheckBox_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetOnMouseUp)
void
CheckBox_SetOnMouseUp(TCheckBox AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(CheckBox_SetOnMouseUp)
    MySyscall(pCheckBox_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetDockClientCount)
int32_t
CheckBox_GetDockClientCount(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetDockClientCount)
    return (int32_t)MySyscall(pCheckBox_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetDockSite)
BOOL
CheckBox_GetDockSite(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetDockSite)
    return (BOOL)MySyscall(pCheckBox_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetDockSite)
void
CheckBox_SetDockSite(TCheckBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckBox_SetDockSite)
    MySyscall(pCheckBox_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetMouseInClient)
BOOL
CheckBox_GetMouseInClient(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetMouseInClient)
    return (BOOL)MySyscall(pCheckBox_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetVisibleDockClientCount)
int32_t
CheckBox_GetVisibleDockClientCount(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pCheckBox_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetBrush)
TBrush
CheckBox_GetBrush(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetBrush)
    return (TBrush)MySyscall(pCheckBox_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetControlCount)
int32_t
CheckBox_GetControlCount(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetControlCount)
    return (int32_t)MySyscall(pCheckBox_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetHandle)
HWND
CheckBox_GetHandle(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetHandle)
    return (HWND)MySyscall(pCheckBox_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetParentWindow)
HWND
CheckBox_GetParentWindow(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetParentWindow)
    return (HWND)MySyscall(pCheckBox_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetParentWindow)
void
CheckBox_SetParentWindow(TCheckBox AObj, HWND AValue) {
    GET_FUNC_ADDR(CheckBox_SetParentWindow)
    MySyscall(pCheckBox_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetShowing)
BOOL
CheckBox_GetShowing(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetShowing)
    return (BOOL)MySyscall(pCheckBox_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetUseDockManager)
BOOL
CheckBox_GetUseDockManager(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetUseDockManager)
    return (BOOL)MySyscall(pCheckBox_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetUseDockManager)
void
CheckBox_SetUseDockManager(TCheckBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckBox_SetUseDockManager)
    MySyscall(pCheckBox_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetBoundsRect)
TRect
CheckBox_GetBoundsRect(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetBoundsRect)
    TRect result;
    MySyscall(pCheckBox_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckBox_SetBoundsRect)
void
CheckBox_SetBoundsRect(TCheckBox AObj, TRect AValue) {
    GET_FUNC_ADDR(CheckBox_SetBoundsRect)
    MySyscall(pCheckBox_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetClientHeight)
int32_t
CheckBox_GetClientHeight(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetClientHeight)
    return (int32_t)MySyscall(pCheckBox_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetClientHeight)
void
CheckBox_SetClientHeight(TCheckBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckBox_SetClientHeight)
    MySyscall(pCheckBox_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetClientOrigin)
TPoint
CheckBox_GetClientOrigin(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetClientOrigin)
    TPoint result;
    MySyscall(pCheckBox_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckBox_GetClientRect)
TRect
CheckBox_GetClientRect(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetClientRect)
    TRect result;
    MySyscall(pCheckBox_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckBox_GetClientWidth)
int32_t
CheckBox_GetClientWidth(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetClientWidth)
    return (int32_t)MySyscall(pCheckBox_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetClientWidth)
void
CheckBox_SetClientWidth(TCheckBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckBox_SetClientWidth)
    MySyscall(pCheckBox_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetControlState)
TControlState
CheckBox_GetControlState(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetControlState)
    return (TControlState)MySyscall(pCheckBox_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetControlState)
void
CheckBox_SetControlState(TCheckBox AObj, TControlState AValue) {
    GET_FUNC_ADDR(CheckBox_SetControlState)
    MySyscall(pCheckBox_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetControlStyle)
TControlStyle
CheckBox_GetControlStyle(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetControlStyle)
    return (TControlStyle)MySyscall(pCheckBox_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetControlStyle)
void
CheckBox_SetControlStyle(TCheckBox AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(CheckBox_SetControlStyle)
    MySyscall(pCheckBox_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetFloating)
BOOL
CheckBox_GetFloating(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetFloating)
    return (BOOL)MySyscall(pCheckBox_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetParent)
TWinControl
CheckBox_GetParent(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetParent)
    return (TWinControl)MySyscall(pCheckBox_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetParent)
void
CheckBox_SetParent(TCheckBox AObj, TWinControl AValue) {
    GET_FUNC_ADDR(CheckBox_SetParent)
    MySyscall(pCheckBox_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetLeft)
int32_t
CheckBox_GetLeft(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetLeft)
    return (int32_t)MySyscall(pCheckBox_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetLeft)
void
CheckBox_SetLeft(TCheckBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckBox_SetLeft)
    MySyscall(pCheckBox_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetTop)
int32_t
CheckBox_GetTop(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetTop)
    return (int32_t)MySyscall(pCheckBox_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetTop)
void
CheckBox_SetTop(TCheckBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckBox_SetTop)
    MySyscall(pCheckBox_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetWidth)
int32_t
CheckBox_GetWidth(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetWidth)
    return (int32_t)MySyscall(pCheckBox_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetWidth)
void
CheckBox_SetWidth(TCheckBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckBox_SetWidth)
    MySyscall(pCheckBox_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetHeight)
int32_t
CheckBox_GetHeight(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetHeight)
    return (int32_t)MySyscall(pCheckBox_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetHeight)
void
CheckBox_SetHeight(TCheckBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckBox_SetHeight)
    MySyscall(pCheckBox_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetCursor)
TCursor
CheckBox_GetCursor(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetCursor)
    return (TCursor)MySyscall(pCheckBox_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetCursor)
void
CheckBox_SetCursor(TCheckBox AObj, TCursor AValue) {
    GET_FUNC_ADDR(CheckBox_SetCursor)
    MySyscall(pCheckBox_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetHint)
char*
CheckBox_GetHint(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetHint)
    return (char*)MySyscall(pCheckBox_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetHint)
void
CheckBox_SetHint(TCheckBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(CheckBox_SetHint)
    MySyscall(pCheckBox_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetComponentCount)
int32_t
CheckBox_GetComponentCount(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetComponentCount)
    return (int32_t)MySyscall(pCheckBox_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetComponentIndex)
int32_t
CheckBox_GetComponentIndex(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetComponentIndex)
    return (int32_t)MySyscall(pCheckBox_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetComponentIndex)
void
CheckBox_SetComponentIndex(TCheckBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckBox_SetComponentIndex)
    MySyscall(pCheckBox_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetOwner)
TComponent
CheckBox_GetOwner(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetOwner)
    return (TComponent)MySyscall(pCheckBox_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetName)
char*
CheckBox_GetName(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetName)
    return (char*)MySyscall(pCheckBox_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetName)
void
CheckBox_SetName(TCheckBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(CheckBox_SetName)
    MySyscall(pCheckBox_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetTag)
intptr_t
CheckBox_GetTag(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetTag)
    return (intptr_t)MySyscall(pCheckBox_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetTag)
void
CheckBox_SetTag(TCheckBox AObj, intptr_t AValue) {
    GET_FUNC_ADDR(CheckBox_SetTag)
    MySyscall(pCheckBox_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetAnchorSideLeft)
TAnchorSide
CheckBox_GetAnchorSideLeft(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pCheckBox_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetAnchorSideLeft)
void
CheckBox_SetAnchorSideLeft(TCheckBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(CheckBox_SetAnchorSideLeft)
    MySyscall(pCheckBox_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetAnchorSideTop)
TAnchorSide
CheckBox_GetAnchorSideTop(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pCheckBox_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetAnchorSideTop)
void
CheckBox_SetAnchorSideTop(TCheckBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(CheckBox_SetAnchorSideTop)
    MySyscall(pCheckBox_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetAnchorSideRight)
TAnchorSide
CheckBox_GetAnchorSideRight(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pCheckBox_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetAnchorSideRight)
void
CheckBox_SetAnchorSideRight(TCheckBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(CheckBox_SetAnchorSideRight)
    MySyscall(pCheckBox_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetAnchorSideBottom)
TAnchorSide
CheckBox_GetAnchorSideBottom(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pCheckBox_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetAnchorSideBottom)
void
CheckBox_SetAnchorSideBottom(TCheckBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(CheckBox_SetAnchorSideBottom)
    MySyscall(pCheckBox_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetChildSizing)
TControlChildSizing
CheckBox_GetChildSizing(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetChildSizing)
    return (TControlChildSizing)MySyscall(pCheckBox_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetChildSizing)
void
CheckBox_SetChildSizing(TCheckBox AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(CheckBox_SetChildSizing)
    MySyscall(pCheckBox_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetBorderSpacing)
TControlBorderSpacing
CheckBox_GetBorderSpacing(TCheckBox AObj) {
    GET_FUNC_ADDR(CheckBox_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pCheckBox_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_SetBorderSpacing)
void
CheckBox_SetBorderSpacing(TCheckBox AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(CheckBox_SetBorderSpacing)
    MySyscall(pCheckBox_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetDockClients)
TControl
CheckBox_GetDockClients(TCheckBox AObj, int32_t Index) {
    GET_FUNC_ADDR(CheckBox_GetDockClients)
    return (TControl)MySyscall(pCheckBox_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetControls)
TControl
CheckBox_GetControls(TCheckBox AObj, int32_t Index) {
    GET_FUNC_ADDR(CheckBox_GetControls)
    return (TControl)MySyscall(pCheckBox_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetComponents)
TComponent
CheckBox_GetComponents(TCheckBox AObj, int32_t AIndex) {
    GET_FUNC_ADDR(CheckBox_GetComponents)
    return (TComponent)MySyscall(pCheckBox_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_GetAnchorSide)
TAnchorSide
CheckBox_GetAnchorSide(TCheckBox AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(CheckBox_GetAnchorSide)
    return (TAnchorSide)MySyscall(pCheckBox_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckBox_StaticClassType)
TClass
CheckBox_StaticClassType() {
    GET_FUNC_ADDR(CheckBox_StaticClassType)
    return (TClass)MySyscall(pCheckBox_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TRadioButton-------------------

DEFINE_FUNC_PTR(RadioButton_Create)
TRadioButton
RadioButton_Create(TComponent AOwner) {
    GET_FUNC_ADDR(RadioButton_Create)
    return (TRadioButton)MySyscall(pRadioButton_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_Free)
void
RadioButton_Free(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_Free)
    MySyscall(pRadioButton_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_CanFocus)
BOOL
RadioButton_CanFocus(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_CanFocus)
    return (BOOL)MySyscall(pRadioButton_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_ContainsControl)
BOOL
RadioButton_ContainsControl(TRadioButton AObj, TControl Control) {
    GET_FUNC_ADDR(RadioButton_ContainsControl)
    return (BOOL)MySyscall(pRadioButton_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_ControlAtPos)
TControl
RadioButton_ControlAtPos(TRadioButton AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(RadioButton_ControlAtPos)
    return (TControl)MySyscall(pRadioButton_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_DisableAlign)
void
RadioButton_DisableAlign(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_DisableAlign)
    MySyscall(pRadioButton_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_EnableAlign)
void
RadioButton_EnableAlign(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_EnableAlign)
    MySyscall(pRadioButton_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_FindChildControl)
TControl
RadioButton_FindChildControl(TRadioButton AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(RadioButton_FindChildControl)
    return (TControl)MySyscall(pRadioButton_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_FlipChildren)
void
RadioButton_FlipChildren(TRadioButton AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(RadioButton_FlipChildren)
    MySyscall(pRadioButton_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_Focused)
BOOL
RadioButton_Focused(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_Focused)
    return (BOOL)MySyscall(pRadioButton_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_HandleAllocated)
BOOL
RadioButton_HandleAllocated(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_HandleAllocated)
    return (BOOL)MySyscall(pRadioButton_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_InsertControl)
void
RadioButton_InsertControl(TRadioButton AObj, TControl AControl) {
    GET_FUNC_ADDR(RadioButton_InsertControl)
    MySyscall(pRadioButton_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_Invalidate)
void
RadioButton_Invalidate(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_Invalidate)
    MySyscall(pRadioButton_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_PaintTo)
void
RadioButton_PaintTo(TRadioButton AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(RadioButton_PaintTo)
    MySyscall(pRadioButton_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_RemoveControl)
void
RadioButton_RemoveControl(TRadioButton AObj, TControl AControl) {
    GET_FUNC_ADDR(RadioButton_RemoveControl)
    MySyscall(pRadioButton_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_Realign)
void
RadioButton_Realign(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_Realign)
    MySyscall(pRadioButton_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_Repaint)
void
RadioButton_Repaint(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_Repaint)
    MySyscall(pRadioButton_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_ScaleBy)
void
RadioButton_ScaleBy(TRadioButton AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(RadioButton_ScaleBy)
    MySyscall(pRadioButton_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_ScrollBy)
void
RadioButton_ScrollBy(TRadioButton AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(RadioButton_ScrollBy)
    MySyscall(pRadioButton_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetBounds)
void
RadioButton_SetBounds(TRadioButton AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(RadioButton_SetBounds)
    MySyscall(pRadioButton_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetFocus)
void
RadioButton_SetFocus(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_SetFocus)
    MySyscall(pRadioButton_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_Update)
void
RadioButton_Update(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_Update)
    MySyscall(pRadioButton_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_BringToFront)
void
RadioButton_BringToFront(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_BringToFront)
    MySyscall(pRadioButton_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_ClientToScreen)
TPoint
RadioButton_ClientToScreen(TRadioButton AObj, TPoint Point) {
    GET_FUNC_ADDR(RadioButton_ClientToScreen)
    TPoint result;
    MySyscall(pRadioButton_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(RadioButton_ClientToParent)
TPoint
RadioButton_ClientToParent(TRadioButton AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(RadioButton_ClientToParent)
    TPoint result;
    MySyscall(pRadioButton_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(RadioButton_Dragging)
BOOL
RadioButton_Dragging(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_Dragging)
    return (BOOL)MySyscall(pRadioButton_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_HasParent)
BOOL
RadioButton_HasParent(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_HasParent)
    return (BOOL)MySyscall(pRadioButton_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_Hide)
void
RadioButton_Hide(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_Hide)
    MySyscall(pRadioButton_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_Perform)
intptr_t
RadioButton_Perform(TRadioButton AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(RadioButton_Perform)
    return (intptr_t)MySyscall(pRadioButton_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_Refresh)
void
RadioButton_Refresh(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_Refresh)
    MySyscall(pRadioButton_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_ScreenToClient)
TPoint
RadioButton_ScreenToClient(TRadioButton AObj, TPoint Point) {
    GET_FUNC_ADDR(RadioButton_ScreenToClient)
    TPoint result;
    MySyscall(pRadioButton_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(RadioButton_ParentToClient)
TPoint
RadioButton_ParentToClient(TRadioButton AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(RadioButton_ParentToClient)
    TPoint result;
    MySyscall(pRadioButton_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(RadioButton_SendToBack)
void
RadioButton_SendToBack(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_SendToBack)
    MySyscall(pRadioButton_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_Show)
void
RadioButton_Show(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_Show)
    MySyscall(pRadioButton_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetTextBuf)
int32_t
RadioButton_GetTextBuf(TRadioButton AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(RadioButton_GetTextBuf)
    return (int32_t)MySyscall(pRadioButton_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetTextLen)
int32_t
RadioButton_GetTextLen(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetTextLen)
    return (int32_t)MySyscall(pRadioButton_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetTextBuf)
void
RadioButton_SetTextBuf(TRadioButton AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(RadioButton_SetTextBuf)
    MySyscall(pRadioButton_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_FindComponent)
TComponent
RadioButton_FindComponent(TRadioButton AObj, CChar char* AName) {
    GET_FUNC_ADDR(RadioButton_FindComponent)
    return (TComponent)MySyscall(pRadioButton_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetNamePath)
char*
RadioButton_GetNamePath(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetNamePath)
    return (char*)MySyscall(pRadioButton_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_Assign)
void
RadioButton_Assign(TRadioButton AObj, TObject Source) {
    GET_FUNC_ADDR(RadioButton_Assign)
    MySyscall(pRadioButton_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_ClassType)
TClass
RadioButton_ClassType(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_ClassType)
    return (TClass)MySyscall(pRadioButton_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_ClassName)
char*
RadioButton_ClassName(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_ClassName)
    return (char*)MySyscall(pRadioButton_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_InstanceSize)
int32_t
RadioButton_InstanceSize(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_InstanceSize)
    return (int32_t)MySyscall(pRadioButton_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_InheritsFrom)
BOOL
RadioButton_InheritsFrom(TRadioButton AObj, TClass AClass) {
    GET_FUNC_ADDR(RadioButton_InheritsFrom)
    return (BOOL)MySyscall(pRadioButton_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_Equals)
BOOL
RadioButton_Equals(TRadioButton AObj, TObject Obj) {
    GET_FUNC_ADDR(RadioButton_Equals)
    return (BOOL)MySyscall(pRadioButton_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetHashCode)
int32_t
RadioButton_GetHashCode(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetHashCode)
    return (int32_t)MySyscall(pRadioButton_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_ToString)
char*
RadioButton_ToString(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_ToString)
    return (char*)MySyscall(pRadioButton_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_AnchorToNeighbour)
void
RadioButton_AnchorToNeighbour(TRadioButton AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(RadioButton_AnchorToNeighbour)
    MySyscall(pRadioButton_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_AnchorParallel)
void
RadioButton_AnchorParallel(TRadioButton AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(RadioButton_AnchorParallel)
    MySyscall(pRadioButton_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_AnchorHorizontalCenterTo)
void
RadioButton_AnchorHorizontalCenterTo(TRadioButton AObj, TControl ASibling) {
    GET_FUNC_ADDR(RadioButton_AnchorHorizontalCenterTo)
    MySyscall(pRadioButton_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_AnchorVerticalCenterTo)
void
RadioButton_AnchorVerticalCenterTo(TRadioButton AObj, TControl ASibling) {
    GET_FUNC_ADDR(RadioButton_AnchorVerticalCenterTo)
    MySyscall(pRadioButton_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_AnchorSame)
void
RadioButton_AnchorSame(TRadioButton AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(RadioButton_AnchorSame)
    MySyscall(pRadioButton_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_AnchorAsAlign)
void
RadioButton_AnchorAsAlign(TRadioButton AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(RadioButton_AnchorAsAlign)
    MySyscall(pRadioButton_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_AnchorClient)
void
RadioButton_AnchorClient(TRadioButton AObj, int32_t ASpace) {
    GET_FUNC_ADDR(RadioButton_AnchorClient)
    MySyscall(pRadioButton_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_ScaleDesignToForm)
int32_t
RadioButton_ScaleDesignToForm(TRadioButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(RadioButton_ScaleDesignToForm)
    return (int32_t)MySyscall(pRadioButton_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_ScaleFormToDesign)
int32_t
RadioButton_ScaleFormToDesign(TRadioButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(RadioButton_ScaleFormToDesign)
    return (int32_t)MySyscall(pRadioButton_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_Scale96ToForm)
int32_t
RadioButton_Scale96ToForm(TRadioButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(RadioButton_Scale96ToForm)
    return (int32_t)MySyscall(pRadioButton_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_ScaleFormTo96)
int32_t
RadioButton_ScaleFormTo96(TRadioButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(RadioButton_ScaleFormTo96)
    return (int32_t)MySyscall(pRadioButton_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_Scale96ToFont)
int32_t
RadioButton_Scale96ToFont(TRadioButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(RadioButton_Scale96ToFont)
    return (int32_t)MySyscall(pRadioButton_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_ScaleFontTo96)
int32_t
RadioButton_ScaleFontTo96(TRadioButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(RadioButton_ScaleFontTo96)
    return (int32_t)MySyscall(pRadioButton_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_ScaleScreenToFont)
int32_t
RadioButton_ScaleScreenToFont(TRadioButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(RadioButton_ScaleScreenToFont)
    return (int32_t)MySyscall(pRadioButton_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_ScaleFontToScreen)
int32_t
RadioButton_ScaleFontToScreen(TRadioButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(RadioButton_ScaleFontToScreen)
    return (int32_t)MySyscall(pRadioButton_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_Scale96ToScreen)
int32_t
RadioButton_Scale96ToScreen(TRadioButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(RadioButton_Scale96ToScreen)
    return (int32_t)MySyscall(pRadioButton_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_ScaleScreenTo96)
int32_t
RadioButton_ScaleScreenTo96(TRadioButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(RadioButton_ScaleScreenTo96)
    return (int32_t)MySyscall(pRadioButton_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_AutoAdjustLayout)
void
RadioButton_AutoAdjustLayout(TRadioButton AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(RadioButton_AutoAdjustLayout)
    MySyscall(pRadioButton_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_FixDesignFontsPPI)
void
RadioButton_FixDesignFontsPPI(TRadioButton AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(RadioButton_FixDesignFontsPPI)
    MySyscall(pRadioButton_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_ScaleFontsPPI)
void
RadioButton_ScaleFontsPPI(TRadioButton AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(RadioButton_ScaleFontsPPI)
    MySyscall(pRadioButton_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetOnChange)
void
RadioButton_SetOnChange(TRadioButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(RadioButton_SetOnChange)
    MySyscall(pRadioButton_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetAction)
TAction
RadioButton_GetAction(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetAction)
    return (TAction)MySyscall(pRadioButton_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetAction)
void
RadioButton_SetAction(TRadioButton AObj, TAction AValue) {
    GET_FUNC_ADDR(RadioButton_SetAction)
    MySyscall(pRadioButton_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetAlign)
TAlign
RadioButton_GetAlign(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetAlign)
    return (TAlign)MySyscall(pRadioButton_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetAlign)
void
RadioButton_SetAlign(TRadioButton AObj, TAlign AValue) {
    GET_FUNC_ADDR(RadioButton_SetAlign)
    MySyscall(pRadioButton_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetAlignment)
TLeftRight
RadioButton_GetAlignment(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetAlignment)
    return (TLeftRight)MySyscall(pRadioButton_GetAlignment, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetAlignment)
void
RadioButton_SetAlignment(TRadioButton AObj, TLeftRight AValue) {
    GET_FUNC_ADDR(RadioButton_SetAlignment)
    MySyscall(pRadioButton_SetAlignment, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetAnchors)
TAnchors
RadioButton_GetAnchors(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetAnchors)
    return (TAnchors)MySyscall(pRadioButton_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetAnchors)
void
RadioButton_SetAnchors(TRadioButton AObj, TAnchors AValue) {
    GET_FUNC_ADDR(RadioButton_SetAnchors)
    MySyscall(pRadioButton_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetBiDiMode)
TBiDiMode
RadioButton_GetBiDiMode(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetBiDiMode)
    return (TBiDiMode)MySyscall(pRadioButton_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetBiDiMode)
void
RadioButton_SetBiDiMode(TRadioButton AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(RadioButton_SetBiDiMode)
    MySyscall(pRadioButton_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetCaption)
char*
RadioButton_GetCaption(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetCaption)
    return (char*)MySyscall(pRadioButton_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetCaption)
void
RadioButton_SetCaption(TRadioButton AObj, CChar char* AValue) {
    GET_FUNC_ADDR(RadioButton_SetCaption)
    MySyscall(pRadioButton_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetChecked)
BOOL
RadioButton_GetChecked(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetChecked)
    return (BOOL)MySyscall(pRadioButton_GetChecked, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetChecked)
void
RadioButton_SetChecked(TRadioButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(RadioButton_SetChecked)
    MySyscall(pRadioButton_SetChecked, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetColor)
TColor
RadioButton_GetColor(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetColor)
    return (TColor)MySyscall(pRadioButton_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetColor)
void
RadioButton_SetColor(TRadioButton AObj, TColor AValue) {
    GET_FUNC_ADDR(RadioButton_SetColor)
    MySyscall(pRadioButton_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetConstraints)
TSizeConstraints
RadioButton_GetConstraints(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetConstraints)
    return (TSizeConstraints)MySyscall(pRadioButton_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetConstraints)
void
RadioButton_SetConstraints(TRadioButton AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(RadioButton_SetConstraints)
    MySyscall(pRadioButton_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetDoubleBuffered)
BOOL
RadioButton_GetDoubleBuffered(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetDoubleBuffered)
    return (BOOL)MySyscall(pRadioButton_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetDoubleBuffered)
void
RadioButton_SetDoubleBuffered(TRadioButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(RadioButton_SetDoubleBuffered)
    MySyscall(pRadioButton_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetDragCursor)
TCursor
RadioButton_GetDragCursor(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetDragCursor)
    return (TCursor)MySyscall(pRadioButton_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetDragCursor)
void
RadioButton_SetDragCursor(TRadioButton AObj, TCursor AValue) {
    GET_FUNC_ADDR(RadioButton_SetDragCursor)
    MySyscall(pRadioButton_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetDragKind)
TDragKind
RadioButton_GetDragKind(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetDragKind)
    return (TDragKind)MySyscall(pRadioButton_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetDragKind)
void
RadioButton_SetDragKind(TRadioButton AObj, TDragKind AValue) {
    GET_FUNC_ADDR(RadioButton_SetDragKind)
    MySyscall(pRadioButton_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetDragMode)
TDragMode
RadioButton_GetDragMode(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetDragMode)
    return (TDragMode)MySyscall(pRadioButton_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetDragMode)
void
RadioButton_SetDragMode(TRadioButton AObj, TDragMode AValue) {
    GET_FUNC_ADDR(RadioButton_SetDragMode)
    MySyscall(pRadioButton_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetEnabled)
BOOL
RadioButton_GetEnabled(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetEnabled)
    return (BOOL)MySyscall(pRadioButton_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetEnabled)
void
RadioButton_SetEnabled(TRadioButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(RadioButton_SetEnabled)
    MySyscall(pRadioButton_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetFont)
TFont
RadioButton_GetFont(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetFont)
    return (TFont)MySyscall(pRadioButton_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetFont)
void
RadioButton_SetFont(TRadioButton AObj, TFont AValue) {
    GET_FUNC_ADDR(RadioButton_SetFont)
    MySyscall(pRadioButton_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetParentColor)
BOOL
RadioButton_GetParentColor(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetParentColor)
    return (BOOL)MySyscall(pRadioButton_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetParentColor)
void
RadioButton_SetParentColor(TRadioButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(RadioButton_SetParentColor)
    MySyscall(pRadioButton_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetParentDoubleBuffered)
BOOL
RadioButton_GetParentDoubleBuffered(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pRadioButton_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetParentDoubleBuffered)
void
RadioButton_SetParentDoubleBuffered(TRadioButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(RadioButton_SetParentDoubleBuffered)
    MySyscall(pRadioButton_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetParentFont)
BOOL
RadioButton_GetParentFont(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetParentFont)
    return (BOOL)MySyscall(pRadioButton_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetParentFont)
void
RadioButton_SetParentFont(TRadioButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(RadioButton_SetParentFont)
    MySyscall(pRadioButton_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetParentShowHint)
BOOL
RadioButton_GetParentShowHint(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetParentShowHint)
    return (BOOL)MySyscall(pRadioButton_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetParentShowHint)
void
RadioButton_SetParentShowHint(TRadioButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(RadioButton_SetParentShowHint)
    MySyscall(pRadioButton_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetPopupMenu)
TPopupMenu
RadioButton_GetPopupMenu(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetPopupMenu)
    return (TPopupMenu)MySyscall(pRadioButton_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetPopupMenu)
void
RadioButton_SetPopupMenu(TRadioButton AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(RadioButton_SetPopupMenu)
    MySyscall(pRadioButton_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetShowHint)
BOOL
RadioButton_GetShowHint(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetShowHint)
    return (BOOL)MySyscall(pRadioButton_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetShowHint)
void
RadioButton_SetShowHint(TRadioButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(RadioButton_SetShowHint)
    MySyscall(pRadioButton_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetTabOrder)
TTabOrder
RadioButton_GetTabOrder(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetTabOrder)
    return (TTabOrder)MySyscall(pRadioButton_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetTabOrder)
void
RadioButton_SetTabOrder(TRadioButton AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(RadioButton_SetTabOrder)
    MySyscall(pRadioButton_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetTabStop)
BOOL
RadioButton_GetTabStop(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetTabStop)
    return (BOOL)MySyscall(pRadioButton_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetTabStop)
void
RadioButton_SetTabStop(TRadioButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(RadioButton_SetTabStop)
    MySyscall(pRadioButton_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetVisible)
BOOL
RadioButton_GetVisible(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetVisible)
    return (BOOL)MySyscall(pRadioButton_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetVisible)
void
RadioButton_SetVisible(TRadioButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(RadioButton_SetVisible)
    MySyscall(pRadioButton_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetOnClick)
void
RadioButton_SetOnClick(TRadioButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(RadioButton_SetOnClick)
    MySyscall(pRadioButton_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetOnContextPopup)
void
RadioButton_SetOnContextPopup(TRadioButton AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(RadioButton_SetOnContextPopup)
    MySyscall(pRadioButton_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetOnDragDrop)
void
RadioButton_SetOnDragDrop(TRadioButton AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(RadioButton_SetOnDragDrop)
    MySyscall(pRadioButton_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetOnDragOver)
void
RadioButton_SetOnDragOver(TRadioButton AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(RadioButton_SetOnDragOver)
    MySyscall(pRadioButton_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetOnEndDrag)
void
RadioButton_SetOnEndDrag(TRadioButton AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(RadioButton_SetOnEndDrag)
    MySyscall(pRadioButton_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetOnEnter)
void
RadioButton_SetOnEnter(TRadioButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(RadioButton_SetOnEnter)
    MySyscall(pRadioButton_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetOnExit)
void
RadioButton_SetOnExit(TRadioButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(RadioButton_SetOnExit)
    MySyscall(pRadioButton_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetOnKeyDown)
void
RadioButton_SetOnKeyDown(TRadioButton AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(RadioButton_SetOnKeyDown)
    MySyscall(pRadioButton_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetOnKeyPress)
void
RadioButton_SetOnKeyPress(TRadioButton AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(RadioButton_SetOnKeyPress)
    MySyscall(pRadioButton_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetOnKeyUp)
void
RadioButton_SetOnKeyUp(TRadioButton AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(RadioButton_SetOnKeyUp)
    MySyscall(pRadioButton_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetOnMouseDown)
void
RadioButton_SetOnMouseDown(TRadioButton AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(RadioButton_SetOnMouseDown)
    MySyscall(pRadioButton_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetOnMouseEnter)
void
RadioButton_SetOnMouseEnter(TRadioButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(RadioButton_SetOnMouseEnter)
    MySyscall(pRadioButton_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetOnMouseLeave)
void
RadioButton_SetOnMouseLeave(TRadioButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(RadioButton_SetOnMouseLeave)
    MySyscall(pRadioButton_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetOnMouseMove)
void
RadioButton_SetOnMouseMove(TRadioButton AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(RadioButton_SetOnMouseMove)
    MySyscall(pRadioButton_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetOnMouseUp)
void
RadioButton_SetOnMouseUp(TRadioButton AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(RadioButton_SetOnMouseUp)
    MySyscall(pRadioButton_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetDockClientCount)
int32_t
RadioButton_GetDockClientCount(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetDockClientCount)
    return (int32_t)MySyscall(pRadioButton_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetDockSite)
BOOL
RadioButton_GetDockSite(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetDockSite)
    return (BOOL)MySyscall(pRadioButton_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetDockSite)
void
RadioButton_SetDockSite(TRadioButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(RadioButton_SetDockSite)
    MySyscall(pRadioButton_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetMouseInClient)
BOOL
RadioButton_GetMouseInClient(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetMouseInClient)
    return (BOOL)MySyscall(pRadioButton_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetVisibleDockClientCount)
int32_t
RadioButton_GetVisibleDockClientCount(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pRadioButton_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetBrush)
TBrush
RadioButton_GetBrush(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetBrush)
    return (TBrush)MySyscall(pRadioButton_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetControlCount)
int32_t
RadioButton_GetControlCount(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetControlCount)
    return (int32_t)MySyscall(pRadioButton_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetHandle)
HWND
RadioButton_GetHandle(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetHandle)
    return (HWND)MySyscall(pRadioButton_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetParentWindow)
HWND
RadioButton_GetParentWindow(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetParentWindow)
    return (HWND)MySyscall(pRadioButton_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetParentWindow)
void
RadioButton_SetParentWindow(TRadioButton AObj, HWND AValue) {
    GET_FUNC_ADDR(RadioButton_SetParentWindow)
    MySyscall(pRadioButton_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetShowing)
BOOL
RadioButton_GetShowing(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetShowing)
    return (BOOL)MySyscall(pRadioButton_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetUseDockManager)
BOOL
RadioButton_GetUseDockManager(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetUseDockManager)
    return (BOOL)MySyscall(pRadioButton_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetUseDockManager)
void
RadioButton_SetUseDockManager(TRadioButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(RadioButton_SetUseDockManager)
    MySyscall(pRadioButton_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetBoundsRect)
TRect
RadioButton_GetBoundsRect(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetBoundsRect)
    TRect result;
    MySyscall(pRadioButton_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(RadioButton_SetBoundsRect)
void
RadioButton_SetBoundsRect(TRadioButton AObj, TRect AValue) {
    GET_FUNC_ADDR(RadioButton_SetBoundsRect)
    MySyscall(pRadioButton_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetClientHeight)
int32_t
RadioButton_GetClientHeight(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetClientHeight)
    return (int32_t)MySyscall(pRadioButton_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetClientHeight)
void
RadioButton_SetClientHeight(TRadioButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(RadioButton_SetClientHeight)
    MySyscall(pRadioButton_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetClientOrigin)
TPoint
RadioButton_GetClientOrigin(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetClientOrigin)
    TPoint result;
    MySyscall(pRadioButton_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(RadioButton_GetClientRect)
TRect
RadioButton_GetClientRect(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetClientRect)
    TRect result;
    MySyscall(pRadioButton_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(RadioButton_GetClientWidth)
int32_t
RadioButton_GetClientWidth(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetClientWidth)
    return (int32_t)MySyscall(pRadioButton_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetClientWidth)
void
RadioButton_SetClientWidth(TRadioButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(RadioButton_SetClientWidth)
    MySyscall(pRadioButton_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetControlState)
TControlState
RadioButton_GetControlState(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetControlState)
    return (TControlState)MySyscall(pRadioButton_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetControlState)
void
RadioButton_SetControlState(TRadioButton AObj, TControlState AValue) {
    GET_FUNC_ADDR(RadioButton_SetControlState)
    MySyscall(pRadioButton_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetControlStyle)
TControlStyle
RadioButton_GetControlStyle(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetControlStyle)
    return (TControlStyle)MySyscall(pRadioButton_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetControlStyle)
void
RadioButton_SetControlStyle(TRadioButton AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(RadioButton_SetControlStyle)
    MySyscall(pRadioButton_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetFloating)
BOOL
RadioButton_GetFloating(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetFloating)
    return (BOOL)MySyscall(pRadioButton_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetParent)
TWinControl
RadioButton_GetParent(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetParent)
    return (TWinControl)MySyscall(pRadioButton_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetParent)
void
RadioButton_SetParent(TRadioButton AObj, TWinControl AValue) {
    GET_FUNC_ADDR(RadioButton_SetParent)
    MySyscall(pRadioButton_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetLeft)
int32_t
RadioButton_GetLeft(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetLeft)
    return (int32_t)MySyscall(pRadioButton_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetLeft)
void
RadioButton_SetLeft(TRadioButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(RadioButton_SetLeft)
    MySyscall(pRadioButton_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetTop)
int32_t
RadioButton_GetTop(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetTop)
    return (int32_t)MySyscall(pRadioButton_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetTop)
void
RadioButton_SetTop(TRadioButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(RadioButton_SetTop)
    MySyscall(pRadioButton_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetWidth)
int32_t
RadioButton_GetWidth(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetWidth)
    return (int32_t)MySyscall(pRadioButton_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetWidth)
void
RadioButton_SetWidth(TRadioButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(RadioButton_SetWidth)
    MySyscall(pRadioButton_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetHeight)
int32_t
RadioButton_GetHeight(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetHeight)
    return (int32_t)MySyscall(pRadioButton_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetHeight)
void
RadioButton_SetHeight(TRadioButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(RadioButton_SetHeight)
    MySyscall(pRadioButton_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetCursor)
TCursor
RadioButton_GetCursor(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetCursor)
    return (TCursor)MySyscall(pRadioButton_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetCursor)
void
RadioButton_SetCursor(TRadioButton AObj, TCursor AValue) {
    GET_FUNC_ADDR(RadioButton_SetCursor)
    MySyscall(pRadioButton_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetHint)
char*
RadioButton_GetHint(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetHint)
    return (char*)MySyscall(pRadioButton_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetHint)
void
RadioButton_SetHint(TRadioButton AObj, CChar char* AValue) {
    GET_FUNC_ADDR(RadioButton_SetHint)
    MySyscall(pRadioButton_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetComponentCount)
int32_t
RadioButton_GetComponentCount(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetComponentCount)
    return (int32_t)MySyscall(pRadioButton_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetComponentIndex)
int32_t
RadioButton_GetComponentIndex(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetComponentIndex)
    return (int32_t)MySyscall(pRadioButton_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetComponentIndex)
void
RadioButton_SetComponentIndex(TRadioButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(RadioButton_SetComponentIndex)
    MySyscall(pRadioButton_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetOwner)
TComponent
RadioButton_GetOwner(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetOwner)
    return (TComponent)MySyscall(pRadioButton_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetName)
char*
RadioButton_GetName(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetName)
    return (char*)MySyscall(pRadioButton_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetName)
void
RadioButton_SetName(TRadioButton AObj, CChar char* AValue) {
    GET_FUNC_ADDR(RadioButton_SetName)
    MySyscall(pRadioButton_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetTag)
intptr_t
RadioButton_GetTag(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetTag)
    return (intptr_t)MySyscall(pRadioButton_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetTag)
void
RadioButton_SetTag(TRadioButton AObj, intptr_t AValue) {
    GET_FUNC_ADDR(RadioButton_SetTag)
    MySyscall(pRadioButton_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetAnchorSideLeft)
TAnchorSide
RadioButton_GetAnchorSideLeft(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pRadioButton_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetAnchorSideLeft)
void
RadioButton_SetAnchorSideLeft(TRadioButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(RadioButton_SetAnchorSideLeft)
    MySyscall(pRadioButton_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetAnchorSideTop)
TAnchorSide
RadioButton_GetAnchorSideTop(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pRadioButton_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetAnchorSideTop)
void
RadioButton_SetAnchorSideTop(TRadioButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(RadioButton_SetAnchorSideTop)
    MySyscall(pRadioButton_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetAnchorSideRight)
TAnchorSide
RadioButton_GetAnchorSideRight(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pRadioButton_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetAnchorSideRight)
void
RadioButton_SetAnchorSideRight(TRadioButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(RadioButton_SetAnchorSideRight)
    MySyscall(pRadioButton_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetAnchorSideBottom)
TAnchorSide
RadioButton_GetAnchorSideBottom(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pRadioButton_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetAnchorSideBottom)
void
RadioButton_SetAnchorSideBottom(TRadioButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(RadioButton_SetAnchorSideBottom)
    MySyscall(pRadioButton_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetChildSizing)
TControlChildSizing
RadioButton_GetChildSizing(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetChildSizing)
    return (TControlChildSizing)MySyscall(pRadioButton_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetChildSizing)
void
RadioButton_SetChildSizing(TRadioButton AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(RadioButton_SetChildSizing)
    MySyscall(pRadioButton_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetBorderSpacing)
TControlBorderSpacing
RadioButton_GetBorderSpacing(TRadioButton AObj) {
    GET_FUNC_ADDR(RadioButton_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pRadioButton_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_SetBorderSpacing)
void
RadioButton_SetBorderSpacing(TRadioButton AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(RadioButton_SetBorderSpacing)
    MySyscall(pRadioButton_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetDockClients)
TControl
RadioButton_GetDockClients(TRadioButton AObj, int32_t Index) {
    GET_FUNC_ADDR(RadioButton_GetDockClients)
    return (TControl)MySyscall(pRadioButton_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetControls)
TControl
RadioButton_GetControls(TRadioButton AObj, int32_t Index) {
    GET_FUNC_ADDR(RadioButton_GetControls)
    return (TControl)MySyscall(pRadioButton_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetComponents)
TComponent
RadioButton_GetComponents(TRadioButton AObj, int32_t AIndex) {
    GET_FUNC_ADDR(RadioButton_GetComponents)
    return (TComponent)MySyscall(pRadioButton_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_GetAnchorSide)
TAnchorSide
RadioButton_GetAnchorSide(TRadioButton AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(RadioButton_GetAnchorSide)
    return (TAnchorSide)MySyscall(pRadioButton_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioButton_StaticClassType)
TClass
RadioButton_StaticClassType() {
    GET_FUNC_ADDR(RadioButton_StaticClassType)
    return (TClass)MySyscall(pRadioButton_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TGroupBox-------------------

DEFINE_FUNC_PTR(GroupBox_Create)
TGroupBox
GroupBox_Create(TComponent AOwner) {
    GET_FUNC_ADDR(GroupBox_Create)
    return (TGroupBox)MySyscall(pGroupBox_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_Free)
void
GroupBox_Free(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_Free)
    MySyscall(pGroupBox_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_CanFocus)
BOOL
GroupBox_CanFocus(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_CanFocus)
    return (BOOL)MySyscall(pGroupBox_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_ContainsControl)
BOOL
GroupBox_ContainsControl(TGroupBox AObj, TControl Control) {
    GET_FUNC_ADDR(GroupBox_ContainsControl)
    return (BOOL)MySyscall(pGroupBox_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_ControlAtPos)
TControl
GroupBox_ControlAtPos(TGroupBox AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(GroupBox_ControlAtPos)
    return (TControl)MySyscall(pGroupBox_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_DisableAlign)
void
GroupBox_DisableAlign(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_DisableAlign)
    MySyscall(pGroupBox_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_EnableAlign)
void
GroupBox_EnableAlign(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_EnableAlign)
    MySyscall(pGroupBox_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_FindChildControl)
TControl
GroupBox_FindChildControl(TGroupBox AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(GroupBox_FindChildControl)
    return (TControl)MySyscall(pGroupBox_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_FlipChildren)
void
GroupBox_FlipChildren(TGroupBox AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(GroupBox_FlipChildren)
    MySyscall(pGroupBox_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_Focused)
BOOL
GroupBox_Focused(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_Focused)
    return (BOOL)MySyscall(pGroupBox_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_HandleAllocated)
BOOL
GroupBox_HandleAllocated(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_HandleAllocated)
    return (BOOL)MySyscall(pGroupBox_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_InsertControl)
void
GroupBox_InsertControl(TGroupBox AObj, TControl AControl) {
    GET_FUNC_ADDR(GroupBox_InsertControl)
    MySyscall(pGroupBox_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_Invalidate)
void
GroupBox_Invalidate(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_Invalidate)
    MySyscall(pGroupBox_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_PaintTo)
void
GroupBox_PaintTo(TGroupBox AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(GroupBox_PaintTo)
    MySyscall(pGroupBox_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_RemoveControl)
void
GroupBox_RemoveControl(TGroupBox AObj, TControl AControl) {
    GET_FUNC_ADDR(GroupBox_RemoveControl)
    MySyscall(pGroupBox_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_Realign)
void
GroupBox_Realign(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_Realign)
    MySyscall(pGroupBox_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_Repaint)
void
GroupBox_Repaint(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_Repaint)
    MySyscall(pGroupBox_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_ScaleBy)
void
GroupBox_ScaleBy(TGroupBox AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(GroupBox_ScaleBy)
    MySyscall(pGroupBox_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_ScrollBy)
void
GroupBox_ScrollBy(TGroupBox AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(GroupBox_ScrollBy)
    MySyscall(pGroupBox_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetBounds)
void
GroupBox_SetBounds(TGroupBox AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(GroupBox_SetBounds)
    MySyscall(pGroupBox_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetFocus)
void
GroupBox_SetFocus(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_SetFocus)
    MySyscall(pGroupBox_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_Update)
void
GroupBox_Update(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_Update)
    MySyscall(pGroupBox_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_BringToFront)
void
GroupBox_BringToFront(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_BringToFront)
    MySyscall(pGroupBox_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_ClientToScreen)
TPoint
GroupBox_ClientToScreen(TGroupBox AObj, TPoint Point) {
    GET_FUNC_ADDR(GroupBox_ClientToScreen)
    TPoint result;
    MySyscall(pGroupBox_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(GroupBox_ClientToParent)
TPoint
GroupBox_ClientToParent(TGroupBox AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(GroupBox_ClientToParent)
    TPoint result;
    MySyscall(pGroupBox_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(GroupBox_Dragging)
BOOL
GroupBox_Dragging(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_Dragging)
    return (BOOL)MySyscall(pGroupBox_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_HasParent)
BOOL
GroupBox_HasParent(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_HasParent)
    return (BOOL)MySyscall(pGroupBox_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_Hide)
void
GroupBox_Hide(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_Hide)
    MySyscall(pGroupBox_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_Perform)
intptr_t
GroupBox_Perform(TGroupBox AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(GroupBox_Perform)
    return (intptr_t)MySyscall(pGroupBox_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_Refresh)
void
GroupBox_Refresh(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_Refresh)
    MySyscall(pGroupBox_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_ScreenToClient)
TPoint
GroupBox_ScreenToClient(TGroupBox AObj, TPoint Point) {
    GET_FUNC_ADDR(GroupBox_ScreenToClient)
    TPoint result;
    MySyscall(pGroupBox_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(GroupBox_ParentToClient)
TPoint
GroupBox_ParentToClient(TGroupBox AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(GroupBox_ParentToClient)
    TPoint result;
    MySyscall(pGroupBox_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(GroupBox_SendToBack)
void
GroupBox_SendToBack(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_SendToBack)
    MySyscall(pGroupBox_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_Show)
void
GroupBox_Show(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_Show)
    MySyscall(pGroupBox_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetTextBuf)
int32_t
GroupBox_GetTextBuf(TGroupBox AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(GroupBox_GetTextBuf)
    return (int32_t)MySyscall(pGroupBox_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetTextLen)
int32_t
GroupBox_GetTextLen(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetTextLen)
    return (int32_t)MySyscall(pGroupBox_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetTextBuf)
void
GroupBox_SetTextBuf(TGroupBox AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(GroupBox_SetTextBuf)
    MySyscall(pGroupBox_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_FindComponent)
TComponent
GroupBox_FindComponent(TGroupBox AObj, CChar char* AName) {
    GET_FUNC_ADDR(GroupBox_FindComponent)
    return (TComponent)MySyscall(pGroupBox_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetNamePath)
char*
GroupBox_GetNamePath(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetNamePath)
    return (char*)MySyscall(pGroupBox_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_Assign)
void
GroupBox_Assign(TGroupBox AObj, TObject Source) {
    GET_FUNC_ADDR(GroupBox_Assign)
    MySyscall(pGroupBox_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_ClassType)
TClass
GroupBox_ClassType(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_ClassType)
    return (TClass)MySyscall(pGroupBox_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_ClassName)
char*
GroupBox_ClassName(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_ClassName)
    return (char*)MySyscall(pGroupBox_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_InstanceSize)
int32_t
GroupBox_InstanceSize(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_InstanceSize)
    return (int32_t)MySyscall(pGroupBox_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_InheritsFrom)
BOOL
GroupBox_InheritsFrom(TGroupBox AObj, TClass AClass) {
    GET_FUNC_ADDR(GroupBox_InheritsFrom)
    return (BOOL)MySyscall(pGroupBox_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_Equals)
BOOL
GroupBox_Equals(TGroupBox AObj, TObject Obj) {
    GET_FUNC_ADDR(GroupBox_Equals)
    return (BOOL)MySyscall(pGroupBox_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetHashCode)
int32_t
GroupBox_GetHashCode(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetHashCode)
    return (int32_t)MySyscall(pGroupBox_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_ToString)
char*
GroupBox_ToString(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_ToString)
    return (char*)MySyscall(pGroupBox_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_AnchorToNeighbour)
void
GroupBox_AnchorToNeighbour(TGroupBox AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(GroupBox_AnchorToNeighbour)
    MySyscall(pGroupBox_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_AnchorParallel)
void
GroupBox_AnchorParallel(TGroupBox AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(GroupBox_AnchorParallel)
    MySyscall(pGroupBox_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_AnchorHorizontalCenterTo)
void
GroupBox_AnchorHorizontalCenterTo(TGroupBox AObj, TControl ASibling) {
    GET_FUNC_ADDR(GroupBox_AnchorHorizontalCenterTo)
    MySyscall(pGroupBox_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_AnchorVerticalCenterTo)
void
GroupBox_AnchorVerticalCenterTo(TGroupBox AObj, TControl ASibling) {
    GET_FUNC_ADDR(GroupBox_AnchorVerticalCenterTo)
    MySyscall(pGroupBox_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_AnchorSame)
void
GroupBox_AnchorSame(TGroupBox AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(GroupBox_AnchorSame)
    MySyscall(pGroupBox_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_AnchorAsAlign)
void
GroupBox_AnchorAsAlign(TGroupBox AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(GroupBox_AnchorAsAlign)
    MySyscall(pGroupBox_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_AnchorClient)
void
GroupBox_AnchorClient(TGroupBox AObj, int32_t ASpace) {
    GET_FUNC_ADDR(GroupBox_AnchorClient)
    MySyscall(pGroupBox_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_ScaleDesignToForm)
int32_t
GroupBox_ScaleDesignToForm(TGroupBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(GroupBox_ScaleDesignToForm)
    return (int32_t)MySyscall(pGroupBox_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_ScaleFormToDesign)
int32_t
GroupBox_ScaleFormToDesign(TGroupBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(GroupBox_ScaleFormToDesign)
    return (int32_t)MySyscall(pGroupBox_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_Scale96ToForm)
int32_t
GroupBox_Scale96ToForm(TGroupBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(GroupBox_Scale96ToForm)
    return (int32_t)MySyscall(pGroupBox_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_ScaleFormTo96)
int32_t
GroupBox_ScaleFormTo96(TGroupBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(GroupBox_ScaleFormTo96)
    return (int32_t)MySyscall(pGroupBox_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_Scale96ToFont)
int32_t
GroupBox_Scale96ToFont(TGroupBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(GroupBox_Scale96ToFont)
    return (int32_t)MySyscall(pGroupBox_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_ScaleFontTo96)
int32_t
GroupBox_ScaleFontTo96(TGroupBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(GroupBox_ScaleFontTo96)
    return (int32_t)MySyscall(pGroupBox_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_ScaleScreenToFont)
int32_t
GroupBox_ScaleScreenToFont(TGroupBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(GroupBox_ScaleScreenToFont)
    return (int32_t)MySyscall(pGroupBox_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_ScaleFontToScreen)
int32_t
GroupBox_ScaleFontToScreen(TGroupBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(GroupBox_ScaleFontToScreen)
    return (int32_t)MySyscall(pGroupBox_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_Scale96ToScreen)
int32_t
GroupBox_Scale96ToScreen(TGroupBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(GroupBox_Scale96ToScreen)
    return (int32_t)MySyscall(pGroupBox_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_ScaleScreenTo96)
int32_t
GroupBox_ScaleScreenTo96(TGroupBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(GroupBox_ScaleScreenTo96)
    return (int32_t)MySyscall(pGroupBox_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_AutoAdjustLayout)
void
GroupBox_AutoAdjustLayout(TGroupBox AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(GroupBox_AutoAdjustLayout)
    MySyscall(pGroupBox_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_FixDesignFontsPPI)
void
GroupBox_FixDesignFontsPPI(TGroupBox AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(GroupBox_FixDesignFontsPPI)
    MySyscall(pGroupBox_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_ScaleFontsPPI)
void
GroupBox_ScaleFontsPPI(TGroupBox AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(GroupBox_ScaleFontsPPI)
    MySyscall(pGroupBox_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetAlign)
TAlign
GroupBox_GetAlign(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetAlign)
    return (TAlign)MySyscall(pGroupBox_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetAlign)
void
GroupBox_SetAlign(TGroupBox AObj, TAlign AValue) {
    GET_FUNC_ADDR(GroupBox_SetAlign)
    MySyscall(pGroupBox_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetAnchors)
TAnchors
GroupBox_GetAnchors(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetAnchors)
    return (TAnchors)MySyscall(pGroupBox_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetAnchors)
void
GroupBox_SetAnchors(TGroupBox AObj, TAnchors AValue) {
    GET_FUNC_ADDR(GroupBox_SetAnchors)
    MySyscall(pGroupBox_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetBiDiMode)
TBiDiMode
GroupBox_GetBiDiMode(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetBiDiMode)
    return (TBiDiMode)MySyscall(pGroupBox_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetBiDiMode)
void
GroupBox_SetBiDiMode(TGroupBox AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(GroupBox_SetBiDiMode)
    MySyscall(pGroupBox_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetCaption)
char*
GroupBox_GetCaption(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetCaption)
    return (char*)MySyscall(pGroupBox_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetCaption)
void
GroupBox_SetCaption(TGroupBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(GroupBox_SetCaption)
    MySyscall(pGroupBox_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetColor)
TColor
GroupBox_GetColor(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetColor)
    return (TColor)MySyscall(pGroupBox_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetColor)
void
GroupBox_SetColor(TGroupBox AObj, TColor AValue) {
    GET_FUNC_ADDR(GroupBox_SetColor)
    MySyscall(pGroupBox_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetConstraints)
TSizeConstraints
GroupBox_GetConstraints(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetConstraints)
    return (TSizeConstraints)MySyscall(pGroupBox_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetConstraints)
void
GroupBox_SetConstraints(TGroupBox AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(GroupBox_SetConstraints)
    MySyscall(pGroupBox_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetDockSite)
BOOL
GroupBox_GetDockSite(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetDockSite)
    return (BOOL)MySyscall(pGroupBox_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetDockSite)
void
GroupBox_SetDockSite(TGroupBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(GroupBox_SetDockSite)
    MySyscall(pGroupBox_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetDoubleBuffered)
BOOL
GroupBox_GetDoubleBuffered(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetDoubleBuffered)
    return (BOOL)MySyscall(pGroupBox_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetDoubleBuffered)
void
GroupBox_SetDoubleBuffered(TGroupBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(GroupBox_SetDoubleBuffered)
    MySyscall(pGroupBox_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetDragCursor)
TCursor
GroupBox_GetDragCursor(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetDragCursor)
    return (TCursor)MySyscall(pGroupBox_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetDragCursor)
void
GroupBox_SetDragCursor(TGroupBox AObj, TCursor AValue) {
    GET_FUNC_ADDR(GroupBox_SetDragCursor)
    MySyscall(pGroupBox_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetDragKind)
TDragKind
GroupBox_GetDragKind(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetDragKind)
    return (TDragKind)MySyscall(pGroupBox_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetDragKind)
void
GroupBox_SetDragKind(TGroupBox AObj, TDragKind AValue) {
    GET_FUNC_ADDR(GroupBox_SetDragKind)
    MySyscall(pGroupBox_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetDragMode)
TDragMode
GroupBox_GetDragMode(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetDragMode)
    return (TDragMode)MySyscall(pGroupBox_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetDragMode)
void
GroupBox_SetDragMode(TGroupBox AObj, TDragMode AValue) {
    GET_FUNC_ADDR(GroupBox_SetDragMode)
    MySyscall(pGroupBox_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetEnabled)
BOOL
GroupBox_GetEnabled(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetEnabled)
    return (BOOL)MySyscall(pGroupBox_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetEnabled)
void
GroupBox_SetEnabled(TGroupBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(GroupBox_SetEnabled)
    MySyscall(pGroupBox_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetFont)
TFont
GroupBox_GetFont(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetFont)
    return (TFont)MySyscall(pGroupBox_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetFont)
void
GroupBox_SetFont(TGroupBox AObj, TFont AValue) {
    GET_FUNC_ADDR(GroupBox_SetFont)
    MySyscall(pGroupBox_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetParentBackground)
BOOL
GroupBox_GetParentBackground(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetParentBackground)
    return (BOOL)MySyscall(pGroupBox_GetParentBackground, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetParentBackground)
void
GroupBox_SetParentBackground(TGroupBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(GroupBox_SetParentBackground)
    MySyscall(pGroupBox_SetParentBackground, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetParentColor)
BOOL
GroupBox_GetParentColor(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetParentColor)
    return (BOOL)MySyscall(pGroupBox_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetParentColor)
void
GroupBox_SetParentColor(TGroupBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(GroupBox_SetParentColor)
    MySyscall(pGroupBox_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetParentDoubleBuffered)
BOOL
GroupBox_GetParentDoubleBuffered(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pGroupBox_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetParentDoubleBuffered)
void
GroupBox_SetParentDoubleBuffered(TGroupBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(GroupBox_SetParentDoubleBuffered)
    MySyscall(pGroupBox_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetParentFont)
BOOL
GroupBox_GetParentFont(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetParentFont)
    return (BOOL)MySyscall(pGroupBox_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetParentFont)
void
GroupBox_SetParentFont(TGroupBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(GroupBox_SetParentFont)
    MySyscall(pGroupBox_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetParentShowHint)
BOOL
GroupBox_GetParentShowHint(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetParentShowHint)
    return (BOOL)MySyscall(pGroupBox_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetParentShowHint)
void
GroupBox_SetParentShowHint(TGroupBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(GroupBox_SetParentShowHint)
    MySyscall(pGroupBox_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetPopupMenu)
TPopupMenu
GroupBox_GetPopupMenu(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetPopupMenu)
    return (TPopupMenu)MySyscall(pGroupBox_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetPopupMenu)
void
GroupBox_SetPopupMenu(TGroupBox AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(GroupBox_SetPopupMenu)
    MySyscall(pGroupBox_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetShowHint)
BOOL
GroupBox_GetShowHint(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetShowHint)
    return (BOOL)MySyscall(pGroupBox_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetShowHint)
void
GroupBox_SetShowHint(TGroupBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(GroupBox_SetShowHint)
    MySyscall(pGroupBox_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetTabOrder)
TTabOrder
GroupBox_GetTabOrder(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetTabOrder)
    return (TTabOrder)MySyscall(pGroupBox_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetTabOrder)
void
GroupBox_SetTabOrder(TGroupBox AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(GroupBox_SetTabOrder)
    MySyscall(pGroupBox_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetTabStop)
BOOL
GroupBox_GetTabStop(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetTabStop)
    return (BOOL)MySyscall(pGroupBox_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetTabStop)
void
GroupBox_SetTabStop(TGroupBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(GroupBox_SetTabStop)
    MySyscall(pGroupBox_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetVisible)
BOOL
GroupBox_GetVisible(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetVisible)
    return (BOOL)MySyscall(pGroupBox_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetVisible)
void
GroupBox_SetVisible(TGroupBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(GroupBox_SetVisible)
    MySyscall(pGroupBox_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetOnAlignPosition)
void
GroupBox_SetOnAlignPosition(TGroupBox AObj, TAlignPositionEvent AEventData) {
    GET_FUNC_ADDR(GroupBox_SetOnAlignPosition)
    MySyscall(pGroupBox_SetOnAlignPosition, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetOnClick)
void
GroupBox_SetOnClick(TGroupBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(GroupBox_SetOnClick)
    MySyscall(pGroupBox_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetOnContextPopup)
void
GroupBox_SetOnContextPopup(TGroupBox AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(GroupBox_SetOnContextPopup)
    MySyscall(pGroupBox_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetOnDblClick)
void
GroupBox_SetOnDblClick(TGroupBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(GroupBox_SetOnDblClick)
    MySyscall(pGroupBox_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetOnDragDrop)
void
GroupBox_SetOnDragDrop(TGroupBox AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(GroupBox_SetOnDragDrop)
    MySyscall(pGroupBox_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetOnDockDrop)
void
GroupBox_SetOnDockDrop(TGroupBox AObj, TDockDropEvent AEventData) {
    GET_FUNC_ADDR(GroupBox_SetOnDockDrop)
    MySyscall(pGroupBox_SetOnDockDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetOnDragOver)
void
GroupBox_SetOnDragOver(TGroupBox AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(GroupBox_SetOnDragOver)
    MySyscall(pGroupBox_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetOnEndDock)
void
GroupBox_SetOnEndDock(TGroupBox AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(GroupBox_SetOnEndDock)
    MySyscall(pGroupBox_SetOnEndDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetOnEndDrag)
void
GroupBox_SetOnEndDrag(TGroupBox AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(GroupBox_SetOnEndDrag)
    MySyscall(pGroupBox_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetOnEnter)
void
GroupBox_SetOnEnter(TGroupBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(GroupBox_SetOnEnter)
    MySyscall(pGroupBox_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetOnExit)
void
GroupBox_SetOnExit(TGroupBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(GroupBox_SetOnExit)
    MySyscall(pGroupBox_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetOnGetSiteInfo)
void
GroupBox_SetOnGetSiteInfo(TGroupBox AObj, TGetSiteInfoEvent AEventData) {
    GET_FUNC_ADDR(GroupBox_SetOnGetSiteInfo)
    MySyscall(pGroupBox_SetOnGetSiteInfo, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetOnMouseDown)
void
GroupBox_SetOnMouseDown(TGroupBox AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(GroupBox_SetOnMouseDown)
    MySyscall(pGroupBox_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetOnMouseEnter)
void
GroupBox_SetOnMouseEnter(TGroupBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(GroupBox_SetOnMouseEnter)
    MySyscall(pGroupBox_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetOnMouseLeave)
void
GroupBox_SetOnMouseLeave(TGroupBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(GroupBox_SetOnMouseLeave)
    MySyscall(pGroupBox_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetOnMouseMove)
void
GroupBox_SetOnMouseMove(TGroupBox AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(GroupBox_SetOnMouseMove)
    MySyscall(pGroupBox_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetOnMouseUp)
void
GroupBox_SetOnMouseUp(TGroupBox AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(GroupBox_SetOnMouseUp)
    MySyscall(pGroupBox_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetOnStartDock)
void
GroupBox_SetOnStartDock(TGroupBox AObj, TStartDockEvent AEventData) {
    GET_FUNC_ADDR(GroupBox_SetOnStartDock)
    MySyscall(pGroupBox_SetOnStartDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetOnUnDock)
void
GroupBox_SetOnUnDock(TGroupBox AObj, TUnDockEvent AEventData) {
    GET_FUNC_ADDR(GroupBox_SetOnUnDock)
    MySyscall(pGroupBox_SetOnUnDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetDockClientCount)
int32_t
GroupBox_GetDockClientCount(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetDockClientCount)
    return (int32_t)MySyscall(pGroupBox_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetMouseInClient)
BOOL
GroupBox_GetMouseInClient(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetMouseInClient)
    return (BOOL)MySyscall(pGroupBox_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetVisibleDockClientCount)
int32_t
GroupBox_GetVisibleDockClientCount(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pGroupBox_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetBrush)
TBrush
GroupBox_GetBrush(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetBrush)
    return (TBrush)MySyscall(pGroupBox_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetControlCount)
int32_t
GroupBox_GetControlCount(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetControlCount)
    return (int32_t)MySyscall(pGroupBox_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetHandle)
HWND
GroupBox_GetHandle(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetHandle)
    return (HWND)MySyscall(pGroupBox_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetParentWindow)
HWND
GroupBox_GetParentWindow(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetParentWindow)
    return (HWND)MySyscall(pGroupBox_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetParentWindow)
void
GroupBox_SetParentWindow(TGroupBox AObj, HWND AValue) {
    GET_FUNC_ADDR(GroupBox_SetParentWindow)
    MySyscall(pGroupBox_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetShowing)
BOOL
GroupBox_GetShowing(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetShowing)
    return (BOOL)MySyscall(pGroupBox_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetUseDockManager)
BOOL
GroupBox_GetUseDockManager(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetUseDockManager)
    return (BOOL)MySyscall(pGroupBox_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetUseDockManager)
void
GroupBox_SetUseDockManager(TGroupBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(GroupBox_SetUseDockManager)
    MySyscall(pGroupBox_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetAction)
TAction
GroupBox_GetAction(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetAction)
    return (TAction)MySyscall(pGroupBox_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetAction)
void
GroupBox_SetAction(TGroupBox AObj, TAction AValue) {
    GET_FUNC_ADDR(GroupBox_SetAction)
    MySyscall(pGroupBox_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetBoundsRect)
TRect
GroupBox_GetBoundsRect(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetBoundsRect)
    TRect result;
    MySyscall(pGroupBox_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(GroupBox_SetBoundsRect)
void
GroupBox_SetBoundsRect(TGroupBox AObj, TRect AValue) {
    GET_FUNC_ADDR(GroupBox_SetBoundsRect)
    MySyscall(pGroupBox_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetClientHeight)
int32_t
GroupBox_GetClientHeight(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetClientHeight)
    return (int32_t)MySyscall(pGroupBox_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetClientHeight)
void
GroupBox_SetClientHeight(TGroupBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(GroupBox_SetClientHeight)
    MySyscall(pGroupBox_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetClientOrigin)
TPoint
GroupBox_GetClientOrigin(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetClientOrigin)
    TPoint result;
    MySyscall(pGroupBox_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(GroupBox_GetClientRect)
TRect
GroupBox_GetClientRect(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetClientRect)
    TRect result;
    MySyscall(pGroupBox_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(GroupBox_GetClientWidth)
int32_t
GroupBox_GetClientWidth(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetClientWidth)
    return (int32_t)MySyscall(pGroupBox_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetClientWidth)
void
GroupBox_SetClientWidth(TGroupBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(GroupBox_SetClientWidth)
    MySyscall(pGroupBox_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetControlState)
TControlState
GroupBox_GetControlState(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetControlState)
    return (TControlState)MySyscall(pGroupBox_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetControlState)
void
GroupBox_SetControlState(TGroupBox AObj, TControlState AValue) {
    GET_FUNC_ADDR(GroupBox_SetControlState)
    MySyscall(pGroupBox_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetControlStyle)
TControlStyle
GroupBox_GetControlStyle(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetControlStyle)
    return (TControlStyle)MySyscall(pGroupBox_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetControlStyle)
void
GroupBox_SetControlStyle(TGroupBox AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(GroupBox_SetControlStyle)
    MySyscall(pGroupBox_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetFloating)
BOOL
GroupBox_GetFloating(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetFloating)
    return (BOOL)MySyscall(pGroupBox_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetParent)
TWinControl
GroupBox_GetParent(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetParent)
    return (TWinControl)MySyscall(pGroupBox_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetParent)
void
GroupBox_SetParent(TGroupBox AObj, TWinControl AValue) {
    GET_FUNC_ADDR(GroupBox_SetParent)
    MySyscall(pGroupBox_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetLeft)
int32_t
GroupBox_GetLeft(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetLeft)
    return (int32_t)MySyscall(pGroupBox_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetLeft)
void
GroupBox_SetLeft(TGroupBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(GroupBox_SetLeft)
    MySyscall(pGroupBox_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetTop)
int32_t
GroupBox_GetTop(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetTop)
    return (int32_t)MySyscall(pGroupBox_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetTop)
void
GroupBox_SetTop(TGroupBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(GroupBox_SetTop)
    MySyscall(pGroupBox_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetWidth)
int32_t
GroupBox_GetWidth(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetWidth)
    return (int32_t)MySyscall(pGroupBox_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetWidth)
void
GroupBox_SetWidth(TGroupBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(GroupBox_SetWidth)
    MySyscall(pGroupBox_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetHeight)
int32_t
GroupBox_GetHeight(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetHeight)
    return (int32_t)MySyscall(pGroupBox_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetHeight)
void
GroupBox_SetHeight(TGroupBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(GroupBox_SetHeight)
    MySyscall(pGroupBox_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetCursor)
TCursor
GroupBox_GetCursor(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetCursor)
    return (TCursor)MySyscall(pGroupBox_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetCursor)
void
GroupBox_SetCursor(TGroupBox AObj, TCursor AValue) {
    GET_FUNC_ADDR(GroupBox_SetCursor)
    MySyscall(pGroupBox_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetHint)
char*
GroupBox_GetHint(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetHint)
    return (char*)MySyscall(pGroupBox_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetHint)
void
GroupBox_SetHint(TGroupBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(GroupBox_SetHint)
    MySyscall(pGroupBox_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetComponentCount)
int32_t
GroupBox_GetComponentCount(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetComponentCount)
    return (int32_t)MySyscall(pGroupBox_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetComponentIndex)
int32_t
GroupBox_GetComponentIndex(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetComponentIndex)
    return (int32_t)MySyscall(pGroupBox_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetComponentIndex)
void
GroupBox_SetComponentIndex(TGroupBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(GroupBox_SetComponentIndex)
    MySyscall(pGroupBox_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetOwner)
TComponent
GroupBox_GetOwner(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetOwner)
    return (TComponent)MySyscall(pGroupBox_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetName)
char*
GroupBox_GetName(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetName)
    return (char*)MySyscall(pGroupBox_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetName)
void
GroupBox_SetName(TGroupBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(GroupBox_SetName)
    MySyscall(pGroupBox_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetTag)
intptr_t
GroupBox_GetTag(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetTag)
    return (intptr_t)MySyscall(pGroupBox_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetTag)
void
GroupBox_SetTag(TGroupBox AObj, intptr_t AValue) {
    GET_FUNC_ADDR(GroupBox_SetTag)
    MySyscall(pGroupBox_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetAnchorSideLeft)
TAnchorSide
GroupBox_GetAnchorSideLeft(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pGroupBox_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetAnchorSideLeft)
void
GroupBox_SetAnchorSideLeft(TGroupBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(GroupBox_SetAnchorSideLeft)
    MySyscall(pGroupBox_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetAnchorSideTop)
TAnchorSide
GroupBox_GetAnchorSideTop(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pGroupBox_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetAnchorSideTop)
void
GroupBox_SetAnchorSideTop(TGroupBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(GroupBox_SetAnchorSideTop)
    MySyscall(pGroupBox_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetAnchorSideRight)
TAnchorSide
GroupBox_GetAnchorSideRight(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pGroupBox_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetAnchorSideRight)
void
GroupBox_SetAnchorSideRight(TGroupBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(GroupBox_SetAnchorSideRight)
    MySyscall(pGroupBox_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetAnchorSideBottom)
TAnchorSide
GroupBox_GetAnchorSideBottom(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pGroupBox_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetAnchorSideBottom)
void
GroupBox_SetAnchorSideBottom(TGroupBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(GroupBox_SetAnchorSideBottom)
    MySyscall(pGroupBox_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetChildSizing)
TControlChildSizing
GroupBox_GetChildSizing(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetChildSizing)
    return (TControlChildSizing)MySyscall(pGroupBox_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetChildSizing)
void
GroupBox_SetChildSizing(TGroupBox AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(GroupBox_SetChildSizing)
    MySyscall(pGroupBox_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetBorderSpacing)
TControlBorderSpacing
GroupBox_GetBorderSpacing(TGroupBox AObj) {
    GET_FUNC_ADDR(GroupBox_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pGroupBox_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_SetBorderSpacing)
void
GroupBox_SetBorderSpacing(TGroupBox AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(GroupBox_SetBorderSpacing)
    MySyscall(pGroupBox_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetDockClients)
TControl
GroupBox_GetDockClients(TGroupBox AObj, int32_t Index) {
    GET_FUNC_ADDR(GroupBox_GetDockClients)
    return (TControl)MySyscall(pGroupBox_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetControls)
TControl
GroupBox_GetControls(TGroupBox AObj, int32_t Index) {
    GET_FUNC_ADDR(GroupBox_GetControls)
    return (TControl)MySyscall(pGroupBox_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetComponents)
TComponent
GroupBox_GetComponents(TGroupBox AObj, int32_t AIndex) {
    GET_FUNC_ADDR(GroupBox_GetComponents)
    return (TComponent)MySyscall(pGroupBox_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_GetAnchorSide)
TAnchorSide
GroupBox_GetAnchorSide(TGroupBox AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(GroupBox_GetAnchorSide)
    return (TAnchorSide)MySyscall(pGroupBox_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GroupBox_StaticClassType)
TClass
GroupBox_StaticClassType() {
    GET_FUNC_ADDR(GroupBox_StaticClassType)
    return (TClass)MySyscall(pGroupBox_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TLabel-------------------

DEFINE_FUNC_PTR(Label_Create)
TLabel
Label_Create(TComponent AOwner) {
    GET_FUNC_ADDR(Label_Create)
    return (TLabel)MySyscall(pLabel_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_Free)
void
Label_Free(TLabel AObj) {
    GET_FUNC_ADDR(Label_Free)
    MySyscall(pLabel_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_BringToFront)
void
Label_BringToFront(TLabel AObj) {
    GET_FUNC_ADDR(Label_BringToFront)
    MySyscall(pLabel_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_ClientToScreen)
TPoint
Label_ClientToScreen(TLabel AObj, TPoint Point) {
    GET_FUNC_ADDR(Label_ClientToScreen)
    TPoint result;
    MySyscall(pLabel_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Label_ClientToParent)
TPoint
Label_ClientToParent(TLabel AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Label_ClientToParent)
    TPoint result;
    MySyscall(pLabel_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Label_Dragging)
BOOL
Label_Dragging(TLabel AObj) {
    GET_FUNC_ADDR(Label_Dragging)
    return (BOOL)MySyscall(pLabel_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_HasParent)
BOOL
Label_HasParent(TLabel AObj) {
    GET_FUNC_ADDR(Label_HasParent)
    return (BOOL)MySyscall(pLabel_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_Hide)
void
Label_Hide(TLabel AObj) {
    GET_FUNC_ADDR(Label_Hide)
    MySyscall(pLabel_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_Invalidate)
void
Label_Invalidate(TLabel AObj) {
    GET_FUNC_ADDR(Label_Invalidate)
    MySyscall(pLabel_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_Perform)
intptr_t
Label_Perform(TLabel AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(Label_Perform)
    return (intptr_t)MySyscall(pLabel_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_Refresh)
void
Label_Refresh(TLabel AObj) {
    GET_FUNC_ADDR(Label_Refresh)
    MySyscall(pLabel_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_Repaint)
void
Label_Repaint(TLabel AObj) {
    GET_FUNC_ADDR(Label_Repaint)
    MySyscall(pLabel_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_ScreenToClient)
TPoint
Label_ScreenToClient(TLabel AObj, TPoint Point) {
    GET_FUNC_ADDR(Label_ScreenToClient)
    TPoint result;
    MySyscall(pLabel_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Label_ParentToClient)
TPoint
Label_ParentToClient(TLabel AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Label_ParentToClient)
    TPoint result;
    MySyscall(pLabel_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Label_SendToBack)
void
Label_SendToBack(TLabel AObj) {
    GET_FUNC_ADDR(Label_SendToBack)
    MySyscall(pLabel_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetBounds)
void
Label_SetBounds(TLabel AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(Label_SetBounds)
    MySyscall(pLabel_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_Show)
void
Label_Show(TLabel AObj) {
    GET_FUNC_ADDR(Label_Show)
    MySyscall(pLabel_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_Update)
void
Label_Update(TLabel AObj) {
    GET_FUNC_ADDR(Label_Update)
    MySyscall(pLabel_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetTextBuf)
int32_t
Label_GetTextBuf(TLabel AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(Label_GetTextBuf)
    return (int32_t)MySyscall(pLabel_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetTextLen)
int32_t
Label_GetTextLen(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetTextLen)
    return (int32_t)MySyscall(pLabel_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetTextBuf)
void
Label_SetTextBuf(TLabel AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(Label_SetTextBuf)
    MySyscall(pLabel_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_FindComponent)
TComponent
Label_FindComponent(TLabel AObj, CChar char* AName) {
    GET_FUNC_ADDR(Label_FindComponent)
    return (TComponent)MySyscall(pLabel_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetNamePath)
char*
Label_GetNamePath(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetNamePath)
    return (char*)MySyscall(pLabel_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_Assign)
void
Label_Assign(TLabel AObj, TObject Source) {
    GET_FUNC_ADDR(Label_Assign)
    MySyscall(pLabel_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_ClassType)
TClass
Label_ClassType(TLabel AObj) {
    GET_FUNC_ADDR(Label_ClassType)
    return (TClass)MySyscall(pLabel_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_ClassName)
char*
Label_ClassName(TLabel AObj) {
    GET_FUNC_ADDR(Label_ClassName)
    return (char*)MySyscall(pLabel_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_InstanceSize)
int32_t
Label_InstanceSize(TLabel AObj) {
    GET_FUNC_ADDR(Label_InstanceSize)
    return (int32_t)MySyscall(pLabel_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_InheritsFrom)
BOOL
Label_InheritsFrom(TLabel AObj, TClass AClass) {
    GET_FUNC_ADDR(Label_InheritsFrom)
    return (BOOL)MySyscall(pLabel_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_Equals)
BOOL
Label_Equals(TLabel AObj, TObject Obj) {
    GET_FUNC_ADDR(Label_Equals)
    return (BOOL)MySyscall(pLabel_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetHashCode)
int32_t
Label_GetHashCode(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetHashCode)
    return (int32_t)MySyscall(pLabel_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_ToString)
char*
Label_ToString(TLabel AObj) {
    GET_FUNC_ADDR(Label_ToString)
    return (char*)MySyscall(pLabel_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_AnchorToNeighbour)
void
Label_AnchorToNeighbour(TLabel AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Label_AnchorToNeighbour)
    MySyscall(pLabel_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_AnchorParallel)
void
Label_AnchorParallel(TLabel AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Label_AnchorParallel)
    MySyscall(pLabel_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_AnchorHorizontalCenterTo)
void
Label_AnchorHorizontalCenterTo(TLabel AObj, TControl ASibling) {
    GET_FUNC_ADDR(Label_AnchorHorizontalCenterTo)
    MySyscall(pLabel_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_AnchorVerticalCenterTo)
void
Label_AnchorVerticalCenterTo(TLabel AObj, TControl ASibling) {
    GET_FUNC_ADDR(Label_AnchorVerticalCenterTo)
    MySyscall(pLabel_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_AnchorSame)
void
Label_AnchorSame(TLabel AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(Label_AnchorSame)
    MySyscall(pLabel_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_AnchorAsAlign)
void
Label_AnchorAsAlign(TLabel AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(Label_AnchorAsAlign)
    MySyscall(pLabel_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_AnchorClient)
void
Label_AnchorClient(TLabel AObj, int32_t ASpace) {
    GET_FUNC_ADDR(Label_AnchorClient)
    MySyscall(pLabel_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_ScaleDesignToForm)
int32_t
Label_ScaleDesignToForm(TLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Label_ScaleDesignToForm)
    return (int32_t)MySyscall(pLabel_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_ScaleFormToDesign)
int32_t
Label_ScaleFormToDesign(TLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Label_ScaleFormToDesign)
    return (int32_t)MySyscall(pLabel_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_Scale96ToForm)
int32_t
Label_Scale96ToForm(TLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Label_Scale96ToForm)
    return (int32_t)MySyscall(pLabel_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_ScaleFormTo96)
int32_t
Label_ScaleFormTo96(TLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Label_ScaleFormTo96)
    return (int32_t)MySyscall(pLabel_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_Scale96ToFont)
int32_t
Label_Scale96ToFont(TLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Label_Scale96ToFont)
    return (int32_t)MySyscall(pLabel_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_ScaleFontTo96)
int32_t
Label_ScaleFontTo96(TLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Label_ScaleFontTo96)
    return (int32_t)MySyscall(pLabel_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_ScaleScreenToFont)
int32_t
Label_ScaleScreenToFont(TLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Label_ScaleScreenToFont)
    return (int32_t)MySyscall(pLabel_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_ScaleFontToScreen)
int32_t
Label_ScaleFontToScreen(TLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Label_ScaleFontToScreen)
    return (int32_t)MySyscall(pLabel_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_Scale96ToScreen)
int32_t
Label_Scale96ToScreen(TLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Label_Scale96ToScreen)
    return (int32_t)MySyscall(pLabel_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_ScaleScreenTo96)
int32_t
Label_ScaleScreenTo96(TLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Label_ScaleScreenTo96)
    return (int32_t)MySyscall(pLabel_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_AutoAdjustLayout)
void
Label_AutoAdjustLayout(TLabel AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(Label_AutoAdjustLayout)
    MySyscall(pLabel_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_FixDesignFontsPPI)
void
Label_FixDesignFontsPPI(TLabel AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(Label_FixDesignFontsPPI)
    MySyscall(pLabel_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_ScaleFontsPPI)
void
Label_ScaleFontsPPI(TLabel AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(Label_ScaleFontsPPI)
    MySyscall(pLabel_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetOptimalFill)
BOOL
Label_GetOptimalFill(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetOptimalFill)
    return (BOOL)MySyscall(pLabel_GetOptimalFill, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetOptimalFill)
void
Label_SetOptimalFill(TLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Label_SetOptimalFill)
    MySyscall(pLabel_SetOptimalFill, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetAlign)
TAlign
Label_GetAlign(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetAlign)
    return (TAlign)MySyscall(pLabel_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetAlign)
void
Label_SetAlign(TLabel AObj, TAlign AValue) {
    GET_FUNC_ADDR(Label_SetAlign)
    MySyscall(pLabel_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetAlignment)
TAlignment
Label_GetAlignment(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetAlignment)
    return (TAlignment)MySyscall(pLabel_GetAlignment, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetAlignment)
void
Label_SetAlignment(TLabel AObj, TAlignment AValue) {
    GET_FUNC_ADDR(Label_SetAlignment)
    MySyscall(pLabel_SetAlignment, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetAnchors)
TAnchors
Label_GetAnchors(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetAnchors)
    return (TAnchors)MySyscall(pLabel_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetAnchors)
void
Label_SetAnchors(TLabel AObj, TAnchors AValue) {
    GET_FUNC_ADDR(Label_SetAnchors)
    MySyscall(pLabel_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetAutoSize)
BOOL
Label_GetAutoSize(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetAutoSize)
    return (BOOL)MySyscall(pLabel_GetAutoSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetAutoSize)
void
Label_SetAutoSize(TLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Label_SetAutoSize)
    MySyscall(pLabel_SetAutoSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetBiDiMode)
TBiDiMode
Label_GetBiDiMode(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetBiDiMode)
    return (TBiDiMode)MySyscall(pLabel_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetBiDiMode)
void
Label_SetBiDiMode(TLabel AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(Label_SetBiDiMode)
    MySyscall(pLabel_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetCaption)
char*
Label_GetCaption(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetCaption)
    return (char*)MySyscall(pLabel_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetCaption)
void
Label_SetCaption(TLabel AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Label_SetCaption)
    MySyscall(pLabel_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetColor)
TColor
Label_GetColor(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetColor)
    return (TColor)MySyscall(pLabel_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetColor)
void
Label_SetColor(TLabel AObj, TColor AValue) {
    GET_FUNC_ADDR(Label_SetColor)
    MySyscall(pLabel_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetConstraints)
TSizeConstraints
Label_GetConstraints(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetConstraints)
    return (TSizeConstraints)MySyscall(pLabel_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetConstraints)
void
Label_SetConstraints(TLabel AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(Label_SetConstraints)
    MySyscall(pLabel_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetDragCursor)
TCursor
Label_GetDragCursor(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetDragCursor)
    return (TCursor)MySyscall(pLabel_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetDragCursor)
void
Label_SetDragCursor(TLabel AObj, TCursor AValue) {
    GET_FUNC_ADDR(Label_SetDragCursor)
    MySyscall(pLabel_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetDragKind)
TDragKind
Label_GetDragKind(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetDragKind)
    return (TDragKind)MySyscall(pLabel_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetDragKind)
void
Label_SetDragKind(TLabel AObj, TDragKind AValue) {
    GET_FUNC_ADDR(Label_SetDragKind)
    MySyscall(pLabel_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetDragMode)
TDragMode
Label_GetDragMode(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetDragMode)
    return (TDragMode)MySyscall(pLabel_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetDragMode)
void
Label_SetDragMode(TLabel AObj, TDragMode AValue) {
    GET_FUNC_ADDR(Label_SetDragMode)
    MySyscall(pLabel_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetEnabled)
BOOL
Label_GetEnabled(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetEnabled)
    return (BOOL)MySyscall(pLabel_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetEnabled)
void
Label_SetEnabled(TLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Label_SetEnabled)
    MySyscall(pLabel_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetFocusControl)
TWinControl
Label_GetFocusControl(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetFocusControl)
    return (TWinControl)MySyscall(pLabel_GetFocusControl, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetFocusControl)
void
Label_SetFocusControl(TLabel AObj, TWinControl AValue) {
    GET_FUNC_ADDR(Label_SetFocusControl)
    MySyscall(pLabel_SetFocusControl, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetFont)
TFont
Label_GetFont(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetFont)
    return (TFont)MySyscall(pLabel_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetFont)
void
Label_SetFont(TLabel AObj, TFont AValue) {
    GET_FUNC_ADDR(Label_SetFont)
    MySyscall(pLabel_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetParentColor)
BOOL
Label_GetParentColor(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetParentColor)
    return (BOOL)MySyscall(pLabel_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetParentColor)
void
Label_SetParentColor(TLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Label_SetParentColor)
    MySyscall(pLabel_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetParentFont)
BOOL
Label_GetParentFont(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetParentFont)
    return (BOOL)MySyscall(pLabel_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetParentFont)
void
Label_SetParentFont(TLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Label_SetParentFont)
    MySyscall(pLabel_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetParentShowHint)
BOOL
Label_GetParentShowHint(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetParentShowHint)
    return (BOOL)MySyscall(pLabel_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetParentShowHint)
void
Label_SetParentShowHint(TLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Label_SetParentShowHint)
    MySyscall(pLabel_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetPopupMenu)
TPopupMenu
Label_GetPopupMenu(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetPopupMenu)
    return (TPopupMenu)MySyscall(pLabel_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetPopupMenu)
void
Label_SetPopupMenu(TLabel AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(Label_SetPopupMenu)
    MySyscall(pLabel_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetShowAccelChar)
BOOL
Label_GetShowAccelChar(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetShowAccelChar)
    return (BOOL)MySyscall(pLabel_GetShowAccelChar, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetShowAccelChar)
void
Label_SetShowAccelChar(TLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Label_SetShowAccelChar)
    MySyscall(pLabel_SetShowAccelChar, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetShowHint)
BOOL
Label_GetShowHint(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetShowHint)
    return (BOOL)MySyscall(pLabel_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetShowHint)
void
Label_SetShowHint(TLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Label_SetShowHint)
    MySyscall(pLabel_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetTransparent)
BOOL
Label_GetTransparent(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetTransparent)
    return (BOOL)MySyscall(pLabel_GetTransparent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetTransparent)
void
Label_SetTransparent(TLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Label_SetTransparent)
    MySyscall(pLabel_SetTransparent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetLayout)
TTextLayout
Label_GetLayout(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetLayout)
    return (TTextLayout)MySyscall(pLabel_GetLayout, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetLayout)
void
Label_SetLayout(TLabel AObj, TTextLayout AValue) {
    GET_FUNC_ADDR(Label_SetLayout)
    MySyscall(pLabel_SetLayout, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetVisible)
BOOL
Label_GetVisible(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetVisible)
    return (BOOL)MySyscall(pLabel_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetVisible)
void
Label_SetVisible(TLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Label_SetVisible)
    MySyscall(pLabel_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetWordWrap)
BOOL
Label_GetWordWrap(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetWordWrap)
    return (BOOL)MySyscall(pLabel_GetWordWrap, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetWordWrap)
void
Label_SetWordWrap(TLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Label_SetWordWrap)
    MySyscall(pLabel_SetWordWrap, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetOnClick)
void
Label_SetOnClick(TLabel AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Label_SetOnClick)
    MySyscall(pLabel_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetOnContextPopup)
void
Label_SetOnContextPopup(TLabel AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(Label_SetOnContextPopup)
    MySyscall(pLabel_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetOnDblClick)
void
Label_SetOnDblClick(TLabel AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Label_SetOnDblClick)
    MySyscall(pLabel_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetOnDragDrop)
void
Label_SetOnDragDrop(TLabel AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(Label_SetOnDragDrop)
    MySyscall(pLabel_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetOnDragOver)
void
Label_SetOnDragOver(TLabel AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(Label_SetOnDragOver)
    MySyscall(pLabel_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetOnEndDrag)
void
Label_SetOnEndDrag(TLabel AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(Label_SetOnEndDrag)
    MySyscall(pLabel_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetOnMouseDown)
void
Label_SetOnMouseDown(TLabel AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(Label_SetOnMouseDown)
    MySyscall(pLabel_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetOnMouseMove)
void
Label_SetOnMouseMove(TLabel AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(Label_SetOnMouseMove)
    MySyscall(pLabel_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetOnMouseUp)
void
Label_SetOnMouseUp(TLabel AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(Label_SetOnMouseUp)
    MySyscall(pLabel_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetOnMouseEnter)
void
Label_SetOnMouseEnter(TLabel AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Label_SetOnMouseEnter)
    MySyscall(pLabel_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetOnMouseLeave)
void
Label_SetOnMouseLeave(TLabel AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Label_SetOnMouseLeave)
    MySyscall(pLabel_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetCanvas)
TCanvas
Label_GetCanvas(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetCanvas)
    return (TCanvas)MySyscall(pLabel_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetAction)
TAction
Label_GetAction(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetAction)
    return (TAction)MySyscall(pLabel_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetAction)
void
Label_SetAction(TLabel AObj, TAction AValue) {
    GET_FUNC_ADDR(Label_SetAction)
    MySyscall(pLabel_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetBoundsRect)
TRect
Label_GetBoundsRect(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetBoundsRect)
    TRect result;
    MySyscall(pLabel_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Label_SetBoundsRect)
void
Label_SetBoundsRect(TLabel AObj, TRect AValue) {
    GET_FUNC_ADDR(Label_SetBoundsRect)
    MySyscall(pLabel_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetClientHeight)
int32_t
Label_GetClientHeight(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetClientHeight)
    return (int32_t)MySyscall(pLabel_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetClientHeight)
void
Label_SetClientHeight(TLabel AObj, int32_t AValue) {
    GET_FUNC_ADDR(Label_SetClientHeight)
    MySyscall(pLabel_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetClientOrigin)
TPoint
Label_GetClientOrigin(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetClientOrigin)
    TPoint result;
    MySyscall(pLabel_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Label_GetClientRect)
TRect
Label_GetClientRect(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetClientRect)
    TRect result;
    MySyscall(pLabel_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Label_GetClientWidth)
int32_t
Label_GetClientWidth(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetClientWidth)
    return (int32_t)MySyscall(pLabel_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetClientWidth)
void
Label_SetClientWidth(TLabel AObj, int32_t AValue) {
    GET_FUNC_ADDR(Label_SetClientWidth)
    MySyscall(pLabel_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetControlState)
TControlState
Label_GetControlState(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetControlState)
    return (TControlState)MySyscall(pLabel_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetControlState)
void
Label_SetControlState(TLabel AObj, TControlState AValue) {
    GET_FUNC_ADDR(Label_SetControlState)
    MySyscall(pLabel_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetControlStyle)
TControlStyle
Label_GetControlStyle(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetControlStyle)
    return (TControlStyle)MySyscall(pLabel_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetControlStyle)
void
Label_SetControlStyle(TLabel AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(Label_SetControlStyle)
    MySyscall(pLabel_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetFloating)
BOOL
Label_GetFloating(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetFloating)
    return (BOOL)MySyscall(pLabel_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetParent)
TWinControl
Label_GetParent(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetParent)
    return (TWinControl)MySyscall(pLabel_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetParent)
void
Label_SetParent(TLabel AObj, TWinControl AValue) {
    GET_FUNC_ADDR(Label_SetParent)
    MySyscall(pLabel_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetLeft)
int32_t
Label_GetLeft(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetLeft)
    return (int32_t)MySyscall(pLabel_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetLeft)
void
Label_SetLeft(TLabel AObj, int32_t AValue) {
    GET_FUNC_ADDR(Label_SetLeft)
    MySyscall(pLabel_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetTop)
int32_t
Label_GetTop(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetTop)
    return (int32_t)MySyscall(pLabel_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetTop)
void
Label_SetTop(TLabel AObj, int32_t AValue) {
    GET_FUNC_ADDR(Label_SetTop)
    MySyscall(pLabel_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetWidth)
int32_t
Label_GetWidth(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetWidth)
    return (int32_t)MySyscall(pLabel_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetWidth)
void
Label_SetWidth(TLabel AObj, int32_t AValue) {
    GET_FUNC_ADDR(Label_SetWidth)
    MySyscall(pLabel_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetHeight)
int32_t
Label_GetHeight(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetHeight)
    return (int32_t)MySyscall(pLabel_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetHeight)
void
Label_SetHeight(TLabel AObj, int32_t AValue) {
    GET_FUNC_ADDR(Label_SetHeight)
    MySyscall(pLabel_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetCursor)
TCursor
Label_GetCursor(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetCursor)
    return (TCursor)MySyscall(pLabel_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetCursor)
void
Label_SetCursor(TLabel AObj, TCursor AValue) {
    GET_FUNC_ADDR(Label_SetCursor)
    MySyscall(pLabel_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetHint)
char*
Label_GetHint(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetHint)
    return (char*)MySyscall(pLabel_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetHint)
void
Label_SetHint(TLabel AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Label_SetHint)
    MySyscall(pLabel_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetComponentCount)
int32_t
Label_GetComponentCount(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetComponentCount)
    return (int32_t)MySyscall(pLabel_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetComponentIndex)
int32_t
Label_GetComponentIndex(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetComponentIndex)
    return (int32_t)MySyscall(pLabel_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetComponentIndex)
void
Label_SetComponentIndex(TLabel AObj, int32_t AValue) {
    GET_FUNC_ADDR(Label_SetComponentIndex)
    MySyscall(pLabel_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetOwner)
TComponent
Label_GetOwner(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetOwner)
    return (TComponent)MySyscall(pLabel_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetName)
char*
Label_GetName(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetName)
    return (char*)MySyscall(pLabel_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetName)
void
Label_SetName(TLabel AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Label_SetName)
    MySyscall(pLabel_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetTag)
intptr_t
Label_GetTag(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetTag)
    return (intptr_t)MySyscall(pLabel_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetTag)
void
Label_SetTag(TLabel AObj, intptr_t AValue) {
    GET_FUNC_ADDR(Label_SetTag)
    MySyscall(pLabel_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetAnchorSideLeft)
TAnchorSide
Label_GetAnchorSideLeft(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pLabel_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetAnchorSideLeft)
void
Label_SetAnchorSideLeft(TLabel AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Label_SetAnchorSideLeft)
    MySyscall(pLabel_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetAnchorSideTop)
TAnchorSide
Label_GetAnchorSideTop(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pLabel_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetAnchorSideTop)
void
Label_SetAnchorSideTop(TLabel AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Label_SetAnchorSideTop)
    MySyscall(pLabel_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetAnchorSideRight)
TAnchorSide
Label_GetAnchorSideRight(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pLabel_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetAnchorSideRight)
void
Label_SetAnchorSideRight(TLabel AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Label_SetAnchorSideRight)
    MySyscall(pLabel_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetAnchorSideBottom)
TAnchorSide
Label_GetAnchorSideBottom(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pLabel_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetAnchorSideBottom)
void
Label_SetAnchorSideBottom(TLabel AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Label_SetAnchorSideBottom)
    MySyscall(pLabel_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetBorderSpacing)
TControlBorderSpacing
Label_GetBorderSpacing(TLabel AObj) {
    GET_FUNC_ADDR(Label_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pLabel_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_SetBorderSpacing)
void
Label_SetBorderSpacing(TLabel AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(Label_SetBorderSpacing)
    MySyscall(pLabel_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetComponents)
TComponent
Label_GetComponents(TLabel AObj, int32_t AIndex) {
    GET_FUNC_ADDR(Label_GetComponents)
    return (TComponent)MySyscall(pLabel_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_GetAnchorSide)
TAnchorSide
Label_GetAnchorSide(TLabel AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(Label_GetAnchorSide)
    return (TAnchorSide)MySyscall(pLabel_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Label_StaticClassType)
TClass
Label_StaticClassType() {
    GET_FUNC_ADDR(Label_StaticClassType)
    return (TClass)MySyscall(pLabel_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TListBox-------------------

DEFINE_FUNC_PTR(ListBox_Create)
TListBox
ListBox_Create(TComponent AOwner) {
    GET_FUNC_ADDR(ListBox_Create)
    return (TListBox)MySyscall(pListBox_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_Free)
void
ListBox_Free(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_Free)
    MySyscall(pListBox_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_AddItem)
void
ListBox_AddItem(TListBox AObj, CChar char* Item, TObject AObject) {
    GET_FUNC_ADDR(ListBox_AddItem)
    MySyscall(pListBox_AddItem, 3, AObj, Item, AObject ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_Clear)
void
ListBox_Clear(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_Clear)
    MySyscall(pListBox_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_ClearSelection)
void
ListBox_ClearSelection(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_ClearSelection)
    MySyscall(pListBox_ClearSelection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_DeleteSelected)
void
ListBox_DeleteSelected(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_DeleteSelected)
    MySyscall(pListBox_DeleteSelected, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_ItemAtPos)
int32_t
ListBox_ItemAtPos(TListBox AObj, TPoint Pos, BOOL Existing) {
    GET_FUNC_ADDR(ListBox_ItemAtPos)
    return (int32_t)MySyscall(pListBox_ItemAtPos, 3, AObj, &Pos, Existing ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_ItemRect)
TRect
ListBox_ItemRect(TListBox AObj, int32_t Index) {
    GET_FUNC_ADDR(ListBox_ItemRect)
    TRect result;
    MySyscall(pListBox_ItemRect, 3, AObj, Index, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ListBox_SelectAll)
void
ListBox_SelectAll(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_SelectAll)
    MySyscall(pListBox_SelectAll, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_CanFocus)
BOOL
ListBox_CanFocus(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_CanFocus)
    return (BOOL)MySyscall(pListBox_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_ContainsControl)
BOOL
ListBox_ContainsControl(TListBox AObj, TControl Control) {
    GET_FUNC_ADDR(ListBox_ContainsControl)
    return (BOOL)MySyscall(pListBox_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_ControlAtPos)
TControl
ListBox_ControlAtPos(TListBox AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(ListBox_ControlAtPos)
    return (TControl)MySyscall(pListBox_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_DisableAlign)
void
ListBox_DisableAlign(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_DisableAlign)
    MySyscall(pListBox_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_EnableAlign)
void
ListBox_EnableAlign(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_EnableAlign)
    MySyscall(pListBox_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_FindChildControl)
TControl
ListBox_FindChildControl(TListBox AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(ListBox_FindChildControl)
    return (TControl)MySyscall(pListBox_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_FlipChildren)
void
ListBox_FlipChildren(TListBox AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(ListBox_FlipChildren)
    MySyscall(pListBox_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_Focused)
BOOL
ListBox_Focused(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_Focused)
    return (BOOL)MySyscall(pListBox_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_HandleAllocated)
BOOL
ListBox_HandleAllocated(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_HandleAllocated)
    return (BOOL)MySyscall(pListBox_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_InsertControl)
void
ListBox_InsertControl(TListBox AObj, TControl AControl) {
    GET_FUNC_ADDR(ListBox_InsertControl)
    MySyscall(pListBox_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_Invalidate)
void
ListBox_Invalidate(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_Invalidate)
    MySyscall(pListBox_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_PaintTo)
void
ListBox_PaintTo(TListBox AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(ListBox_PaintTo)
    MySyscall(pListBox_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_RemoveControl)
void
ListBox_RemoveControl(TListBox AObj, TControl AControl) {
    GET_FUNC_ADDR(ListBox_RemoveControl)
    MySyscall(pListBox_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_Realign)
void
ListBox_Realign(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_Realign)
    MySyscall(pListBox_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_Repaint)
void
ListBox_Repaint(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_Repaint)
    MySyscall(pListBox_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_ScaleBy)
void
ListBox_ScaleBy(TListBox AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(ListBox_ScaleBy)
    MySyscall(pListBox_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_ScrollBy)
void
ListBox_ScrollBy(TListBox AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(ListBox_ScrollBy)
    MySyscall(pListBox_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetBounds)
void
ListBox_SetBounds(TListBox AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(ListBox_SetBounds)
    MySyscall(pListBox_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetFocus)
void
ListBox_SetFocus(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_SetFocus)
    MySyscall(pListBox_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_Update)
void
ListBox_Update(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_Update)
    MySyscall(pListBox_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_BringToFront)
void
ListBox_BringToFront(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_BringToFront)
    MySyscall(pListBox_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_ClientToScreen)
TPoint
ListBox_ClientToScreen(TListBox AObj, TPoint Point) {
    GET_FUNC_ADDR(ListBox_ClientToScreen)
    TPoint result;
    MySyscall(pListBox_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ListBox_ClientToParent)
TPoint
ListBox_ClientToParent(TListBox AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ListBox_ClientToParent)
    TPoint result;
    MySyscall(pListBox_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ListBox_Dragging)
BOOL
ListBox_Dragging(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_Dragging)
    return (BOOL)MySyscall(pListBox_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_HasParent)
BOOL
ListBox_HasParent(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_HasParent)
    return (BOOL)MySyscall(pListBox_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_Hide)
void
ListBox_Hide(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_Hide)
    MySyscall(pListBox_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_Perform)
intptr_t
ListBox_Perform(TListBox AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(ListBox_Perform)
    return (intptr_t)MySyscall(pListBox_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_Refresh)
void
ListBox_Refresh(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_Refresh)
    MySyscall(pListBox_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_ScreenToClient)
TPoint
ListBox_ScreenToClient(TListBox AObj, TPoint Point) {
    GET_FUNC_ADDR(ListBox_ScreenToClient)
    TPoint result;
    MySyscall(pListBox_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ListBox_ParentToClient)
TPoint
ListBox_ParentToClient(TListBox AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ListBox_ParentToClient)
    TPoint result;
    MySyscall(pListBox_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ListBox_SendToBack)
void
ListBox_SendToBack(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_SendToBack)
    MySyscall(pListBox_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_Show)
void
ListBox_Show(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_Show)
    MySyscall(pListBox_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetTextBuf)
int32_t
ListBox_GetTextBuf(TListBox AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(ListBox_GetTextBuf)
    return (int32_t)MySyscall(pListBox_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetTextLen)
int32_t
ListBox_GetTextLen(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetTextLen)
    return (int32_t)MySyscall(pListBox_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetTextBuf)
void
ListBox_SetTextBuf(TListBox AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(ListBox_SetTextBuf)
    MySyscall(pListBox_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_FindComponent)
TComponent
ListBox_FindComponent(TListBox AObj, CChar char* AName) {
    GET_FUNC_ADDR(ListBox_FindComponent)
    return (TComponent)MySyscall(pListBox_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetNamePath)
char*
ListBox_GetNamePath(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetNamePath)
    return (char*)MySyscall(pListBox_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_Assign)
void
ListBox_Assign(TListBox AObj, TObject Source) {
    GET_FUNC_ADDR(ListBox_Assign)
    MySyscall(pListBox_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_ClassType)
TClass
ListBox_ClassType(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_ClassType)
    return (TClass)MySyscall(pListBox_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_ClassName)
char*
ListBox_ClassName(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_ClassName)
    return (char*)MySyscall(pListBox_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_InstanceSize)
int32_t
ListBox_InstanceSize(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_InstanceSize)
    return (int32_t)MySyscall(pListBox_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_InheritsFrom)
BOOL
ListBox_InheritsFrom(TListBox AObj, TClass AClass) {
    GET_FUNC_ADDR(ListBox_InheritsFrom)
    return (BOOL)MySyscall(pListBox_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_Equals)
BOOL
ListBox_Equals(TListBox AObj, TObject Obj) {
    GET_FUNC_ADDR(ListBox_Equals)
    return (BOOL)MySyscall(pListBox_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetHashCode)
int32_t
ListBox_GetHashCode(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetHashCode)
    return (int32_t)MySyscall(pListBox_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_ToString)
char*
ListBox_ToString(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_ToString)
    return (char*)MySyscall(pListBox_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_AnchorToNeighbour)
void
ListBox_AnchorToNeighbour(TListBox AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ListBox_AnchorToNeighbour)
    MySyscall(pListBox_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_AnchorParallel)
void
ListBox_AnchorParallel(TListBox AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ListBox_AnchorParallel)
    MySyscall(pListBox_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_AnchorHorizontalCenterTo)
void
ListBox_AnchorHorizontalCenterTo(TListBox AObj, TControl ASibling) {
    GET_FUNC_ADDR(ListBox_AnchorHorizontalCenterTo)
    MySyscall(pListBox_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_AnchorVerticalCenterTo)
void
ListBox_AnchorVerticalCenterTo(TListBox AObj, TControl ASibling) {
    GET_FUNC_ADDR(ListBox_AnchorVerticalCenterTo)
    MySyscall(pListBox_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_AnchorSame)
void
ListBox_AnchorSame(TListBox AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(ListBox_AnchorSame)
    MySyscall(pListBox_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_AnchorAsAlign)
void
ListBox_AnchorAsAlign(TListBox AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(ListBox_AnchorAsAlign)
    MySyscall(pListBox_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_AnchorClient)
void
ListBox_AnchorClient(TListBox AObj, int32_t ASpace) {
    GET_FUNC_ADDR(ListBox_AnchorClient)
    MySyscall(pListBox_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_ScaleDesignToForm)
int32_t
ListBox_ScaleDesignToForm(TListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ListBox_ScaleDesignToForm)
    return (int32_t)MySyscall(pListBox_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_ScaleFormToDesign)
int32_t
ListBox_ScaleFormToDesign(TListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ListBox_ScaleFormToDesign)
    return (int32_t)MySyscall(pListBox_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_Scale96ToForm)
int32_t
ListBox_Scale96ToForm(TListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ListBox_Scale96ToForm)
    return (int32_t)MySyscall(pListBox_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_ScaleFormTo96)
int32_t
ListBox_ScaleFormTo96(TListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ListBox_ScaleFormTo96)
    return (int32_t)MySyscall(pListBox_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_Scale96ToFont)
int32_t
ListBox_Scale96ToFont(TListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ListBox_Scale96ToFont)
    return (int32_t)MySyscall(pListBox_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_ScaleFontTo96)
int32_t
ListBox_ScaleFontTo96(TListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ListBox_ScaleFontTo96)
    return (int32_t)MySyscall(pListBox_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_ScaleScreenToFont)
int32_t
ListBox_ScaleScreenToFont(TListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ListBox_ScaleScreenToFont)
    return (int32_t)MySyscall(pListBox_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_ScaleFontToScreen)
int32_t
ListBox_ScaleFontToScreen(TListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ListBox_ScaleFontToScreen)
    return (int32_t)MySyscall(pListBox_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_Scale96ToScreen)
int32_t
ListBox_Scale96ToScreen(TListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ListBox_Scale96ToScreen)
    return (int32_t)MySyscall(pListBox_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_ScaleScreenTo96)
int32_t
ListBox_ScaleScreenTo96(TListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ListBox_ScaleScreenTo96)
    return (int32_t)MySyscall(pListBox_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_AutoAdjustLayout)
void
ListBox_AutoAdjustLayout(TListBox AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(ListBox_AutoAdjustLayout)
    MySyscall(pListBox_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_FixDesignFontsPPI)
void
ListBox_FixDesignFontsPPI(TListBox AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(ListBox_FixDesignFontsPPI)
    MySyscall(pListBox_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_ScaleFontsPPI)
void
ListBox_ScaleFontsPPI(TListBox AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(ListBox_ScaleFontsPPI)
    MySyscall(pListBox_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetClickOnSelChange)
BOOL
ListBox_GetClickOnSelChange(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetClickOnSelChange)
    return (BOOL)MySyscall(pListBox_GetClickOnSelChange, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetClickOnSelChange)
void
ListBox_SetClickOnSelChange(TListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListBox_SetClickOnSelChange)
    MySyscall(pListBox_SetClickOnSelChange, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetOptions)
TListBoxOptions
ListBox_GetOptions(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetOptions)
    return (TListBoxOptions)MySyscall(pListBox_GetOptions, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetOptions)
void
ListBox_SetOptions(TListBox AObj, TListBoxOptions AValue) {
    GET_FUNC_ADDR(ListBox_SetOptions)
    MySyscall(pListBox_SetOptions, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetTopIndex)
int32_t
ListBox_GetTopIndex(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetTopIndex)
    return (int32_t)MySyscall(pListBox_GetTopIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetTopIndex)
void
ListBox_SetTopIndex(TListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListBox_SetTopIndex)
    MySyscall(pListBox_SetTopIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetStyle)
TListBoxStyle
ListBox_GetStyle(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetStyle)
    return (TListBoxStyle)MySyscall(pListBox_GetStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetStyle)
void
ListBox_SetStyle(TListBox AObj, TListBoxStyle AValue) {
    GET_FUNC_ADDR(ListBox_SetStyle)
    MySyscall(pListBox_SetStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetAlign)
TAlign
ListBox_GetAlign(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetAlign)
    return (TAlign)MySyscall(pListBox_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetAlign)
void
ListBox_SetAlign(TListBox AObj, TAlign AValue) {
    GET_FUNC_ADDR(ListBox_SetAlign)
    MySyscall(pListBox_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetAnchors)
TAnchors
ListBox_GetAnchors(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetAnchors)
    return (TAnchors)MySyscall(pListBox_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetAnchors)
void
ListBox_SetAnchors(TListBox AObj, TAnchors AValue) {
    GET_FUNC_ADDR(ListBox_SetAnchors)
    MySyscall(pListBox_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetBiDiMode)
TBiDiMode
ListBox_GetBiDiMode(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetBiDiMode)
    return (TBiDiMode)MySyscall(pListBox_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetBiDiMode)
void
ListBox_SetBiDiMode(TListBox AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(ListBox_SetBiDiMode)
    MySyscall(pListBox_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetBorderStyle)
TBorderStyle
ListBox_GetBorderStyle(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetBorderStyle)
    return (TBorderStyle)MySyscall(pListBox_GetBorderStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetBorderStyle)
void
ListBox_SetBorderStyle(TListBox AObj, TBorderStyle AValue) {
    GET_FUNC_ADDR(ListBox_SetBorderStyle)
    MySyscall(pListBox_SetBorderStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetColor)
TColor
ListBox_GetColor(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetColor)
    return (TColor)MySyscall(pListBox_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetColor)
void
ListBox_SetColor(TListBox AObj, TColor AValue) {
    GET_FUNC_ADDR(ListBox_SetColor)
    MySyscall(pListBox_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetColumns)
int32_t
ListBox_GetColumns(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetColumns)
    return (int32_t)MySyscall(pListBox_GetColumns, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetColumns)
void
ListBox_SetColumns(TListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListBox_SetColumns)
    MySyscall(pListBox_SetColumns, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetConstraints)
TSizeConstraints
ListBox_GetConstraints(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetConstraints)
    return (TSizeConstraints)MySyscall(pListBox_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetConstraints)
void
ListBox_SetConstraints(TListBox AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(ListBox_SetConstraints)
    MySyscall(pListBox_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetDoubleBuffered)
BOOL
ListBox_GetDoubleBuffered(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetDoubleBuffered)
    return (BOOL)MySyscall(pListBox_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetDoubleBuffered)
void
ListBox_SetDoubleBuffered(TListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListBox_SetDoubleBuffered)
    MySyscall(pListBox_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetDragCursor)
TCursor
ListBox_GetDragCursor(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetDragCursor)
    return (TCursor)MySyscall(pListBox_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetDragCursor)
void
ListBox_SetDragCursor(TListBox AObj, TCursor AValue) {
    GET_FUNC_ADDR(ListBox_SetDragCursor)
    MySyscall(pListBox_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetDragKind)
TDragKind
ListBox_GetDragKind(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetDragKind)
    return (TDragKind)MySyscall(pListBox_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetDragKind)
void
ListBox_SetDragKind(TListBox AObj, TDragKind AValue) {
    GET_FUNC_ADDR(ListBox_SetDragKind)
    MySyscall(pListBox_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetDragMode)
TDragMode
ListBox_GetDragMode(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetDragMode)
    return (TDragMode)MySyscall(pListBox_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetDragMode)
void
ListBox_SetDragMode(TListBox AObj, TDragMode AValue) {
    GET_FUNC_ADDR(ListBox_SetDragMode)
    MySyscall(pListBox_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetEnabled)
BOOL
ListBox_GetEnabled(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetEnabled)
    return (BOOL)MySyscall(pListBox_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetEnabled)
void
ListBox_SetEnabled(TListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListBox_SetEnabled)
    MySyscall(pListBox_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetExtendedSelect)
BOOL
ListBox_GetExtendedSelect(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetExtendedSelect)
    return (BOOL)MySyscall(pListBox_GetExtendedSelect, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetExtendedSelect)
void
ListBox_SetExtendedSelect(TListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListBox_SetExtendedSelect)
    MySyscall(pListBox_SetExtendedSelect, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetFont)
TFont
ListBox_GetFont(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetFont)
    return (TFont)MySyscall(pListBox_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetFont)
void
ListBox_SetFont(TListBox AObj, TFont AValue) {
    GET_FUNC_ADDR(ListBox_SetFont)
    MySyscall(pListBox_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetItemHeight)
int32_t
ListBox_GetItemHeight(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetItemHeight)
    return (int32_t)MySyscall(pListBox_GetItemHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetItemHeight)
void
ListBox_SetItemHeight(TListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListBox_SetItemHeight)
    MySyscall(pListBox_SetItemHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetItems)
TStrings
ListBox_GetItems(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetItems)
    return (TStrings)MySyscall(pListBox_GetItems, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetItems)
void
ListBox_SetItems(TListBox AObj, TStrings AValue) {
    GET_FUNC_ADDR(ListBox_SetItems)
    MySyscall(pListBox_SetItems, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetMultiSelect)
BOOL
ListBox_GetMultiSelect(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetMultiSelect)
    return (BOOL)MySyscall(pListBox_GetMultiSelect, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetMultiSelect)
void
ListBox_SetMultiSelect(TListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListBox_SetMultiSelect)
    MySyscall(pListBox_SetMultiSelect, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetParentColor)
BOOL
ListBox_GetParentColor(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetParentColor)
    return (BOOL)MySyscall(pListBox_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetParentColor)
void
ListBox_SetParentColor(TListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListBox_SetParentColor)
    MySyscall(pListBox_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetParentDoubleBuffered)
BOOL
ListBox_GetParentDoubleBuffered(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pListBox_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetParentDoubleBuffered)
void
ListBox_SetParentDoubleBuffered(TListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListBox_SetParentDoubleBuffered)
    MySyscall(pListBox_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetParentFont)
BOOL
ListBox_GetParentFont(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetParentFont)
    return (BOOL)MySyscall(pListBox_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetParentFont)
void
ListBox_SetParentFont(TListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListBox_SetParentFont)
    MySyscall(pListBox_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetParentShowHint)
BOOL
ListBox_GetParentShowHint(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetParentShowHint)
    return (BOOL)MySyscall(pListBox_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetParentShowHint)
void
ListBox_SetParentShowHint(TListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListBox_SetParentShowHint)
    MySyscall(pListBox_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetPopupMenu)
TPopupMenu
ListBox_GetPopupMenu(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetPopupMenu)
    return (TPopupMenu)MySyscall(pListBox_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetPopupMenu)
void
ListBox_SetPopupMenu(TListBox AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(ListBox_SetPopupMenu)
    MySyscall(pListBox_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetShowHint)
BOOL
ListBox_GetShowHint(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetShowHint)
    return (BOOL)MySyscall(pListBox_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetShowHint)
void
ListBox_SetShowHint(TListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListBox_SetShowHint)
    MySyscall(pListBox_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetSorted)
BOOL
ListBox_GetSorted(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetSorted)
    return (BOOL)MySyscall(pListBox_GetSorted, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetSorted)
void
ListBox_SetSorted(TListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListBox_SetSorted)
    MySyscall(pListBox_SetSorted, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetTabOrder)
TTabOrder
ListBox_GetTabOrder(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetTabOrder)
    return (TTabOrder)MySyscall(pListBox_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetTabOrder)
void
ListBox_SetTabOrder(TListBox AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(ListBox_SetTabOrder)
    MySyscall(pListBox_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetTabStop)
BOOL
ListBox_GetTabStop(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetTabStop)
    return (BOOL)MySyscall(pListBox_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetTabStop)
void
ListBox_SetTabStop(TListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListBox_SetTabStop)
    MySyscall(pListBox_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetVisible)
BOOL
ListBox_GetVisible(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetVisible)
    return (BOOL)MySyscall(pListBox_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetVisible)
void
ListBox_SetVisible(TListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListBox_SetVisible)
    MySyscall(pListBox_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetOnClick)
void
ListBox_SetOnClick(TListBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ListBox_SetOnClick)
    MySyscall(pListBox_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetOnContextPopup)
void
ListBox_SetOnContextPopup(TListBox AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(ListBox_SetOnContextPopup)
    MySyscall(pListBox_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetOnDblClick)
void
ListBox_SetOnDblClick(TListBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ListBox_SetOnDblClick)
    MySyscall(pListBox_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetOnDragDrop)
void
ListBox_SetOnDragDrop(TListBox AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(ListBox_SetOnDragDrop)
    MySyscall(pListBox_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetOnDragOver)
void
ListBox_SetOnDragOver(TListBox AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(ListBox_SetOnDragOver)
    MySyscall(pListBox_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetOnDrawItem)
void
ListBox_SetOnDrawItem(TListBox AObj, TDrawItemEvent AEventData) {
    GET_FUNC_ADDR(ListBox_SetOnDrawItem)
    MySyscall(pListBox_SetOnDrawItem, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetOnEndDrag)
void
ListBox_SetOnEndDrag(TListBox AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(ListBox_SetOnEndDrag)
    MySyscall(pListBox_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetOnEnter)
void
ListBox_SetOnEnter(TListBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ListBox_SetOnEnter)
    MySyscall(pListBox_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetOnExit)
void
ListBox_SetOnExit(TListBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ListBox_SetOnExit)
    MySyscall(pListBox_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetOnKeyDown)
void
ListBox_SetOnKeyDown(TListBox AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(ListBox_SetOnKeyDown)
    MySyscall(pListBox_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetOnKeyPress)
void
ListBox_SetOnKeyPress(TListBox AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(ListBox_SetOnKeyPress)
    MySyscall(pListBox_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetOnKeyUp)
void
ListBox_SetOnKeyUp(TListBox AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(ListBox_SetOnKeyUp)
    MySyscall(pListBox_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetOnMeasureItem)
void
ListBox_SetOnMeasureItem(TListBox AObj, TMeasureItemEvent AEventData) {
    GET_FUNC_ADDR(ListBox_SetOnMeasureItem)
    MySyscall(pListBox_SetOnMeasureItem, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetOnMouseDown)
void
ListBox_SetOnMouseDown(TListBox AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(ListBox_SetOnMouseDown)
    MySyscall(pListBox_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetOnMouseEnter)
void
ListBox_SetOnMouseEnter(TListBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ListBox_SetOnMouseEnter)
    MySyscall(pListBox_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetOnMouseLeave)
void
ListBox_SetOnMouseLeave(TListBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ListBox_SetOnMouseLeave)
    MySyscall(pListBox_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetOnMouseMove)
void
ListBox_SetOnMouseMove(TListBox AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(ListBox_SetOnMouseMove)
    MySyscall(pListBox_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetOnMouseUp)
void
ListBox_SetOnMouseUp(TListBox AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(ListBox_SetOnMouseUp)
    MySyscall(pListBox_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetCanvas)
TCanvas
ListBox_GetCanvas(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetCanvas)
    return (TCanvas)MySyscall(pListBox_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetCount)
int32_t
ListBox_GetCount(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetCount)
    return (int32_t)MySyscall(pListBox_GetCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetSelCount)
int32_t
ListBox_GetSelCount(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetSelCount)
    return (int32_t)MySyscall(pListBox_GetSelCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetItemIndex)
int32_t
ListBox_GetItemIndex(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetItemIndex)
    return (int32_t)MySyscall(pListBox_GetItemIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetItemIndex)
void
ListBox_SetItemIndex(TListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListBox_SetItemIndex)
    MySyscall(pListBox_SetItemIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetDockClientCount)
int32_t
ListBox_GetDockClientCount(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetDockClientCount)
    return (int32_t)MySyscall(pListBox_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetDockSite)
BOOL
ListBox_GetDockSite(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetDockSite)
    return (BOOL)MySyscall(pListBox_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetDockSite)
void
ListBox_SetDockSite(TListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListBox_SetDockSite)
    MySyscall(pListBox_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetMouseInClient)
BOOL
ListBox_GetMouseInClient(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetMouseInClient)
    return (BOOL)MySyscall(pListBox_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetVisibleDockClientCount)
int32_t
ListBox_GetVisibleDockClientCount(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pListBox_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetBrush)
TBrush
ListBox_GetBrush(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetBrush)
    return (TBrush)MySyscall(pListBox_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetControlCount)
int32_t
ListBox_GetControlCount(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetControlCount)
    return (int32_t)MySyscall(pListBox_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetHandle)
HWND
ListBox_GetHandle(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetHandle)
    return (HWND)MySyscall(pListBox_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetParentWindow)
HWND
ListBox_GetParentWindow(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetParentWindow)
    return (HWND)MySyscall(pListBox_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetParentWindow)
void
ListBox_SetParentWindow(TListBox AObj, HWND AValue) {
    GET_FUNC_ADDR(ListBox_SetParentWindow)
    MySyscall(pListBox_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetShowing)
BOOL
ListBox_GetShowing(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetShowing)
    return (BOOL)MySyscall(pListBox_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetUseDockManager)
BOOL
ListBox_GetUseDockManager(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetUseDockManager)
    return (BOOL)MySyscall(pListBox_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetUseDockManager)
void
ListBox_SetUseDockManager(TListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListBox_SetUseDockManager)
    MySyscall(pListBox_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetAction)
TAction
ListBox_GetAction(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetAction)
    return (TAction)MySyscall(pListBox_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetAction)
void
ListBox_SetAction(TListBox AObj, TAction AValue) {
    GET_FUNC_ADDR(ListBox_SetAction)
    MySyscall(pListBox_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetBoundsRect)
TRect
ListBox_GetBoundsRect(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetBoundsRect)
    TRect result;
    MySyscall(pListBox_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ListBox_SetBoundsRect)
void
ListBox_SetBoundsRect(TListBox AObj, TRect AValue) {
    GET_FUNC_ADDR(ListBox_SetBoundsRect)
    MySyscall(pListBox_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetClientHeight)
int32_t
ListBox_GetClientHeight(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetClientHeight)
    return (int32_t)MySyscall(pListBox_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetClientHeight)
void
ListBox_SetClientHeight(TListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListBox_SetClientHeight)
    MySyscall(pListBox_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetClientOrigin)
TPoint
ListBox_GetClientOrigin(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetClientOrigin)
    TPoint result;
    MySyscall(pListBox_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ListBox_GetClientRect)
TRect
ListBox_GetClientRect(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetClientRect)
    TRect result;
    MySyscall(pListBox_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ListBox_GetClientWidth)
int32_t
ListBox_GetClientWidth(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetClientWidth)
    return (int32_t)MySyscall(pListBox_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetClientWidth)
void
ListBox_SetClientWidth(TListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListBox_SetClientWidth)
    MySyscall(pListBox_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetControlState)
TControlState
ListBox_GetControlState(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetControlState)
    return (TControlState)MySyscall(pListBox_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetControlState)
void
ListBox_SetControlState(TListBox AObj, TControlState AValue) {
    GET_FUNC_ADDR(ListBox_SetControlState)
    MySyscall(pListBox_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetControlStyle)
TControlStyle
ListBox_GetControlStyle(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetControlStyle)
    return (TControlStyle)MySyscall(pListBox_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetControlStyle)
void
ListBox_SetControlStyle(TListBox AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(ListBox_SetControlStyle)
    MySyscall(pListBox_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetFloating)
BOOL
ListBox_GetFloating(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetFloating)
    return (BOOL)MySyscall(pListBox_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetParent)
TWinControl
ListBox_GetParent(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetParent)
    return (TWinControl)MySyscall(pListBox_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetParent)
void
ListBox_SetParent(TListBox AObj, TWinControl AValue) {
    GET_FUNC_ADDR(ListBox_SetParent)
    MySyscall(pListBox_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetLeft)
int32_t
ListBox_GetLeft(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetLeft)
    return (int32_t)MySyscall(pListBox_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetLeft)
void
ListBox_SetLeft(TListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListBox_SetLeft)
    MySyscall(pListBox_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetTop)
int32_t
ListBox_GetTop(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetTop)
    return (int32_t)MySyscall(pListBox_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetTop)
void
ListBox_SetTop(TListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListBox_SetTop)
    MySyscall(pListBox_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetWidth)
int32_t
ListBox_GetWidth(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetWidth)
    return (int32_t)MySyscall(pListBox_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetWidth)
void
ListBox_SetWidth(TListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListBox_SetWidth)
    MySyscall(pListBox_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetHeight)
int32_t
ListBox_GetHeight(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetHeight)
    return (int32_t)MySyscall(pListBox_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetHeight)
void
ListBox_SetHeight(TListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListBox_SetHeight)
    MySyscall(pListBox_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetCursor)
TCursor
ListBox_GetCursor(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetCursor)
    return (TCursor)MySyscall(pListBox_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetCursor)
void
ListBox_SetCursor(TListBox AObj, TCursor AValue) {
    GET_FUNC_ADDR(ListBox_SetCursor)
    MySyscall(pListBox_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetHint)
char*
ListBox_GetHint(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetHint)
    return (char*)MySyscall(pListBox_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetHint)
void
ListBox_SetHint(TListBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ListBox_SetHint)
    MySyscall(pListBox_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetComponentCount)
int32_t
ListBox_GetComponentCount(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetComponentCount)
    return (int32_t)MySyscall(pListBox_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetComponentIndex)
int32_t
ListBox_GetComponentIndex(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetComponentIndex)
    return (int32_t)MySyscall(pListBox_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetComponentIndex)
void
ListBox_SetComponentIndex(TListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListBox_SetComponentIndex)
    MySyscall(pListBox_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetOwner)
TComponent
ListBox_GetOwner(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetOwner)
    return (TComponent)MySyscall(pListBox_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetName)
char*
ListBox_GetName(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetName)
    return (char*)MySyscall(pListBox_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetName)
void
ListBox_SetName(TListBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ListBox_SetName)
    MySyscall(pListBox_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetTag)
intptr_t
ListBox_GetTag(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetTag)
    return (intptr_t)MySyscall(pListBox_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetTag)
void
ListBox_SetTag(TListBox AObj, intptr_t AValue) {
    GET_FUNC_ADDR(ListBox_SetTag)
    MySyscall(pListBox_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetAnchorSideLeft)
TAnchorSide
ListBox_GetAnchorSideLeft(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pListBox_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetAnchorSideLeft)
void
ListBox_SetAnchorSideLeft(TListBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ListBox_SetAnchorSideLeft)
    MySyscall(pListBox_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetAnchorSideTop)
TAnchorSide
ListBox_GetAnchorSideTop(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pListBox_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetAnchorSideTop)
void
ListBox_SetAnchorSideTop(TListBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ListBox_SetAnchorSideTop)
    MySyscall(pListBox_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetAnchorSideRight)
TAnchorSide
ListBox_GetAnchorSideRight(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pListBox_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetAnchorSideRight)
void
ListBox_SetAnchorSideRight(TListBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ListBox_SetAnchorSideRight)
    MySyscall(pListBox_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetAnchorSideBottom)
TAnchorSide
ListBox_GetAnchorSideBottom(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pListBox_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetAnchorSideBottom)
void
ListBox_SetAnchorSideBottom(TListBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ListBox_SetAnchorSideBottom)
    MySyscall(pListBox_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetChildSizing)
TControlChildSizing
ListBox_GetChildSizing(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetChildSizing)
    return (TControlChildSizing)MySyscall(pListBox_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetChildSizing)
void
ListBox_SetChildSizing(TListBox AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(ListBox_SetChildSizing)
    MySyscall(pListBox_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetBorderSpacing)
TControlBorderSpacing
ListBox_GetBorderSpacing(TListBox AObj) {
    GET_FUNC_ADDR(ListBox_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pListBox_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetBorderSpacing)
void
ListBox_SetBorderSpacing(TListBox AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(ListBox_SetBorderSpacing)
    MySyscall(pListBox_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetSelected)
BOOL
ListBox_GetSelected(TListBox AObj, int32_t Index) {
    GET_FUNC_ADDR(ListBox_GetSelected)
    return (BOOL)MySyscall(pListBox_GetSelected, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_SetSelected)
void
ListBox_SetSelected(TListBox AObj, int32_t Index, BOOL AValue) {
    GET_FUNC_ADDR(ListBox_SetSelected)
    MySyscall(pListBox_SetSelected, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetDockClients)
TControl
ListBox_GetDockClients(TListBox AObj, int32_t Index) {
    GET_FUNC_ADDR(ListBox_GetDockClients)
    return (TControl)MySyscall(pListBox_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetControls)
TControl
ListBox_GetControls(TListBox AObj, int32_t Index) {
    GET_FUNC_ADDR(ListBox_GetControls)
    return (TControl)MySyscall(pListBox_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetComponents)
TComponent
ListBox_GetComponents(TListBox AObj, int32_t AIndex) {
    GET_FUNC_ADDR(ListBox_GetComponents)
    return (TComponent)MySyscall(pListBox_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_GetAnchorSide)
TAnchorSide
ListBox_GetAnchorSide(TListBox AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(ListBox_GetAnchorSide)
    return (TAnchorSide)MySyscall(pListBox_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListBox_StaticClassType)
TClass
ListBox_StaticClassType() {
    GET_FUNC_ADDR(ListBox_StaticClassType)
    return (TClass)MySyscall(pListBox_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TComboBox-------------------

DEFINE_FUNC_PTR(ComboBox_Create)
TComboBox
ComboBox_Create(TComponent AOwner) {
    GET_FUNC_ADDR(ComboBox_Create)
    return (TComboBox)MySyscall(pComboBox_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_Free)
void
ComboBox_Free(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_Free)
    MySyscall(pComboBox_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_AddItem)
void
ComboBox_AddItem(TComboBox AObj, CChar char* Item, TObject AObject) {
    GET_FUNC_ADDR(ComboBox_AddItem)
    MySyscall(pComboBox_AddItem, 3, AObj, Item, AObject ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_Clear)
void
ComboBox_Clear(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_Clear)
    MySyscall(pComboBox_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_ClearSelection)
void
ComboBox_ClearSelection(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_ClearSelection)
    MySyscall(pComboBox_ClearSelection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_DeleteSelected)
void
ComboBox_DeleteSelected(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_DeleteSelected)
    MySyscall(pComboBox_DeleteSelected, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_Focused)
BOOL
ComboBox_Focused(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_Focused)
    return (BOOL)MySyscall(pComboBox_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SelectAll)
void
ComboBox_SelectAll(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_SelectAll)
    MySyscall(pComboBox_SelectAll, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_CanFocus)
BOOL
ComboBox_CanFocus(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_CanFocus)
    return (BOOL)MySyscall(pComboBox_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_ContainsControl)
BOOL
ComboBox_ContainsControl(TComboBox AObj, TControl Control) {
    GET_FUNC_ADDR(ComboBox_ContainsControl)
    return (BOOL)MySyscall(pComboBox_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_ControlAtPos)
TControl
ComboBox_ControlAtPos(TComboBox AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(ComboBox_ControlAtPos)
    return (TControl)MySyscall(pComboBox_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_DisableAlign)
void
ComboBox_DisableAlign(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_DisableAlign)
    MySyscall(pComboBox_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_EnableAlign)
void
ComboBox_EnableAlign(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_EnableAlign)
    MySyscall(pComboBox_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_FindChildControl)
TControl
ComboBox_FindChildControl(TComboBox AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(ComboBox_FindChildControl)
    return (TControl)MySyscall(pComboBox_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_FlipChildren)
void
ComboBox_FlipChildren(TComboBox AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(ComboBox_FlipChildren)
    MySyscall(pComboBox_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_HandleAllocated)
BOOL
ComboBox_HandleAllocated(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_HandleAllocated)
    return (BOOL)MySyscall(pComboBox_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_InsertControl)
void
ComboBox_InsertControl(TComboBox AObj, TControl AControl) {
    GET_FUNC_ADDR(ComboBox_InsertControl)
    MySyscall(pComboBox_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_Invalidate)
void
ComboBox_Invalidate(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_Invalidate)
    MySyscall(pComboBox_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_PaintTo)
void
ComboBox_PaintTo(TComboBox AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(ComboBox_PaintTo)
    MySyscall(pComboBox_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_RemoveControl)
void
ComboBox_RemoveControl(TComboBox AObj, TControl AControl) {
    GET_FUNC_ADDR(ComboBox_RemoveControl)
    MySyscall(pComboBox_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_Realign)
void
ComboBox_Realign(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_Realign)
    MySyscall(pComboBox_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_Repaint)
void
ComboBox_Repaint(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_Repaint)
    MySyscall(pComboBox_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_ScaleBy)
void
ComboBox_ScaleBy(TComboBox AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(ComboBox_ScaleBy)
    MySyscall(pComboBox_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_ScrollBy)
void
ComboBox_ScrollBy(TComboBox AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(ComboBox_ScrollBy)
    MySyscall(pComboBox_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetBounds)
void
ComboBox_SetBounds(TComboBox AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(ComboBox_SetBounds)
    MySyscall(pComboBox_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetFocus)
void
ComboBox_SetFocus(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_SetFocus)
    MySyscall(pComboBox_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_Update)
void
ComboBox_Update(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_Update)
    MySyscall(pComboBox_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_BringToFront)
void
ComboBox_BringToFront(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_BringToFront)
    MySyscall(pComboBox_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_ClientToScreen)
TPoint
ComboBox_ClientToScreen(TComboBox AObj, TPoint Point) {
    GET_FUNC_ADDR(ComboBox_ClientToScreen)
    TPoint result;
    MySyscall(pComboBox_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ComboBox_ClientToParent)
TPoint
ComboBox_ClientToParent(TComboBox AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ComboBox_ClientToParent)
    TPoint result;
    MySyscall(pComboBox_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ComboBox_Dragging)
BOOL
ComboBox_Dragging(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_Dragging)
    return (BOOL)MySyscall(pComboBox_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_HasParent)
BOOL
ComboBox_HasParent(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_HasParent)
    return (BOOL)MySyscall(pComboBox_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_Hide)
void
ComboBox_Hide(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_Hide)
    MySyscall(pComboBox_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_Perform)
intptr_t
ComboBox_Perform(TComboBox AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(ComboBox_Perform)
    return (intptr_t)MySyscall(pComboBox_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_Refresh)
void
ComboBox_Refresh(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_Refresh)
    MySyscall(pComboBox_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_ScreenToClient)
TPoint
ComboBox_ScreenToClient(TComboBox AObj, TPoint Point) {
    GET_FUNC_ADDR(ComboBox_ScreenToClient)
    TPoint result;
    MySyscall(pComboBox_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ComboBox_ParentToClient)
TPoint
ComboBox_ParentToClient(TComboBox AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ComboBox_ParentToClient)
    TPoint result;
    MySyscall(pComboBox_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ComboBox_SendToBack)
void
ComboBox_SendToBack(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_SendToBack)
    MySyscall(pComboBox_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_Show)
void
ComboBox_Show(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_Show)
    MySyscall(pComboBox_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetTextBuf)
int32_t
ComboBox_GetTextBuf(TComboBox AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(ComboBox_GetTextBuf)
    return (int32_t)MySyscall(pComboBox_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetTextLen)
int32_t
ComboBox_GetTextLen(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetTextLen)
    return (int32_t)MySyscall(pComboBox_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetTextBuf)
void
ComboBox_SetTextBuf(TComboBox AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(ComboBox_SetTextBuf)
    MySyscall(pComboBox_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_FindComponent)
TComponent
ComboBox_FindComponent(TComboBox AObj, CChar char* AName) {
    GET_FUNC_ADDR(ComboBox_FindComponent)
    return (TComponent)MySyscall(pComboBox_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetNamePath)
char*
ComboBox_GetNamePath(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetNamePath)
    return (char*)MySyscall(pComboBox_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_Assign)
void
ComboBox_Assign(TComboBox AObj, TObject Source) {
    GET_FUNC_ADDR(ComboBox_Assign)
    MySyscall(pComboBox_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_ClassType)
TClass
ComboBox_ClassType(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_ClassType)
    return (TClass)MySyscall(pComboBox_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_ClassName)
char*
ComboBox_ClassName(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_ClassName)
    return (char*)MySyscall(pComboBox_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_InstanceSize)
int32_t
ComboBox_InstanceSize(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_InstanceSize)
    return (int32_t)MySyscall(pComboBox_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_InheritsFrom)
BOOL
ComboBox_InheritsFrom(TComboBox AObj, TClass AClass) {
    GET_FUNC_ADDR(ComboBox_InheritsFrom)
    return (BOOL)MySyscall(pComboBox_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_Equals)
BOOL
ComboBox_Equals(TComboBox AObj, TObject Obj) {
    GET_FUNC_ADDR(ComboBox_Equals)
    return (BOOL)MySyscall(pComboBox_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetHashCode)
int32_t
ComboBox_GetHashCode(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetHashCode)
    return (int32_t)MySyscall(pComboBox_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_ToString)
char*
ComboBox_ToString(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_ToString)
    return (char*)MySyscall(pComboBox_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_AnchorToNeighbour)
void
ComboBox_AnchorToNeighbour(TComboBox AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ComboBox_AnchorToNeighbour)
    MySyscall(pComboBox_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_AnchorParallel)
void
ComboBox_AnchorParallel(TComboBox AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ComboBox_AnchorParallel)
    MySyscall(pComboBox_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_AnchorHorizontalCenterTo)
void
ComboBox_AnchorHorizontalCenterTo(TComboBox AObj, TControl ASibling) {
    GET_FUNC_ADDR(ComboBox_AnchorHorizontalCenterTo)
    MySyscall(pComboBox_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_AnchorVerticalCenterTo)
void
ComboBox_AnchorVerticalCenterTo(TComboBox AObj, TControl ASibling) {
    GET_FUNC_ADDR(ComboBox_AnchorVerticalCenterTo)
    MySyscall(pComboBox_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_AnchorSame)
void
ComboBox_AnchorSame(TComboBox AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(ComboBox_AnchorSame)
    MySyscall(pComboBox_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_AnchorAsAlign)
void
ComboBox_AnchorAsAlign(TComboBox AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(ComboBox_AnchorAsAlign)
    MySyscall(pComboBox_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_AnchorClient)
void
ComboBox_AnchorClient(TComboBox AObj, int32_t ASpace) {
    GET_FUNC_ADDR(ComboBox_AnchorClient)
    MySyscall(pComboBox_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_ScaleDesignToForm)
int32_t
ComboBox_ScaleDesignToForm(TComboBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ComboBox_ScaleDesignToForm)
    return (int32_t)MySyscall(pComboBox_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_ScaleFormToDesign)
int32_t
ComboBox_ScaleFormToDesign(TComboBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ComboBox_ScaleFormToDesign)
    return (int32_t)MySyscall(pComboBox_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_Scale96ToForm)
int32_t
ComboBox_Scale96ToForm(TComboBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ComboBox_Scale96ToForm)
    return (int32_t)MySyscall(pComboBox_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_ScaleFormTo96)
int32_t
ComboBox_ScaleFormTo96(TComboBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ComboBox_ScaleFormTo96)
    return (int32_t)MySyscall(pComboBox_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_Scale96ToFont)
int32_t
ComboBox_Scale96ToFont(TComboBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ComboBox_Scale96ToFont)
    return (int32_t)MySyscall(pComboBox_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_ScaleFontTo96)
int32_t
ComboBox_ScaleFontTo96(TComboBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ComboBox_ScaleFontTo96)
    return (int32_t)MySyscall(pComboBox_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_ScaleScreenToFont)
int32_t
ComboBox_ScaleScreenToFont(TComboBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ComboBox_ScaleScreenToFont)
    return (int32_t)MySyscall(pComboBox_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_ScaleFontToScreen)
int32_t
ComboBox_ScaleFontToScreen(TComboBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ComboBox_ScaleFontToScreen)
    return (int32_t)MySyscall(pComboBox_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_Scale96ToScreen)
int32_t
ComboBox_Scale96ToScreen(TComboBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ComboBox_Scale96ToScreen)
    return (int32_t)MySyscall(pComboBox_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_ScaleScreenTo96)
int32_t
ComboBox_ScaleScreenTo96(TComboBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ComboBox_ScaleScreenTo96)
    return (int32_t)MySyscall(pComboBox_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_AutoAdjustLayout)
void
ComboBox_AutoAdjustLayout(TComboBox AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(ComboBox_AutoAdjustLayout)
    MySyscall(pComboBox_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_FixDesignFontsPPI)
void
ComboBox_FixDesignFontsPPI(TComboBox AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(ComboBox_FixDesignFontsPPI)
    MySyscall(pComboBox_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_ScaleFontsPPI)
void
ComboBox_ScaleFontsPPI(TComboBox AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(ComboBox_ScaleFontsPPI)
    MySyscall(pComboBox_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetReadOnly)
BOOL
ComboBox_GetReadOnly(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetReadOnly)
    return (BOOL)MySyscall(pComboBox_GetReadOnly, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetReadOnly)
void
ComboBox_SetReadOnly(TComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBox_SetReadOnly)
    MySyscall(pComboBox_SetReadOnly, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetAlign)
TAlign
ComboBox_GetAlign(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetAlign)
    return (TAlign)MySyscall(pComboBox_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetAlign)
void
ComboBox_SetAlign(TComboBox AObj, TAlign AValue) {
    GET_FUNC_ADDR(ComboBox_SetAlign)
    MySyscall(pComboBox_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetAutoComplete)
BOOL
ComboBox_GetAutoComplete(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetAutoComplete)
    return (BOOL)MySyscall(pComboBox_GetAutoComplete, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetAutoComplete)
void
ComboBox_SetAutoComplete(TComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBox_SetAutoComplete)
    MySyscall(pComboBox_SetAutoComplete, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetAutoDropDown)
BOOL
ComboBox_GetAutoDropDown(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetAutoDropDown)
    return (BOOL)MySyscall(pComboBox_GetAutoDropDown, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetAutoDropDown)
void
ComboBox_SetAutoDropDown(TComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBox_SetAutoDropDown)
    MySyscall(pComboBox_SetAutoDropDown, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetStyle)
TComboBoxStyle
ComboBox_GetStyle(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetStyle)
    return (TComboBoxStyle)MySyscall(pComboBox_GetStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetStyle)
void
ComboBox_SetStyle(TComboBox AObj, TComboBoxStyle AValue) {
    GET_FUNC_ADDR(ComboBox_SetStyle)
    MySyscall(pComboBox_SetStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetAnchors)
TAnchors
ComboBox_GetAnchors(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetAnchors)
    return (TAnchors)MySyscall(pComboBox_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetAnchors)
void
ComboBox_SetAnchors(TComboBox AObj, TAnchors AValue) {
    GET_FUNC_ADDR(ComboBox_SetAnchors)
    MySyscall(pComboBox_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetBiDiMode)
TBiDiMode
ComboBox_GetBiDiMode(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetBiDiMode)
    return (TBiDiMode)MySyscall(pComboBox_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetBiDiMode)
void
ComboBox_SetBiDiMode(TComboBox AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(ComboBox_SetBiDiMode)
    MySyscall(pComboBox_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetCharCase)
TEditCharCase
ComboBox_GetCharCase(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetCharCase)
    return (TEditCharCase)MySyscall(pComboBox_GetCharCase, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetCharCase)
void
ComboBox_SetCharCase(TComboBox AObj, TEditCharCase AValue) {
    GET_FUNC_ADDR(ComboBox_SetCharCase)
    MySyscall(pComboBox_SetCharCase, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetColor)
TColor
ComboBox_GetColor(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetColor)
    return (TColor)MySyscall(pComboBox_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetColor)
void
ComboBox_SetColor(TComboBox AObj, TColor AValue) {
    GET_FUNC_ADDR(ComboBox_SetColor)
    MySyscall(pComboBox_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetConstraints)
TSizeConstraints
ComboBox_GetConstraints(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetConstraints)
    return (TSizeConstraints)MySyscall(pComboBox_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetConstraints)
void
ComboBox_SetConstraints(TComboBox AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(ComboBox_SetConstraints)
    MySyscall(pComboBox_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetDoubleBuffered)
BOOL
ComboBox_GetDoubleBuffered(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetDoubleBuffered)
    return (BOOL)MySyscall(pComboBox_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetDoubleBuffered)
void
ComboBox_SetDoubleBuffered(TComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBox_SetDoubleBuffered)
    MySyscall(pComboBox_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetDragCursor)
TCursor
ComboBox_GetDragCursor(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetDragCursor)
    return (TCursor)MySyscall(pComboBox_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetDragCursor)
void
ComboBox_SetDragCursor(TComboBox AObj, TCursor AValue) {
    GET_FUNC_ADDR(ComboBox_SetDragCursor)
    MySyscall(pComboBox_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetDragKind)
TDragKind
ComboBox_GetDragKind(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetDragKind)
    return (TDragKind)MySyscall(pComboBox_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetDragKind)
void
ComboBox_SetDragKind(TComboBox AObj, TDragKind AValue) {
    GET_FUNC_ADDR(ComboBox_SetDragKind)
    MySyscall(pComboBox_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetDragMode)
TDragMode
ComboBox_GetDragMode(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetDragMode)
    return (TDragMode)MySyscall(pComboBox_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetDragMode)
void
ComboBox_SetDragMode(TComboBox AObj, TDragMode AValue) {
    GET_FUNC_ADDR(ComboBox_SetDragMode)
    MySyscall(pComboBox_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetDropDownCount)
int32_t
ComboBox_GetDropDownCount(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetDropDownCount)
    return (int32_t)MySyscall(pComboBox_GetDropDownCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetDropDownCount)
void
ComboBox_SetDropDownCount(TComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBox_SetDropDownCount)
    MySyscall(pComboBox_SetDropDownCount, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetEnabled)
BOOL
ComboBox_GetEnabled(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetEnabled)
    return (BOOL)MySyscall(pComboBox_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetEnabled)
void
ComboBox_SetEnabled(TComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBox_SetEnabled)
    MySyscall(pComboBox_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetFont)
TFont
ComboBox_GetFont(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetFont)
    return (TFont)MySyscall(pComboBox_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetFont)
void
ComboBox_SetFont(TComboBox AObj, TFont AValue) {
    GET_FUNC_ADDR(ComboBox_SetFont)
    MySyscall(pComboBox_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetItemHeight)
int32_t
ComboBox_GetItemHeight(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetItemHeight)
    return (int32_t)MySyscall(pComboBox_GetItemHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetItemHeight)
void
ComboBox_SetItemHeight(TComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBox_SetItemHeight)
    MySyscall(pComboBox_SetItemHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetItemIndex)
int32_t
ComboBox_GetItemIndex(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetItemIndex)
    return (int32_t)MySyscall(pComboBox_GetItemIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetItemIndex)
void
ComboBox_SetItemIndex(TComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBox_SetItemIndex)
    MySyscall(pComboBox_SetItemIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetMaxLength)
int32_t
ComboBox_GetMaxLength(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetMaxLength)
    return (int32_t)MySyscall(pComboBox_GetMaxLength, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetMaxLength)
void
ComboBox_SetMaxLength(TComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBox_SetMaxLength)
    MySyscall(pComboBox_SetMaxLength, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetParentColor)
BOOL
ComboBox_GetParentColor(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetParentColor)
    return (BOOL)MySyscall(pComboBox_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetParentColor)
void
ComboBox_SetParentColor(TComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBox_SetParentColor)
    MySyscall(pComboBox_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetParentDoubleBuffered)
BOOL
ComboBox_GetParentDoubleBuffered(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pComboBox_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetParentDoubleBuffered)
void
ComboBox_SetParentDoubleBuffered(TComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBox_SetParentDoubleBuffered)
    MySyscall(pComboBox_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetParentFont)
BOOL
ComboBox_GetParentFont(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetParentFont)
    return (BOOL)MySyscall(pComboBox_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetParentFont)
void
ComboBox_SetParentFont(TComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBox_SetParentFont)
    MySyscall(pComboBox_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetParentShowHint)
BOOL
ComboBox_GetParentShowHint(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetParentShowHint)
    return (BOOL)MySyscall(pComboBox_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetParentShowHint)
void
ComboBox_SetParentShowHint(TComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBox_SetParentShowHint)
    MySyscall(pComboBox_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetPopupMenu)
TPopupMenu
ComboBox_GetPopupMenu(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetPopupMenu)
    return (TPopupMenu)MySyscall(pComboBox_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetPopupMenu)
void
ComboBox_SetPopupMenu(TComboBox AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(ComboBox_SetPopupMenu)
    MySyscall(pComboBox_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetShowHint)
BOOL
ComboBox_GetShowHint(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetShowHint)
    return (BOOL)MySyscall(pComboBox_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetShowHint)
void
ComboBox_SetShowHint(TComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBox_SetShowHint)
    MySyscall(pComboBox_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetSorted)
BOOL
ComboBox_GetSorted(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetSorted)
    return (BOOL)MySyscall(pComboBox_GetSorted, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetSorted)
void
ComboBox_SetSorted(TComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBox_SetSorted)
    MySyscall(pComboBox_SetSorted, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetTabOrder)
TTabOrder
ComboBox_GetTabOrder(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetTabOrder)
    return (TTabOrder)MySyscall(pComboBox_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetTabOrder)
void
ComboBox_SetTabOrder(TComboBox AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(ComboBox_SetTabOrder)
    MySyscall(pComboBox_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetTabStop)
BOOL
ComboBox_GetTabStop(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetTabStop)
    return (BOOL)MySyscall(pComboBox_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetTabStop)
void
ComboBox_SetTabStop(TComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBox_SetTabStop)
    MySyscall(pComboBox_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetText)
char*
ComboBox_GetText(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetText)
    return (char*)MySyscall(pComboBox_GetText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetText)
void
ComboBox_SetText(TComboBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ComboBox_SetText)
    MySyscall(pComboBox_SetText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetVisible)
BOOL
ComboBox_GetVisible(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetVisible)
    return (BOOL)MySyscall(pComboBox_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetVisible)
void
ComboBox_SetVisible(TComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBox_SetVisible)
    MySyscall(pComboBox_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetOnChange)
void
ComboBox_SetOnChange(TComboBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ComboBox_SetOnChange)
    MySyscall(pComboBox_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetOnClick)
void
ComboBox_SetOnClick(TComboBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ComboBox_SetOnClick)
    MySyscall(pComboBox_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetOnCloseUp)
void
ComboBox_SetOnCloseUp(TComboBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ComboBox_SetOnCloseUp)
    MySyscall(pComboBox_SetOnCloseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetOnContextPopup)
void
ComboBox_SetOnContextPopup(TComboBox AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(ComboBox_SetOnContextPopup)
    MySyscall(pComboBox_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetOnDblClick)
void
ComboBox_SetOnDblClick(TComboBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ComboBox_SetOnDblClick)
    MySyscall(pComboBox_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetOnDragDrop)
void
ComboBox_SetOnDragDrop(TComboBox AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(ComboBox_SetOnDragDrop)
    MySyscall(pComboBox_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetOnDragOver)
void
ComboBox_SetOnDragOver(TComboBox AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(ComboBox_SetOnDragOver)
    MySyscall(pComboBox_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetOnDrawItem)
void
ComboBox_SetOnDrawItem(TComboBox AObj, TDrawItemEvent AEventData) {
    GET_FUNC_ADDR(ComboBox_SetOnDrawItem)
    MySyscall(pComboBox_SetOnDrawItem, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetOnDropDown)
void
ComboBox_SetOnDropDown(TComboBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ComboBox_SetOnDropDown)
    MySyscall(pComboBox_SetOnDropDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetOnEndDrag)
void
ComboBox_SetOnEndDrag(TComboBox AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(ComboBox_SetOnEndDrag)
    MySyscall(pComboBox_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetOnEnter)
void
ComboBox_SetOnEnter(TComboBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ComboBox_SetOnEnter)
    MySyscall(pComboBox_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetOnExit)
void
ComboBox_SetOnExit(TComboBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ComboBox_SetOnExit)
    MySyscall(pComboBox_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetOnKeyDown)
void
ComboBox_SetOnKeyDown(TComboBox AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(ComboBox_SetOnKeyDown)
    MySyscall(pComboBox_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetOnKeyPress)
void
ComboBox_SetOnKeyPress(TComboBox AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(ComboBox_SetOnKeyPress)
    MySyscall(pComboBox_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetOnKeyUp)
void
ComboBox_SetOnKeyUp(TComboBox AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(ComboBox_SetOnKeyUp)
    MySyscall(pComboBox_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetOnMeasureItem)
void
ComboBox_SetOnMeasureItem(TComboBox AObj, TMeasureItemEvent AEventData) {
    GET_FUNC_ADDR(ComboBox_SetOnMeasureItem)
    MySyscall(pComboBox_SetOnMeasureItem, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetOnMouseEnter)
void
ComboBox_SetOnMouseEnter(TComboBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ComboBox_SetOnMouseEnter)
    MySyscall(pComboBox_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetOnMouseLeave)
void
ComboBox_SetOnMouseLeave(TComboBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ComboBox_SetOnMouseLeave)
    MySyscall(pComboBox_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetOnSelect)
void
ComboBox_SetOnSelect(TComboBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ComboBox_SetOnSelect)
    MySyscall(pComboBox_SetOnSelect, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetItems)
TStrings
ComboBox_GetItems(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetItems)
    return (TStrings)MySyscall(pComboBox_GetItems, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetItems)
void
ComboBox_SetItems(TComboBox AObj, TStrings AValue) {
    GET_FUNC_ADDR(ComboBox_SetItems)
    MySyscall(pComboBox_SetItems, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetSelText)
char*
ComboBox_GetSelText(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetSelText)
    return (char*)MySyscall(pComboBox_GetSelText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetSelText)
void
ComboBox_SetSelText(TComboBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ComboBox_SetSelText)
    MySyscall(pComboBox_SetSelText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetCanvas)
TCanvas
ComboBox_GetCanvas(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetCanvas)
    return (TCanvas)MySyscall(pComboBox_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetDroppedDown)
BOOL
ComboBox_GetDroppedDown(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetDroppedDown)
    return (BOOL)MySyscall(pComboBox_GetDroppedDown, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetDroppedDown)
void
ComboBox_SetDroppedDown(TComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBox_SetDroppedDown)
    MySyscall(pComboBox_SetDroppedDown, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetSelLength)
int32_t
ComboBox_GetSelLength(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetSelLength)
    return (int32_t)MySyscall(pComboBox_GetSelLength, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetSelLength)
void
ComboBox_SetSelLength(TComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBox_SetSelLength)
    MySyscall(pComboBox_SetSelLength, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetSelStart)
int32_t
ComboBox_GetSelStart(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetSelStart)
    return (int32_t)MySyscall(pComboBox_GetSelStart, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetSelStart)
void
ComboBox_SetSelStart(TComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBox_SetSelStart)
    MySyscall(pComboBox_SetSelStart, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetDockClientCount)
int32_t
ComboBox_GetDockClientCount(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetDockClientCount)
    return (int32_t)MySyscall(pComboBox_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetDockSite)
BOOL
ComboBox_GetDockSite(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetDockSite)
    return (BOOL)MySyscall(pComboBox_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetDockSite)
void
ComboBox_SetDockSite(TComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBox_SetDockSite)
    MySyscall(pComboBox_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetMouseInClient)
BOOL
ComboBox_GetMouseInClient(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetMouseInClient)
    return (BOOL)MySyscall(pComboBox_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetVisibleDockClientCount)
int32_t
ComboBox_GetVisibleDockClientCount(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pComboBox_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetBrush)
TBrush
ComboBox_GetBrush(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetBrush)
    return (TBrush)MySyscall(pComboBox_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetControlCount)
int32_t
ComboBox_GetControlCount(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetControlCount)
    return (int32_t)MySyscall(pComboBox_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetHandle)
HWND
ComboBox_GetHandle(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetHandle)
    return (HWND)MySyscall(pComboBox_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetParentWindow)
HWND
ComboBox_GetParentWindow(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetParentWindow)
    return (HWND)MySyscall(pComboBox_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetParentWindow)
void
ComboBox_SetParentWindow(TComboBox AObj, HWND AValue) {
    GET_FUNC_ADDR(ComboBox_SetParentWindow)
    MySyscall(pComboBox_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetShowing)
BOOL
ComboBox_GetShowing(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetShowing)
    return (BOOL)MySyscall(pComboBox_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetUseDockManager)
BOOL
ComboBox_GetUseDockManager(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetUseDockManager)
    return (BOOL)MySyscall(pComboBox_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetUseDockManager)
void
ComboBox_SetUseDockManager(TComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBox_SetUseDockManager)
    MySyscall(pComboBox_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetAction)
TAction
ComboBox_GetAction(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetAction)
    return (TAction)MySyscall(pComboBox_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetAction)
void
ComboBox_SetAction(TComboBox AObj, TAction AValue) {
    GET_FUNC_ADDR(ComboBox_SetAction)
    MySyscall(pComboBox_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetBoundsRect)
TRect
ComboBox_GetBoundsRect(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetBoundsRect)
    TRect result;
    MySyscall(pComboBox_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ComboBox_SetBoundsRect)
void
ComboBox_SetBoundsRect(TComboBox AObj, TRect AValue) {
    GET_FUNC_ADDR(ComboBox_SetBoundsRect)
    MySyscall(pComboBox_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetClientHeight)
int32_t
ComboBox_GetClientHeight(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetClientHeight)
    return (int32_t)MySyscall(pComboBox_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetClientHeight)
void
ComboBox_SetClientHeight(TComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBox_SetClientHeight)
    MySyscall(pComboBox_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetClientOrigin)
TPoint
ComboBox_GetClientOrigin(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetClientOrigin)
    TPoint result;
    MySyscall(pComboBox_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ComboBox_GetClientRect)
TRect
ComboBox_GetClientRect(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetClientRect)
    TRect result;
    MySyscall(pComboBox_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ComboBox_GetClientWidth)
int32_t
ComboBox_GetClientWidth(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetClientWidth)
    return (int32_t)MySyscall(pComboBox_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetClientWidth)
void
ComboBox_SetClientWidth(TComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBox_SetClientWidth)
    MySyscall(pComboBox_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetControlState)
TControlState
ComboBox_GetControlState(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetControlState)
    return (TControlState)MySyscall(pComboBox_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetControlState)
void
ComboBox_SetControlState(TComboBox AObj, TControlState AValue) {
    GET_FUNC_ADDR(ComboBox_SetControlState)
    MySyscall(pComboBox_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetControlStyle)
TControlStyle
ComboBox_GetControlStyle(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetControlStyle)
    return (TControlStyle)MySyscall(pComboBox_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetControlStyle)
void
ComboBox_SetControlStyle(TComboBox AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(ComboBox_SetControlStyle)
    MySyscall(pComboBox_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetFloating)
BOOL
ComboBox_GetFloating(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetFloating)
    return (BOOL)MySyscall(pComboBox_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetParent)
TWinControl
ComboBox_GetParent(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetParent)
    return (TWinControl)MySyscall(pComboBox_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetParent)
void
ComboBox_SetParent(TComboBox AObj, TWinControl AValue) {
    GET_FUNC_ADDR(ComboBox_SetParent)
    MySyscall(pComboBox_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetLeft)
int32_t
ComboBox_GetLeft(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetLeft)
    return (int32_t)MySyscall(pComboBox_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetLeft)
void
ComboBox_SetLeft(TComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBox_SetLeft)
    MySyscall(pComboBox_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetTop)
int32_t
ComboBox_GetTop(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetTop)
    return (int32_t)MySyscall(pComboBox_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetTop)
void
ComboBox_SetTop(TComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBox_SetTop)
    MySyscall(pComboBox_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetWidth)
int32_t
ComboBox_GetWidth(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetWidth)
    return (int32_t)MySyscall(pComboBox_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetWidth)
void
ComboBox_SetWidth(TComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBox_SetWidth)
    MySyscall(pComboBox_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetHeight)
int32_t
ComboBox_GetHeight(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetHeight)
    return (int32_t)MySyscall(pComboBox_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetHeight)
void
ComboBox_SetHeight(TComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBox_SetHeight)
    MySyscall(pComboBox_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetCursor)
TCursor
ComboBox_GetCursor(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetCursor)
    return (TCursor)MySyscall(pComboBox_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetCursor)
void
ComboBox_SetCursor(TComboBox AObj, TCursor AValue) {
    GET_FUNC_ADDR(ComboBox_SetCursor)
    MySyscall(pComboBox_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetHint)
char*
ComboBox_GetHint(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetHint)
    return (char*)MySyscall(pComboBox_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetHint)
void
ComboBox_SetHint(TComboBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ComboBox_SetHint)
    MySyscall(pComboBox_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetComponentCount)
int32_t
ComboBox_GetComponentCount(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetComponentCount)
    return (int32_t)MySyscall(pComboBox_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetComponentIndex)
int32_t
ComboBox_GetComponentIndex(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetComponentIndex)
    return (int32_t)MySyscall(pComboBox_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetComponentIndex)
void
ComboBox_SetComponentIndex(TComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBox_SetComponentIndex)
    MySyscall(pComboBox_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetOwner)
TComponent
ComboBox_GetOwner(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetOwner)
    return (TComponent)MySyscall(pComboBox_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetName)
char*
ComboBox_GetName(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetName)
    return (char*)MySyscall(pComboBox_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetName)
void
ComboBox_SetName(TComboBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ComboBox_SetName)
    MySyscall(pComboBox_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetTag)
intptr_t
ComboBox_GetTag(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetTag)
    return (intptr_t)MySyscall(pComboBox_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetTag)
void
ComboBox_SetTag(TComboBox AObj, intptr_t AValue) {
    GET_FUNC_ADDR(ComboBox_SetTag)
    MySyscall(pComboBox_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetAnchorSideLeft)
TAnchorSide
ComboBox_GetAnchorSideLeft(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pComboBox_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetAnchorSideLeft)
void
ComboBox_SetAnchorSideLeft(TComboBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ComboBox_SetAnchorSideLeft)
    MySyscall(pComboBox_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetAnchorSideTop)
TAnchorSide
ComboBox_GetAnchorSideTop(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pComboBox_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetAnchorSideTop)
void
ComboBox_SetAnchorSideTop(TComboBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ComboBox_SetAnchorSideTop)
    MySyscall(pComboBox_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetAnchorSideRight)
TAnchorSide
ComboBox_GetAnchorSideRight(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pComboBox_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetAnchorSideRight)
void
ComboBox_SetAnchorSideRight(TComboBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ComboBox_SetAnchorSideRight)
    MySyscall(pComboBox_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetAnchorSideBottom)
TAnchorSide
ComboBox_GetAnchorSideBottom(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pComboBox_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetAnchorSideBottom)
void
ComboBox_SetAnchorSideBottom(TComboBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ComboBox_SetAnchorSideBottom)
    MySyscall(pComboBox_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetChildSizing)
TControlChildSizing
ComboBox_GetChildSizing(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetChildSizing)
    return (TControlChildSizing)MySyscall(pComboBox_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetChildSizing)
void
ComboBox_SetChildSizing(TComboBox AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(ComboBox_SetChildSizing)
    MySyscall(pComboBox_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetBorderSpacing)
TControlBorderSpacing
ComboBox_GetBorderSpacing(TComboBox AObj) {
    GET_FUNC_ADDR(ComboBox_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pComboBox_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_SetBorderSpacing)
void
ComboBox_SetBorderSpacing(TComboBox AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(ComboBox_SetBorderSpacing)
    MySyscall(pComboBox_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetDockClients)
TControl
ComboBox_GetDockClients(TComboBox AObj, int32_t Index) {
    GET_FUNC_ADDR(ComboBox_GetDockClients)
    return (TControl)MySyscall(pComboBox_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetControls)
TControl
ComboBox_GetControls(TComboBox AObj, int32_t Index) {
    GET_FUNC_ADDR(ComboBox_GetControls)
    return (TControl)MySyscall(pComboBox_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetComponents)
TComponent
ComboBox_GetComponents(TComboBox AObj, int32_t AIndex) {
    GET_FUNC_ADDR(ComboBox_GetComponents)
    return (TComponent)MySyscall(pComboBox_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_GetAnchorSide)
TAnchorSide
ComboBox_GetAnchorSide(TComboBox AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(ComboBox_GetAnchorSide)
    return (TAnchorSide)MySyscall(pComboBox_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBox_StaticClassType)
TClass
ComboBox_StaticClassType() {
    GET_FUNC_ADDR(ComboBox_StaticClassType)
    return (TClass)MySyscall(pComboBox_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TPanel-------------------

DEFINE_FUNC_PTR(Panel_Create)
TPanel
Panel_Create(TComponent AOwner) {
    GET_FUNC_ADDR(Panel_Create)
    return (TPanel)MySyscall(pPanel_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_Free)
void
Panel_Free(TPanel AObj) {
    GET_FUNC_ADDR(Panel_Free)
    MySyscall(pPanel_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_CanFocus)
BOOL
Panel_CanFocus(TPanel AObj) {
    GET_FUNC_ADDR(Panel_CanFocus)
    return (BOOL)MySyscall(pPanel_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_ContainsControl)
BOOL
Panel_ContainsControl(TPanel AObj, TControl Control) {
    GET_FUNC_ADDR(Panel_ContainsControl)
    return (BOOL)MySyscall(pPanel_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_ControlAtPos)
TControl
Panel_ControlAtPos(TPanel AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(Panel_ControlAtPos)
    return (TControl)MySyscall(pPanel_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_DisableAlign)
void
Panel_DisableAlign(TPanel AObj) {
    GET_FUNC_ADDR(Panel_DisableAlign)
    MySyscall(pPanel_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_EnableAlign)
void
Panel_EnableAlign(TPanel AObj) {
    GET_FUNC_ADDR(Panel_EnableAlign)
    MySyscall(pPanel_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_FindChildControl)
TControl
Panel_FindChildControl(TPanel AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(Panel_FindChildControl)
    return (TControl)MySyscall(pPanel_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_FlipChildren)
void
Panel_FlipChildren(TPanel AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(Panel_FlipChildren)
    MySyscall(pPanel_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_Focused)
BOOL
Panel_Focused(TPanel AObj) {
    GET_FUNC_ADDR(Panel_Focused)
    return (BOOL)MySyscall(pPanel_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_HandleAllocated)
BOOL
Panel_HandleAllocated(TPanel AObj) {
    GET_FUNC_ADDR(Panel_HandleAllocated)
    return (BOOL)MySyscall(pPanel_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_InsertControl)
void
Panel_InsertControl(TPanel AObj, TControl AControl) {
    GET_FUNC_ADDR(Panel_InsertControl)
    MySyscall(pPanel_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_Invalidate)
void
Panel_Invalidate(TPanel AObj) {
    GET_FUNC_ADDR(Panel_Invalidate)
    MySyscall(pPanel_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_PaintTo)
void
Panel_PaintTo(TPanel AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(Panel_PaintTo)
    MySyscall(pPanel_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_RemoveControl)
void
Panel_RemoveControl(TPanel AObj, TControl AControl) {
    GET_FUNC_ADDR(Panel_RemoveControl)
    MySyscall(pPanel_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_Realign)
void
Panel_Realign(TPanel AObj) {
    GET_FUNC_ADDR(Panel_Realign)
    MySyscall(pPanel_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_Repaint)
void
Panel_Repaint(TPanel AObj) {
    GET_FUNC_ADDR(Panel_Repaint)
    MySyscall(pPanel_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_ScaleBy)
void
Panel_ScaleBy(TPanel AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(Panel_ScaleBy)
    MySyscall(pPanel_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_ScrollBy)
void
Panel_ScrollBy(TPanel AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(Panel_ScrollBy)
    MySyscall(pPanel_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetBounds)
void
Panel_SetBounds(TPanel AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(Panel_SetBounds)
    MySyscall(pPanel_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetFocus)
void
Panel_SetFocus(TPanel AObj) {
    GET_FUNC_ADDR(Panel_SetFocus)
    MySyscall(pPanel_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_Update)
void
Panel_Update(TPanel AObj) {
    GET_FUNC_ADDR(Panel_Update)
    MySyscall(pPanel_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_BringToFront)
void
Panel_BringToFront(TPanel AObj) {
    GET_FUNC_ADDR(Panel_BringToFront)
    MySyscall(pPanel_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_ClientToScreen)
TPoint
Panel_ClientToScreen(TPanel AObj, TPoint Point) {
    GET_FUNC_ADDR(Panel_ClientToScreen)
    TPoint result;
    MySyscall(pPanel_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Panel_ClientToParent)
TPoint
Panel_ClientToParent(TPanel AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Panel_ClientToParent)
    TPoint result;
    MySyscall(pPanel_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Panel_Dragging)
BOOL
Panel_Dragging(TPanel AObj) {
    GET_FUNC_ADDR(Panel_Dragging)
    return (BOOL)MySyscall(pPanel_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_HasParent)
BOOL
Panel_HasParent(TPanel AObj) {
    GET_FUNC_ADDR(Panel_HasParent)
    return (BOOL)MySyscall(pPanel_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_Hide)
void
Panel_Hide(TPanel AObj) {
    GET_FUNC_ADDR(Panel_Hide)
    MySyscall(pPanel_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_Perform)
intptr_t
Panel_Perform(TPanel AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(Panel_Perform)
    return (intptr_t)MySyscall(pPanel_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_Refresh)
void
Panel_Refresh(TPanel AObj) {
    GET_FUNC_ADDR(Panel_Refresh)
    MySyscall(pPanel_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_ScreenToClient)
TPoint
Panel_ScreenToClient(TPanel AObj, TPoint Point) {
    GET_FUNC_ADDR(Panel_ScreenToClient)
    TPoint result;
    MySyscall(pPanel_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Panel_ParentToClient)
TPoint
Panel_ParentToClient(TPanel AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Panel_ParentToClient)
    TPoint result;
    MySyscall(pPanel_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Panel_SendToBack)
void
Panel_SendToBack(TPanel AObj) {
    GET_FUNC_ADDR(Panel_SendToBack)
    MySyscall(pPanel_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_Show)
void
Panel_Show(TPanel AObj) {
    GET_FUNC_ADDR(Panel_Show)
    MySyscall(pPanel_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetTextBuf)
int32_t
Panel_GetTextBuf(TPanel AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(Panel_GetTextBuf)
    return (int32_t)MySyscall(pPanel_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetTextLen)
int32_t
Panel_GetTextLen(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetTextLen)
    return (int32_t)MySyscall(pPanel_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetTextBuf)
void
Panel_SetTextBuf(TPanel AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(Panel_SetTextBuf)
    MySyscall(pPanel_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_FindComponent)
TComponent
Panel_FindComponent(TPanel AObj, CChar char* AName) {
    GET_FUNC_ADDR(Panel_FindComponent)
    return (TComponent)MySyscall(pPanel_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetNamePath)
char*
Panel_GetNamePath(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetNamePath)
    return (char*)MySyscall(pPanel_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_Assign)
void
Panel_Assign(TPanel AObj, TObject Source) {
    GET_FUNC_ADDR(Panel_Assign)
    MySyscall(pPanel_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_ClassType)
TClass
Panel_ClassType(TPanel AObj) {
    GET_FUNC_ADDR(Panel_ClassType)
    return (TClass)MySyscall(pPanel_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_ClassName)
char*
Panel_ClassName(TPanel AObj) {
    GET_FUNC_ADDR(Panel_ClassName)
    return (char*)MySyscall(pPanel_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_InstanceSize)
int32_t
Panel_InstanceSize(TPanel AObj) {
    GET_FUNC_ADDR(Panel_InstanceSize)
    return (int32_t)MySyscall(pPanel_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_InheritsFrom)
BOOL
Panel_InheritsFrom(TPanel AObj, TClass AClass) {
    GET_FUNC_ADDR(Panel_InheritsFrom)
    return (BOOL)MySyscall(pPanel_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_Equals)
BOOL
Panel_Equals(TPanel AObj, TObject Obj) {
    GET_FUNC_ADDR(Panel_Equals)
    return (BOOL)MySyscall(pPanel_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetHashCode)
int32_t
Panel_GetHashCode(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetHashCode)
    return (int32_t)MySyscall(pPanel_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_ToString)
char*
Panel_ToString(TPanel AObj) {
    GET_FUNC_ADDR(Panel_ToString)
    return (char*)MySyscall(pPanel_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_AnchorToNeighbour)
void
Panel_AnchorToNeighbour(TPanel AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Panel_AnchorToNeighbour)
    MySyscall(pPanel_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_AnchorParallel)
void
Panel_AnchorParallel(TPanel AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Panel_AnchorParallel)
    MySyscall(pPanel_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_AnchorHorizontalCenterTo)
void
Panel_AnchorHorizontalCenterTo(TPanel AObj, TControl ASibling) {
    GET_FUNC_ADDR(Panel_AnchorHorizontalCenterTo)
    MySyscall(pPanel_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_AnchorVerticalCenterTo)
void
Panel_AnchorVerticalCenterTo(TPanel AObj, TControl ASibling) {
    GET_FUNC_ADDR(Panel_AnchorVerticalCenterTo)
    MySyscall(pPanel_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_AnchorSame)
void
Panel_AnchorSame(TPanel AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(Panel_AnchorSame)
    MySyscall(pPanel_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_AnchorAsAlign)
void
Panel_AnchorAsAlign(TPanel AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(Panel_AnchorAsAlign)
    MySyscall(pPanel_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_AnchorClient)
void
Panel_AnchorClient(TPanel AObj, int32_t ASpace) {
    GET_FUNC_ADDR(Panel_AnchorClient)
    MySyscall(pPanel_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_ScaleDesignToForm)
int32_t
Panel_ScaleDesignToForm(TPanel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Panel_ScaleDesignToForm)
    return (int32_t)MySyscall(pPanel_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_ScaleFormToDesign)
int32_t
Panel_ScaleFormToDesign(TPanel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Panel_ScaleFormToDesign)
    return (int32_t)MySyscall(pPanel_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_Scale96ToForm)
int32_t
Panel_Scale96ToForm(TPanel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Panel_Scale96ToForm)
    return (int32_t)MySyscall(pPanel_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_ScaleFormTo96)
int32_t
Panel_ScaleFormTo96(TPanel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Panel_ScaleFormTo96)
    return (int32_t)MySyscall(pPanel_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_Scale96ToFont)
int32_t
Panel_Scale96ToFont(TPanel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Panel_Scale96ToFont)
    return (int32_t)MySyscall(pPanel_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_ScaleFontTo96)
int32_t
Panel_ScaleFontTo96(TPanel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Panel_ScaleFontTo96)
    return (int32_t)MySyscall(pPanel_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_ScaleScreenToFont)
int32_t
Panel_ScaleScreenToFont(TPanel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Panel_ScaleScreenToFont)
    return (int32_t)MySyscall(pPanel_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_ScaleFontToScreen)
int32_t
Panel_ScaleFontToScreen(TPanel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Panel_ScaleFontToScreen)
    return (int32_t)MySyscall(pPanel_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_Scale96ToScreen)
int32_t
Panel_Scale96ToScreen(TPanel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Panel_Scale96ToScreen)
    return (int32_t)MySyscall(pPanel_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_ScaleScreenTo96)
int32_t
Panel_ScaleScreenTo96(TPanel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Panel_ScaleScreenTo96)
    return (int32_t)MySyscall(pPanel_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_AutoAdjustLayout)
void
Panel_AutoAdjustLayout(TPanel AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(Panel_AutoAdjustLayout)
    MySyscall(pPanel_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_FixDesignFontsPPI)
void
Panel_FixDesignFontsPPI(TPanel AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(Panel_FixDesignFontsPPI)
    MySyscall(pPanel_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_ScaleFontsPPI)
void
Panel_ScaleFontsPPI(TPanel AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(Panel_ScaleFontsPPI)
    MySyscall(pPanel_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetCanvas)
TCanvas
Panel_GetCanvas(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetCanvas)
    return (TCanvas)MySyscall(pPanel_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetCanvas)
void
Panel_SetCanvas(TPanel AObj, TCanvas AValue) {
    GET_FUNC_ADDR(Panel_SetCanvas)
    MySyscall(pPanel_SetCanvas, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetOnPaint)
void
Panel_SetOnPaint(TPanel AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Panel_SetOnPaint)
    MySyscall(pPanel_SetOnPaint, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetAlign)
TAlign
Panel_GetAlign(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetAlign)
    return (TAlign)MySyscall(pPanel_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetAlign)
void
Panel_SetAlign(TPanel AObj, TAlign AValue) {
    GET_FUNC_ADDR(Panel_SetAlign)
    MySyscall(pPanel_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetAlignment)
TAlignment
Panel_GetAlignment(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetAlignment)
    return (TAlignment)MySyscall(pPanel_GetAlignment, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetAlignment)
void
Panel_SetAlignment(TPanel AObj, TAlignment AValue) {
    GET_FUNC_ADDR(Panel_SetAlignment)
    MySyscall(pPanel_SetAlignment, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetAnchors)
TAnchors
Panel_GetAnchors(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetAnchors)
    return (TAnchors)MySyscall(pPanel_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetAnchors)
void
Panel_SetAnchors(TPanel AObj, TAnchors AValue) {
    GET_FUNC_ADDR(Panel_SetAnchors)
    MySyscall(pPanel_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetAutoSize)
BOOL
Panel_GetAutoSize(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetAutoSize)
    return (BOOL)MySyscall(pPanel_GetAutoSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetAutoSize)
void
Panel_SetAutoSize(TPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Panel_SetAutoSize)
    MySyscall(pPanel_SetAutoSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetBevelInner)
TBevelCut
Panel_GetBevelInner(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetBevelInner)
    return (TBevelCut)MySyscall(pPanel_GetBevelInner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetBevelInner)
void
Panel_SetBevelInner(TPanel AObj, TBevelCut AValue) {
    GET_FUNC_ADDR(Panel_SetBevelInner)
    MySyscall(pPanel_SetBevelInner, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetBevelOuter)
TBevelCut
Panel_GetBevelOuter(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetBevelOuter)
    return (TBevelCut)MySyscall(pPanel_GetBevelOuter, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetBevelOuter)
void
Panel_SetBevelOuter(TPanel AObj, TBevelCut AValue) {
    GET_FUNC_ADDR(Panel_SetBevelOuter)
    MySyscall(pPanel_SetBevelOuter, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetBiDiMode)
TBiDiMode
Panel_GetBiDiMode(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetBiDiMode)
    return (TBiDiMode)MySyscall(pPanel_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetBiDiMode)
void
Panel_SetBiDiMode(TPanel AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(Panel_SetBiDiMode)
    MySyscall(pPanel_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetBorderWidth)
int32_t
Panel_GetBorderWidth(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetBorderWidth)
    return (int32_t)MySyscall(pPanel_GetBorderWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetBorderWidth)
void
Panel_SetBorderWidth(TPanel AObj, int32_t AValue) {
    GET_FUNC_ADDR(Panel_SetBorderWidth)
    MySyscall(pPanel_SetBorderWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetBorderStyle)
TBorderStyle
Panel_GetBorderStyle(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetBorderStyle)
    return (TBorderStyle)MySyscall(pPanel_GetBorderStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetBorderStyle)
void
Panel_SetBorderStyle(TPanel AObj, TBorderStyle AValue) {
    GET_FUNC_ADDR(Panel_SetBorderStyle)
    MySyscall(pPanel_SetBorderStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetCaption)
char*
Panel_GetCaption(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetCaption)
    return (char*)MySyscall(pPanel_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetCaption)
void
Panel_SetCaption(TPanel AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Panel_SetCaption)
    MySyscall(pPanel_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetColor)
TColor
Panel_GetColor(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetColor)
    return (TColor)MySyscall(pPanel_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetColor)
void
Panel_SetColor(TPanel AObj, TColor AValue) {
    GET_FUNC_ADDR(Panel_SetColor)
    MySyscall(pPanel_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetConstraints)
TSizeConstraints
Panel_GetConstraints(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetConstraints)
    return (TSizeConstraints)MySyscall(pPanel_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetConstraints)
void
Panel_SetConstraints(TPanel AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(Panel_SetConstraints)
    MySyscall(pPanel_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetUseDockManager)
BOOL
Panel_GetUseDockManager(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetUseDockManager)
    return (BOOL)MySyscall(pPanel_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetUseDockManager)
void
Panel_SetUseDockManager(TPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Panel_SetUseDockManager)
    MySyscall(pPanel_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetDockSite)
BOOL
Panel_GetDockSite(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetDockSite)
    return (BOOL)MySyscall(pPanel_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetDockSite)
void
Panel_SetDockSite(TPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Panel_SetDockSite)
    MySyscall(pPanel_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetDoubleBuffered)
BOOL
Panel_GetDoubleBuffered(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetDoubleBuffered)
    return (BOOL)MySyscall(pPanel_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetDoubleBuffered)
void
Panel_SetDoubleBuffered(TPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Panel_SetDoubleBuffered)
    MySyscall(pPanel_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetDragCursor)
TCursor
Panel_GetDragCursor(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetDragCursor)
    return (TCursor)MySyscall(pPanel_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetDragCursor)
void
Panel_SetDragCursor(TPanel AObj, TCursor AValue) {
    GET_FUNC_ADDR(Panel_SetDragCursor)
    MySyscall(pPanel_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetDragKind)
TDragKind
Panel_GetDragKind(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetDragKind)
    return (TDragKind)MySyscall(pPanel_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetDragKind)
void
Panel_SetDragKind(TPanel AObj, TDragKind AValue) {
    GET_FUNC_ADDR(Panel_SetDragKind)
    MySyscall(pPanel_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetDragMode)
TDragMode
Panel_GetDragMode(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetDragMode)
    return (TDragMode)MySyscall(pPanel_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetDragMode)
void
Panel_SetDragMode(TPanel AObj, TDragMode AValue) {
    GET_FUNC_ADDR(Panel_SetDragMode)
    MySyscall(pPanel_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetEnabled)
BOOL
Panel_GetEnabled(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetEnabled)
    return (BOOL)MySyscall(pPanel_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetEnabled)
void
Panel_SetEnabled(TPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Panel_SetEnabled)
    MySyscall(pPanel_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetFullRepaint)
BOOL
Panel_GetFullRepaint(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetFullRepaint)
    return (BOOL)MySyscall(pPanel_GetFullRepaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetFullRepaint)
void
Panel_SetFullRepaint(TPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Panel_SetFullRepaint)
    MySyscall(pPanel_SetFullRepaint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetFont)
TFont
Panel_GetFont(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetFont)
    return (TFont)MySyscall(pPanel_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetFont)
void
Panel_SetFont(TPanel AObj, TFont AValue) {
    GET_FUNC_ADDR(Panel_SetFont)
    MySyscall(pPanel_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetParentBackground)
BOOL
Panel_GetParentBackground(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetParentBackground)
    return (BOOL)MySyscall(pPanel_GetParentBackground, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetParentBackground)
void
Panel_SetParentBackground(TPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Panel_SetParentBackground)
    MySyscall(pPanel_SetParentBackground, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetParentColor)
BOOL
Panel_GetParentColor(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetParentColor)
    return (BOOL)MySyscall(pPanel_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetParentColor)
void
Panel_SetParentColor(TPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Panel_SetParentColor)
    MySyscall(pPanel_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetParentDoubleBuffered)
BOOL
Panel_GetParentDoubleBuffered(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pPanel_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetParentDoubleBuffered)
void
Panel_SetParentDoubleBuffered(TPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Panel_SetParentDoubleBuffered)
    MySyscall(pPanel_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetParentFont)
BOOL
Panel_GetParentFont(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetParentFont)
    return (BOOL)MySyscall(pPanel_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetParentFont)
void
Panel_SetParentFont(TPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Panel_SetParentFont)
    MySyscall(pPanel_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetParentShowHint)
BOOL
Panel_GetParentShowHint(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetParentShowHint)
    return (BOOL)MySyscall(pPanel_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetParentShowHint)
void
Panel_SetParentShowHint(TPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Panel_SetParentShowHint)
    MySyscall(pPanel_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetPopupMenu)
TPopupMenu
Panel_GetPopupMenu(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetPopupMenu)
    return (TPopupMenu)MySyscall(pPanel_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetPopupMenu)
void
Panel_SetPopupMenu(TPanel AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(Panel_SetPopupMenu)
    MySyscall(pPanel_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetShowHint)
BOOL
Panel_GetShowHint(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetShowHint)
    return (BOOL)MySyscall(pPanel_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetShowHint)
void
Panel_SetShowHint(TPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Panel_SetShowHint)
    MySyscall(pPanel_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetTabOrder)
TTabOrder
Panel_GetTabOrder(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetTabOrder)
    return (TTabOrder)MySyscall(pPanel_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetTabOrder)
void
Panel_SetTabOrder(TPanel AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(Panel_SetTabOrder)
    MySyscall(pPanel_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetTabStop)
BOOL
Panel_GetTabStop(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetTabStop)
    return (BOOL)MySyscall(pPanel_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetTabStop)
void
Panel_SetTabStop(TPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Panel_SetTabStop)
    MySyscall(pPanel_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetVisible)
BOOL
Panel_GetVisible(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetVisible)
    return (BOOL)MySyscall(pPanel_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetVisible)
void
Panel_SetVisible(TPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Panel_SetVisible)
    MySyscall(pPanel_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetOnAlignPosition)
void
Panel_SetOnAlignPosition(TPanel AObj, TAlignPositionEvent AEventData) {
    GET_FUNC_ADDR(Panel_SetOnAlignPosition)
    MySyscall(pPanel_SetOnAlignPosition, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetOnClick)
void
Panel_SetOnClick(TPanel AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Panel_SetOnClick)
    MySyscall(pPanel_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetOnContextPopup)
void
Panel_SetOnContextPopup(TPanel AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(Panel_SetOnContextPopup)
    MySyscall(pPanel_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetOnDockDrop)
void
Panel_SetOnDockDrop(TPanel AObj, TDockDropEvent AEventData) {
    GET_FUNC_ADDR(Panel_SetOnDockDrop)
    MySyscall(pPanel_SetOnDockDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetOnDblClick)
void
Panel_SetOnDblClick(TPanel AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Panel_SetOnDblClick)
    MySyscall(pPanel_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetOnDragDrop)
void
Panel_SetOnDragDrop(TPanel AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(Panel_SetOnDragDrop)
    MySyscall(pPanel_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetOnDragOver)
void
Panel_SetOnDragOver(TPanel AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(Panel_SetOnDragOver)
    MySyscall(pPanel_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetOnEndDock)
void
Panel_SetOnEndDock(TPanel AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(Panel_SetOnEndDock)
    MySyscall(pPanel_SetOnEndDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetOnEndDrag)
void
Panel_SetOnEndDrag(TPanel AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(Panel_SetOnEndDrag)
    MySyscall(pPanel_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetOnEnter)
void
Panel_SetOnEnter(TPanel AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Panel_SetOnEnter)
    MySyscall(pPanel_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetOnExit)
void
Panel_SetOnExit(TPanel AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Panel_SetOnExit)
    MySyscall(pPanel_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetOnGetSiteInfo)
void
Panel_SetOnGetSiteInfo(TPanel AObj, TGetSiteInfoEvent AEventData) {
    GET_FUNC_ADDR(Panel_SetOnGetSiteInfo)
    MySyscall(pPanel_SetOnGetSiteInfo, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetOnMouseDown)
void
Panel_SetOnMouseDown(TPanel AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(Panel_SetOnMouseDown)
    MySyscall(pPanel_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetOnMouseEnter)
void
Panel_SetOnMouseEnter(TPanel AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Panel_SetOnMouseEnter)
    MySyscall(pPanel_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetOnMouseLeave)
void
Panel_SetOnMouseLeave(TPanel AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Panel_SetOnMouseLeave)
    MySyscall(pPanel_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetOnMouseMove)
void
Panel_SetOnMouseMove(TPanel AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(Panel_SetOnMouseMove)
    MySyscall(pPanel_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetOnMouseUp)
void
Panel_SetOnMouseUp(TPanel AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(Panel_SetOnMouseUp)
    MySyscall(pPanel_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetOnResize)
void
Panel_SetOnResize(TPanel AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Panel_SetOnResize)
    MySyscall(pPanel_SetOnResize, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetOnStartDock)
void
Panel_SetOnStartDock(TPanel AObj, TStartDockEvent AEventData) {
    GET_FUNC_ADDR(Panel_SetOnStartDock)
    MySyscall(pPanel_SetOnStartDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetOnUnDock)
void
Panel_SetOnUnDock(TPanel AObj, TUnDockEvent AEventData) {
    GET_FUNC_ADDR(Panel_SetOnUnDock)
    MySyscall(pPanel_SetOnUnDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetDockClientCount)
int32_t
Panel_GetDockClientCount(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetDockClientCount)
    return (int32_t)MySyscall(pPanel_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetMouseInClient)
BOOL
Panel_GetMouseInClient(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetMouseInClient)
    return (BOOL)MySyscall(pPanel_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetVisibleDockClientCount)
int32_t
Panel_GetVisibleDockClientCount(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pPanel_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetBrush)
TBrush
Panel_GetBrush(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetBrush)
    return (TBrush)MySyscall(pPanel_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetControlCount)
int32_t
Panel_GetControlCount(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetControlCount)
    return (int32_t)MySyscall(pPanel_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetHandle)
HWND
Panel_GetHandle(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetHandle)
    return (HWND)MySyscall(pPanel_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetParentWindow)
HWND
Panel_GetParentWindow(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetParentWindow)
    return (HWND)MySyscall(pPanel_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetParentWindow)
void
Panel_SetParentWindow(TPanel AObj, HWND AValue) {
    GET_FUNC_ADDR(Panel_SetParentWindow)
    MySyscall(pPanel_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetShowing)
BOOL
Panel_GetShowing(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetShowing)
    return (BOOL)MySyscall(pPanel_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetAction)
TAction
Panel_GetAction(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetAction)
    return (TAction)MySyscall(pPanel_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetAction)
void
Panel_SetAction(TPanel AObj, TAction AValue) {
    GET_FUNC_ADDR(Panel_SetAction)
    MySyscall(pPanel_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetBoundsRect)
TRect
Panel_GetBoundsRect(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetBoundsRect)
    TRect result;
    MySyscall(pPanel_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Panel_SetBoundsRect)
void
Panel_SetBoundsRect(TPanel AObj, TRect AValue) {
    GET_FUNC_ADDR(Panel_SetBoundsRect)
    MySyscall(pPanel_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetClientHeight)
int32_t
Panel_GetClientHeight(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetClientHeight)
    return (int32_t)MySyscall(pPanel_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetClientHeight)
void
Panel_SetClientHeight(TPanel AObj, int32_t AValue) {
    GET_FUNC_ADDR(Panel_SetClientHeight)
    MySyscall(pPanel_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetClientOrigin)
TPoint
Panel_GetClientOrigin(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetClientOrigin)
    TPoint result;
    MySyscall(pPanel_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Panel_GetClientRect)
TRect
Panel_GetClientRect(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetClientRect)
    TRect result;
    MySyscall(pPanel_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Panel_GetClientWidth)
int32_t
Panel_GetClientWidth(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetClientWidth)
    return (int32_t)MySyscall(pPanel_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetClientWidth)
void
Panel_SetClientWidth(TPanel AObj, int32_t AValue) {
    GET_FUNC_ADDR(Panel_SetClientWidth)
    MySyscall(pPanel_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetControlState)
TControlState
Panel_GetControlState(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetControlState)
    return (TControlState)MySyscall(pPanel_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetControlState)
void
Panel_SetControlState(TPanel AObj, TControlState AValue) {
    GET_FUNC_ADDR(Panel_SetControlState)
    MySyscall(pPanel_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetControlStyle)
TControlStyle
Panel_GetControlStyle(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetControlStyle)
    return (TControlStyle)MySyscall(pPanel_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetControlStyle)
void
Panel_SetControlStyle(TPanel AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(Panel_SetControlStyle)
    MySyscall(pPanel_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetFloating)
BOOL
Panel_GetFloating(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetFloating)
    return (BOOL)MySyscall(pPanel_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetParent)
TWinControl
Panel_GetParent(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetParent)
    return (TWinControl)MySyscall(pPanel_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetParent)
void
Panel_SetParent(TPanel AObj, TWinControl AValue) {
    GET_FUNC_ADDR(Panel_SetParent)
    MySyscall(pPanel_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetLeft)
int32_t
Panel_GetLeft(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetLeft)
    return (int32_t)MySyscall(pPanel_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetLeft)
void
Panel_SetLeft(TPanel AObj, int32_t AValue) {
    GET_FUNC_ADDR(Panel_SetLeft)
    MySyscall(pPanel_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetTop)
int32_t
Panel_GetTop(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetTop)
    return (int32_t)MySyscall(pPanel_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetTop)
void
Panel_SetTop(TPanel AObj, int32_t AValue) {
    GET_FUNC_ADDR(Panel_SetTop)
    MySyscall(pPanel_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetWidth)
int32_t
Panel_GetWidth(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetWidth)
    return (int32_t)MySyscall(pPanel_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetWidth)
void
Panel_SetWidth(TPanel AObj, int32_t AValue) {
    GET_FUNC_ADDR(Panel_SetWidth)
    MySyscall(pPanel_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetHeight)
int32_t
Panel_GetHeight(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetHeight)
    return (int32_t)MySyscall(pPanel_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetHeight)
void
Panel_SetHeight(TPanel AObj, int32_t AValue) {
    GET_FUNC_ADDR(Panel_SetHeight)
    MySyscall(pPanel_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetCursor)
TCursor
Panel_GetCursor(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetCursor)
    return (TCursor)MySyscall(pPanel_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetCursor)
void
Panel_SetCursor(TPanel AObj, TCursor AValue) {
    GET_FUNC_ADDR(Panel_SetCursor)
    MySyscall(pPanel_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetHint)
char*
Panel_GetHint(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetHint)
    return (char*)MySyscall(pPanel_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetHint)
void
Panel_SetHint(TPanel AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Panel_SetHint)
    MySyscall(pPanel_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetComponentCount)
int32_t
Panel_GetComponentCount(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetComponentCount)
    return (int32_t)MySyscall(pPanel_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetComponentIndex)
int32_t
Panel_GetComponentIndex(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetComponentIndex)
    return (int32_t)MySyscall(pPanel_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetComponentIndex)
void
Panel_SetComponentIndex(TPanel AObj, int32_t AValue) {
    GET_FUNC_ADDR(Panel_SetComponentIndex)
    MySyscall(pPanel_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetOwner)
TComponent
Panel_GetOwner(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetOwner)
    return (TComponent)MySyscall(pPanel_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetName)
char*
Panel_GetName(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetName)
    return (char*)MySyscall(pPanel_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetName)
void
Panel_SetName(TPanel AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Panel_SetName)
    MySyscall(pPanel_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetTag)
intptr_t
Panel_GetTag(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetTag)
    return (intptr_t)MySyscall(pPanel_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetTag)
void
Panel_SetTag(TPanel AObj, intptr_t AValue) {
    GET_FUNC_ADDR(Panel_SetTag)
    MySyscall(pPanel_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetAnchorSideLeft)
TAnchorSide
Panel_GetAnchorSideLeft(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pPanel_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetAnchorSideLeft)
void
Panel_SetAnchorSideLeft(TPanel AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Panel_SetAnchorSideLeft)
    MySyscall(pPanel_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetAnchorSideTop)
TAnchorSide
Panel_GetAnchorSideTop(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pPanel_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetAnchorSideTop)
void
Panel_SetAnchorSideTop(TPanel AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Panel_SetAnchorSideTop)
    MySyscall(pPanel_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetAnchorSideRight)
TAnchorSide
Panel_GetAnchorSideRight(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pPanel_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetAnchorSideRight)
void
Panel_SetAnchorSideRight(TPanel AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Panel_SetAnchorSideRight)
    MySyscall(pPanel_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetAnchorSideBottom)
TAnchorSide
Panel_GetAnchorSideBottom(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pPanel_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetAnchorSideBottom)
void
Panel_SetAnchorSideBottom(TPanel AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Panel_SetAnchorSideBottom)
    MySyscall(pPanel_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetChildSizing)
TControlChildSizing
Panel_GetChildSizing(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetChildSizing)
    return (TControlChildSizing)MySyscall(pPanel_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetChildSizing)
void
Panel_SetChildSizing(TPanel AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(Panel_SetChildSizing)
    MySyscall(pPanel_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetBorderSpacing)
TControlBorderSpacing
Panel_GetBorderSpacing(TPanel AObj) {
    GET_FUNC_ADDR(Panel_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pPanel_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_SetBorderSpacing)
void
Panel_SetBorderSpacing(TPanel AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(Panel_SetBorderSpacing)
    MySyscall(pPanel_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetDockClients)
TControl
Panel_GetDockClients(TPanel AObj, int32_t Index) {
    GET_FUNC_ADDR(Panel_GetDockClients)
    return (TControl)MySyscall(pPanel_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetControls)
TControl
Panel_GetControls(TPanel AObj, int32_t Index) {
    GET_FUNC_ADDR(Panel_GetControls)
    return (TControl)MySyscall(pPanel_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetComponents)
TComponent
Panel_GetComponents(TPanel AObj, int32_t AIndex) {
    GET_FUNC_ADDR(Panel_GetComponents)
    return (TComponent)MySyscall(pPanel_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_GetAnchorSide)
TAnchorSide
Panel_GetAnchorSide(TPanel AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(Panel_GetAnchorSide)
    return (TAnchorSide)MySyscall(pPanel_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Panel_StaticClassType)
TClass
Panel_StaticClassType() {
    GET_FUNC_ADDR(Panel_StaticClassType)
    return (TClass)MySyscall(pPanel_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TImage-------------------

DEFINE_FUNC_PTR(Image_Create)
TImage
Image_Create(TComponent AOwner) {
    GET_FUNC_ADDR(Image_Create)
    return (TImage)MySyscall(pImage_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_Free)
void
Image_Free(TImage AObj) {
    GET_FUNC_ADDR(Image_Free)
    MySyscall(pImage_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_BringToFront)
void
Image_BringToFront(TImage AObj) {
    GET_FUNC_ADDR(Image_BringToFront)
    MySyscall(pImage_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_ClientToScreen)
TPoint
Image_ClientToScreen(TImage AObj, TPoint Point) {
    GET_FUNC_ADDR(Image_ClientToScreen)
    TPoint result;
    MySyscall(pImage_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Image_ClientToParent)
TPoint
Image_ClientToParent(TImage AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Image_ClientToParent)
    TPoint result;
    MySyscall(pImage_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Image_Dragging)
BOOL
Image_Dragging(TImage AObj) {
    GET_FUNC_ADDR(Image_Dragging)
    return (BOOL)MySyscall(pImage_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_HasParent)
BOOL
Image_HasParent(TImage AObj) {
    GET_FUNC_ADDR(Image_HasParent)
    return (BOOL)MySyscall(pImage_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_Hide)
void
Image_Hide(TImage AObj) {
    GET_FUNC_ADDR(Image_Hide)
    MySyscall(pImage_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_Invalidate)
void
Image_Invalidate(TImage AObj) {
    GET_FUNC_ADDR(Image_Invalidate)
    MySyscall(pImage_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_Perform)
intptr_t
Image_Perform(TImage AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(Image_Perform)
    return (intptr_t)MySyscall(pImage_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_Refresh)
void
Image_Refresh(TImage AObj) {
    GET_FUNC_ADDR(Image_Refresh)
    MySyscall(pImage_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_Repaint)
void
Image_Repaint(TImage AObj) {
    GET_FUNC_ADDR(Image_Repaint)
    MySyscall(pImage_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_ScreenToClient)
TPoint
Image_ScreenToClient(TImage AObj, TPoint Point) {
    GET_FUNC_ADDR(Image_ScreenToClient)
    TPoint result;
    MySyscall(pImage_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Image_ParentToClient)
TPoint
Image_ParentToClient(TImage AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Image_ParentToClient)
    TPoint result;
    MySyscall(pImage_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Image_SendToBack)
void
Image_SendToBack(TImage AObj) {
    GET_FUNC_ADDR(Image_SendToBack)
    MySyscall(pImage_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetBounds)
void
Image_SetBounds(TImage AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(Image_SetBounds)
    MySyscall(pImage_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_Show)
void
Image_Show(TImage AObj) {
    GET_FUNC_ADDR(Image_Show)
    MySyscall(pImage_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_Update)
void
Image_Update(TImage AObj) {
    GET_FUNC_ADDR(Image_Update)
    MySyscall(pImage_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetTextBuf)
int32_t
Image_GetTextBuf(TImage AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(Image_GetTextBuf)
    return (int32_t)MySyscall(pImage_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetTextLen)
int32_t
Image_GetTextLen(TImage AObj) {
    GET_FUNC_ADDR(Image_GetTextLen)
    return (int32_t)MySyscall(pImage_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetTextBuf)
void
Image_SetTextBuf(TImage AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(Image_SetTextBuf)
    MySyscall(pImage_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_FindComponent)
TComponent
Image_FindComponent(TImage AObj, CChar char* AName) {
    GET_FUNC_ADDR(Image_FindComponent)
    return (TComponent)MySyscall(pImage_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetNamePath)
char*
Image_GetNamePath(TImage AObj) {
    GET_FUNC_ADDR(Image_GetNamePath)
    return (char*)MySyscall(pImage_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_Assign)
void
Image_Assign(TImage AObj, TObject Source) {
    GET_FUNC_ADDR(Image_Assign)
    MySyscall(pImage_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_ClassType)
TClass
Image_ClassType(TImage AObj) {
    GET_FUNC_ADDR(Image_ClassType)
    return (TClass)MySyscall(pImage_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_ClassName)
char*
Image_ClassName(TImage AObj) {
    GET_FUNC_ADDR(Image_ClassName)
    return (char*)MySyscall(pImage_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_InstanceSize)
int32_t
Image_InstanceSize(TImage AObj) {
    GET_FUNC_ADDR(Image_InstanceSize)
    return (int32_t)MySyscall(pImage_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_InheritsFrom)
BOOL
Image_InheritsFrom(TImage AObj, TClass AClass) {
    GET_FUNC_ADDR(Image_InheritsFrom)
    return (BOOL)MySyscall(pImage_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_Equals)
BOOL
Image_Equals(TImage AObj, TObject Obj) {
    GET_FUNC_ADDR(Image_Equals)
    return (BOOL)MySyscall(pImage_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetHashCode)
int32_t
Image_GetHashCode(TImage AObj) {
    GET_FUNC_ADDR(Image_GetHashCode)
    return (int32_t)MySyscall(pImage_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_ToString)
char*
Image_ToString(TImage AObj) {
    GET_FUNC_ADDR(Image_ToString)
    return (char*)MySyscall(pImage_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_AnchorToNeighbour)
void
Image_AnchorToNeighbour(TImage AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Image_AnchorToNeighbour)
    MySyscall(pImage_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_AnchorParallel)
void
Image_AnchorParallel(TImage AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Image_AnchorParallel)
    MySyscall(pImage_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_AnchorHorizontalCenterTo)
void
Image_AnchorHorizontalCenterTo(TImage AObj, TControl ASibling) {
    GET_FUNC_ADDR(Image_AnchorHorizontalCenterTo)
    MySyscall(pImage_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_AnchorVerticalCenterTo)
void
Image_AnchorVerticalCenterTo(TImage AObj, TControl ASibling) {
    GET_FUNC_ADDR(Image_AnchorVerticalCenterTo)
    MySyscall(pImage_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_AnchorSame)
void
Image_AnchorSame(TImage AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(Image_AnchorSame)
    MySyscall(pImage_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_AnchorAsAlign)
void
Image_AnchorAsAlign(TImage AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(Image_AnchorAsAlign)
    MySyscall(pImage_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_AnchorClient)
void
Image_AnchorClient(TImage AObj, int32_t ASpace) {
    GET_FUNC_ADDR(Image_AnchorClient)
    MySyscall(pImage_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_ScaleDesignToForm)
int32_t
Image_ScaleDesignToForm(TImage AObj, int32_t ASize) {
    GET_FUNC_ADDR(Image_ScaleDesignToForm)
    return (int32_t)MySyscall(pImage_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_ScaleFormToDesign)
int32_t
Image_ScaleFormToDesign(TImage AObj, int32_t ASize) {
    GET_FUNC_ADDR(Image_ScaleFormToDesign)
    return (int32_t)MySyscall(pImage_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_Scale96ToForm)
int32_t
Image_Scale96ToForm(TImage AObj, int32_t ASize) {
    GET_FUNC_ADDR(Image_Scale96ToForm)
    return (int32_t)MySyscall(pImage_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_ScaleFormTo96)
int32_t
Image_ScaleFormTo96(TImage AObj, int32_t ASize) {
    GET_FUNC_ADDR(Image_ScaleFormTo96)
    return (int32_t)MySyscall(pImage_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_Scale96ToFont)
int32_t
Image_Scale96ToFont(TImage AObj, int32_t ASize) {
    GET_FUNC_ADDR(Image_Scale96ToFont)
    return (int32_t)MySyscall(pImage_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_ScaleFontTo96)
int32_t
Image_ScaleFontTo96(TImage AObj, int32_t ASize) {
    GET_FUNC_ADDR(Image_ScaleFontTo96)
    return (int32_t)MySyscall(pImage_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_ScaleScreenToFont)
int32_t
Image_ScaleScreenToFont(TImage AObj, int32_t ASize) {
    GET_FUNC_ADDR(Image_ScaleScreenToFont)
    return (int32_t)MySyscall(pImage_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_ScaleFontToScreen)
int32_t
Image_ScaleFontToScreen(TImage AObj, int32_t ASize) {
    GET_FUNC_ADDR(Image_ScaleFontToScreen)
    return (int32_t)MySyscall(pImage_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_Scale96ToScreen)
int32_t
Image_Scale96ToScreen(TImage AObj, int32_t ASize) {
    GET_FUNC_ADDR(Image_Scale96ToScreen)
    return (int32_t)MySyscall(pImage_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_ScaleScreenTo96)
int32_t
Image_ScaleScreenTo96(TImage AObj, int32_t ASize) {
    GET_FUNC_ADDR(Image_ScaleScreenTo96)
    return (int32_t)MySyscall(pImage_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_AutoAdjustLayout)
void
Image_AutoAdjustLayout(TImage AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(Image_AutoAdjustLayout)
    MySyscall(pImage_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_FixDesignFontsPPI)
void
Image_FixDesignFontsPPI(TImage AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(Image_FixDesignFontsPPI)
    MySyscall(pImage_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_ScaleFontsPPI)
void
Image_ScaleFontsPPI(TImage AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(Image_ScaleFontsPPI)
    MySyscall(pImage_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetAntialiasingMode)
TAntialiasingMode
Image_GetAntialiasingMode(TImage AObj) {
    GET_FUNC_ADDR(Image_GetAntialiasingMode)
    return (TAntialiasingMode)MySyscall(pImage_GetAntialiasingMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetAntialiasingMode)
void
Image_SetAntialiasingMode(TImage AObj, TAntialiasingMode AValue) {
    GET_FUNC_ADDR(Image_SetAntialiasingMode)
    MySyscall(pImage_SetAntialiasingMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetKeepOriginXWhenClipped)
BOOL
Image_GetKeepOriginXWhenClipped(TImage AObj) {
    GET_FUNC_ADDR(Image_GetKeepOriginXWhenClipped)
    return (BOOL)MySyscall(pImage_GetKeepOriginXWhenClipped, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetKeepOriginXWhenClipped)
void
Image_SetKeepOriginXWhenClipped(TImage AObj, BOOL AValue) {
    GET_FUNC_ADDR(Image_SetKeepOriginXWhenClipped)
    MySyscall(pImage_SetKeepOriginXWhenClipped, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetKeepOriginYWhenClipped)
BOOL
Image_GetKeepOriginYWhenClipped(TImage AObj) {
    GET_FUNC_ADDR(Image_GetKeepOriginYWhenClipped)
    return (BOOL)MySyscall(pImage_GetKeepOriginYWhenClipped, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetKeepOriginYWhenClipped)
void
Image_SetKeepOriginYWhenClipped(TImage AObj, BOOL AValue) {
    GET_FUNC_ADDR(Image_SetKeepOriginYWhenClipped)
    MySyscall(pImage_SetKeepOriginYWhenClipped, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetStretchInEnabled)
BOOL
Image_GetStretchInEnabled(TImage AObj) {
    GET_FUNC_ADDR(Image_GetStretchInEnabled)
    return (BOOL)MySyscall(pImage_GetStretchInEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetStretchInEnabled)
void
Image_SetStretchInEnabled(TImage AObj, BOOL AValue) {
    GET_FUNC_ADDR(Image_SetStretchInEnabled)
    MySyscall(pImage_SetStretchInEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetStretchOutEnabled)
BOOL
Image_GetStretchOutEnabled(TImage AObj) {
    GET_FUNC_ADDR(Image_GetStretchOutEnabled)
    return (BOOL)MySyscall(pImage_GetStretchOutEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetStretchOutEnabled)
void
Image_SetStretchOutEnabled(TImage AObj, BOOL AValue) {
    GET_FUNC_ADDR(Image_SetStretchOutEnabled)
    MySyscall(pImage_SetStretchOutEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetCanvas)
TCanvas
Image_GetCanvas(TImage AObj) {
    GET_FUNC_ADDR(Image_GetCanvas)
    return (TCanvas)MySyscall(pImage_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetAlign)
TAlign
Image_GetAlign(TImage AObj) {
    GET_FUNC_ADDR(Image_GetAlign)
    return (TAlign)MySyscall(pImage_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetAlign)
void
Image_SetAlign(TImage AObj, TAlign AValue) {
    GET_FUNC_ADDR(Image_SetAlign)
    MySyscall(pImage_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetAnchors)
TAnchors
Image_GetAnchors(TImage AObj) {
    GET_FUNC_ADDR(Image_GetAnchors)
    return (TAnchors)MySyscall(pImage_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetAnchors)
void
Image_SetAnchors(TImage AObj, TAnchors AValue) {
    GET_FUNC_ADDR(Image_SetAnchors)
    MySyscall(pImage_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetAutoSize)
BOOL
Image_GetAutoSize(TImage AObj) {
    GET_FUNC_ADDR(Image_GetAutoSize)
    return (BOOL)MySyscall(pImage_GetAutoSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetAutoSize)
void
Image_SetAutoSize(TImage AObj, BOOL AValue) {
    GET_FUNC_ADDR(Image_SetAutoSize)
    MySyscall(pImage_SetAutoSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetCenter)
BOOL
Image_GetCenter(TImage AObj) {
    GET_FUNC_ADDR(Image_GetCenter)
    return (BOOL)MySyscall(pImage_GetCenter, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetCenter)
void
Image_SetCenter(TImage AObj, BOOL AValue) {
    GET_FUNC_ADDR(Image_SetCenter)
    MySyscall(pImage_SetCenter, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetConstraints)
TSizeConstraints
Image_GetConstraints(TImage AObj) {
    GET_FUNC_ADDR(Image_GetConstraints)
    return (TSizeConstraints)MySyscall(pImage_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetConstraints)
void
Image_SetConstraints(TImage AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(Image_SetConstraints)
    MySyscall(pImage_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetDragCursor)
TCursor
Image_GetDragCursor(TImage AObj) {
    GET_FUNC_ADDR(Image_GetDragCursor)
    return (TCursor)MySyscall(pImage_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetDragCursor)
void
Image_SetDragCursor(TImage AObj, TCursor AValue) {
    GET_FUNC_ADDR(Image_SetDragCursor)
    MySyscall(pImage_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetDragMode)
TDragMode
Image_GetDragMode(TImage AObj) {
    GET_FUNC_ADDR(Image_GetDragMode)
    return (TDragMode)MySyscall(pImage_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetDragMode)
void
Image_SetDragMode(TImage AObj, TDragMode AValue) {
    GET_FUNC_ADDR(Image_SetDragMode)
    MySyscall(pImage_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetEnabled)
BOOL
Image_GetEnabled(TImage AObj) {
    GET_FUNC_ADDR(Image_GetEnabled)
    return (BOOL)MySyscall(pImage_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetEnabled)
void
Image_SetEnabled(TImage AObj, BOOL AValue) {
    GET_FUNC_ADDR(Image_SetEnabled)
    MySyscall(pImage_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetParentShowHint)
BOOL
Image_GetParentShowHint(TImage AObj) {
    GET_FUNC_ADDR(Image_GetParentShowHint)
    return (BOOL)MySyscall(pImage_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetParentShowHint)
void
Image_SetParentShowHint(TImage AObj, BOOL AValue) {
    GET_FUNC_ADDR(Image_SetParentShowHint)
    MySyscall(pImage_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetPicture)
TPicture
Image_GetPicture(TImage AObj) {
    GET_FUNC_ADDR(Image_GetPicture)
    return (TPicture)MySyscall(pImage_GetPicture, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetPicture)
void
Image_SetPicture(TImage AObj, TPicture AValue) {
    GET_FUNC_ADDR(Image_SetPicture)
    MySyscall(pImage_SetPicture, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetPopupMenu)
TPopupMenu
Image_GetPopupMenu(TImage AObj) {
    GET_FUNC_ADDR(Image_GetPopupMenu)
    return (TPopupMenu)MySyscall(pImage_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetPopupMenu)
void
Image_SetPopupMenu(TImage AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(Image_SetPopupMenu)
    MySyscall(pImage_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetProportional)
BOOL
Image_GetProportional(TImage AObj) {
    GET_FUNC_ADDR(Image_GetProportional)
    return (BOOL)MySyscall(pImage_GetProportional, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetProportional)
void
Image_SetProportional(TImage AObj, BOOL AValue) {
    GET_FUNC_ADDR(Image_SetProportional)
    MySyscall(pImage_SetProportional, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetShowHint)
BOOL
Image_GetShowHint(TImage AObj) {
    GET_FUNC_ADDR(Image_GetShowHint)
    return (BOOL)MySyscall(pImage_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetShowHint)
void
Image_SetShowHint(TImage AObj, BOOL AValue) {
    GET_FUNC_ADDR(Image_SetShowHint)
    MySyscall(pImage_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetStretch)
BOOL
Image_GetStretch(TImage AObj) {
    GET_FUNC_ADDR(Image_GetStretch)
    return (BOOL)MySyscall(pImage_GetStretch, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetStretch)
void
Image_SetStretch(TImage AObj, BOOL AValue) {
    GET_FUNC_ADDR(Image_SetStretch)
    MySyscall(pImage_SetStretch, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetTransparent)
BOOL
Image_GetTransparent(TImage AObj) {
    GET_FUNC_ADDR(Image_GetTransparent)
    return (BOOL)MySyscall(pImage_GetTransparent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetTransparent)
void
Image_SetTransparent(TImage AObj, BOOL AValue) {
    GET_FUNC_ADDR(Image_SetTransparent)
    MySyscall(pImage_SetTransparent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetVisible)
BOOL
Image_GetVisible(TImage AObj) {
    GET_FUNC_ADDR(Image_GetVisible)
    return (BOOL)MySyscall(pImage_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetVisible)
void
Image_SetVisible(TImage AObj, BOOL AValue) {
    GET_FUNC_ADDR(Image_SetVisible)
    MySyscall(pImage_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetOnClick)
void
Image_SetOnClick(TImage AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Image_SetOnClick)
    MySyscall(pImage_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetOnDblClick)
void
Image_SetOnDblClick(TImage AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Image_SetOnDblClick)
    MySyscall(pImage_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetOnDragDrop)
void
Image_SetOnDragDrop(TImage AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(Image_SetOnDragDrop)
    MySyscall(pImage_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetOnDragOver)
void
Image_SetOnDragOver(TImage AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(Image_SetOnDragOver)
    MySyscall(pImage_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetOnEndDrag)
void
Image_SetOnEndDrag(TImage AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(Image_SetOnEndDrag)
    MySyscall(pImage_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetOnMouseDown)
void
Image_SetOnMouseDown(TImage AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(Image_SetOnMouseDown)
    MySyscall(pImage_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetOnMouseEnter)
void
Image_SetOnMouseEnter(TImage AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Image_SetOnMouseEnter)
    MySyscall(pImage_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetOnMouseLeave)
void
Image_SetOnMouseLeave(TImage AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Image_SetOnMouseLeave)
    MySyscall(pImage_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetOnMouseMove)
void
Image_SetOnMouseMove(TImage AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(Image_SetOnMouseMove)
    MySyscall(pImage_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetOnMouseUp)
void
Image_SetOnMouseUp(TImage AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(Image_SetOnMouseUp)
    MySyscall(pImage_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetAction)
TAction
Image_GetAction(TImage AObj) {
    GET_FUNC_ADDR(Image_GetAction)
    return (TAction)MySyscall(pImage_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetAction)
void
Image_SetAction(TImage AObj, TAction AValue) {
    GET_FUNC_ADDR(Image_SetAction)
    MySyscall(pImage_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetBiDiMode)
TBiDiMode
Image_GetBiDiMode(TImage AObj) {
    GET_FUNC_ADDR(Image_GetBiDiMode)
    return (TBiDiMode)MySyscall(pImage_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetBiDiMode)
void
Image_SetBiDiMode(TImage AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(Image_SetBiDiMode)
    MySyscall(pImage_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetBoundsRect)
TRect
Image_GetBoundsRect(TImage AObj) {
    GET_FUNC_ADDR(Image_GetBoundsRect)
    TRect result;
    MySyscall(pImage_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Image_SetBoundsRect)
void
Image_SetBoundsRect(TImage AObj, TRect AValue) {
    GET_FUNC_ADDR(Image_SetBoundsRect)
    MySyscall(pImage_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetClientHeight)
int32_t
Image_GetClientHeight(TImage AObj) {
    GET_FUNC_ADDR(Image_GetClientHeight)
    return (int32_t)MySyscall(pImage_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetClientHeight)
void
Image_SetClientHeight(TImage AObj, int32_t AValue) {
    GET_FUNC_ADDR(Image_SetClientHeight)
    MySyscall(pImage_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetClientOrigin)
TPoint
Image_GetClientOrigin(TImage AObj) {
    GET_FUNC_ADDR(Image_GetClientOrigin)
    TPoint result;
    MySyscall(pImage_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Image_GetClientRect)
TRect
Image_GetClientRect(TImage AObj) {
    GET_FUNC_ADDR(Image_GetClientRect)
    TRect result;
    MySyscall(pImage_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Image_GetClientWidth)
int32_t
Image_GetClientWidth(TImage AObj) {
    GET_FUNC_ADDR(Image_GetClientWidth)
    return (int32_t)MySyscall(pImage_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetClientWidth)
void
Image_SetClientWidth(TImage AObj, int32_t AValue) {
    GET_FUNC_ADDR(Image_SetClientWidth)
    MySyscall(pImage_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetControlState)
TControlState
Image_GetControlState(TImage AObj) {
    GET_FUNC_ADDR(Image_GetControlState)
    return (TControlState)MySyscall(pImage_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetControlState)
void
Image_SetControlState(TImage AObj, TControlState AValue) {
    GET_FUNC_ADDR(Image_SetControlState)
    MySyscall(pImage_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetControlStyle)
TControlStyle
Image_GetControlStyle(TImage AObj) {
    GET_FUNC_ADDR(Image_GetControlStyle)
    return (TControlStyle)MySyscall(pImage_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetControlStyle)
void
Image_SetControlStyle(TImage AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(Image_SetControlStyle)
    MySyscall(pImage_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetFloating)
BOOL
Image_GetFloating(TImage AObj) {
    GET_FUNC_ADDR(Image_GetFloating)
    return (BOOL)MySyscall(pImage_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetParent)
TWinControl
Image_GetParent(TImage AObj) {
    GET_FUNC_ADDR(Image_GetParent)
    return (TWinControl)MySyscall(pImage_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetParent)
void
Image_SetParent(TImage AObj, TWinControl AValue) {
    GET_FUNC_ADDR(Image_SetParent)
    MySyscall(pImage_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetLeft)
int32_t
Image_GetLeft(TImage AObj) {
    GET_FUNC_ADDR(Image_GetLeft)
    return (int32_t)MySyscall(pImage_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetLeft)
void
Image_SetLeft(TImage AObj, int32_t AValue) {
    GET_FUNC_ADDR(Image_SetLeft)
    MySyscall(pImage_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetTop)
int32_t
Image_GetTop(TImage AObj) {
    GET_FUNC_ADDR(Image_GetTop)
    return (int32_t)MySyscall(pImage_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetTop)
void
Image_SetTop(TImage AObj, int32_t AValue) {
    GET_FUNC_ADDR(Image_SetTop)
    MySyscall(pImage_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetWidth)
int32_t
Image_GetWidth(TImage AObj) {
    GET_FUNC_ADDR(Image_GetWidth)
    return (int32_t)MySyscall(pImage_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetWidth)
void
Image_SetWidth(TImage AObj, int32_t AValue) {
    GET_FUNC_ADDR(Image_SetWidth)
    MySyscall(pImage_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetHeight)
int32_t
Image_GetHeight(TImage AObj) {
    GET_FUNC_ADDR(Image_GetHeight)
    return (int32_t)MySyscall(pImage_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetHeight)
void
Image_SetHeight(TImage AObj, int32_t AValue) {
    GET_FUNC_ADDR(Image_SetHeight)
    MySyscall(pImage_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetCursor)
TCursor
Image_GetCursor(TImage AObj) {
    GET_FUNC_ADDR(Image_GetCursor)
    return (TCursor)MySyscall(pImage_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetCursor)
void
Image_SetCursor(TImage AObj, TCursor AValue) {
    GET_FUNC_ADDR(Image_SetCursor)
    MySyscall(pImage_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetHint)
char*
Image_GetHint(TImage AObj) {
    GET_FUNC_ADDR(Image_GetHint)
    return (char*)MySyscall(pImage_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetHint)
void
Image_SetHint(TImage AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Image_SetHint)
    MySyscall(pImage_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetComponentCount)
int32_t
Image_GetComponentCount(TImage AObj) {
    GET_FUNC_ADDR(Image_GetComponentCount)
    return (int32_t)MySyscall(pImage_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetComponentIndex)
int32_t
Image_GetComponentIndex(TImage AObj) {
    GET_FUNC_ADDR(Image_GetComponentIndex)
    return (int32_t)MySyscall(pImage_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetComponentIndex)
void
Image_SetComponentIndex(TImage AObj, int32_t AValue) {
    GET_FUNC_ADDR(Image_SetComponentIndex)
    MySyscall(pImage_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetOwner)
TComponent
Image_GetOwner(TImage AObj) {
    GET_FUNC_ADDR(Image_GetOwner)
    return (TComponent)MySyscall(pImage_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetName)
char*
Image_GetName(TImage AObj) {
    GET_FUNC_ADDR(Image_GetName)
    return (char*)MySyscall(pImage_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetName)
void
Image_SetName(TImage AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Image_SetName)
    MySyscall(pImage_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetTag)
intptr_t
Image_GetTag(TImage AObj) {
    GET_FUNC_ADDR(Image_GetTag)
    return (intptr_t)MySyscall(pImage_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetTag)
void
Image_SetTag(TImage AObj, intptr_t AValue) {
    GET_FUNC_ADDR(Image_SetTag)
    MySyscall(pImage_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetAnchorSideLeft)
TAnchorSide
Image_GetAnchorSideLeft(TImage AObj) {
    GET_FUNC_ADDR(Image_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pImage_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetAnchorSideLeft)
void
Image_SetAnchorSideLeft(TImage AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Image_SetAnchorSideLeft)
    MySyscall(pImage_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetAnchorSideTop)
TAnchorSide
Image_GetAnchorSideTop(TImage AObj) {
    GET_FUNC_ADDR(Image_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pImage_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetAnchorSideTop)
void
Image_SetAnchorSideTop(TImage AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Image_SetAnchorSideTop)
    MySyscall(pImage_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetAnchorSideRight)
TAnchorSide
Image_GetAnchorSideRight(TImage AObj) {
    GET_FUNC_ADDR(Image_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pImage_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetAnchorSideRight)
void
Image_SetAnchorSideRight(TImage AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Image_SetAnchorSideRight)
    MySyscall(pImage_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetAnchorSideBottom)
TAnchorSide
Image_GetAnchorSideBottom(TImage AObj) {
    GET_FUNC_ADDR(Image_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pImage_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetAnchorSideBottom)
void
Image_SetAnchorSideBottom(TImage AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Image_SetAnchorSideBottom)
    MySyscall(pImage_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetBorderSpacing)
TControlBorderSpacing
Image_GetBorderSpacing(TImage AObj) {
    GET_FUNC_ADDR(Image_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pImage_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_SetBorderSpacing)
void
Image_SetBorderSpacing(TImage AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(Image_SetBorderSpacing)
    MySyscall(pImage_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetComponents)
TComponent
Image_GetComponents(TImage AObj, int32_t AIndex) {
    GET_FUNC_ADDR(Image_GetComponents)
    return (TComponent)MySyscall(pImage_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_GetAnchorSide)
TAnchorSide
Image_GetAnchorSide(TImage AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(Image_GetAnchorSide)
    return (TAnchorSide)MySyscall(pImage_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Image_StaticClassType)
TClass
Image_StaticClassType() {
    GET_FUNC_ADDR(Image_StaticClassType)
    return (TClass)MySyscall(pImage_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TLinkLabel-------------------

DEFINE_FUNC_PTR(LinkLabel_Create)
TLinkLabel
LinkLabel_Create(TComponent AOwner) {
    GET_FUNC_ADDR(LinkLabel_Create)
    return (TLinkLabel)MySyscall(pLinkLabel_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_Free)
void
LinkLabel_Free(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_Free)
    MySyscall(pLinkLabel_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_Invalidate)
void
LinkLabel_Invalidate(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_Invalidate)
    MySyscall(pLinkLabel_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_Repaint)
void
LinkLabel_Repaint(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_Repaint)
    MySyscall(pLinkLabel_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetBounds)
void
LinkLabel_SetBounds(TLinkLabel AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(LinkLabel_SetBounds)
    MySyscall(pLinkLabel_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_Update)
void
LinkLabel_Update(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_Update)
    MySyscall(pLinkLabel_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_BringToFront)
void
LinkLabel_BringToFront(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_BringToFront)
    MySyscall(pLinkLabel_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_ClientToScreen)
TPoint
LinkLabel_ClientToScreen(TLinkLabel AObj, TPoint Point) {
    GET_FUNC_ADDR(LinkLabel_ClientToScreen)
    TPoint result;
    MySyscall(pLinkLabel_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(LinkLabel_ClientToParent)
TPoint
LinkLabel_ClientToParent(TLinkLabel AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(LinkLabel_ClientToParent)
    TPoint result;
    MySyscall(pLinkLabel_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(LinkLabel_Dragging)
BOOL
LinkLabel_Dragging(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_Dragging)
    return (BOOL)MySyscall(pLinkLabel_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_HasParent)
BOOL
LinkLabel_HasParent(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_HasParent)
    return (BOOL)MySyscall(pLinkLabel_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_Hide)
void
LinkLabel_Hide(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_Hide)
    MySyscall(pLinkLabel_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_Perform)
intptr_t
LinkLabel_Perform(TLinkLabel AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(LinkLabel_Perform)
    return (intptr_t)MySyscall(pLinkLabel_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_Refresh)
void
LinkLabel_Refresh(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_Refresh)
    MySyscall(pLinkLabel_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_ScreenToClient)
TPoint
LinkLabel_ScreenToClient(TLinkLabel AObj, TPoint Point) {
    GET_FUNC_ADDR(LinkLabel_ScreenToClient)
    TPoint result;
    MySyscall(pLinkLabel_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(LinkLabel_ParentToClient)
TPoint
LinkLabel_ParentToClient(TLinkLabel AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(LinkLabel_ParentToClient)
    TPoint result;
    MySyscall(pLinkLabel_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(LinkLabel_SendToBack)
void
LinkLabel_SendToBack(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_SendToBack)
    MySyscall(pLinkLabel_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_Show)
void
LinkLabel_Show(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_Show)
    MySyscall(pLinkLabel_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetTextBuf)
int32_t
LinkLabel_GetTextBuf(TLinkLabel AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(LinkLabel_GetTextBuf)
    return (int32_t)MySyscall(pLinkLabel_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetTextLen)
int32_t
LinkLabel_GetTextLen(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetTextLen)
    return (int32_t)MySyscall(pLinkLabel_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetTextBuf)
void
LinkLabel_SetTextBuf(TLinkLabel AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(LinkLabel_SetTextBuf)
    MySyscall(pLinkLabel_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_FindComponent)
TComponent
LinkLabel_FindComponent(TLinkLabel AObj, CChar char* AName) {
    GET_FUNC_ADDR(LinkLabel_FindComponent)
    return (TComponent)MySyscall(pLinkLabel_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetNamePath)
char*
LinkLabel_GetNamePath(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetNamePath)
    return (char*)MySyscall(pLinkLabel_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_Assign)
void
LinkLabel_Assign(TLinkLabel AObj, TObject Source) {
    GET_FUNC_ADDR(LinkLabel_Assign)
    MySyscall(pLinkLabel_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_ClassType)
TClass
LinkLabel_ClassType(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_ClassType)
    return (TClass)MySyscall(pLinkLabel_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_ClassName)
char*
LinkLabel_ClassName(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_ClassName)
    return (char*)MySyscall(pLinkLabel_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_InstanceSize)
int32_t
LinkLabel_InstanceSize(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_InstanceSize)
    return (int32_t)MySyscall(pLinkLabel_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_InheritsFrom)
BOOL
LinkLabel_InheritsFrom(TLinkLabel AObj, TClass AClass) {
    GET_FUNC_ADDR(LinkLabel_InheritsFrom)
    return (BOOL)MySyscall(pLinkLabel_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_Equals)
BOOL
LinkLabel_Equals(TLinkLabel AObj, TObject Obj) {
    GET_FUNC_ADDR(LinkLabel_Equals)
    return (BOOL)MySyscall(pLinkLabel_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetHashCode)
int32_t
LinkLabel_GetHashCode(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetHashCode)
    return (int32_t)MySyscall(pLinkLabel_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_ToString)
char*
LinkLabel_ToString(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_ToString)
    return (char*)MySyscall(pLinkLabel_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_AnchorToNeighbour)
void
LinkLabel_AnchorToNeighbour(TLinkLabel AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(LinkLabel_AnchorToNeighbour)
    MySyscall(pLinkLabel_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_AnchorParallel)
void
LinkLabel_AnchorParallel(TLinkLabel AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(LinkLabel_AnchorParallel)
    MySyscall(pLinkLabel_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_AnchorHorizontalCenterTo)
void
LinkLabel_AnchorHorizontalCenterTo(TLinkLabel AObj, TControl ASibling) {
    GET_FUNC_ADDR(LinkLabel_AnchorHorizontalCenterTo)
    MySyscall(pLinkLabel_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_AnchorVerticalCenterTo)
void
LinkLabel_AnchorVerticalCenterTo(TLinkLabel AObj, TControl ASibling) {
    GET_FUNC_ADDR(LinkLabel_AnchorVerticalCenterTo)
    MySyscall(pLinkLabel_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_AnchorSame)
void
LinkLabel_AnchorSame(TLinkLabel AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(LinkLabel_AnchorSame)
    MySyscall(pLinkLabel_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_AnchorAsAlign)
void
LinkLabel_AnchorAsAlign(TLinkLabel AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(LinkLabel_AnchorAsAlign)
    MySyscall(pLinkLabel_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_AnchorClient)
void
LinkLabel_AnchorClient(TLinkLabel AObj, int32_t ASpace) {
    GET_FUNC_ADDR(LinkLabel_AnchorClient)
    MySyscall(pLinkLabel_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_ScaleDesignToForm)
int32_t
LinkLabel_ScaleDesignToForm(TLinkLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(LinkLabel_ScaleDesignToForm)
    return (int32_t)MySyscall(pLinkLabel_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_ScaleFormToDesign)
int32_t
LinkLabel_ScaleFormToDesign(TLinkLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(LinkLabel_ScaleFormToDesign)
    return (int32_t)MySyscall(pLinkLabel_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_Scale96ToForm)
int32_t
LinkLabel_Scale96ToForm(TLinkLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(LinkLabel_Scale96ToForm)
    return (int32_t)MySyscall(pLinkLabel_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_ScaleFormTo96)
int32_t
LinkLabel_ScaleFormTo96(TLinkLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(LinkLabel_ScaleFormTo96)
    return (int32_t)MySyscall(pLinkLabel_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_Scale96ToFont)
int32_t
LinkLabel_Scale96ToFont(TLinkLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(LinkLabel_Scale96ToFont)
    return (int32_t)MySyscall(pLinkLabel_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_ScaleFontTo96)
int32_t
LinkLabel_ScaleFontTo96(TLinkLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(LinkLabel_ScaleFontTo96)
    return (int32_t)MySyscall(pLinkLabel_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_ScaleScreenToFont)
int32_t
LinkLabel_ScaleScreenToFont(TLinkLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(LinkLabel_ScaleScreenToFont)
    return (int32_t)MySyscall(pLinkLabel_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_ScaleFontToScreen)
int32_t
LinkLabel_ScaleFontToScreen(TLinkLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(LinkLabel_ScaleFontToScreen)
    return (int32_t)MySyscall(pLinkLabel_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_Scale96ToScreen)
int32_t
LinkLabel_Scale96ToScreen(TLinkLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(LinkLabel_Scale96ToScreen)
    return (int32_t)MySyscall(pLinkLabel_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_ScaleScreenTo96)
int32_t
LinkLabel_ScaleScreenTo96(TLinkLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(LinkLabel_ScaleScreenTo96)
    return (int32_t)MySyscall(pLinkLabel_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_AutoAdjustLayout)
void
LinkLabel_AutoAdjustLayout(TLinkLabel AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(LinkLabel_AutoAdjustLayout)
    MySyscall(pLinkLabel_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_FixDesignFontsPPI)
void
LinkLabel_FixDesignFontsPPI(TLinkLabel AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(LinkLabel_FixDesignFontsPPI)
    MySyscall(pLinkLabel_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_ScaleFontsPPI)
void
LinkLabel_ScaleFontsPPI(TLinkLabel AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(LinkLabel_ScaleFontsPPI)
    MySyscall(pLinkLabel_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetAlign)
TAlign
LinkLabel_GetAlign(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetAlign)
    return (TAlign)MySyscall(pLinkLabel_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetAlign)
void
LinkLabel_SetAlign(TLinkLabel AObj, TAlign AValue) {
    GET_FUNC_ADDR(LinkLabel_SetAlign)
    MySyscall(pLinkLabel_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetAlignment)
TAlignment
LinkLabel_GetAlignment(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetAlignment)
    return (TAlignment)MySyscall(pLinkLabel_GetAlignment, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetAlignment)
void
LinkLabel_SetAlignment(TLinkLabel AObj, TAlignment AValue) {
    GET_FUNC_ADDR(LinkLabel_SetAlignment)
    MySyscall(pLinkLabel_SetAlignment, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetAnchors)
TAnchors
LinkLabel_GetAnchors(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetAnchors)
    return (TAnchors)MySyscall(pLinkLabel_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetAnchors)
void
LinkLabel_SetAnchors(TLinkLabel AObj, TAnchors AValue) {
    GET_FUNC_ADDR(LinkLabel_SetAnchors)
    MySyscall(pLinkLabel_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetAutoSize)
BOOL
LinkLabel_GetAutoSize(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetAutoSize)
    return (BOOL)MySyscall(pLinkLabel_GetAutoSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetAutoSize)
void
LinkLabel_SetAutoSize(TLinkLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(LinkLabel_SetAutoSize)
    MySyscall(pLinkLabel_SetAutoSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetCaption)
char*
LinkLabel_GetCaption(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetCaption)
    return (char*)MySyscall(pLinkLabel_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetCaption)
void
LinkLabel_SetCaption(TLinkLabel AObj, CChar char* AValue) {
    GET_FUNC_ADDR(LinkLabel_SetCaption)
    MySyscall(pLinkLabel_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetColor)
TColor
LinkLabel_GetColor(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetColor)
    return (TColor)MySyscall(pLinkLabel_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetColor)
void
LinkLabel_SetColor(TLinkLabel AObj, TColor AValue) {
    GET_FUNC_ADDR(LinkLabel_SetColor)
    MySyscall(pLinkLabel_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetConstraints)
TSizeConstraints
LinkLabel_GetConstraints(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetConstraints)
    return (TSizeConstraints)MySyscall(pLinkLabel_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetConstraints)
void
LinkLabel_SetConstraints(TLinkLabel AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(LinkLabel_SetConstraints)
    MySyscall(pLinkLabel_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetDragCursor)
TCursor
LinkLabel_GetDragCursor(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetDragCursor)
    return (TCursor)MySyscall(pLinkLabel_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetDragCursor)
void
LinkLabel_SetDragCursor(TLinkLabel AObj, TCursor AValue) {
    GET_FUNC_ADDR(LinkLabel_SetDragCursor)
    MySyscall(pLinkLabel_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetDragKind)
TDragKind
LinkLabel_GetDragKind(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetDragKind)
    return (TDragKind)MySyscall(pLinkLabel_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetDragKind)
void
LinkLabel_SetDragKind(TLinkLabel AObj, TDragKind AValue) {
    GET_FUNC_ADDR(LinkLabel_SetDragKind)
    MySyscall(pLinkLabel_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetDragMode)
TDragMode
LinkLabel_GetDragMode(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetDragMode)
    return (TDragMode)MySyscall(pLinkLabel_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetDragMode)
void
LinkLabel_SetDragMode(TLinkLabel AObj, TDragMode AValue) {
    GET_FUNC_ADDR(LinkLabel_SetDragMode)
    MySyscall(pLinkLabel_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetEnabled)
BOOL
LinkLabel_GetEnabled(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetEnabled)
    return (BOOL)MySyscall(pLinkLabel_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetEnabled)
void
LinkLabel_SetEnabled(TLinkLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(LinkLabel_SetEnabled)
    MySyscall(pLinkLabel_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetFont)
TFont
LinkLabel_GetFont(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetFont)
    return (TFont)MySyscall(pLinkLabel_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetFont)
void
LinkLabel_SetFont(TLinkLabel AObj, TFont AValue) {
    GET_FUNC_ADDR(LinkLabel_SetFont)
    MySyscall(pLinkLabel_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetParentColor)
BOOL
LinkLabel_GetParentColor(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetParentColor)
    return (BOOL)MySyscall(pLinkLabel_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetParentColor)
void
LinkLabel_SetParentColor(TLinkLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(LinkLabel_SetParentColor)
    MySyscall(pLinkLabel_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetParentFont)
BOOL
LinkLabel_GetParentFont(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetParentFont)
    return (BOOL)MySyscall(pLinkLabel_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetParentFont)
void
LinkLabel_SetParentFont(TLinkLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(LinkLabel_SetParentFont)
    MySyscall(pLinkLabel_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetParentShowHint)
BOOL
LinkLabel_GetParentShowHint(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetParentShowHint)
    return (BOOL)MySyscall(pLinkLabel_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetParentShowHint)
void
LinkLabel_SetParentShowHint(TLinkLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(LinkLabel_SetParentShowHint)
    MySyscall(pLinkLabel_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetPopupMenu)
TPopupMenu
LinkLabel_GetPopupMenu(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetPopupMenu)
    return (TPopupMenu)MySyscall(pLinkLabel_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetPopupMenu)
void
LinkLabel_SetPopupMenu(TLinkLabel AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(LinkLabel_SetPopupMenu)
    MySyscall(pLinkLabel_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetShowHint)
BOOL
LinkLabel_GetShowHint(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetShowHint)
    return (BOOL)MySyscall(pLinkLabel_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetShowHint)
void
LinkLabel_SetShowHint(TLinkLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(LinkLabel_SetShowHint)
    MySyscall(pLinkLabel_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetVisible)
BOOL
LinkLabel_GetVisible(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetVisible)
    return (BOOL)MySyscall(pLinkLabel_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetVisible)
void
LinkLabel_SetVisible(TLinkLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(LinkLabel_SetVisible)
    MySyscall(pLinkLabel_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetOnClick)
void
LinkLabel_SetOnClick(TLinkLabel AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(LinkLabel_SetOnClick)
    MySyscall(pLinkLabel_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetOnContextPopup)
void
LinkLabel_SetOnContextPopup(TLinkLabel AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(LinkLabel_SetOnContextPopup)
    MySyscall(pLinkLabel_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetOnDblClick)
void
LinkLabel_SetOnDblClick(TLinkLabel AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(LinkLabel_SetOnDblClick)
    MySyscall(pLinkLabel_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetOnDragDrop)
void
LinkLabel_SetOnDragDrop(TLinkLabel AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(LinkLabel_SetOnDragDrop)
    MySyscall(pLinkLabel_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetOnDragOver)
void
LinkLabel_SetOnDragOver(TLinkLabel AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(LinkLabel_SetOnDragOver)
    MySyscall(pLinkLabel_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetOnEndDrag)
void
LinkLabel_SetOnEndDrag(TLinkLabel AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(LinkLabel_SetOnEndDrag)
    MySyscall(pLinkLabel_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetOnMouseDown)
void
LinkLabel_SetOnMouseDown(TLinkLabel AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(LinkLabel_SetOnMouseDown)
    MySyscall(pLinkLabel_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetOnMouseEnter)
void
LinkLabel_SetOnMouseEnter(TLinkLabel AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(LinkLabel_SetOnMouseEnter)
    MySyscall(pLinkLabel_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetOnMouseLeave)
void
LinkLabel_SetOnMouseLeave(TLinkLabel AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(LinkLabel_SetOnMouseLeave)
    MySyscall(pLinkLabel_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetOnMouseMove)
void
LinkLabel_SetOnMouseMove(TLinkLabel AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(LinkLabel_SetOnMouseMove)
    MySyscall(pLinkLabel_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetOnMouseUp)
void
LinkLabel_SetOnMouseUp(TLinkLabel AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(LinkLabel_SetOnMouseUp)
    MySyscall(pLinkLabel_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetOnLinkClick)
void
LinkLabel_SetOnLinkClick(TLinkLabel AObj, TSysLinkEvent AEventData) {
    GET_FUNC_ADDR(LinkLabel_SetOnLinkClick)
    MySyscall(pLinkLabel_SetOnLinkClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetMouseInClient)
BOOL
LinkLabel_GetMouseInClient(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetMouseInClient)
    return (BOOL)MySyscall(pLinkLabel_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetAction)
TAction
LinkLabel_GetAction(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetAction)
    return (TAction)MySyscall(pLinkLabel_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetAction)
void
LinkLabel_SetAction(TLinkLabel AObj, TAction AValue) {
    GET_FUNC_ADDR(LinkLabel_SetAction)
    MySyscall(pLinkLabel_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetBiDiMode)
TBiDiMode
LinkLabel_GetBiDiMode(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetBiDiMode)
    return (TBiDiMode)MySyscall(pLinkLabel_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetBiDiMode)
void
LinkLabel_SetBiDiMode(TLinkLabel AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(LinkLabel_SetBiDiMode)
    MySyscall(pLinkLabel_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetBoundsRect)
TRect
LinkLabel_GetBoundsRect(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetBoundsRect)
    TRect result;
    MySyscall(pLinkLabel_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(LinkLabel_SetBoundsRect)
void
LinkLabel_SetBoundsRect(TLinkLabel AObj, TRect AValue) {
    GET_FUNC_ADDR(LinkLabel_SetBoundsRect)
    MySyscall(pLinkLabel_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetClientHeight)
int32_t
LinkLabel_GetClientHeight(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetClientHeight)
    return (int32_t)MySyscall(pLinkLabel_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetClientHeight)
void
LinkLabel_SetClientHeight(TLinkLabel AObj, int32_t AValue) {
    GET_FUNC_ADDR(LinkLabel_SetClientHeight)
    MySyscall(pLinkLabel_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetClientOrigin)
TPoint
LinkLabel_GetClientOrigin(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetClientOrigin)
    TPoint result;
    MySyscall(pLinkLabel_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(LinkLabel_GetClientRect)
TRect
LinkLabel_GetClientRect(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetClientRect)
    TRect result;
    MySyscall(pLinkLabel_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(LinkLabel_GetClientWidth)
int32_t
LinkLabel_GetClientWidth(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetClientWidth)
    return (int32_t)MySyscall(pLinkLabel_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetClientWidth)
void
LinkLabel_SetClientWidth(TLinkLabel AObj, int32_t AValue) {
    GET_FUNC_ADDR(LinkLabel_SetClientWidth)
    MySyscall(pLinkLabel_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetControlState)
TControlState
LinkLabel_GetControlState(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetControlState)
    return (TControlState)MySyscall(pLinkLabel_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetControlState)
void
LinkLabel_SetControlState(TLinkLabel AObj, TControlState AValue) {
    GET_FUNC_ADDR(LinkLabel_SetControlState)
    MySyscall(pLinkLabel_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetControlStyle)
TControlStyle
LinkLabel_GetControlStyle(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetControlStyle)
    return (TControlStyle)MySyscall(pLinkLabel_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetControlStyle)
void
LinkLabel_SetControlStyle(TLinkLabel AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(LinkLabel_SetControlStyle)
    MySyscall(pLinkLabel_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetFloating)
BOOL
LinkLabel_GetFloating(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetFloating)
    return (BOOL)MySyscall(pLinkLabel_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetParent)
TWinControl
LinkLabel_GetParent(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetParent)
    return (TWinControl)MySyscall(pLinkLabel_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetParent)
void
LinkLabel_SetParent(TLinkLabel AObj, TWinControl AValue) {
    GET_FUNC_ADDR(LinkLabel_SetParent)
    MySyscall(pLinkLabel_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetLeft)
int32_t
LinkLabel_GetLeft(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetLeft)
    return (int32_t)MySyscall(pLinkLabel_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetLeft)
void
LinkLabel_SetLeft(TLinkLabel AObj, int32_t AValue) {
    GET_FUNC_ADDR(LinkLabel_SetLeft)
    MySyscall(pLinkLabel_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetTop)
int32_t
LinkLabel_GetTop(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetTop)
    return (int32_t)MySyscall(pLinkLabel_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetTop)
void
LinkLabel_SetTop(TLinkLabel AObj, int32_t AValue) {
    GET_FUNC_ADDR(LinkLabel_SetTop)
    MySyscall(pLinkLabel_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetWidth)
int32_t
LinkLabel_GetWidth(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetWidth)
    return (int32_t)MySyscall(pLinkLabel_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetWidth)
void
LinkLabel_SetWidth(TLinkLabel AObj, int32_t AValue) {
    GET_FUNC_ADDR(LinkLabel_SetWidth)
    MySyscall(pLinkLabel_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetHeight)
int32_t
LinkLabel_GetHeight(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetHeight)
    return (int32_t)MySyscall(pLinkLabel_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetHeight)
void
LinkLabel_SetHeight(TLinkLabel AObj, int32_t AValue) {
    GET_FUNC_ADDR(LinkLabel_SetHeight)
    MySyscall(pLinkLabel_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetHint)
char*
LinkLabel_GetHint(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetHint)
    return (char*)MySyscall(pLinkLabel_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetHint)
void
LinkLabel_SetHint(TLinkLabel AObj, CChar char* AValue) {
    GET_FUNC_ADDR(LinkLabel_SetHint)
    MySyscall(pLinkLabel_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetComponentCount)
int32_t
LinkLabel_GetComponentCount(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetComponentCount)
    return (int32_t)MySyscall(pLinkLabel_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetComponentIndex)
int32_t
LinkLabel_GetComponentIndex(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetComponentIndex)
    return (int32_t)MySyscall(pLinkLabel_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetComponentIndex)
void
LinkLabel_SetComponentIndex(TLinkLabel AObj, int32_t AValue) {
    GET_FUNC_ADDR(LinkLabel_SetComponentIndex)
    MySyscall(pLinkLabel_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetOwner)
TComponent
LinkLabel_GetOwner(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetOwner)
    return (TComponent)MySyscall(pLinkLabel_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetName)
char*
LinkLabel_GetName(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetName)
    return (char*)MySyscall(pLinkLabel_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetName)
void
LinkLabel_SetName(TLinkLabel AObj, CChar char* AValue) {
    GET_FUNC_ADDR(LinkLabel_SetName)
    MySyscall(pLinkLabel_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetTag)
intptr_t
LinkLabel_GetTag(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetTag)
    return (intptr_t)MySyscall(pLinkLabel_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetTag)
void
LinkLabel_SetTag(TLinkLabel AObj, intptr_t AValue) {
    GET_FUNC_ADDR(LinkLabel_SetTag)
    MySyscall(pLinkLabel_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetAnchorSideLeft)
TAnchorSide
LinkLabel_GetAnchorSideLeft(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pLinkLabel_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetAnchorSideLeft)
void
LinkLabel_SetAnchorSideLeft(TLinkLabel AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(LinkLabel_SetAnchorSideLeft)
    MySyscall(pLinkLabel_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetAnchorSideTop)
TAnchorSide
LinkLabel_GetAnchorSideTop(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pLinkLabel_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetAnchorSideTop)
void
LinkLabel_SetAnchorSideTop(TLinkLabel AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(LinkLabel_SetAnchorSideTop)
    MySyscall(pLinkLabel_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetAnchorSideRight)
TAnchorSide
LinkLabel_GetAnchorSideRight(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pLinkLabel_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetAnchorSideRight)
void
LinkLabel_SetAnchorSideRight(TLinkLabel AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(LinkLabel_SetAnchorSideRight)
    MySyscall(pLinkLabel_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetAnchorSideBottom)
TAnchorSide
LinkLabel_GetAnchorSideBottom(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pLinkLabel_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetAnchorSideBottom)
void
LinkLabel_SetAnchorSideBottom(TLinkLabel AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(LinkLabel_SetAnchorSideBottom)
    MySyscall(pLinkLabel_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetBorderSpacing)
TControlBorderSpacing
LinkLabel_GetBorderSpacing(TLinkLabel AObj) {
    GET_FUNC_ADDR(LinkLabel_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pLinkLabel_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_SetBorderSpacing)
void
LinkLabel_SetBorderSpacing(TLinkLabel AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(LinkLabel_SetBorderSpacing)
    MySyscall(pLinkLabel_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetComponents)
TComponent
LinkLabel_GetComponents(TLinkLabel AObj, int32_t AIndex) {
    GET_FUNC_ADDR(LinkLabel_GetComponents)
    return (TComponent)MySyscall(pLinkLabel_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_GetAnchorSide)
TAnchorSide
LinkLabel_GetAnchorSide(TLinkLabel AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(LinkLabel_GetAnchorSide)
    return (TAnchorSide)MySyscall(pLinkLabel_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LinkLabel_StaticClassType)
TClass
LinkLabel_StaticClassType() {
    GET_FUNC_ADDR(LinkLabel_StaticClassType)
    return (TClass)MySyscall(pLinkLabel_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TSpeedButton-------------------

DEFINE_FUNC_PTR(SpeedButton_Create)
TSpeedButton
SpeedButton_Create(TComponent AOwner) {
    GET_FUNC_ADDR(SpeedButton_Create)
    return (TSpeedButton)MySyscall(pSpeedButton_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_Free)
void
SpeedButton_Free(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_Free)
    MySyscall(pSpeedButton_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_Click)
void
SpeedButton_Click(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_Click)
    MySyscall(pSpeedButton_Click, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_BringToFront)
void
SpeedButton_BringToFront(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_BringToFront)
    MySyscall(pSpeedButton_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_ClientToScreen)
TPoint
SpeedButton_ClientToScreen(TSpeedButton AObj, TPoint Point) {
    GET_FUNC_ADDR(SpeedButton_ClientToScreen)
    TPoint result;
    MySyscall(pSpeedButton_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(SpeedButton_ClientToParent)
TPoint
SpeedButton_ClientToParent(TSpeedButton AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(SpeedButton_ClientToParent)
    TPoint result;
    MySyscall(pSpeedButton_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(SpeedButton_Dragging)
BOOL
SpeedButton_Dragging(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_Dragging)
    return (BOOL)MySyscall(pSpeedButton_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_HasParent)
BOOL
SpeedButton_HasParent(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_HasParent)
    return (BOOL)MySyscall(pSpeedButton_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_Hide)
void
SpeedButton_Hide(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_Hide)
    MySyscall(pSpeedButton_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_Invalidate)
void
SpeedButton_Invalidate(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_Invalidate)
    MySyscall(pSpeedButton_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_Perform)
intptr_t
SpeedButton_Perform(TSpeedButton AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(SpeedButton_Perform)
    return (intptr_t)MySyscall(pSpeedButton_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_Refresh)
void
SpeedButton_Refresh(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_Refresh)
    MySyscall(pSpeedButton_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_Repaint)
void
SpeedButton_Repaint(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_Repaint)
    MySyscall(pSpeedButton_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_ScreenToClient)
TPoint
SpeedButton_ScreenToClient(TSpeedButton AObj, TPoint Point) {
    GET_FUNC_ADDR(SpeedButton_ScreenToClient)
    TPoint result;
    MySyscall(pSpeedButton_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(SpeedButton_ParentToClient)
TPoint
SpeedButton_ParentToClient(TSpeedButton AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(SpeedButton_ParentToClient)
    TPoint result;
    MySyscall(pSpeedButton_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(SpeedButton_SendToBack)
void
SpeedButton_SendToBack(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_SendToBack)
    MySyscall(pSpeedButton_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetBounds)
void
SpeedButton_SetBounds(TSpeedButton AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(SpeedButton_SetBounds)
    MySyscall(pSpeedButton_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_Show)
void
SpeedButton_Show(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_Show)
    MySyscall(pSpeedButton_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_Update)
void
SpeedButton_Update(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_Update)
    MySyscall(pSpeedButton_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetTextBuf)
int32_t
SpeedButton_GetTextBuf(TSpeedButton AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(SpeedButton_GetTextBuf)
    return (int32_t)MySyscall(pSpeedButton_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetTextLen)
int32_t
SpeedButton_GetTextLen(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetTextLen)
    return (int32_t)MySyscall(pSpeedButton_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetTextBuf)
void
SpeedButton_SetTextBuf(TSpeedButton AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(SpeedButton_SetTextBuf)
    MySyscall(pSpeedButton_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_FindComponent)
TComponent
SpeedButton_FindComponent(TSpeedButton AObj, CChar char* AName) {
    GET_FUNC_ADDR(SpeedButton_FindComponent)
    return (TComponent)MySyscall(pSpeedButton_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetNamePath)
char*
SpeedButton_GetNamePath(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetNamePath)
    return (char*)MySyscall(pSpeedButton_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_Assign)
void
SpeedButton_Assign(TSpeedButton AObj, TObject Source) {
    GET_FUNC_ADDR(SpeedButton_Assign)
    MySyscall(pSpeedButton_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_ClassType)
TClass
SpeedButton_ClassType(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_ClassType)
    return (TClass)MySyscall(pSpeedButton_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_ClassName)
char*
SpeedButton_ClassName(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_ClassName)
    return (char*)MySyscall(pSpeedButton_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_InstanceSize)
int32_t
SpeedButton_InstanceSize(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_InstanceSize)
    return (int32_t)MySyscall(pSpeedButton_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_InheritsFrom)
BOOL
SpeedButton_InheritsFrom(TSpeedButton AObj, TClass AClass) {
    GET_FUNC_ADDR(SpeedButton_InheritsFrom)
    return (BOOL)MySyscall(pSpeedButton_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_Equals)
BOOL
SpeedButton_Equals(TSpeedButton AObj, TObject Obj) {
    GET_FUNC_ADDR(SpeedButton_Equals)
    return (BOOL)MySyscall(pSpeedButton_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetHashCode)
int32_t
SpeedButton_GetHashCode(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetHashCode)
    return (int32_t)MySyscall(pSpeedButton_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_ToString)
char*
SpeedButton_ToString(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_ToString)
    return (char*)MySyscall(pSpeedButton_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_AnchorToNeighbour)
void
SpeedButton_AnchorToNeighbour(TSpeedButton AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(SpeedButton_AnchorToNeighbour)
    MySyscall(pSpeedButton_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_AnchorParallel)
void
SpeedButton_AnchorParallel(TSpeedButton AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(SpeedButton_AnchorParallel)
    MySyscall(pSpeedButton_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_AnchorHorizontalCenterTo)
void
SpeedButton_AnchorHorizontalCenterTo(TSpeedButton AObj, TControl ASibling) {
    GET_FUNC_ADDR(SpeedButton_AnchorHorizontalCenterTo)
    MySyscall(pSpeedButton_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_AnchorVerticalCenterTo)
void
SpeedButton_AnchorVerticalCenterTo(TSpeedButton AObj, TControl ASibling) {
    GET_FUNC_ADDR(SpeedButton_AnchorVerticalCenterTo)
    MySyscall(pSpeedButton_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_AnchorSame)
void
SpeedButton_AnchorSame(TSpeedButton AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(SpeedButton_AnchorSame)
    MySyscall(pSpeedButton_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_AnchorAsAlign)
void
SpeedButton_AnchorAsAlign(TSpeedButton AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(SpeedButton_AnchorAsAlign)
    MySyscall(pSpeedButton_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_AnchorClient)
void
SpeedButton_AnchorClient(TSpeedButton AObj, int32_t ASpace) {
    GET_FUNC_ADDR(SpeedButton_AnchorClient)
    MySyscall(pSpeedButton_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_ScaleDesignToForm)
int32_t
SpeedButton_ScaleDesignToForm(TSpeedButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(SpeedButton_ScaleDesignToForm)
    return (int32_t)MySyscall(pSpeedButton_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_ScaleFormToDesign)
int32_t
SpeedButton_ScaleFormToDesign(TSpeedButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(SpeedButton_ScaleFormToDesign)
    return (int32_t)MySyscall(pSpeedButton_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_Scale96ToForm)
int32_t
SpeedButton_Scale96ToForm(TSpeedButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(SpeedButton_Scale96ToForm)
    return (int32_t)MySyscall(pSpeedButton_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_ScaleFormTo96)
int32_t
SpeedButton_ScaleFormTo96(TSpeedButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(SpeedButton_ScaleFormTo96)
    return (int32_t)MySyscall(pSpeedButton_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_Scale96ToFont)
int32_t
SpeedButton_Scale96ToFont(TSpeedButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(SpeedButton_Scale96ToFont)
    return (int32_t)MySyscall(pSpeedButton_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_ScaleFontTo96)
int32_t
SpeedButton_ScaleFontTo96(TSpeedButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(SpeedButton_ScaleFontTo96)
    return (int32_t)MySyscall(pSpeedButton_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_ScaleScreenToFont)
int32_t
SpeedButton_ScaleScreenToFont(TSpeedButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(SpeedButton_ScaleScreenToFont)
    return (int32_t)MySyscall(pSpeedButton_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_ScaleFontToScreen)
int32_t
SpeedButton_ScaleFontToScreen(TSpeedButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(SpeedButton_ScaleFontToScreen)
    return (int32_t)MySyscall(pSpeedButton_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_Scale96ToScreen)
int32_t
SpeedButton_Scale96ToScreen(TSpeedButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(SpeedButton_Scale96ToScreen)
    return (int32_t)MySyscall(pSpeedButton_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_ScaleScreenTo96)
int32_t
SpeedButton_ScaleScreenTo96(TSpeedButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(SpeedButton_ScaleScreenTo96)
    return (int32_t)MySyscall(pSpeedButton_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_AutoAdjustLayout)
void
SpeedButton_AutoAdjustLayout(TSpeedButton AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(SpeedButton_AutoAdjustLayout)
    MySyscall(pSpeedButton_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_FixDesignFontsPPI)
void
SpeedButton_FixDesignFontsPPI(TSpeedButton AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(SpeedButton_FixDesignFontsPPI)
    MySyscall(pSpeedButton_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_ScaleFontsPPI)
void
SpeedButton_ScaleFontsPPI(TSpeedButton AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(SpeedButton_ScaleFontsPPI)
    MySyscall(pSpeedButton_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetImageIndex)
int32_t
SpeedButton_GetImageIndex(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetImageIndex)
    return (int32_t)MySyscall(pSpeedButton_GetImageIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetImageIndex)
void
SpeedButton_SetImageIndex(TSpeedButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(SpeedButton_SetImageIndex)
    MySyscall(pSpeedButton_SetImageIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetImages)
TImageList
SpeedButton_GetImages(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetImages)
    return (TImageList)MySyscall(pSpeedButton_GetImages, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetImages)
void
SpeedButton_SetImages(TSpeedButton AObj, TImageList AValue) {
    GET_FUNC_ADDR(SpeedButton_SetImages)
    MySyscall(pSpeedButton_SetImages, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetImageWidth)
int32_t
SpeedButton_GetImageWidth(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetImageWidth)
    return (int32_t)MySyscall(pSpeedButton_GetImageWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetImageWidth)
void
SpeedButton_SetImageWidth(TSpeedButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(SpeedButton_SetImageWidth)
    MySyscall(pSpeedButton_SetImageWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetShowCaption)
BOOL
SpeedButton_GetShowCaption(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetShowCaption)
    return (BOOL)MySyscall(pSpeedButton_GetShowCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetShowCaption)
void
SpeedButton_SetShowCaption(TSpeedButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(SpeedButton_SetShowCaption)
    MySyscall(pSpeedButton_SetShowCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetAction)
TAction
SpeedButton_GetAction(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetAction)
    return (TAction)MySyscall(pSpeedButton_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetAction)
void
SpeedButton_SetAction(TSpeedButton AObj, TAction AValue) {
    GET_FUNC_ADDR(SpeedButton_SetAction)
    MySyscall(pSpeedButton_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetAlign)
TAlign
SpeedButton_GetAlign(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetAlign)
    return (TAlign)MySyscall(pSpeedButton_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetAlign)
void
SpeedButton_SetAlign(TSpeedButton AObj, TAlign AValue) {
    GET_FUNC_ADDR(SpeedButton_SetAlign)
    MySyscall(pSpeedButton_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetAllowAllUp)
BOOL
SpeedButton_GetAllowAllUp(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetAllowAllUp)
    return (BOOL)MySyscall(pSpeedButton_GetAllowAllUp, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetAllowAllUp)
void
SpeedButton_SetAllowAllUp(TSpeedButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(SpeedButton_SetAllowAllUp)
    MySyscall(pSpeedButton_SetAllowAllUp, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetAnchors)
TAnchors
SpeedButton_GetAnchors(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetAnchors)
    return (TAnchors)MySyscall(pSpeedButton_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetAnchors)
void
SpeedButton_SetAnchors(TSpeedButton AObj, TAnchors AValue) {
    GET_FUNC_ADDR(SpeedButton_SetAnchors)
    MySyscall(pSpeedButton_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetBiDiMode)
TBiDiMode
SpeedButton_GetBiDiMode(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetBiDiMode)
    return (TBiDiMode)MySyscall(pSpeedButton_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetBiDiMode)
void
SpeedButton_SetBiDiMode(TSpeedButton AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(SpeedButton_SetBiDiMode)
    MySyscall(pSpeedButton_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetConstraints)
TSizeConstraints
SpeedButton_GetConstraints(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetConstraints)
    return (TSizeConstraints)MySyscall(pSpeedButton_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetConstraints)
void
SpeedButton_SetConstraints(TSpeedButton AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(SpeedButton_SetConstraints)
    MySyscall(pSpeedButton_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetGroupIndex)
int32_t
SpeedButton_GetGroupIndex(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetGroupIndex)
    return (int32_t)MySyscall(pSpeedButton_GetGroupIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetGroupIndex)
void
SpeedButton_SetGroupIndex(TSpeedButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(SpeedButton_SetGroupIndex)
    MySyscall(pSpeedButton_SetGroupIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetDown)
BOOL
SpeedButton_GetDown(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetDown)
    return (BOOL)MySyscall(pSpeedButton_GetDown, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetDown)
void
SpeedButton_SetDown(TSpeedButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(SpeedButton_SetDown)
    MySyscall(pSpeedButton_SetDown, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetCaption)
char*
SpeedButton_GetCaption(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetCaption)
    return (char*)MySyscall(pSpeedButton_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetCaption)
void
SpeedButton_SetCaption(TSpeedButton AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SpeedButton_SetCaption)
    MySyscall(pSpeedButton_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetEnabled)
BOOL
SpeedButton_GetEnabled(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetEnabled)
    return (BOOL)MySyscall(pSpeedButton_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetEnabled)
void
SpeedButton_SetEnabled(TSpeedButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(SpeedButton_SetEnabled)
    MySyscall(pSpeedButton_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetFlat)
BOOL
SpeedButton_GetFlat(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetFlat)
    return (BOOL)MySyscall(pSpeedButton_GetFlat, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetFlat)
void
SpeedButton_SetFlat(TSpeedButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(SpeedButton_SetFlat)
    MySyscall(pSpeedButton_SetFlat, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetFont)
TFont
SpeedButton_GetFont(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetFont)
    return (TFont)MySyscall(pSpeedButton_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetFont)
void
SpeedButton_SetFont(TSpeedButton AObj, TFont AValue) {
    GET_FUNC_ADDR(SpeedButton_SetFont)
    MySyscall(pSpeedButton_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetGlyph)
TBitmap
SpeedButton_GetGlyph(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetGlyph)
    return (TBitmap)MySyscall(pSpeedButton_GetGlyph, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetGlyph)
void
SpeedButton_SetGlyph(TSpeedButton AObj, TBitmap AValue) {
    GET_FUNC_ADDR(SpeedButton_SetGlyph)
    MySyscall(pSpeedButton_SetGlyph, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetLayout)
TButtonLayout
SpeedButton_GetLayout(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetLayout)
    return (TButtonLayout)MySyscall(pSpeedButton_GetLayout, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetLayout)
void
SpeedButton_SetLayout(TSpeedButton AObj, TButtonLayout AValue) {
    GET_FUNC_ADDR(SpeedButton_SetLayout)
    MySyscall(pSpeedButton_SetLayout, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetNumGlyphs)
TNumGlyphs
SpeedButton_GetNumGlyphs(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetNumGlyphs)
    return (TNumGlyphs)MySyscall(pSpeedButton_GetNumGlyphs, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetNumGlyphs)
void
SpeedButton_SetNumGlyphs(TSpeedButton AObj, TNumGlyphs AValue) {
    GET_FUNC_ADDR(SpeedButton_SetNumGlyphs)
    MySyscall(pSpeedButton_SetNumGlyphs, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetParentFont)
BOOL
SpeedButton_GetParentFont(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetParentFont)
    return (BOOL)MySyscall(pSpeedButton_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetParentFont)
void
SpeedButton_SetParentFont(TSpeedButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(SpeedButton_SetParentFont)
    MySyscall(pSpeedButton_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetParentShowHint)
BOOL
SpeedButton_GetParentShowHint(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetParentShowHint)
    return (BOOL)MySyscall(pSpeedButton_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetParentShowHint)
void
SpeedButton_SetParentShowHint(TSpeedButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(SpeedButton_SetParentShowHint)
    MySyscall(pSpeedButton_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetPopupMenu)
TPopupMenu
SpeedButton_GetPopupMenu(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetPopupMenu)
    return (TPopupMenu)MySyscall(pSpeedButton_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetPopupMenu)
void
SpeedButton_SetPopupMenu(TSpeedButton AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(SpeedButton_SetPopupMenu)
    MySyscall(pSpeedButton_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetShowHint)
BOOL
SpeedButton_GetShowHint(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetShowHint)
    return (BOOL)MySyscall(pSpeedButton_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetShowHint)
void
SpeedButton_SetShowHint(TSpeedButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(SpeedButton_SetShowHint)
    MySyscall(pSpeedButton_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetSpacing)
int32_t
SpeedButton_GetSpacing(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetSpacing)
    return (int32_t)MySyscall(pSpeedButton_GetSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetSpacing)
void
SpeedButton_SetSpacing(TSpeedButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(SpeedButton_SetSpacing)
    MySyscall(pSpeedButton_SetSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetTransparent)
BOOL
SpeedButton_GetTransparent(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetTransparent)
    return (BOOL)MySyscall(pSpeedButton_GetTransparent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetTransparent)
void
SpeedButton_SetTransparent(TSpeedButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(SpeedButton_SetTransparent)
    MySyscall(pSpeedButton_SetTransparent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetVisible)
BOOL
SpeedButton_GetVisible(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetVisible)
    return (BOOL)MySyscall(pSpeedButton_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetVisible)
void
SpeedButton_SetVisible(TSpeedButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(SpeedButton_SetVisible)
    MySyscall(pSpeedButton_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetOnClick)
void
SpeedButton_SetOnClick(TSpeedButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(SpeedButton_SetOnClick)
    MySyscall(pSpeedButton_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetOnDblClick)
void
SpeedButton_SetOnDblClick(TSpeedButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(SpeedButton_SetOnDblClick)
    MySyscall(pSpeedButton_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetOnMouseDown)
void
SpeedButton_SetOnMouseDown(TSpeedButton AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(SpeedButton_SetOnMouseDown)
    MySyscall(pSpeedButton_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetOnMouseEnter)
void
SpeedButton_SetOnMouseEnter(TSpeedButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(SpeedButton_SetOnMouseEnter)
    MySyscall(pSpeedButton_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetOnMouseLeave)
void
SpeedButton_SetOnMouseLeave(TSpeedButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(SpeedButton_SetOnMouseLeave)
    MySyscall(pSpeedButton_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetOnMouseMove)
void
SpeedButton_SetOnMouseMove(TSpeedButton AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(SpeedButton_SetOnMouseMove)
    MySyscall(pSpeedButton_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetOnMouseUp)
void
SpeedButton_SetOnMouseUp(TSpeedButton AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(SpeedButton_SetOnMouseUp)
    MySyscall(pSpeedButton_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetBoundsRect)
TRect
SpeedButton_GetBoundsRect(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetBoundsRect)
    TRect result;
    MySyscall(pSpeedButton_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(SpeedButton_SetBoundsRect)
void
SpeedButton_SetBoundsRect(TSpeedButton AObj, TRect AValue) {
    GET_FUNC_ADDR(SpeedButton_SetBoundsRect)
    MySyscall(pSpeedButton_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetClientHeight)
int32_t
SpeedButton_GetClientHeight(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetClientHeight)
    return (int32_t)MySyscall(pSpeedButton_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetClientHeight)
void
SpeedButton_SetClientHeight(TSpeedButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(SpeedButton_SetClientHeight)
    MySyscall(pSpeedButton_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetClientOrigin)
TPoint
SpeedButton_GetClientOrigin(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetClientOrigin)
    TPoint result;
    MySyscall(pSpeedButton_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(SpeedButton_GetClientRect)
TRect
SpeedButton_GetClientRect(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetClientRect)
    TRect result;
    MySyscall(pSpeedButton_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(SpeedButton_GetClientWidth)
int32_t
SpeedButton_GetClientWidth(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetClientWidth)
    return (int32_t)MySyscall(pSpeedButton_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetClientWidth)
void
SpeedButton_SetClientWidth(TSpeedButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(SpeedButton_SetClientWidth)
    MySyscall(pSpeedButton_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetControlState)
TControlState
SpeedButton_GetControlState(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetControlState)
    return (TControlState)MySyscall(pSpeedButton_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetControlState)
void
SpeedButton_SetControlState(TSpeedButton AObj, TControlState AValue) {
    GET_FUNC_ADDR(SpeedButton_SetControlState)
    MySyscall(pSpeedButton_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetControlStyle)
TControlStyle
SpeedButton_GetControlStyle(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetControlStyle)
    return (TControlStyle)MySyscall(pSpeedButton_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetControlStyle)
void
SpeedButton_SetControlStyle(TSpeedButton AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(SpeedButton_SetControlStyle)
    MySyscall(pSpeedButton_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetFloating)
BOOL
SpeedButton_GetFloating(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetFloating)
    return (BOOL)MySyscall(pSpeedButton_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetParent)
TWinControl
SpeedButton_GetParent(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetParent)
    return (TWinControl)MySyscall(pSpeedButton_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetParent)
void
SpeedButton_SetParent(TSpeedButton AObj, TWinControl AValue) {
    GET_FUNC_ADDR(SpeedButton_SetParent)
    MySyscall(pSpeedButton_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetLeft)
int32_t
SpeedButton_GetLeft(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetLeft)
    return (int32_t)MySyscall(pSpeedButton_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetLeft)
void
SpeedButton_SetLeft(TSpeedButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(SpeedButton_SetLeft)
    MySyscall(pSpeedButton_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetTop)
int32_t
SpeedButton_GetTop(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetTop)
    return (int32_t)MySyscall(pSpeedButton_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetTop)
void
SpeedButton_SetTop(TSpeedButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(SpeedButton_SetTop)
    MySyscall(pSpeedButton_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetWidth)
int32_t
SpeedButton_GetWidth(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetWidth)
    return (int32_t)MySyscall(pSpeedButton_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetWidth)
void
SpeedButton_SetWidth(TSpeedButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(SpeedButton_SetWidth)
    MySyscall(pSpeedButton_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetHeight)
int32_t
SpeedButton_GetHeight(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetHeight)
    return (int32_t)MySyscall(pSpeedButton_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetHeight)
void
SpeedButton_SetHeight(TSpeedButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(SpeedButton_SetHeight)
    MySyscall(pSpeedButton_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetCursor)
TCursor
SpeedButton_GetCursor(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetCursor)
    return (TCursor)MySyscall(pSpeedButton_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetCursor)
void
SpeedButton_SetCursor(TSpeedButton AObj, TCursor AValue) {
    GET_FUNC_ADDR(SpeedButton_SetCursor)
    MySyscall(pSpeedButton_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetHint)
char*
SpeedButton_GetHint(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetHint)
    return (char*)MySyscall(pSpeedButton_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetHint)
void
SpeedButton_SetHint(TSpeedButton AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SpeedButton_SetHint)
    MySyscall(pSpeedButton_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetComponentCount)
int32_t
SpeedButton_GetComponentCount(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetComponentCount)
    return (int32_t)MySyscall(pSpeedButton_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetComponentIndex)
int32_t
SpeedButton_GetComponentIndex(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetComponentIndex)
    return (int32_t)MySyscall(pSpeedButton_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetComponentIndex)
void
SpeedButton_SetComponentIndex(TSpeedButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(SpeedButton_SetComponentIndex)
    MySyscall(pSpeedButton_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetOwner)
TComponent
SpeedButton_GetOwner(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetOwner)
    return (TComponent)MySyscall(pSpeedButton_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetName)
char*
SpeedButton_GetName(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetName)
    return (char*)MySyscall(pSpeedButton_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetName)
void
SpeedButton_SetName(TSpeedButton AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SpeedButton_SetName)
    MySyscall(pSpeedButton_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetTag)
intptr_t
SpeedButton_GetTag(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetTag)
    return (intptr_t)MySyscall(pSpeedButton_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetTag)
void
SpeedButton_SetTag(TSpeedButton AObj, intptr_t AValue) {
    GET_FUNC_ADDR(SpeedButton_SetTag)
    MySyscall(pSpeedButton_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetAnchorSideLeft)
TAnchorSide
SpeedButton_GetAnchorSideLeft(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pSpeedButton_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetAnchorSideLeft)
void
SpeedButton_SetAnchorSideLeft(TSpeedButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(SpeedButton_SetAnchorSideLeft)
    MySyscall(pSpeedButton_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetAnchorSideTop)
TAnchorSide
SpeedButton_GetAnchorSideTop(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pSpeedButton_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetAnchorSideTop)
void
SpeedButton_SetAnchorSideTop(TSpeedButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(SpeedButton_SetAnchorSideTop)
    MySyscall(pSpeedButton_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetAnchorSideRight)
TAnchorSide
SpeedButton_GetAnchorSideRight(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pSpeedButton_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetAnchorSideRight)
void
SpeedButton_SetAnchorSideRight(TSpeedButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(SpeedButton_SetAnchorSideRight)
    MySyscall(pSpeedButton_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetAnchorSideBottom)
TAnchorSide
SpeedButton_GetAnchorSideBottom(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pSpeedButton_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetAnchorSideBottom)
void
SpeedButton_SetAnchorSideBottom(TSpeedButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(SpeedButton_SetAnchorSideBottom)
    MySyscall(pSpeedButton_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetBorderSpacing)
TControlBorderSpacing
SpeedButton_GetBorderSpacing(TSpeedButton AObj) {
    GET_FUNC_ADDR(SpeedButton_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pSpeedButton_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_SetBorderSpacing)
void
SpeedButton_SetBorderSpacing(TSpeedButton AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(SpeedButton_SetBorderSpacing)
    MySyscall(pSpeedButton_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetComponents)
TComponent
SpeedButton_GetComponents(TSpeedButton AObj, int32_t AIndex) {
    GET_FUNC_ADDR(SpeedButton_GetComponents)
    return (TComponent)MySyscall(pSpeedButton_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_GetAnchorSide)
TAnchorSide
SpeedButton_GetAnchorSide(TSpeedButton AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(SpeedButton_GetAnchorSide)
    return (TAnchorSide)MySyscall(pSpeedButton_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpeedButton_StaticClassType)
TClass
SpeedButton_StaticClassType() {
    GET_FUNC_ADDR(SpeedButton_StaticClassType)
    return (TClass)MySyscall(pSpeedButton_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TSplitter-------------------

DEFINE_FUNC_PTR(Splitter_Create)
TSplitter
Splitter_Create(TComponent AOwner) {
    GET_FUNC_ADDR(Splitter_Create)
    return (TSplitter)MySyscall(pSplitter_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_Free)
void
Splitter_Free(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_Free)
    MySyscall(pSplitter_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_BringToFront)
void
Splitter_BringToFront(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_BringToFront)
    MySyscall(pSplitter_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_ClientToScreen)
TPoint
Splitter_ClientToScreen(TSplitter AObj, TPoint Point) {
    GET_FUNC_ADDR(Splitter_ClientToScreen)
    TPoint result;
    MySyscall(pSplitter_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Splitter_ClientToParent)
TPoint
Splitter_ClientToParent(TSplitter AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Splitter_ClientToParent)
    TPoint result;
    MySyscall(pSplitter_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Splitter_Dragging)
BOOL
Splitter_Dragging(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_Dragging)
    return (BOOL)MySyscall(pSplitter_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_HasParent)
BOOL
Splitter_HasParent(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_HasParent)
    return (BOOL)MySyscall(pSplitter_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_Hide)
void
Splitter_Hide(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_Hide)
    MySyscall(pSplitter_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_Invalidate)
void
Splitter_Invalidate(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_Invalidate)
    MySyscall(pSplitter_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_Perform)
intptr_t
Splitter_Perform(TSplitter AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(Splitter_Perform)
    return (intptr_t)MySyscall(pSplitter_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_Refresh)
void
Splitter_Refresh(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_Refresh)
    MySyscall(pSplitter_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_Repaint)
void
Splitter_Repaint(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_Repaint)
    MySyscall(pSplitter_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_ScreenToClient)
TPoint
Splitter_ScreenToClient(TSplitter AObj, TPoint Point) {
    GET_FUNC_ADDR(Splitter_ScreenToClient)
    TPoint result;
    MySyscall(pSplitter_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Splitter_ParentToClient)
TPoint
Splitter_ParentToClient(TSplitter AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Splitter_ParentToClient)
    TPoint result;
    MySyscall(pSplitter_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Splitter_SendToBack)
void
Splitter_SendToBack(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_SendToBack)
    MySyscall(pSplitter_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetBounds)
void
Splitter_SetBounds(TSplitter AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(Splitter_SetBounds)
    MySyscall(pSplitter_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_Show)
void
Splitter_Show(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_Show)
    MySyscall(pSplitter_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_Update)
void
Splitter_Update(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_Update)
    MySyscall(pSplitter_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetTextBuf)
int32_t
Splitter_GetTextBuf(TSplitter AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(Splitter_GetTextBuf)
    return (int32_t)MySyscall(pSplitter_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetTextLen)
int32_t
Splitter_GetTextLen(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetTextLen)
    return (int32_t)MySyscall(pSplitter_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetTextBuf)
void
Splitter_SetTextBuf(TSplitter AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(Splitter_SetTextBuf)
    MySyscall(pSplitter_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_FindComponent)
TComponent
Splitter_FindComponent(TSplitter AObj, CChar char* AName) {
    GET_FUNC_ADDR(Splitter_FindComponent)
    return (TComponent)MySyscall(pSplitter_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetNamePath)
char*
Splitter_GetNamePath(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetNamePath)
    return (char*)MySyscall(pSplitter_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_Assign)
void
Splitter_Assign(TSplitter AObj, TObject Source) {
    GET_FUNC_ADDR(Splitter_Assign)
    MySyscall(pSplitter_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_ClassType)
TClass
Splitter_ClassType(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_ClassType)
    return (TClass)MySyscall(pSplitter_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_ClassName)
char*
Splitter_ClassName(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_ClassName)
    return (char*)MySyscall(pSplitter_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_InstanceSize)
int32_t
Splitter_InstanceSize(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_InstanceSize)
    return (int32_t)MySyscall(pSplitter_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_InheritsFrom)
BOOL
Splitter_InheritsFrom(TSplitter AObj, TClass AClass) {
    GET_FUNC_ADDR(Splitter_InheritsFrom)
    return (BOOL)MySyscall(pSplitter_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_Equals)
BOOL
Splitter_Equals(TSplitter AObj, TObject Obj) {
    GET_FUNC_ADDR(Splitter_Equals)
    return (BOOL)MySyscall(pSplitter_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetHashCode)
int32_t
Splitter_GetHashCode(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetHashCode)
    return (int32_t)MySyscall(pSplitter_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_ToString)
char*
Splitter_ToString(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_ToString)
    return (char*)MySyscall(pSplitter_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_AnchorToNeighbour)
void
Splitter_AnchorToNeighbour(TSplitter AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Splitter_AnchorToNeighbour)
    MySyscall(pSplitter_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_AnchorParallel)
void
Splitter_AnchorParallel(TSplitter AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Splitter_AnchorParallel)
    MySyscall(pSplitter_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_AnchorHorizontalCenterTo)
void
Splitter_AnchorHorizontalCenterTo(TSplitter AObj, TControl ASibling) {
    GET_FUNC_ADDR(Splitter_AnchorHorizontalCenterTo)
    MySyscall(pSplitter_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_AnchorVerticalCenterTo)
void
Splitter_AnchorVerticalCenterTo(TSplitter AObj, TControl ASibling) {
    GET_FUNC_ADDR(Splitter_AnchorVerticalCenterTo)
    MySyscall(pSplitter_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_AnchorSame)
void
Splitter_AnchorSame(TSplitter AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(Splitter_AnchorSame)
    MySyscall(pSplitter_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_AnchorAsAlign)
void
Splitter_AnchorAsAlign(TSplitter AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(Splitter_AnchorAsAlign)
    MySyscall(pSplitter_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_AnchorClient)
void
Splitter_AnchorClient(TSplitter AObj, int32_t ASpace) {
    GET_FUNC_ADDR(Splitter_AnchorClient)
    MySyscall(pSplitter_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_ScaleDesignToForm)
int32_t
Splitter_ScaleDesignToForm(TSplitter AObj, int32_t ASize) {
    GET_FUNC_ADDR(Splitter_ScaleDesignToForm)
    return (int32_t)MySyscall(pSplitter_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_ScaleFormToDesign)
int32_t
Splitter_ScaleFormToDesign(TSplitter AObj, int32_t ASize) {
    GET_FUNC_ADDR(Splitter_ScaleFormToDesign)
    return (int32_t)MySyscall(pSplitter_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_Scale96ToForm)
int32_t
Splitter_Scale96ToForm(TSplitter AObj, int32_t ASize) {
    GET_FUNC_ADDR(Splitter_Scale96ToForm)
    return (int32_t)MySyscall(pSplitter_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_ScaleFormTo96)
int32_t
Splitter_ScaleFormTo96(TSplitter AObj, int32_t ASize) {
    GET_FUNC_ADDR(Splitter_ScaleFormTo96)
    return (int32_t)MySyscall(pSplitter_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_Scale96ToFont)
int32_t
Splitter_Scale96ToFont(TSplitter AObj, int32_t ASize) {
    GET_FUNC_ADDR(Splitter_Scale96ToFont)
    return (int32_t)MySyscall(pSplitter_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_ScaleFontTo96)
int32_t
Splitter_ScaleFontTo96(TSplitter AObj, int32_t ASize) {
    GET_FUNC_ADDR(Splitter_ScaleFontTo96)
    return (int32_t)MySyscall(pSplitter_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_ScaleScreenToFont)
int32_t
Splitter_ScaleScreenToFont(TSplitter AObj, int32_t ASize) {
    GET_FUNC_ADDR(Splitter_ScaleScreenToFont)
    return (int32_t)MySyscall(pSplitter_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_ScaleFontToScreen)
int32_t
Splitter_ScaleFontToScreen(TSplitter AObj, int32_t ASize) {
    GET_FUNC_ADDR(Splitter_ScaleFontToScreen)
    return (int32_t)MySyscall(pSplitter_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_Scale96ToScreen)
int32_t
Splitter_Scale96ToScreen(TSplitter AObj, int32_t ASize) {
    GET_FUNC_ADDR(Splitter_Scale96ToScreen)
    return (int32_t)MySyscall(pSplitter_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_ScaleScreenTo96)
int32_t
Splitter_ScaleScreenTo96(TSplitter AObj, int32_t ASize) {
    GET_FUNC_ADDR(Splitter_ScaleScreenTo96)
    return (int32_t)MySyscall(pSplitter_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_AutoAdjustLayout)
void
Splitter_AutoAdjustLayout(TSplitter AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(Splitter_AutoAdjustLayout)
    MySyscall(pSplitter_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_FixDesignFontsPPI)
void
Splitter_FixDesignFontsPPI(TSplitter AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(Splitter_FixDesignFontsPPI)
    MySyscall(pSplitter_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_ScaleFontsPPI)
void
Splitter_ScaleFontsPPI(TSplitter AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(Splitter_ScaleFontsPPI)
    MySyscall(pSplitter_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetResizeAnchor)
TAnchorKind
Splitter_GetResizeAnchor(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetResizeAnchor)
    return (TAnchorKind)MySyscall(pSplitter_GetResizeAnchor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetResizeAnchor)
void
Splitter_SetResizeAnchor(TSplitter AObj, TAnchorKind AValue) {
    GET_FUNC_ADDR(Splitter_SetResizeAnchor)
    MySyscall(pSplitter_SetResizeAnchor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetCanvas)
TCanvas
Splitter_GetCanvas(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetCanvas)
    return (TCanvas)MySyscall(pSplitter_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetAlign)
TAlign
Splitter_GetAlign(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetAlign)
    return (TAlign)MySyscall(pSplitter_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetAlign)
void
Splitter_SetAlign(TSplitter AObj, TAlign AValue) {
    GET_FUNC_ADDR(Splitter_SetAlign)
    MySyscall(pSplitter_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetColor)
TColor
Splitter_GetColor(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetColor)
    return (TColor)MySyscall(pSplitter_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetColor)
void
Splitter_SetColor(TSplitter AObj, TColor AValue) {
    GET_FUNC_ADDR(Splitter_SetColor)
    MySyscall(pSplitter_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetCursor)
TCursor
Splitter_GetCursor(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetCursor)
    return (TCursor)MySyscall(pSplitter_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetCursor)
void
Splitter_SetCursor(TSplitter AObj, TCursor AValue) {
    GET_FUNC_ADDR(Splitter_SetCursor)
    MySyscall(pSplitter_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetConstraints)
TSizeConstraints
Splitter_GetConstraints(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetConstraints)
    return (TSizeConstraints)MySyscall(pSplitter_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetConstraints)
void
Splitter_SetConstraints(TSplitter AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(Splitter_SetConstraints)
    MySyscall(pSplitter_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetMinSize)
int32_t
Splitter_GetMinSize(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetMinSize)
    return (int32_t)MySyscall(pSplitter_GetMinSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetMinSize)
void
Splitter_SetMinSize(TSplitter AObj, int32_t AValue) {
    GET_FUNC_ADDR(Splitter_SetMinSize)
    MySyscall(pSplitter_SetMinSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetParentColor)
BOOL
Splitter_GetParentColor(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetParentColor)
    return (BOOL)MySyscall(pSplitter_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetParentColor)
void
Splitter_SetParentColor(TSplitter AObj, BOOL AValue) {
    GET_FUNC_ADDR(Splitter_SetParentColor)
    MySyscall(pSplitter_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetVisible)
BOOL
Splitter_GetVisible(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetVisible)
    return (BOOL)MySyscall(pSplitter_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetVisible)
void
Splitter_SetVisible(TSplitter AObj, BOOL AValue) {
    GET_FUNC_ADDR(Splitter_SetVisible)
    MySyscall(pSplitter_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetWidth)
int32_t
Splitter_GetWidth(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetWidth)
    return (int32_t)MySyscall(pSplitter_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetWidth)
void
Splitter_SetWidth(TSplitter AObj, int32_t AValue) {
    GET_FUNC_ADDR(Splitter_SetWidth)
    MySyscall(pSplitter_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetOnPaint)
void
Splitter_SetOnPaint(TSplitter AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Splitter_SetOnPaint)
    MySyscall(pSplitter_SetOnPaint, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetEnabled)
BOOL
Splitter_GetEnabled(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetEnabled)
    return (BOOL)MySyscall(pSplitter_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetEnabled)
void
Splitter_SetEnabled(TSplitter AObj, BOOL AValue) {
    GET_FUNC_ADDR(Splitter_SetEnabled)
    MySyscall(pSplitter_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetAction)
TAction
Splitter_GetAction(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetAction)
    return (TAction)MySyscall(pSplitter_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetAction)
void
Splitter_SetAction(TSplitter AObj, TAction AValue) {
    GET_FUNC_ADDR(Splitter_SetAction)
    MySyscall(pSplitter_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetAnchors)
TAnchors
Splitter_GetAnchors(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetAnchors)
    return (TAnchors)MySyscall(pSplitter_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetAnchors)
void
Splitter_SetAnchors(TSplitter AObj, TAnchors AValue) {
    GET_FUNC_ADDR(Splitter_SetAnchors)
    MySyscall(pSplitter_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetBiDiMode)
TBiDiMode
Splitter_GetBiDiMode(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetBiDiMode)
    return (TBiDiMode)MySyscall(pSplitter_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetBiDiMode)
void
Splitter_SetBiDiMode(TSplitter AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(Splitter_SetBiDiMode)
    MySyscall(pSplitter_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetBoundsRect)
TRect
Splitter_GetBoundsRect(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetBoundsRect)
    TRect result;
    MySyscall(pSplitter_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Splitter_SetBoundsRect)
void
Splitter_SetBoundsRect(TSplitter AObj, TRect AValue) {
    GET_FUNC_ADDR(Splitter_SetBoundsRect)
    MySyscall(pSplitter_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetClientHeight)
int32_t
Splitter_GetClientHeight(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetClientHeight)
    return (int32_t)MySyscall(pSplitter_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetClientHeight)
void
Splitter_SetClientHeight(TSplitter AObj, int32_t AValue) {
    GET_FUNC_ADDR(Splitter_SetClientHeight)
    MySyscall(pSplitter_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetClientOrigin)
TPoint
Splitter_GetClientOrigin(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetClientOrigin)
    TPoint result;
    MySyscall(pSplitter_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Splitter_GetClientRect)
TRect
Splitter_GetClientRect(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetClientRect)
    TRect result;
    MySyscall(pSplitter_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Splitter_GetClientWidth)
int32_t
Splitter_GetClientWidth(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetClientWidth)
    return (int32_t)MySyscall(pSplitter_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetClientWidth)
void
Splitter_SetClientWidth(TSplitter AObj, int32_t AValue) {
    GET_FUNC_ADDR(Splitter_SetClientWidth)
    MySyscall(pSplitter_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetControlState)
TControlState
Splitter_GetControlState(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetControlState)
    return (TControlState)MySyscall(pSplitter_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetControlState)
void
Splitter_SetControlState(TSplitter AObj, TControlState AValue) {
    GET_FUNC_ADDR(Splitter_SetControlState)
    MySyscall(pSplitter_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetControlStyle)
TControlStyle
Splitter_GetControlStyle(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetControlStyle)
    return (TControlStyle)MySyscall(pSplitter_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetControlStyle)
void
Splitter_SetControlStyle(TSplitter AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(Splitter_SetControlStyle)
    MySyscall(pSplitter_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetFloating)
BOOL
Splitter_GetFloating(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetFloating)
    return (BOOL)MySyscall(pSplitter_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetShowHint)
BOOL
Splitter_GetShowHint(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetShowHint)
    return (BOOL)MySyscall(pSplitter_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetShowHint)
void
Splitter_SetShowHint(TSplitter AObj, BOOL AValue) {
    GET_FUNC_ADDR(Splitter_SetShowHint)
    MySyscall(pSplitter_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetParent)
TWinControl
Splitter_GetParent(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetParent)
    return (TWinControl)MySyscall(pSplitter_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetParent)
void
Splitter_SetParent(TSplitter AObj, TWinControl AValue) {
    GET_FUNC_ADDR(Splitter_SetParent)
    MySyscall(pSplitter_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetLeft)
int32_t
Splitter_GetLeft(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetLeft)
    return (int32_t)MySyscall(pSplitter_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetLeft)
void
Splitter_SetLeft(TSplitter AObj, int32_t AValue) {
    GET_FUNC_ADDR(Splitter_SetLeft)
    MySyscall(pSplitter_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetTop)
int32_t
Splitter_GetTop(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetTop)
    return (int32_t)MySyscall(pSplitter_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetTop)
void
Splitter_SetTop(TSplitter AObj, int32_t AValue) {
    GET_FUNC_ADDR(Splitter_SetTop)
    MySyscall(pSplitter_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetHeight)
int32_t
Splitter_GetHeight(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetHeight)
    return (int32_t)MySyscall(pSplitter_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetHeight)
void
Splitter_SetHeight(TSplitter AObj, int32_t AValue) {
    GET_FUNC_ADDR(Splitter_SetHeight)
    MySyscall(pSplitter_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetHint)
char*
Splitter_GetHint(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetHint)
    return (char*)MySyscall(pSplitter_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetHint)
void
Splitter_SetHint(TSplitter AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Splitter_SetHint)
    MySyscall(pSplitter_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetComponentCount)
int32_t
Splitter_GetComponentCount(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetComponentCount)
    return (int32_t)MySyscall(pSplitter_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetComponentIndex)
int32_t
Splitter_GetComponentIndex(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetComponentIndex)
    return (int32_t)MySyscall(pSplitter_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetComponentIndex)
void
Splitter_SetComponentIndex(TSplitter AObj, int32_t AValue) {
    GET_FUNC_ADDR(Splitter_SetComponentIndex)
    MySyscall(pSplitter_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetOwner)
TComponent
Splitter_GetOwner(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetOwner)
    return (TComponent)MySyscall(pSplitter_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetName)
char*
Splitter_GetName(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetName)
    return (char*)MySyscall(pSplitter_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetName)
void
Splitter_SetName(TSplitter AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Splitter_SetName)
    MySyscall(pSplitter_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetTag)
intptr_t
Splitter_GetTag(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetTag)
    return (intptr_t)MySyscall(pSplitter_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetTag)
void
Splitter_SetTag(TSplitter AObj, intptr_t AValue) {
    GET_FUNC_ADDR(Splitter_SetTag)
    MySyscall(pSplitter_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetAnchorSideLeft)
TAnchorSide
Splitter_GetAnchorSideLeft(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pSplitter_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetAnchorSideLeft)
void
Splitter_SetAnchorSideLeft(TSplitter AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Splitter_SetAnchorSideLeft)
    MySyscall(pSplitter_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetAnchorSideTop)
TAnchorSide
Splitter_GetAnchorSideTop(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pSplitter_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetAnchorSideTop)
void
Splitter_SetAnchorSideTop(TSplitter AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Splitter_SetAnchorSideTop)
    MySyscall(pSplitter_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetAnchorSideRight)
TAnchorSide
Splitter_GetAnchorSideRight(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pSplitter_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetAnchorSideRight)
void
Splitter_SetAnchorSideRight(TSplitter AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Splitter_SetAnchorSideRight)
    MySyscall(pSplitter_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetAnchorSideBottom)
TAnchorSide
Splitter_GetAnchorSideBottom(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pSplitter_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetAnchorSideBottom)
void
Splitter_SetAnchorSideBottom(TSplitter AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Splitter_SetAnchorSideBottom)
    MySyscall(pSplitter_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetBorderSpacing)
TControlBorderSpacing
Splitter_GetBorderSpacing(TSplitter AObj) {
    GET_FUNC_ADDR(Splitter_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pSplitter_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_SetBorderSpacing)
void
Splitter_SetBorderSpacing(TSplitter AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(Splitter_SetBorderSpacing)
    MySyscall(pSplitter_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetComponents)
TComponent
Splitter_GetComponents(TSplitter AObj, int32_t AIndex) {
    GET_FUNC_ADDR(Splitter_GetComponents)
    return (TComponent)MySyscall(pSplitter_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_GetAnchorSide)
TAnchorSide
Splitter_GetAnchorSide(TSplitter AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(Splitter_GetAnchorSide)
    return (TAnchorSide)MySyscall(pSplitter_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Splitter_StaticClassType)
TClass
Splitter_StaticClassType() {
    GET_FUNC_ADDR(Splitter_StaticClassType)
    return (TClass)MySyscall(pSplitter_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TRadioGroup-------------------

DEFINE_FUNC_PTR(RadioGroup_Create)
TRadioGroup
RadioGroup_Create(TComponent AOwner) {
    GET_FUNC_ADDR(RadioGroup_Create)
    return (TRadioGroup)MySyscall(pRadioGroup_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_Free)
void
RadioGroup_Free(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_Free)
    MySyscall(pRadioGroup_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_FlipChildren)
void
RadioGroup_FlipChildren(TRadioGroup AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(RadioGroup_FlipChildren)
    MySyscall(pRadioGroup_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_CanFocus)
BOOL
RadioGroup_CanFocus(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_CanFocus)
    return (BOOL)MySyscall(pRadioGroup_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_ContainsControl)
BOOL
RadioGroup_ContainsControl(TRadioGroup AObj, TControl Control) {
    GET_FUNC_ADDR(RadioGroup_ContainsControl)
    return (BOOL)MySyscall(pRadioGroup_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_ControlAtPos)
TControl
RadioGroup_ControlAtPos(TRadioGroup AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(RadioGroup_ControlAtPos)
    return (TControl)MySyscall(pRadioGroup_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_DisableAlign)
void
RadioGroup_DisableAlign(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_DisableAlign)
    MySyscall(pRadioGroup_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_EnableAlign)
void
RadioGroup_EnableAlign(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_EnableAlign)
    MySyscall(pRadioGroup_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_FindChildControl)
TControl
RadioGroup_FindChildControl(TRadioGroup AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(RadioGroup_FindChildControl)
    return (TControl)MySyscall(pRadioGroup_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_Focused)
BOOL
RadioGroup_Focused(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_Focused)
    return (BOOL)MySyscall(pRadioGroup_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_HandleAllocated)
BOOL
RadioGroup_HandleAllocated(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_HandleAllocated)
    return (BOOL)MySyscall(pRadioGroup_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_InsertControl)
void
RadioGroup_InsertControl(TRadioGroup AObj, TControl AControl) {
    GET_FUNC_ADDR(RadioGroup_InsertControl)
    MySyscall(pRadioGroup_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_Invalidate)
void
RadioGroup_Invalidate(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_Invalidate)
    MySyscall(pRadioGroup_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_PaintTo)
void
RadioGroup_PaintTo(TRadioGroup AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(RadioGroup_PaintTo)
    MySyscall(pRadioGroup_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_RemoveControl)
void
RadioGroup_RemoveControl(TRadioGroup AObj, TControl AControl) {
    GET_FUNC_ADDR(RadioGroup_RemoveControl)
    MySyscall(pRadioGroup_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_Realign)
void
RadioGroup_Realign(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_Realign)
    MySyscall(pRadioGroup_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_Repaint)
void
RadioGroup_Repaint(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_Repaint)
    MySyscall(pRadioGroup_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_ScaleBy)
void
RadioGroup_ScaleBy(TRadioGroup AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(RadioGroup_ScaleBy)
    MySyscall(pRadioGroup_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_ScrollBy)
void
RadioGroup_ScrollBy(TRadioGroup AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(RadioGroup_ScrollBy)
    MySyscall(pRadioGroup_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetBounds)
void
RadioGroup_SetBounds(TRadioGroup AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(RadioGroup_SetBounds)
    MySyscall(pRadioGroup_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetFocus)
void
RadioGroup_SetFocus(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_SetFocus)
    MySyscall(pRadioGroup_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_Update)
void
RadioGroup_Update(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_Update)
    MySyscall(pRadioGroup_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_BringToFront)
void
RadioGroup_BringToFront(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_BringToFront)
    MySyscall(pRadioGroup_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_ClientToScreen)
TPoint
RadioGroup_ClientToScreen(TRadioGroup AObj, TPoint Point) {
    GET_FUNC_ADDR(RadioGroup_ClientToScreen)
    TPoint result;
    MySyscall(pRadioGroup_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(RadioGroup_ClientToParent)
TPoint
RadioGroup_ClientToParent(TRadioGroup AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(RadioGroup_ClientToParent)
    TPoint result;
    MySyscall(pRadioGroup_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(RadioGroup_Dragging)
BOOL
RadioGroup_Dragging(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_Dragging)
    return (BOOL)MySyscall(pRadioGroup_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_HasParent)
BOOL
RadioGroup_HasParent(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_HasParent)
    return (BOOL)MySyscall(pRadioGroup_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_Hide)
void
RadioGroup_Hide(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_Hide)
    MySyscall(pRadioGroup_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_Perform)
intptr_t
RadioGroup_Perform(TRadioGroup AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(RadioGroup_Perform)
    return (intptr_t)MySyscall(pRadioGroup_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_Refresh)
void
RadioGroup_Refresh(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_Refresh)
    MySyscall(pRadioGroup_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_ScreenToClient)
TPoint
RadioGroup_ScreenToClient(TRadioGroup AObj, TPoint Point) {
    GET_FUNC_ADDR(RadioGroup_ScreenToClient)
    TPoint result;
    MySyscall(pRadioGroup_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(RadioGroup_ParentToClient)
TPoint
RadioGroup_ParentToClient(TRadioGroup AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(RadioGroup_ParentToClient)
    TPoint result;
    MySyscall(pRadioGroup_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(RadioGroup_SendToBack)
void
RadioGroup_SendToBack(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_SendToBack)
    MySyscall(pRadioGroup_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_Show)
void
RadioGroup_Show(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_Show)
    MySyscall(pRadioGroup_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetTextBuf)
int32_t
RadioGroup_GetTextBuf(TRadioGroup AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(RadioGroup_GetTextBuf)
    return (int32_t)MySyscall(pRadioGroup_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetTextLen)
int32_t
RadioGroup_GetTextLen(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetTextLen)
    return (int32_t)MySyscall(pRadioGroup_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetTextBuf)
void
RadioGroup_SetTextBuf(TRadioGroup AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(RadioGroup_SetTextBuf)
    MySyscall(pRadioGroup_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_FindComponent)
TComponent
RadioGroup_FindComponent(TRadioGroup AObj, CChar char* AName) {
    GET_FUNC_ADDR(RadioGroup_FindComponent)
    return (TComponent)MySyscall(pRadioGroup_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetNamePath)
char*
RadioGroup_GetNamePath(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetNamePath)
    return (char*)MySyscall(pRadioGroup_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_Assign)
void
RadioGroup_Assign(TRadioGroup AObj, TObject Source) {
    GET_FUNC_ADDR(RadioGroup_Assign)
    MySyscall(pRadioGroup_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_ClassType)
TClass
RadioGroup_ClassType(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_ClassType)
    return (TClass)MySyscall(pRadioGroup_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_ClassName)
char*
RadioGroup_ClassName(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_ClassName)
    return (char*)MySyscall(pRadioGroup_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_InstanceSize)
int32_t
RadioGroup_InstanceSize(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_InstanceSize)
    return (int32_t)MySyscall(pRadioGroup_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_InheritsFrom)
BOOL
RadioGroup_InheritsFrom(TRadioGroup AObj, TClass AClass) {
    GET_FUNC_ADDR(RadioGroup_InheritsFrom)
    return (BOOL)MySyscall(pRadioGroup_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_Equals)
BOOL
RadioGroup_Equals(TRadioGroup AObj, TObject Obj) {
    GET_FUNC_ADDR(RadioGroup_Equals)
    return (BOOL)MySyscall(pRadioGroup_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetHashCode)
int32_t
RadioGroup_GetHashCode(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetHashCode)
    return (int32_t)MySyscall(pRadioGroup_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_ToString)
char*
RadioGroup_ToString(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_ToString)
    return (char*)MySyscall(pRadioGroup_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_AnchorToNeighbour)
void
RadioGroup_AnchorToNeighbour(TRadioGroup AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(RadioGroup_AnchorToNeighbour)
    MySyscall(pRadioGroup_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_AnchorParallel)
void
RadioGroup_AnchorParallel(TRadioGroup AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(RadioGroup_AnchorParallel)
    MySyscall(pRadioGroup_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_AnchorHorizontalCenterTo)
void
RadioGroup_AnchorHorizontalCenterTo(TRadioGroup AObj, TControl ASibling) {
    GET_FUNC_ADDR(RadioGroup_AnchorHorizontalCenterTo)
    MySyscall(pRadioGroup_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_AnchorVerticalCenterTo)
void
RadioGroup_AnchorVerticalCenterTo(TRadioGroup AObj, TControl ASibling) {
    GET_FUNC_ADDR(RadioGroup_AnchorVerticalCenterTo)
    MySyscall(pRadioGroup_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_AnchorSame)
void
RadioGroup_AnchorSame(TRadioGroup AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(RadioGroup_AnchorSame)
    MySyscall(pRadioGroup_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_AnchorAsAlign)
void
RadioGroup_AnchorAsAlign(TRadioGroup AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(RadioGroup_AnchorAsAlign)
    MySyscall(pRadioGroup_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_AnchorClient)
void
RadioGroup_AnchorClient(TRadioGroup AObj, int32_t ASpace) {
    GET_FUNC_ADDR(RadioGroup_AnchorClient)
    MySyscall(pRadioGroup_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_ScaleDesignToForm)
int32_t
RadioGroup_ScaleDesignToForm(TRadioGroup AObj, int32_t ASize) {
    GET_FUNC_ADDR(RadioGroup_ScaleDesignToForm)
    return (int32_t)MySyscall(pRadioGroup_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_ScaleFormToDesign)
int32_t
RadioGroup_ScaleFormToDesign(TRadioGroup AObj, int32_t ASize) {
    GET_FUNC_ADDR(RadioGroup_ScaleFormToDesign)
    return (int32_t)MySyscall(pRadioGroup_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_Scale96ToForm)
int32_t
RadioGroup_Scale96ToForm(TRadioGroup AObj, int32_t ASize) {
    GET_FUNC_ADDR(RadioGroup_Scale96ToForm)
    return (int32_t)MySyscall(pRadioGroup_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_ScaleFormTo96)
int32_t
RadioGroup_ScaleFormTo96(TRadioGroup AObj, int32_t ASize) {
    GET_FUNC_ADDR(RadioGroup_ScaleFormTo96)
    return (int32_t)MySyscall(pRadioGroup_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_Scale96ToFont)
int32_t
RadioGroup_Scale96ToFont(TRadioGroup AObj, int32_t ASize) {
    GET_FUNC_ADDR(RadioGroup_Scale96ToFont)
    return (int32_t)MySyscall(pRadioGroup_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_ScaleFontTo96)
int32_t
RadioGroup_ScaleFontTo96(TRadioGroup AObj, int32_t ASize) {
    GET_FUNC_ADDR(RadioGroup_ScaleFontTo96)
    return (int32_t)MySyscall(pRadioGroup_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_ScaleScreenToFont)
int32_t
RadioGroup_ScaleScreenToFont(TRadioGroup AObj, int32_t ASize) {
    GET_FUNC_ADDR(RadioGroup_ScaleScreenToFont)
    return (int32_t)MySyscall(pRadioGroup_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_ScaleFontToScreen)
int32_t
RadioGroup_ScaleFontToScreen(TRadioGroup AObj, int32_t ASize) {
    GET_FUNC_ADDR(RadioGroup_ScaleFontToScreen)
    return (int32_t)MySyscall(pRadioGroup_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_Scale96ToScreen)
int32_t
RadioGroup_Scale96ToScreen(TRadioGroup AObj, int32_t ASize) {
    GET_FUNC_ADDR(RadioGroup_Scale96ToScreen)
    return (int32_t)MySyscall(pRadioGroup_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_ScaleScreenTo96)
int32_t
RadioGroup_ScaleScreenTo96(TRadioGroup AObj, int32_t ASize) {
    GET_FUNC_ADDR(RadioGroup_ScaleScreenTo96)
    return (int32_t)MySyscall(pRadioGroup_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_AutoAdjustLayout)
void
RadioGroup_AutoAdjustLayout(TRadioGroup AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(RadioGroup_AutoAdjustLayout)
    MySyscall(pRadioGroup_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_FixDesignFontsPPI)
void
RadioGroup_FixDesignFontsPPI(TRadioGroup AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(RadioGroup_FixDesignFontsPPI)
    MySyscall(pRadioGroup_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_ScaleFontsPPI)
void
RadioGroup_ScaleFontsPPI(TRadioGroup AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(RadioGroup_ScaleFontsPPI)
    MySyscall(pRadioGroup_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetOnSelectionChanged)
void
RadioGroup_SetOnSelectionChanged(TRadioGroup AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(RadioGroup_SetOnSelectionChanged)
    MySyscall(pRadioGroup_SetOnSelectionChanged, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetAlign)
TAlign
RadioGroup_GetAlign(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetAlign)
    return (TAlign)MySyscall(pRadioGroup_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetAlign)
void
RadioGroup_SetAlign(TRadioGroup AObj, TAlign AValue) {
    GET_FUNC_ADDR(RadioGroup_SetAlign)
    MySyscall(pRadioGroup_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetAnchors)
TAnchors
RadioGroup_GetAnchors(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetAnchors)
    return (TAnchors)MySyscall(pRadioGroup_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetAnchors)
void
RadioGroup_SetAnchors(TRadioGroup AObj, TAnchors AValue) {
    GET_FUNC_ADDR(RadioGroup_SetAnchors)
    MySyscall(pRadioGroup_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetBiDiMode)
TBiDiMode
RadioGroup_GetBiDiMode(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetBiDiMode)
    return (TBiDiMode)MySyscall(pRadioGroup_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetBiDiMode)
void
RadioGroup_SetBiDiMode(TRadioGroup AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(RadioGroup_SetBiDiMode)
    MySyscall(pRadioGroup_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetCaption)
char*
RadioGroup_GetCaption(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetCaption)
    return (char*)MySyscall(pRadioGroup_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetCaption)
void
RadioGroup_SetCaption(TRadioGroup AObj, CChar char* AValue) {
    GET_FUNC_ADDR(RadioGroup_SetCaption)
    MySyscall(pRadioGroup_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetColor)
TColor
RadioGroup_GetColor(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetColor)
    return (TColor)MySyscall(pRadioGroup_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetColor)
void
RadioGroup_SetColor(TRadioGroup AObj, TColor AValue) {
    GET_FUNC_ADDR(RadioGroup_SetColor)
    MySyscall(pRadioGroup_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetColumns)
int32_t
RadioGroup_GetColumns(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetColumns)
    return (int32_t)MySyscall(pRadioGroup_GetColumns, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetColumns)
void
RadioGroup_SetColumns(TRadioGroup AObj, int32_t AValue) {
    GET_FUNC_ADDR(RadioGroup_SetColumns)
    MySyscall(pRadioGroup_SetColumns, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetDoubleBuffered)
BOOL
RadioGroup_GetDoubleBuffered(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetDoubleBuffered)
    return (BOOL)MySyscall(pRadioGroup_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetDoubleBuffered)
void
RadioGroup_SetDoubleBuffered(TRadioGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(RadioGroup_SetDoubleBuffered)
    MySyscall(pRadioGroup_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetDragCursor)
TCursor
RadioGroup_GetDragCursor(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetDragCursor)
    return (TCursor)MySyscall(pRadioGroup_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetDragCursor)
void
RadioGroup_SetDragCursor(TRadioGroup AObj, TCursor AValue) {
    GET_FUNC_ADDR(RadioGroup_SetDragCursor)
    MySyscall(pRadioGroup_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetDragMode)
TDragMode
RadioGroup_GetDragMode(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetDragMode)
    return (TDragMode)MySyscall(pRadioGroup_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetDragMode)
void
RadioGroup_SetDragMode(TRadioGroup AObj, TDragMode AValue) {
    GET_FUNC_ADDR(RadioGroup_SetDragMode)
    MySyscall(pRadioGroup_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetEnabled)
BOOL
RadioGroup_GetEnabled(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetEnabled)
    return (BOOL)MySyscall(pRadioGroup_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetEnabled)
void
RadioGroup_SetEnabled(TRadioGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(RadioGroup_SetEnabled)
    MySyscall(pRadioGroup_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetFont)
TFont
RadioGroup_GetFont(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetFont)
    return (TFont)MySyscall(pRadioGroup_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetFont)
void
RadioGroup_SetFont(TRadioGroup AObj, TFont AValue) {
    GET_FUNC_ADDR(RadioGroup_SetFont)
    MySyscall(pRadioGroup_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetItemIndex)
int32_t
RadioGroup_GetItemIndex(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetItemIndex)
    return (int32_t)MySyscall(pRadioGroup_GetItemIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetItemIndex)
void
RadioGroup_SetItemIndex(TRadioGroup AObj, int32_t AValue) {
    GET_FUNC_ADDR(RadioGroup_SetItemIndex)
    MySyscall(pRadioGroup_SetItemIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetItems)
TStrings
RadioGroup_GetItems(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetItems)
    return (TStrings)MySyscall(pRadioGroup_GetItems, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetItems)
void
RadioGroup_SetItems(TRadioGroup AObj, TStrings AValue) {
    GET_FUNC_ADDR(RadioGroup_SetItems)
    MySyscall(pRadioGroup_SetItems, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetConstraints)
TSizeConstraints
RadioGroup_GetConstraints(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetConstraints)
    return (TSizeConstraints)MySyscall(pRadioGroup_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetConstraints)
void
RadioGroup_SetConstraints(TRadioGroup AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(RadioGroup_SetConstraints)
    MySyscall(pRadioGroup_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetParentBackground)
BOOL
RadioGroup_GetParentBackground(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetParentBackground)
    return (BOOL)MySyscall(pRadioGroup_GetParentBackground, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetParentBackground)
void
RadioGroup_SetParentBackground(TRadioGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(RadioGroup_SetParentBackground)
    MySyscall(pRadioGroup_SetParentBackground, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetParentColor)
BOOL
RadioGroup_GetParentColor(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetParentColor)
    return (BOOL)MySyscall(pRadioGroup_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetParentColor)
void
RadioGroup_SetParentColor(TRadioGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(RadioGroup_SetParentColor)
    MySyscall(pRadioGroup_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetParentDoubleBuffered)
BOOL
RadioGroup_GetParentDoubleBuffered(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pRadioGroup_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetParentDoubleBuffered)
void
RadioGroup_SetParentDoubleBuffered(TRadioGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(RadioGroup_SetParentDoubleBuffered)
    MySyscall(pRadioGroup_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetParentFont)
BOOL
RadioGroup_GetParentFont(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetParentFont)
    return (BOOL)MySyscall(pRadioGroup_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetParentFont)
void
RadioGroup_SetParentFont(TRadioGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(RadioGroup_SetParentFont)
    MySyscall(pRadioGroup_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetParentShowHint)
BOOL
RadioGroup_GetParentShowHint(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetParentShowHint)
    return (BOOL)MySyscall(pRadioGroup_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetParentShowHint)
void
RadioGroup_SetParentShowHint(TRadioGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(RadioGroup_SetParentShowHint)
    MySyscall(pRadioGroup_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetPopupMenu)
TPopupMenu
RadioGroup_GetPopupMenu(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetPopupMenu)
    return (TPopupMenu)MySyscall(pRadioGroup_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetPopupMenu)
void
RadioGroup_SetPopupMenu(TRadioGroup AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(RadioGroup_SetPopupMenu)
    MySyscall(pRadioGroup_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetShowHint)
BOOL
RadioGroup_GetShowHint(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetShowHint)
    return (BOOL)MySyscall(pRadioGroup_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetShowHint)
void
RadioGroup_SetShowHint(TRadioGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(RadioGroup_SetShowHint)
    MySyscall(pRadioGroup_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetTabOrder)
TTabOrder
RadioGroup_GetTabOrder(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetTabOrder)
    return (TTabOrder)MySyscall(pRadioGroup_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetTabOrder)
void
RadioGroup_SetTabOrder(TRadioGroup AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(RadioGroup_SetTabOrder)
    MySyscall(pRadioGroup_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetTabStop)
BOOL
RadioGroup_GetTabStop(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetTabStop)
    return (BOOL)MySyscall(pRadioGroup_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetTabStop)
void
RadioGroup_SetTabStop(TRadioGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(RadioGroup_SetTabStop)
    MySyscall(pRadioGroup_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetVisible)
BOOL
RadioGroup_GetVisible(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetVisible)
    return (BOOL)MySyscall(pRadioGroup_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetVisible)
void
RadioGroup_SetVisible(TRadioGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(RadioGroup_SetVisible)
    MySyscall(pRadioGroup_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetOnClick)
void
RadioGroup_SetOnClick(TRadioGroup AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(RadioGroup_SetOnClick)
    MySyscall(pRadioGroup_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetOnDragDrop)
void
RadioGroup_SetOnDragDrop(TRadioGroup AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(RadioGroup_SetOnDragDrop)
    MySyscall(pRadioGroup_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetOnDragOver)
void
RadioGroup_SetOnDragOver(TRadioGroup AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(RadioGroup_SetOnDragOver)
    MySyscall(pRadioGroup_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetOnEndDrag)
void
RadioGroup_SetOnEndDrag(TRadioGroup AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(RadioGroup_SetOnEndDrag)
    MySyscall(pRadioGroup_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetOnEnter)
void
RadioGroup_SetOnEnter(TRadioGroup AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(RadioGroup_SetOnEnter)
    MySyscall(pRadioGroup_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetOnExit)
void
RadioGroup_SetOnExit(TRadioGroup AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(RadioGroup_SetOnExit)
    MySyscall(pRadioGroup_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetDockClientCount)
int32_t
RadioGroup_GetDockClientCount(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetDockClientCount)
    return (int32_t)MySyscall(pRadioGroup_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetDockSite)
BOOL
RadioGroup_GetDockSite(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetDockSite)
    return (BOOL)MySyscall(pRadioGroup_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetDockSite)
void
RadioGroup_SetDockSite(TRadioGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(RadioGroup_SetDockSite)
    MySyscall(pRadioGroup_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetMouseInClient)
BOOL
RadioGroup_GetMouseInClient(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetMouseInClient)
    return (BOOL)MySyscall(pRadioGroup_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetVisibleDockClientCount)
int32_t
RadioGroup_GetVisibleDockClientCount(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pRadioGroup_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetBrush)
TBrush
RadioGroup_GetBrush(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetBrush)
    return (TBrush)MySyscall(pRadioGroup_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetControlCount)
int32_t
RadioGroup_GetControlCount(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetControlCount)
    return (int32_t)MySyscall(pRadioGroup_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetHandle)
HWND
RadioGroup_GetHandle(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetHandle)
    return (HWND)MySyscall(pRadioGroup_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetParentWindow)
HWND
RadioGroup_GetParentWindow(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetParentWindow)
    return (HWND)MySyscall(pRadioGroup_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetParentWindow)
void
RadioGroup_SetParentWindow(TRadioGroup AObj, HWND AValue) {
    GET_FUNC_ADDR(RadioGroup_SetParentWindow)
    MySyscall(pRadioGroup_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetShowing)
BOOL
RadioGroup_GetShowing(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetShowing)
    return (BOOL)MySyscall(pRadioGroup_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetUseDockManager)
BOOL
RadioGroup_GetUseDockManager(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetUseDockManager)
    return (BOOL)MySyscall(pRadioGroup_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetUseDockManager)
void
RadioGroup_SetUseDockManager(TRadioGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(RadioGroup_SetUseDockManager)
    MySyscall(pRadioGroup_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetAction)
TAction
RadioGroup_GetAction(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetAction)
    return (TAction)MySyscall(pRadioGroup_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetAction)
void
RadioGroup_SetAction(TRadioGroup AObj, TAction AValue) {
    GET_FUNC_ADDR(RadioGroup_SetAction)
    MySyscall(pRadioGroup_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetBoundsRect)
TRect
RadioGroup_GetBoundsRect(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetBoundsRect)
    TRect result;
    MySyscall(pRadioGroup_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(RadioGroup_SetBoundsRect)
void
RadioGroup_SetBoundsRect(TRadioGroup AObj, TRect AValue) {
    GET_FUNC_ADDR(RadioGroup_SetBoundsRect)
    MySyscall(pRadioGroup_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetClientHeight)
int32_t
RadioGroup_GetClientHeight(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetClientHeight)
    return (int32_t)MySyscall(pRadioGroup_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetClientHeight)
void
RadioGroup_SetClientHeight(TRadioGroup AObj, int32_t AValue) {
    GET_FUNC_ADDR(RadioGroup_SetClientHeight)
    MySyscall(pRadioGroup_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetClientOrigin)
TPoint
RadioGroup_GetClientOrigin(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetClientOrigin)
    TPoint result;
    MySyscall(pRadioGroup_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(RadioGroup_GetClientRect)
TRect
RadioGroup_GetClientRect(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetClientRect)
    TRect result;
    MySyscall(pRadioGroup_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(RadioGroup_GetClientWidth)
int32_t
RadioGroup_GetClientWidth(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetClientWidth)
    return (int32_t)MySyscall(pRadioGroup_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetClientWidth)
void
RadioGroup_SetClientWidth(TRadioGroup AObj, int32_t AValue) {
    GET_FUNC_ADDR(RadioGroup_SetClientWidth)
    MySyscall(pRadioGroup_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetControlState)
TControlState
RadioGroup_GetControlState(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetControlState)
    return (TControlState)MySyscall(pRadioGroup_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetControlState)
void
RadioGroup_SetControlState(TRadioGroup AObj, TControlState AValue) {
    GET_FUNC_ADDR(RadioGroup_SetControlState)
    MySyscall(pRadioGroup_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetControlStyle)
TControlStyle
RadioGroup_GetControlStyle(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetControlStyle)
    return (TControlStyle)MySyscall(pRadioGroup_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetControlStyle)
void
RadioGroup_SetControlStyle(TRadioGroup AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(RadioGroup_SetControlStyle)
    MySyscall(pRadioGroup_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetFloating)
BOOL
RadioGroup_GetFloating(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetFloating)
    return (BOOL)MySyscall(pRadioGroup_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetParent)
TWinControl
RadioGroup_GetParent(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetParent)
    return (TWinControl)MySyscall(pRadioGroup_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetParent)
void
RadioGroup_SetParent(TRadioGroup AObj, TWinControl AValue) {
    GET_FUNC_ADDR(RadioGroup_SetParent)
    MySyscall(pRadioGroup_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetLeft)
int32_t
RadioGroup_GetLeft(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetLeft)
    return (int32_t)MySyscall(pRadioGroup_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetLeft)
void
RadioGroup_SetLeft(TRadioGroup AObj, int32_t AValue) {
    GET_FUNC_ADDR(RadioGroup_SetLeft)
    MySyscall(pRadioGroup_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetTop)
int32_t
RadioGroup_GetTop(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetTop)
    return (int32_t)MySyscall(pRadioGroup_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetTop)
void
RadioGroup_SetTop(TRadioGroup AObj, int32_t AValue) {
    GET_FUNC_ADDR(RadioGroup_SetTop)
    MySyscall(pRadioGroup_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetWidth)
int32_t
RadioGroup_GetWidth(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetWidth)
    return (int32_t)MySyscall(pRadioGroup_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetWidth)
void
RadioGroup_SetWidth(TRadioGroup AObj, int32_t AValue) {
    GET_FUNC_ADDR(RadioGroup_SetWidth)
    MySyscall(pRadioGroup_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetHeight)
int32_t
RadioGroup_GetHeight(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetHeight)
    return (int32_t)MySyscall(pRadioGroup_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetHeight)
void
RadioGroup_SetHeight(TRadioGroup AObj, int32_t AValue) {
    GET_FUNC_ADDR(RadioGroup_SetHeight)
    MySyscall(pRadioGroup_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetCursor)
TCursor
RadioGroup_GetCursor(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetCursor)
    return (TCursor)MySyscall(pRadioGroup_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetCursor)
void
RadioGroup_SetCursor(TRadioGroup AObj, TCursor AValue) {
    GET_FUNC_ADDR(RadioGroup_SetCursor)
    MySyscall(pRadioGroup_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetHint)
char*
RadioGroup_GetHint(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetHint)
    return (char*)MySyscall(pRadioGroup_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetHint)
void
RadioGroup_SetHint(TRadioGroup AObj, CChar char* AValue) {
    GET_FUNC_ADDR(RadioGroup_SetHint)
    MySyscall(pRadioGroup_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetComponentCount)
int32_t
RadioGroup_GetComponentCount(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetComponentCount)
    return (int32_t)MySyscall(pRadioGroup_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetComponentIndex)
int32_t
RadioGroup_GetComponentIndex(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetComponentIndex)
    return (int32_t)MySyscall(pRadioGroup_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetComponentIndex)
void
RadioGroup_SetComponentIndex(TRadioGroup AObj, int32_t AValue) {
    GET_FUNC_ADDR(RadioGroup_SetComponentIndex)
    MySyscall(pRadioGroup_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetOwner)
TComponent
RadioGroup_GetOwner(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetOwner)
    return (TComponent)MySyscall(pRadioGroup_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetName)
char*
RadioGroup_GetName(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetName)
    return (char*)MySyscall(pRadioGroup_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetName)
void
RadioGroup_SetName(TRadioGroup AObj, CChar char* AValue) {
    GET_FUNC_ADDR(RadioGroup_SetName)
    MySyscall(pRadioGroup_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetTag)
intptr_t
RadioGroup_GetTag(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetTag)
    return (intptr_t)MySyscall(pRadioGroup_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetTag)
void
RadioGroup_SetTag(TRadioGroup AObj, intptr_t AValue) {
    GET_FUNC_ADDR(RadioGroup_SetTag)
    MySyscall(pRadioGroup_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetAnchorSideLeft)
TAnchorSide
RadioGroup_GetAnchorSideLeft(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pRadioGroup_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetAnchorSideLeft)
void
RadioGroup_SetAnchorSideLeft(TRadioGroup AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(RadioGroup_SetAnchorSideLeft)
    MySyscall(pRadioGroup_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetAnchorSideTop)
TAnchorSide
RadioGroup_GetAnchorSideTop(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pRadioGroup_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetAnchorSideTop)
void
RadioGroup_SetAnchorSideTop(TRadioGroup AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(RadioGroup_SetAnchorSideTop)
    MySyscall(pRadioGroup_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetAnchorSideRight)
TAnchorSide
RadioGroup_GetAnchorSideRight(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pRadioGroup_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetAnchorSideRight)
void
RadioGroup_SetAnchorSideRight(TRadioGroup AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(RadioGroup_SetAnchorSideRight)
    MySyscall(pRadioGroup_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetAnchorSideBottom)
TAnchorSide
RadioGroup_GetAnchorSideBottom(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pRadioGroup_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetAnchorSideBottom)
void
RadioGroup_SetAnchorSideBottom(TRadioGroup AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(RadioGroup_SetAnchorSideBottom)
    MySyscall(pRadioGroup_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetChildSizing)
TControlChildSizing
RadioGroup_GetChildSizing(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetChildSizing)
    return (TControlChildSizing)MySyscall(pRadioGroup_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetChildSizing)
void
RadioGroup_SetChildSizing(TRadioGroup AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(RadioGroup_SetChildSizing)
    MySyscall(pRadioGroup_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetBorderSpacing)
TControlBorderSpacing
RadioGroup_GetBorderSpacing(TRadioGroup AObj) {
    GET_FUNC_ADDR(RadioGroup_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pRadioGroup_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_SetBorderSpacing)
void
RadioGroup_SetBorderSpacing(TRadioGroup AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(RadioGroup_SetBorderSpacing)
    MySyscall(pRadioGroup_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetDockClients)
TControl
RadioGroup_GetDockClients(TRadioGroup AObj, int32_t Index) {
    GET_FUNC_ADDR(RadioGroup_GetDockClients)
    return (TControl)MySyscall(pRadioGroup_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetControls)
TControl
RadioGroup_GetControls(TRadioGroup AObj, int32_t Index) {
    GET_FUNC_ADDR(RadioGroup_GetControls)
    return (TControl)MySyscall(pRadioGroup_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetComponents)
TComponent
RadioGroup_GetComponents(TRadioGroup AObj, int32_t AIndex) {
    GET_FUNC_ADDR(RadioGroup_GetComponents)
    return (TComponent)MySyscall(pRadioGroup_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_GetAnchorSide)
TAnchorSide
RadioGroup_GetAnchorSide(TRadioGroup AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(RadioGroup_GetAnchorSide)
    return (TAnchorSide)MySyscall(pRadioGroup_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RadioGroup_StaticClassType)
TClass
RadioGroup_StaticClassType() {
    GET_FUNC_ADDR(RadioGroup_StaticClassType)
    return (TClass)MySyscall(pRadioGroup_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TStaticText-------------------

DEFINE_FUNC_PTR(StaticText_Create)
TStaticText
StaticText_Create(TComponent AOwner) {
    GET_FUNC_ADDR(StaticText_Create)
    return (TStaticText)MySyscall(pStaticText_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_Free)
void
StaticText_Free(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_Free)
    MySyscall(pStaticText_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_CanFocus)
BOOL
StaticText_CanFocus(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_CanFocus)
    return (BOOL)MySyscall(pStaticText_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_ContainsControl)
BOOL
StaticText_ContainsControl(TStaticText AObj, TControl Control) {
    GET_FUNC_ADDR(StaticText_ContainsControl)
    return (BOOL)MySyscall(pStaticText_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_ControlAtPos)
TControl
StaticText_ControlAtPos(TStaticText AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(StaticText_ControlAtPos)
    return (TControl)MySyscall(pStaticText_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_DisableAlign)
void
StaticText_DisableAlign(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_DisableAlign)
    MySyscall(pStaticText_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_EnableAlign)
void
StaticText_EnableAlign(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_EnableAlign)
    MySyscall(pStaticText_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_FindChildControl)
TControl
StaticText_FindChildControl(TStaticText AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(StaticText_FindChildControl)
    return (TControl)MySyscall(pStaticText_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_FlipChildren)
void
StaticText_FlipChildren(TStaticText AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(StaticText_FlipChildren)
    MySyscall(pStaticText_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_Focused)
BOOL
StaticText_Focused(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_Focused)
    return (BOOL)MySyscall(pStaticText_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_HandleAllocated)
BOOL
StaticText_HandleAllocated(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_HandleAllocated)
    return (BOOL)MySyscall(pStaticText_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_InsertControl)
void
StaticText_InsertControl(TStaticText AObj, TControl AControl) {
    GET_FUNC_ADDR(StaticText_InsertControl)
    MySyscall(pStaticText_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_Invalidate)
void
StaticText_Invalidate(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_Invalidate)
    MySyscall(pStaticText_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_PaintTo)
void
StaticText_PaintTo(TStaticText AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(StaticText_PaintTo)
    MySyscall(pStaticText_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_RemoveControl)
void
StaticText_RemoveControl(TStaticText AObj, TControl AControl) {
    GET_FUNC_ADDR(StaticText_RemoveControl)
    MySyscall(pStaticText_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_Realign)
void
StaticText_Realign(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_Realign)
    MySyscall(pStaticText_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_Repaint)
void
StaticText_Repaint(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_Repaint)
    MySyscall(pStaticText_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_ScaleBy)
void
StaticText_ScaleBy(TStaticText AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(StaticText_ScaleBy)
    MySyscall(pStaticText_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_ScrollBy)
void
StaticText_ScrollBy(TStaticText AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(StaticText_ScrollBy)
    MySyscall(pStaticText_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetBounds)
void
StaticText_SetBounds(TStaticText AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(StaticText_SetBounds)
    MySyscall(pStaticText_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetFocus)
void
StaticText_SetFocus(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_SetFocus)
    MySyscall(pStaticText_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_Update)
void
StaticText_Update(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_Update)
    MySyscall(pStaticText_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_BringToFront)
void
StaticText_BringToFront(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_BringToFront)
    MySyscall(pStaticText_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_ClientToScreen)
TPoint
StaticText_ClientToScreen(TStaticText AObj, TPoint Point) {
    GET_FUNC_ADDR(StaticText_ClientToScreen)
    TPoint result;
    MySyscall(pStaticText_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StaticText_ClientToParent)
TPoint
StaticText_ClientToParent(TStaticText AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(StaticText_ClientToParent)
    TPoint result;
    MySyscall(pStaticText_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StaticText_Dragging)
BOOL
StaticText_Dragging(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_Dragging)
    return (BOOL)MySyscall(pStaticText_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_HasParent)
BOOL
StaticText_HasParent(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_HasParent)
    return (BOOL)MySyscall(pStaticText_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_Hide)
void
StaticText_Hide(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_Hide)
    MySyscall(pStaticText_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_Perform)
intptr_t
StaticText_Perform(TStaticText AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(StaticText_Perform)
    return (intptr_t)MySyscall(pStaticText_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_Refresh)
void
StaticText_Refresh(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_Refresh)
    MySyscall(pStaticText_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_ScreenToClient)
TPoint
StaticText_ScreenToClient(TStaticText AObj, TPoint Point) {
    GET_FUNC_ADDR(StaticText_ScreenToClient)
    TPoint result;
    MySyscall(pStaticText_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StaticText_ParentToClient)
TPoint
StaticText_ParentToClient(TStaticText AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(StaticText_ParentToClient)
    TPoint result;
    MySyscall(pStaticText_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StaticText_SendToBack)
void
StaticText_SendToBack(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_SendToBack)
    MySyscall(pStaticText_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_Show)
void
StaticText_Show(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_Show)
    MySyscall(pStaticText_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetTextBuf)
int32_t
StaticText_GetTextBuf(TStaticText AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(StaticText_GetTextBuf)
    return (int32_t)MySyscall(pStaticText_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetTextLen)
int32_t
StaticText_GetTextLen(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetTextLen)
    return (int32_t)MySyscall(pStaticText_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetTextBuf)
void
StaticText_SetTextBuf(TStaticText AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(StaticText_SetTextBuf)
    MySyscall(pStaticText_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_FindComponent)
TComponent
StaticText_FindComponent(TStaticText AObj, CChar char* AName) {
    GET_FUNC_ADDR(StaticText_FindComponent)
    return (TComponent)MySyscall(pStaticText_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetNamePath)
char*
StaticText_GetNamePath(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetNamePath)
    return (char*)MySyscall(pStaticText_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_Assign)
void
StaticText_Assign(TStaticText AObj, TObject Source) {
    GET_FUNC_ADDR(StaticText_Assign)
    MySyscall(pStaticText_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_ClassType)
TClass
StaticText_ClassType(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_ClassType)
    return (TClass)MySyscall(pStaticText_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_ClassName)
char*
StaticText_ClassName(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_ClassName)
    return (char*)MySyscall(pStaticText_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_InstanceSize)
int32_t
StaticText_InstanceSize(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_InstanceSize)
    return (int32_t)MySyscall(pStaticText_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_InheritsFrom)
BOOL
StaticText_InheritsFrom(TStaticText AObj, TClass AClass) {
    GET_FUNC_ADDR(StaticText_InheritsFrom)
    return (BOOL)MySyscall(pStaticText_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_Equals)
BOOL
StaticText_Equals(TStaticText AObj, TObject Obj) {
    GET_FUNC_ADDR(StaticText_Equals)
    return (BOOL)MySyscall(pStaticText_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetHashCode)
int32_t
StaticText_GetHashCode(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetHashCode)
    return (int32_t)MySyscall(pStaticText_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_ToString)
char*
StaticText_ToString(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_ToString)
    return (char*)MySyscall(pStaticText_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_AnchorToNeighbour)
void
StaticText_AnchorToNeighbour(TStaticText AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(StaticText_AnchorToNeighbour)
    MySyscall(pStaticText_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_AnchorParallel)
void
StaticText_AnchorParallel(TStaticText AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(StaticText_AnchorParallel)
    MySyscall(pStaticText_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_AnchorHorizontalCenterTo)
void
StaticText_AnchorHorizontalCenterTo(TStaticText AObj, TControl ASibling) {
    GET_FUNC_ADDR(StaticText_AnchorHorizontalCenterTo)
    MySyscall(pStaticText_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_AnchorVerticalCenterTo)
void
StaticText_AnchorVerticalCenterTo(TStaticText AObj, TControl ASibling) {
    GET_FUNC_ADDR(StaticText_AnchorVerticalCenterTo)
    MySyscall(pStaticText_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_AnchorSame)
void
StaticText_AnchorSame(TStaticText AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(StaticText_AnchorSame)
    MySyscall(pStaticText_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_AnchorAsAlign)
void
StaticText_AnchorAsAlign(TStaticText AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(StaticText_AnchorAsAlign)
    MySyscall(pStaticText_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_AnchorClient)
void
StaticText_AnchorClient(TStaticText AObj, int32_t ASpace) {
    GET_FUNC_ADDR(StaticText_AnchorClient)
    MySyscall(pStaticText_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_ScaleDesignToForm)
int32_t
StaticText_ScaleDesignToForm(TStaticText AObj, int32_t ASize) {
    GET_FUNC_ADDR(StaticText_ScaleDesignToForm)
    return (int32_t)MySyscall(pStaticText_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_ScaleFormToDesign)
int32_t
StaticText_ScaleFormToDesign(TStaticText AObj, int32_t ASize) {
    GET_FUNC_ADDR(StaticText_ScaleFormToDesign)
    return (int32_t)MySyscall(pStaticText_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_Scale96ToForm)
int32_t
StaticText_Scale96ToForm(TStaticText AObj, int32_t ASize) {
    GET_FUNC_ADDR(StaticText_Scale96ToForm)
    return (int32_t)MySyscall(pStaticText_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_ScaleFormTo96)
int32_t
StaticText_ScaleFormTo96(TStaticText AObj, int32_t ASize) {
    GET_FUNC_ADDR(StaticText_ScaleFormTo96)
    return (int32_t)MySyscall(pStaticText_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_Scale96ToFont)
int32_t
StaticText_Scale96ToFont(TStaticText AObj, int32_t ASize) {
    GET_FUNC_ADDR(StaticText_Scale96ToFont)
    return (int32_t)MySyscall(pStaticText_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_ScaleFontTo96)
int32_t
StaticText_ScaleFontTo96(TStaticText AObj, int32_t ASize) {
    GET_FUNC_ADDR(StaticText_ScaleFontTo96)
    return (int32_t)MySyscall(pStaticText_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_ScaleScreenToFont)
int32_t
StaticText_ScaleScreenToFont(TStaticText AObj, int32_t ASize) {
    GET_FUNC_ADDR(StaticText_ScaleScreenToFont)
    return (int32_t)MySyscall(pStaticText_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_ScaleFontToScreen)
int32_t
StaticText_ScaleFontToScreen(TStaticText AObj, int32_t ASize) {
    GET_FUNC_ADDR(StaticText_ScaleFontToScreen)
    return (int32_t)MySyscall(pStaticText_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_Scale96ToScreen)
int32_t
StaticText_Scale96ToScreen(TStaticText AObj, int32_t ASize) {
    GET_FUNC_ADDR(StaticText_Scale96ToScreen)
    return (int32_t)MySyscall(pStaticText_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_ScaleScreenTo96)
int32_t
StaticText_ScaleScreenTo96(TStaticText AObj, int32_t ASize) {
    GET_FUNC_ADDR(StaticText_ScaleScreenTo96)
    return (int32_t)MySyscall(pStaticText_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_AutoAdjustLayout)
void
StaticText_AutoAdjustLayout(TStaticText AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(StaticText_AutoAdjustLayout)
    MySyscall(pStaticText_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_FixDesignFontsPPI)
void
StaticText_FixDesignFontsPPI(TStaticText AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(StaticText_FixDesignFontsPPI)
    MySyscall(pStaticText_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_ScaleFontsPPI)
void
StaticText_ScaleFontsPPI(TStaticText AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(StaticText_ScaleFontsPPI)
    MySyscall(pStaticText_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetAlign)
TAlign
StaticText_GetAlign(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetAlign)
    return (TAlign)MySyscall(pStaticText_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetAlign)
void
StaticText_SetAlign(TStaticText AObj, TAlign AValue) {
    GET_FUNC_ADDR(StaticText_SetAlign)
    MySyscall(pStaticText_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetAlignment)
TAlignment
StaticText_GetAlignment(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetAlignment)
    return (TAlignment)MySyscall(pStaticText_GetAlignment, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetAlignment)
void
StaticText_SetAlignment(TStaticText AObj, TAlignment AValue) {
    GET_FUNC_ADDR(StaticText_SetAlignment)
    MySyscall(pStaticText_SetAlignment, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetAnchors)
TAnchors
StaticText_GetAnchors(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetAnchors)
    return (TAnchors)MySyscall(pStaticText_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetAnchors)
void
StaticText_SetAnchors(TStaticText AObj, TAnchors AValue) {
    GET_FUNC_ADDR(StaticText_SetAnchors)
    MySyscall(pStaticText_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetAutoSize)
BOOL
StaticText_GetAutoSize(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetAutoSize)
    return (BOOL)MySyscall(pStaticText_GetAutoSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetAutoSize)
void
StaticText_SetAutoSize(TStaticText AObj, BOOL AValue) {
    GET_FUNC_ADDR(StaticText_SetAutoSize)
    MySyscall(pStaticText_SetAutoSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetBiDiMode)
TBiDiMode
StaticText_GetBiDiMode(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetBiDiMode)
    return (TBiDiMode)MySyscall(pStaticText_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetBiDiMode)
void
StaticText_SetBiDiMode(TStaticText AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(StaticText_SetBiDiMode)
    MySyscall(pStaticText_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetBorderStyle)
TStaticBorderStyle
StaticText_GetBorderStyle(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetBorderStyle)
    return (TStaticBorderStyle)MySyscall(pStaticText_GetBorderStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetBorderStyle)
void
StaticText_SetBorderStyle(TStaticText AObj, TStaticBorderStyle AValue) {
    GET_FUNC_ADDR(StaticText_SetBorderStyle)
    MySyscall(pStaticText_SetBorderStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetCaption)
char*
StaticText_GetCaption(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetCaption)
    return (char*)MySyscall(pStaticText_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetCaption)
void
StaticText_SetCaption(TStaticText AObj, CChar char* AValue) {
    GET_FUNC_ADDR(StaticText_SetCaption)
    MySyscall(pStaticText_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetColor)
TColor
StaticText_GetColor(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetColor)
    return (TColor)MySyscall(pStaticText_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetColor)
void
StaticText_SetColor(TStaticText AObj, TColor AValue) {
    GET_FUNC_ADDR(StaticText_SetColor)
    MySyscall(pStaticText_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetConstraints)
TSizeConstraints
StaticText_GetConstraints(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetConstraints)
    return (TSizeConstraints)MySyscall(pStaticText_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetConstraints)
void
StaticText_SetConstraints(TStaticText AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(StaticText_SetConstraints)
    MySyscall(pStaticText_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetDoubleBuffered)
BOOL
StaticText_GetDoubleBuffered(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetDoubleBuffered)
    return (BOOL)MySyscall(pStaticText_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetDoubleBuffered)
void
StaticText_SetDoubleBuffered(TStaticText AObj, BOOL AValue) {
    GET_FUNC_ADDR(StaticText_SetDoubleBuffered)
    MySyscall(pStaticText_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetDragCursor)
TCursor
StaticText_GetDragCursor(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetDragCursor)
    return (TCursor)MySyscall(pStaticText_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetDragCursor)
void
StaticText_SetDragCursor(TStaticText AObj, TCursor AValue) {
    GET_FUNC_ADDR(StaticText_SetDragCursor)
    MySyscall(pStaticText_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetDragKind)
TDragKind
StaticText_GetDragKind(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetDragKind)
    return (TDragKind)MySyscall(pStaticText_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetDragKind)
void
StaticText_SetDragKind(TStaticText AObj, TDragKind AValue) {
    GET_FUNC_ADDR(StaticText_SetDragKind)
    MySyscall(pStaticText_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetDragMode)
TDragMode
StaticText_GetDragMode(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetDragMode)
    return (TDragMode)MySyscall(pStaticText_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetDragMode)
void
StaticText_SetDragMode(TStaticText AObj, TDragMode AValue) {
    GET_FUNC_ADDR(StaticText_SetDragMode)
    MySyscall(pStaticText_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetEnabled)
BOOL
StaticText_GetEnabled(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetEnabled)
    return (BOOL)MySyscall(pStaticText_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetEnabled)
void
StaticText_SetEnabled(TStaticText AObj, BOOL AValue) {
    GET_FUNC_ADDR(StaticText_SetEnabled)
    MySyscall(pStaticText_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetFocusControl)
TWinControl
StaticText_GetFocusControl(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetFocusControl)
    return (TWinControl)MySyscall(pStaticText_GetFocusControl, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetFocusControl)
void
StaticText_SetFocusControl(TStaticText AObj, TWinControl AValue) {
    GET_FUNC_ADDR(StaticText_SetFocusControl)
    MySyscall(pStaticText_SetFocusControl, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetFont)
TFont
StaticText_GetFont(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetFont)
    return (TFont)MySyscall(pStaticText_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetFont)
void
StaticText_SetFont(TStaticText AObj, TFont AValue) {
    GET_FUNC_ADDR(StaticText_SetFont)
    MySyscall(pStaticText_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetParentColor)
BOOL
StaticText_GetParentColor(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetParentColor)
    return (BOOL)MySyscall(pStaticText_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetParentColor)
void
StaticText_SetParentColor(TStaticText AObj, BOOL AValue) {
    GET_FUNC_ADDR(StaticText_SetParentColor)
    MySyscall(pStaticText_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetParentDoubleBuffered)
BOOL
StaticText_GetParentDoubleBuffered(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pStaticText_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetParentDoubleBuffered)
void
StaticText_SetParentDoubleBuffered(TStaticText AObj, BOOL AValue) {
    GET_FUNC_ADDR(StaticText_SetParentDoubleBuffered)
    MySyscall(pStaticText_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetParentFont)
BOOL
StaticText_GetParentFont(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetParentFont)
    return (BOOL)MySyscall(pStaticText_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetParentFont)
void
StaticText_SetParentFont(TStaticText AObj, BOOL AValue) {
    GET_FUNC_ADDR(StaticText_SetParentFont)
    MySyscall(pStaticText_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetParentShowHint)
BOOL
StaticText_GetParentShowHint(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetParentShowHint)
    return (BOOL)MySyscall(pStaticText_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetParentShowHint)
void
StaticText_SetParentShowHint(TStaticText AObj, BOOL AValue) {
    GET_FUNC_ADDR(StaticText_SetParentShowHint)
    MySyscall(pStaticText_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetPopupMenu)
TPopupMenu
StaticText_GetPopupMenu(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetPopupMenu)
    return (TPopupMenu)MySyscall(pStaticText_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetPopupMenu)
void
StaticText_SetPopupMenu(TStaticText AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(StaticText_SetPopupMenu)
    MySyscall(pStaticText_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetShowAccelChar)
BOOL
StaticText_GetShowAccelChar(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetShowAccelChar)
    return (BOOL)MySyscall(pStaticText_GetShowAccelChar, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetShowAccelChar)
void
StaticText_SetShowAccelChar(TStaticText AObj, BOOL AValue) {
    GET_FUNC_ADDR(StaticText_SetShowAccelChar)
    MySyscall(pStaticText_SetShowAccelChar, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetShowHint)
BOOL
StaticText_GetShowHint(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetShowHint)
    return (BOOL)MySyscall(pStaticText_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetShowHint)
void
StaticText_SetShowHint(TStaticText AObj, BOOL AValue) {
    GET_FUNC_ADDR(StaticText_SetShowHint)
    MySyscall(pStaticText_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetTabOrder)
TTabOrder
StaticText_GetTabOrder(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetTabOrder)
    return (TTabOrder)MySyscall(pStaticText_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetTabOrder)
void
StaticText_SetTabOrder(TStaticText AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(StaticText_SetTabOrder)
    MySyscall(pStaticText_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetTabStop)
BOOL
StaticText_GetTabStop(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetTabStop)
    return (BOOL)MySyscall(pStaticText_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetTabStop)
void
StaticText_SetTabStop(TStaticText AObj, BOOL AValue) {
    GET_FUNC_ADDR(StaticText_SetTabStop)
    MySyscall(pStaticText_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetTransparent)
BOOL
StaticText_GetTransparent(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetTransparent)
    return (BOOL)MySyscall(pStaticText_GetTransparent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetTransparent)
void
StaticText_SetTransparent(TStaticText AObj, BOOL AValue) {
    GET_FUNC_ADDR(StaticText_SetTransparent)
    MySyscall(pStaticText_SetTransparent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetVisible)
BOOL
StaticText_GetVisible(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetVisible)
    return (BOOL)MySyscall(pStaticText_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetVisible)
void
StaticText_SetVisible(TStaticText AObj, BOOL AValue) {
    GET_FUNC_ADDR(StaticText_SetVisible)
    MySyscall(pStaticText_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetOnClick)
void
StaticText_SetOnClick(TStaticText AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(StaticText_SetOnClick)
    MySyscall(pStaticText_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetOnContextPopup)
void
StaticText_SetOnContextPopup(TStaticText AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(StaticText_SetOnContextPopup)
    MySyscall(pStaticText_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetOnDblClick)
void
StaticText_SetOnDblClick(TStaticText AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(StaticText_SetOnDblClick)
    MySyscall(pStaticText_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetOnDragDrop)
void
StaticText_SetOnDragDrop(TStaticText AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(StaticText_SetOnDragDrop)
    MySyscall(pStaticText_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetOnDragOver)
void
StaticText_SetOnDragOver(TStaticText AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(StaticText_SetOnDragOver)
    MySyscall(pStaticText_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetOnEndDrag)
void
StaticText_SetOnEndDrag(TStaticText AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(StaticText_SetOnEndDrag)
    MySyscall(pStaticText_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetOnMouseDown)
void
StaticText_SetOnMouseDown(TStaticText AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(StaticText_SetOnMouseDown)
    MySyscall(pStaticText_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetOnMouseEnter)
void
StaticText_SetOnMouseEnter(TStaticText AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(StaticText_SetOnMouseEnter)
    MySyscall(pStaticText_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetOnMouseLeave)
void
StaticText_SetOnMouseLeave(TStaticText AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(StaticText_SetOnMouseLeave)
    MySyscall(pStaticText_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetOnMouseMove)
void
StaticText_SetOnMouseMove(TStaticText AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(StaticText_SetOnMouseMove)
    MySyscall(pStaticText_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetOnMouseUp)
void
StaticText_SetOnMouseUp(TStaticText AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(StaticText_SetOnMouseUp)
    MySyscall(pStaticText_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetDockClientCount)
int32_t
StaticText_GetDockClientCount(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetDockClientCount)
    return (int32_t)MySyscall(pStaticText_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetDockSite)
BOOL
StaticText_GetDockSite(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetDockSite)
    return (BOOL)MySyscall(pStaticText_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetDockSite)
void
StaticText_SetDockSite(TStaticText AObj, BOOL AValue) {
    GET_FUNC_ADDR(StaticText_SetDockSite)
    MySyscall(pStaticText_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetMouseInClient)
BOOL
StaticText_GetMouseInClient(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetMouseInClient)
    return (BOOL)MySyscall(pStaticText_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetVisibleDockClientCount)
int32_t
StaticText_GetVisibleDockClientCount(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pStaticText_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetBrush)
TBrush
StaticText_GetBrush(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetBrush)
    return (TBrush)MySyscall(pStaticText_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetControlCount)
int32_t
StaticText_GetControlCount(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetControlCount)
    return (int32_t)MySyscall(pStaticText_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetHandle)
HWND
StaticText_GetHandle(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetHandle)
    return (HWND)MySyscall(pStaticText_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetParentWindow)
HWND
StaticText_GetParentWindow(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetParentWindow)
    return (HWND)MySyscall(pStaticText_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetParentWindow)
void
StaticText_SetParentWindow(TStaticText AObj, HWND AValue) {
    GET_FUNC_ADDR(StaticText_SetParentWindow)
    MySyscall(pStaticText_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetShowing)
BOOL
StaticText_GetShowing(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetShowing)
    return (BOOL)MySyscall(pStaticText_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetUseDockManager)
BOOL
StaticText_GetUseDockManager(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetUseDockManager)
    return (BOOL)MySyscall(pStaticText_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetUseDockManager)
void
StaticText_SetUseDockManager(TStaticText AObj, BOOL AValue) {
    GET_FUNC_ADDR(StaticText_SetUseDockManager)
    MySyscall(pStaticText_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetAction)
TAction
StaticText_GetAction(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetAction)
    return (TAction)MySyscall(pStaticText_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetAction)
void
StaticText_SetAction(TStaticText AObj, TAction AValue) {
    GET_FUNC_ADDR(StaticText_SetAction)
    MySyscall(pStaticText_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetBoundsRect)
TRect
StaticText_GetBoundsRect(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetBoundsRect)
    TRect result;
    MySyscall(pStaticText_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StaticText_SetBoundsRect)
void
StaticText_SetBoundsRect(TStaticText AObj, TRect AValue) {
    GET_FUNC_ADDR(StaticText_SetBoundsRect)
    MySyscall(pStaticText_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetClientHeight)
int32_t
StaticText_GetClientHeight(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetClientHeight)
    return (int32_t)MySyscall(pStaticText_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetClientHeight)
void
StaticText_SetClientHeight(TStaticText AObj, int32_t AValue) {
    GET_FUNC_ADDR(StaticText_SetClientHeight)
    MySyscall(pStaticText_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetClientOrigin)
TPoint
StaticText_GetClientOrigin(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetClientOrigin)
    TPoint result;
    MySyscall(pStaticText_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StaticText_GetClientRect)
TRect
StaticText_GetClientRect(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetClientRect)
    TRect result;
    MySyscall(pStaticText_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StaticText_GetClientWidth)
int32_t
StaticText_GetClientWidth(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetClientWidth)
    return (int32_t)MySyscall(pStaticText_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetClientWidth)
void
StaticText_SetClientWidth(TStaticText AObj, int32_t AValue) {
    GET_FUNC_ADDR(StaticText_SetClientWidth)
    MySyscall(pStaticText_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetControlState)
TControlState
StaticText_GetControlState(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetControlState)
    return (TControlState)MySyscall(pStaticText_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetControlState)
void
StaticText_SetControlState(TStaticText AObj, TControlState AValue) {
    GET_FUNC_ADDR(StaticText_SetControlState)
    MySyscall(pStaticText_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetControlStyle)
TControlStyle
StaticText_GetControlStyle(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetControlStyle)
    return (TControlStyle)MySyscall(pStaticText_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetControlStyle)
void
StaticText_SetControlStyle(TStaticText AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(StaticText_SetControlStyle)
    MySyscall(pStaticText_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetFloating)
BOOL
StaticText_GetFloating(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetFloating)
    return (BOOL)MySyscall(pStaticText_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetParent)
TWinControl
StaticText_GetParent(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetParent)
    return (TWinControl)MySyscall(pStaticText_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetParent)
void
StaticText_SetParent(TStaticText AObj, TWinControl AValue) {
    GET_FUNC_ADDR(StaticText_SetParent)
    MySyscall(pStaticText_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetLeft)
int32_t
StaticText_GetLeft(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetLeft)
    return (int32_t)MySyscall(pStaticText_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetLeft)
void
StaticText_SetLeft(TStaticText AObj, int32_t AValue) {
    GET_FUNC_ADDR(StaticText_SetLeft)
    MySyscall(pStaticText_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetTop)
int32_t
StaticText_GetTop(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetTop)
    return (int32_t)MySyscall(pStaticText_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetTop)
void
StaticText_SetTop(TStaticText AObj, int32_t AValue) {
    GET_FUNC_ADDR(StaticText_SetTop)
    MySyscall(pStaticText_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetWidth)
int32_t
StaticText_GetWidth(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetWidth)
    return (int32_t)MySyscall(pStaticText_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetWidth)
void
StaticText_SetWidth(TStaticText AObj, int32_t AValue) {
    GET_FUNC_ADDR(StaticText_SetWidth)
    MySyscall(pStaticText_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetHeight)
int32_t
StaticText_GetHeight(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetHeight)
    return (int32_t)MySyscall(pStaticText_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetHeight)
void
StaticText_SetHeight(TStaticText AObj, int32_t AValue) {
    GET_FUNC_ADDR(StaticText_SetHeight)
    MySyscall(pStaticText_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetCursor)
TCursor
StaticText_GetCursor(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetCursor)
    return (TCursor)MySyscall(pStaticText_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetCursor)
void
StaticText_SetCursor(TStaticText AObj, TCursor AValue) {
    GET_FUNC_ADDR(StaticText_SetCursor)
    MySyscall(pStaticText_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetHint)
char*
StaticText_GetHint(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetHint)
    return (char*)MySyscall(pStaticText_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetHint)
void
StaticText_SetHint(TStaticText AObj, CChar char* AValue) {
    GET_FUNC_ADDR(StaticText_SetHint)
    MySyscall(pStaticText_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetComponentCount)
int32_t
StaticText_GetComponentCount(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetComponentCount)
    return (int32_t)MySyscall(pStaticText_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetComponentIndex)
int32_t
StaticText_GetComponentIndex(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetComponentIndex)
    return (int32_t)MySyscall(pStaticText_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetComponentIndex)
void
StaticText_SetComponentIndex(TStaticText AObj, int32_t AValue) {
    GET_FUNC_ADDR(StaticText_SetComponentIndex)
    MySyscall(pStaticText_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetOwner)
TComponent
StaticText_GetOwner(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetOwner)
    return (TComponent)MySyscall(pStaticText_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetName)
char*
StaticText_GetName(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetName)
    return (char*)MySyscall(pStaticText_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetName)
void
StaticText_SetName(TStaticText AObj, CChar char* AValue) {
    GET_FUNC_ADDR(StaticText_SetName)
    MySyscall(pStaticText_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetTag)
intptr_t
StaticText_GetTag(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetTag)
    return (intptr_t)MySyscall(pStaticText_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetTag)
void
StaticText_SetTag(TStaticText AObj, intptr_t AValue) {
    GET_FUNC_ADDR(StaticText_SetTag)
    MySyscall(pStaticText_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetAnchorSideLeft)
TAnchorSide
StaticText_GetAnchorSideLeft(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pStaticText_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetAnchorSideLeft)
void
StaticText_SetAnchorSideLeft(TStaticText AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(StaticText_SetAnchorSideLeft)
    MySyscall(pStaticText_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetAnchorSideTop)
TAnchorSide
StaticText_GetAnchorSideTop(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pStaticText_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetAnchorSideTop)
void
StaticText_SetAnchorSideTop(TStaticText AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(StaticText_SetAnchorSideTop)
    MySyscall(pStaticText_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetAnchorSideRight)
TAnchorSide
StaticText_GetAnchorSideRight(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pStaticText_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetAnchorSideRight)
void
StaticText_SetAnchorSideRight(TStaticText AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(StaticText_SetAnchorSideRight)
    MySyscall(pStaticText_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetAnchorSideBottom)
TAnchorSide
StaticText_GetAnchorSideBottom(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pStaticText_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetAnchorSideBottom)
void
StaticText_SetAnchorSideBottom(TStaticText AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(StaticText_SetAnchorSideBottom)
    MySyscall(pStaticText_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetChildSizing)
TControlChildSizing
StaticText_GetChildSizing(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetChildSizing)
    return (TControlChildSizing)MySyscall(pStaticText_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetChildSizing)
void
StaticText_SetChildSizing(TStaticText AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(StaticText_SetChildSizing)
    MySyscall(pStaticText_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetBorderSpacing)
TControlBorderSpacing
StaticText_GetBorderSpacing(TStaticText AObj) {
    GET_FUNC_ADDR(StaticText_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pStaticText_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_SetBorderSpacing)
void
StaticText_SetBorderSpacing(TStaticText AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(StaticText_SetBorderSpacing)
    MySyscall(pStaticText_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetDockClients)
TControl
StaticText_GetDockClients(TStaticText AObj, int32_t Index) {
    GET_FUNC_ADDR(StaticText_GetDockClients)
    return (TControl)MySyscall(pStaticText_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetControls)
TControl
StaticText_GetControls(TStaticText AObj, int32_t Index) {
    GET_FUNC_ADDR(StaticText_GetControls)
    return (TControl)MySyscall(pStaticText_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetComponents)
TComponent
StaticText_GetComponents(TStaticText AObj, int32_t AIndex) {
    GET_FUNC_ADDR(StaticText_GetComponents)
    return (TComponent)MySyscall(pStaticText_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_GetAnchorSide)
TAnchorSide
StaticText_GetAnchorSide(TStaticText AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(StaticText_GetAnchorSide)
    return (TAnchorSide)MySyscall(pStaticText_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StaticText_StaticClassType)
TClass
StaticText_StaticClassType() {
    GET_FUNC_ADDR(StaticText_StaticClassType)
    return (TClass)MySyscall(pStaticText_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TColorBox-------------------

DEFINE_FUNC_PTR(ColorBox_Create)
TColorBox
ColorBox_Create(TComponent AOwner) {
    GET_FUNC_ADDR(ColorBox_Create)
    return (TColorBox)MySyscall(pColorBox_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_Free)
void
ColorBox_Free(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_Free)
    MySyscall(pColorBox_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_AddItem)
void
ColorBox_AddItem(TColorBox AObj, CChar char* Item, TObject AObject) {
    GET_FUNC_ADDR(ColorBox_AddItem)
    MySyscall(pColorBox_AddItem, 3, AObj, Item, AObject ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_Clear)
void
ColorBox_Clear(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_Clear)
    MySyscall(pColorBox_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_ClearSelection)
void
ColorBox_ClearSelection(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_ClearSelection)
    MySyscall(pColorBox_ClearSelection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_DeleteSelected)
void
ColorBox_DeleteSelected(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_DeleteSelected)
    MySyscall(pColorBox_DeleteSelected, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_Focused)
BOOL
ColorBox_Focused(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_Focused)
    return (BOOL)MySyscall(pColorBox_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SelectAll)
void
ColorBox_SelectAll(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_SelectAll)
    MySyscall(pColorBox_SelectAll, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_CanFocus)
BOOL
ColorBox_CanFocus(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_CanFocus)
    return (BOOL)MySyscall(pColorBox_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_ContainsControl)
BOOL
ColorBox_ContainsControl(TColorBox AObj, TControl Control) {
    GET_FUNC_ADDR(ColorBox_ContainsControl)
    return (BOOL)MySyscall(pColorBox_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_ControlAtPos)
TControl
ColorBox_ControlAtPos(TColorBox AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(ColorBox_ControlAtPos)
    return (TControl)MySyscall(pColorBox_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_DisableAlign)
void
ColorBox_DisableAlign(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_DisableAlign)
    MySyscall(pColorBox_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_EnableAlign)
void
ColorBox_EnableAlign(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_EnableAlign)
    MySyscall(pColorBox_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_FindChildControl)
TControl
ColorBox_FindChildControl(TColorBox AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(ColorBox_FindChildControl)
    return (TControl)MySyscall(pColorBox_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_FlipChildren)
void
ColorBox_FlipChildren(TColorBox AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(ColorBox_FlipChildren)
    MySyscall(pColorBox_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_HandleAllocated)
BOOL
ColorBox_HandleAllocated(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_HandleAllocated)
    return (BOOL)MySyscall(pColorBox_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_InsertControl)
void
ColorBox_InsertControl(TColorBox AObj, TControl AControl) {
    GET_FUNC_ADDR(ColorBox_InsertControl)
    MySyscall(pColorBox_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_Invalidate)
void
ColorBox_Invalidate(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_Invalidate)
    MySyscall(pColorBox_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_PaintTo)
void
ColorBox_PaintTo(TColorBox AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(ColorBox_PaintTo)
    MySyscall(pColorBox_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_RemoveControl)
void
ColorBox_RemoveControl(TColorBox AObj, TControl AControl) {
    GET_FUNC_ADDR(ColorBox_RemoveControl)
    MySyscall(pColorBox_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_Realign)
void
ColorBox_Realign(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_Realign)
    MySyscall(pColorBox_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_Repaint)
void
ColorBox_Repaint(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_Repaint)
    MySyscall(pColorBox_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_ScaleBy)
void
ColorBox_ScaleBy(TColorBox AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(ColorBox_ScaleBy)
    MySyscall(pColorBox_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_ScrollBy)
void
ColorBox_ScrollBy(TColorBox AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(ColorBox_ScrollBy)
    MySyscall(pColorBox_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetBounds)
void
ColorBox_SetBounds(TColorBox AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(ColorBox_SetBounds)
    MySyscall(pColorBox_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetFocus)
void
ColorBox_SetFocus(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_SetFocus)
    MySyscall(pColorBox_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_Update)
void
ColorBox_Update(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_Update)
    MySyscall(pColorBox_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_BringToFront)
void
ColorBox_BringToFront(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_BringToFront)
    MySyscall(pColorBox_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_ClientToScreen)
TPoint
ColorBox_ClientToScreen(TColorBox AObj, TPoint Point) {
    GET_FUNC_ADDR(ColorBox_ClientToScreen)
    TPoint result;
    MySyscall(pColorBox_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ColorBox_ClientToParent)
TPoint
ColorBox_ClientToParent(TColorBox AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ColorBox_ClientToParent)
    TPoint result;
    MySyscall(pColorBox_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ColorBox_Dragging)
BOOL
ColorBox_Dragging(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_Dragging)
    return (BOOL)MySyscall(pColorBox_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_HasParent)
BOOL
ColorBox_HasParent(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_HasParent)
    return (BOOL)MySyscall(pColorBox_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_Hide)
void
ColorBox_Hide(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_Hide)
    MySyscall(pColorBox_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_Perform)
intptr_t
ColorBox_Perform(TColorBox AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(ColorBox_Perform)
    return (intptr_t)MySyscall(pColorBox_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_Refresh)
void
ColorBox_Refresh(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_Refresh)
    MySyscall(pColorBox_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_ScreenToClient)
TPoint
ColorBox_ScreenToClient(TColorBox AObj, TPoint Point) {
    GET_FUNC_ADDR(ColorBox_ScreenToClient)
    TPoint result;
    MySyscall(pColorBox_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ColorBox_ParentToClient)
TPoint
ColorBox_ParentToClient(TColorBox AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ColorBox_ParentToClient)
    TPoint result;
    MySyscall(pColorBox_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ColorBox_SendToBack)
void
ColorBox_SendToBack(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_SendToBack)
    MySyscall(pColorBox_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_Show)
void
ColorBox_Show(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_Show)
    MySyscall(pColorBox_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetTextBuf)
int32_t
ColorBox_GetTextBuf(TColorBox AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(ColorBox_GetTextBuf)
    return (int32_t)MySyscall(pColorBox_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetTextLen)
int32_t
ColorBox_GetTextLen(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetTextLen)
    return (int32_t)MySyscall(pColorBox_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetTextBuf)
void
ColorBox_SetTextBuf(TColorBox AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(ColorBox_SetTextBuf)
    MySyscall(pColorBox_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_FindComponent)
TComponent
ColorBox_FindComponent(TColorBox AObj, CChar char* AName) {
    GET_FUNC_ADDR(ColorBox_FindComponent)
    return (TComponent)MySyscall(pColorBox_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetNamePath)
char*
ColorBox_GetNamePath(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetNamePath)
    return (char*)MySyscall(pColorBox_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_Assign)
void
ColorBox_Assign(TColorBox AObj, TObject Source) {
    GET_FUNC_ADDR(ColorBox_Assign)
    MySyscall(pColorBox_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_ClassType)
TClass
ColorBox_ClassType(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_ClassType)
    return (TClass)MySyscall(pColorBox_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_ClassName)
char*
ColorBox_ClassName(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_ClassName)
    return (char*)MySyscall(pColorBox_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_InstanceSize)
int32_t
ColorBox_InstanceSize(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_InstanceSize)
    return (int32_t)MySyscall(pColorBox_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_InheritsFrom)
BOOL
ColorBox_InheritsFrom(TColorBox AObj, TClass AClass) {
    GET_FUNC_ADDR(ColorBox_InheritsFrom)
    return (BOOL)MySyscall(pColorBox_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_Equals)
BOOL
ColorBox_Equals(TColorBox AObj, TObject Obj) {
    GET_FUNC_ADDR(ColorBox_Equals)
    return (BOOL)MySyscall(pColorBox_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetHashCode)
int32_t
ColorBox_GetHashCode(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetHashCode)
    return (int32_t)MySyscall(pColorBox_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_ToString)
char*
ColorBox_ToString(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_ToString)
    return (char*)MySyscall(pColorBox_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_AnchorToNeighbour)
void
ColorBox_AnchorToNeighbour(TColorBox AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ColorBox_AnchorToNeighbour)
    MySyscall(pColorBox_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_AnchorParallel)
void
ColorBox_AnchorParallel(TColorBox AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ColorBox_AnchorParallel)
    MySyscall(pColorBox_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_AnchorHorizontalCenterTo)
void
ColorBox_AnchorHorizontalCenterTo(TColorBox AObj, TControl ASibling) {
    GET_FUNC_ADDR(ColorBox_AnchorHorizontalCenterTo)
    MySyscall(pColorBox_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_AnchorVerticalCenterTo)
void
ColorBox_AnchorVerticalCenterTo(TColorBox AObj, TControl ASibling) {
    GET_FUNC_ADDR(ColorBox_AnchorVerticalCenterTo)
    MySyscall(pColorBox_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_AnchorSame)
void
ColorBox_AnchorSame(TColorBox AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(ColorBox_AnchorSame)
    MySyscall(pColorBox_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_AnchorAsAlign)
void
ColorBox_AnchorAsAlign(TColorBox AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(ColorBox_AnchorAsAlign)
    MySyscall(pColorBox_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_AnchorClient)
void
ColorBox_AnchorClient(TColorBox AObj, int32_t ASpace) {
    GET_FUNC_ADDR(ColorBox_AnchorClient)
    MySyscall(pColorBox_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_ScaleDesignToForm)
int32_t
ColorBox_ScaleDesignToForm(TColorBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorBox_ScaleDesignToForm)
    return (int32_t)MySyscall(pColorBox_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_ScaleFormToDesign)
int32_t
ColorBox_ScaleFormToDesign(TColorBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorBox_ScaleFormToDesign)
    return (int32_t)MySyscall(pColorBox_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_Scale96ToForm)
int32_t
ColorBox_Scale96ToForm(TColorBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorBox_Scale96ToForm)
    return (int32_t)MySyscall(pColorBox_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_ScaleFormTo96)
int32_t
ColorBox_ScaleFormTo96(TColorBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorBox_ScaleFormTo96)
    return (int32_t)MySyscall(pColorBox_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_Scale96ToFont)
int32_t
ColorBox_Scale96ToFont(TColorBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorBox_Scale96ToFont)
    return (int32_t)MySyscall(pColorBox_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_ScaleFontTo96)
int32_t
ColorBox_ScaleFontTo96(TColorBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorBox_ScaleFontTo96)
    return (int32_t)MySyscall(pColorBox_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_ScaleScreenToFont)
int32_t
ColorBox_ScaleScreenToFont(TColorBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorBox_ScaleScreenToFont)
    return (int32_t)MySyscall(pColorBox_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_ScaleFontToScreen)
int32_t
ColorBox_ScaleFontToScreen(TColorBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorBox_ScaleFontToScreen)
    return (int32_t)MySyscall(pColorBox_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_Scale96ToScreen)
int32_t
ColorBox_Scale96ToScreen(TColorBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorBox_Scale96ToScreen)
    return (int32_t)MySyscall(pColorBox_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_ScaleScreenTo96)
int32_t
ColorBox_ScaleScreenTo96(TColorBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorBox_ScaleScreenTo96)
    return (int32_t)MySyscall(pColorBox_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_AutoAdjustLayout)
void
ColorBox_AutoAdjustLayout(TColorBox AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(ColorBox_AutoAdjustLayout)
    MySyscall(pColorBox_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_FixDesignFontsPPI)
void
ColorBox_FixDesignFontsPPI(TColorBox AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(ColorBox_FixDesignFontsPPI)
    MySyscall(pColorBox_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_ScaleFontsPPI)
void
ColorBox_ScaleFontsPPI(TColorBox AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(ColorBox_ScaleFontsPPI)
    MySyscall(pColorBox_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetAlign)
TAlign
ColorBox_GetAlign(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetAlign)
    return (TAlign)MySyscall(pColorBox_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetAlign)
void
ColorBox_SetAlign(TColorBox AObj, TAlign AValue) {
    GET_FUNC_ADDR(ColorBox_SetAlign)
    MySyscall(pColorBox_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetAutoComplete)
BOOL
ColorBox_GetAutoComplete(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetAutoComplete)
    return (BOOL)MySyscall(pColorBox_GetAutoComplete, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetAutoComplete)
void
ColorBox_SetAutoComplete(TColorBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorBox_SetAutoComplete)
    MySyscall(pColorBox_SetAutoComplete, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetAutoDropDown)
BOOL
ColorBox_GetAutoDropDown(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetAutoDropDown)
    return (BOOL)MySyscall(pColorBox_GetAutoDropDown, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetAutoDropDown)
void
ColorBox_SetAutoDropDown(TColorBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorBox_SetAutoDropDown)
    MySyscall(pColorBox_SetAutoDropDown, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetDefaultColorColor)
TColor
ColorBox_GetDefaultColorColor(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetDefaultColorColor)
    return (TColor)MySyscall(pColorBox_GetDefaultColorColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetDefaultColorColor)
void
ColorBox_SetDefaultColorColor(TColorBox AObj, TColor AValue) {
    GET_FUNC_ADDR(ColorBox_SetDefaultColorColor)
    MySyscall(pColorBox_SetDefaultColorColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetNoneColorColor)
TColor
ColorBox_GetNoneColorColor(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetNoneColorColor)
    return (TColor)MySyscall(pColorBox_GetNoneColorColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetNoneColorColor)
void
ColorBox_SetNoneColorColor(TColorBox AObj, TColor AValue) {
    GET_FUNC_ADDR(ColorBox_SetNoneColorColor)
    MySyscall(pColorBox_SetNoneColorColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetSelected)
TColor
ColorBox_GetSelected(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetSelected)
    return (TColor)MySyscall(pColorBox_GetSelected, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetSelected)
void
ColorBox_SetSelected(TColorBox AObj, TColor AValue) {
    GET_FUNC_ADDR(ColorBox_SetSelected)
    MySyscall(pColorBox_SetSelected, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetStyle)
TColorBoxStyle
ColorBox_GetStyle(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetStyle)
    return (TColorBoxStyle)MySyscall(pColorBox_GetStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetStyle)
void
ColorBox_SetStyle(TColorBox AObj, TColorBoxStyle AValue) {
    GET_FUNC_ADDR(ColorBox_SetStyle)
    MySyscall(pColorBox_SetStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetAnchors)
TAnchors
ColorBox_GetAnchors(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetAnchors)
    return (TAnchors)MySyscall(pColorBox_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetAnchors)
void
ColorBox_SetAnchors(TColorBox AObj, TAnchors AValue) {
    GET_FUNC_ADDR(ColorBox_SetAnchors)
    MySyscall(pColorBox_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetBiDiMode)
TBiDiMode
ColorBox_GetBiDiMode(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetBiDiMode)
    return (TBiDiMode)MySyscall(pColorBox_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetBiDiMode)
void
ColorBox_SetBiDiMode(TColorBox AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(ColorBox_SetBiDiMode)
    MySyscall(pColorBox_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetColor)
TColor
ColorBox_GetColor(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetColor)
    return (TColor)MySyscall(pColorBox_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetColor)
void
ColorBox_SetColor(TColorBox AObj, TColor AValue) {
    GET_FUNC_ADDR(ColorBox_SetColor)
    MySyscall(pColorBox_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetConstraints)
TSizeConstraints
ColorBox_GetConstraints(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetConstraints)
    return (TSizeConstraints)MySyscall(pColorBox_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetConstraints)
void
ColorBox_SetConstraints(TColorBox AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(ColorBox_SetConstraints)
    MySyscall(pColorBox_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetDoubleBuffered)
BOOL
ColorBox_GetDoubleBuffered(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetDoubleBuffered)
    return (BOOL)MySyscall(pColorBox_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetDoubleBuffered)
void
ColorBox_SetDoubleBuffered(TColorBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorBox_SetDoubleBuffered)
    MySyscall(pColorBox_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetDropDownCount)
int32_t
ColorBox_GetDropDownCount(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetDropDownCount)
    return (int32_t)MySyscall(pColorBox_GetDropDownCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetDropDownCount)
void
ColorBox_SetDropDownCount(TColorBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorBox_SetDropDownCount)
    MySyscall(pColorBox_SetDropDownCount, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetEnabled)
BOOL
ColorBox_GetEnabled(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetEnabled)
    return (BOOL)MySyscall(pColorBox_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetEnabled)
void
ColorBox_SetEnabled(TColorBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorBox_SetEnabled)
    MySyscall(pColorBox_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetFont)
TFont
ColorBox_GetFont(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetFont)
    return (TFont)MySyscall(pColorBox_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetFont)
void
ColorBox_SetFont(TColorBox AObj, TFont AValue) {
    GET_FUNC_ADDR(ColorBox_SetFont)
    MySyscall(pColorBox_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetItemHeight)
int32_t
ColorBox_GetItemHeight(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetItemHeight)
    return (int32_t)MySyscall(pColorBox_GetItemHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetItemHeight)
void
ColorBox_SetItemHeight(TColorBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorBox_SetItemHeight)
    MySyscall(pColorBox_SetItemHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetParentColor)
BOOL
ColorBox_GetParentColor(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetParentColor)
    return (BOOL)MySyscall(pColorBox_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetParentColor)
void
ColorBox_SetParentColor(TColorBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorBox_SetParentColor)
    MySyscall(pColorBox_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetParentDoubleBuffered)
BOOL
ColorBox_GetParentDoubleBuffered(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pColorBox_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetParentDoubleBuffered)
void
ColorBox_SetParentDoubleBuffered(TColorBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorBox_SetParentDoubleBuffered)
    MySyscall(pColorBox_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetParentFont)
BOOL
ColorBox_GetParentFont(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetParentFont)
    return (BOOL)MySyscall(pColorBox_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetParentFont)
void
ColorBox_SetParentFont(TColorBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorBox_SetParentFont)
    MySyscall(pColorBox_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetParentShowHint)
BOOL
ColorBox_GetParentShowHint(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetParentShowHint)
    return (BOOL)MySyscall(pColorBox_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetParentShowHint)
void
ColorBox_SetParentShowHint(TColorBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorBox_SetParentShowHint)
    MySyscall(pColorBox_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetPopupMenu)
TPopupMenu
ColorBox_GetPopupMenu(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetPopupMenu)
    return (TPopupMenu)MySyscall(pColorBox_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetPopupMenu)
void
ColorBox_SetPopupMenu(TColorBox AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(ColorBox_SetPopupMenu)
    MySyscall(pColorBox_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetShowHint)
BOOL
ColorBox_GetShowHint(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetShowHint)
    return (BOOL)MySyscall(pColorBox_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetShowHint)
void
ColorBox_SetShowHint(TColorBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorBox_SetShowHint)
    MySyscall(pColorBox_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetTabOrder)
TTabOrder
ColorBox_GetTabOrder(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetTabOrder)
    return (TTabOrder)MySyscall(pColorBox_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetTabOrder)
void
ColorBox_SetTabOrder(TColorBox AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(ColorBox_SetTabOrder)
    MySyscall(pColorBox_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetTabStop)
BOOL
ColorBox_GetTabStop(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetTabStop)
    return (BOOL)MySyscall(pColorBox_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetTabStop)
void
ColorBox_SetTabStop(TColorBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorBox_SetTabStop)
    MySyscall(pColorBox_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetVisible)
BOOL
ColorBox_GetVisible(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetVisible)
    return (BOOL)MySyscall(pColorBox_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetVisible)
void
ColorBox_SetVisible(TColorBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorBox_SetVisible)
    MySyscall(pColorBox_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetOnChange)
void
ColorBox_SetOnChange(TColorBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ColorBox_SetOnChange)
    MySyscall(pColorBox_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetOnCloseUp)
void
ColorBox_SetOnCloseUp(TColorBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ColorBox_SetOnCloseUp)
    MySyscall(pColorBox_SetOnCloseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetOnClick)
void
ColorBox_SetOnClick(TColorBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ColorBox_SetOnClick)
    MySyscall(pColorBox_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetOnContextPopup)
void
ColorBox_SetOnContextPopup(TColorBox AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(ColorBox_SetOnContextPopup)
    MySyscall(pColorBox_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetOnDragDrop)
void
ColorBox_SetOnDragDrop(TColorBox AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(ColorBox_SetOnDragDrop)
    MySyscall(pColorBox_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetOnDragOver)
void
ColorBox_SetOnDragOver(TColorBox AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(ColorBox_SetOnDragOver)
    MySyscall(pColorBox_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetOnDropDown)
void
ColorBox_SetOnDropDown(TColorBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ColorBox_SetOnDropDown)
    MySyscall(pColorBox_SetOnDropDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetOnEndDrag)
void
ColorBox_SetOnEndDrag(TColorBox AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(ColorBox_SetOnEndDrag)
    MySyscall(pColorBox_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetOnEnter)
void
ColorBox_SetOnEnter(TColorBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ColorBox_SetOnEnter)
    MySyscall(pColorBox_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetOnExit)
void
ColorBox_SetOnExit(TColorBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ColorBox_SetOnExit)
    MySyscall(pColorBox_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetOnKeyDown)
void
ColorBox_SetOnKeyDown(TColorBox AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(ColorBox_SetOnKeyDown)
    MySyscall(pColorBox_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetOnKeyPress)
void
ColorBox_SetOnKeyPress(TColorBox AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(ColorBox_SetOnKeyPress)
    MySyscall(pColorBox_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetOnKeyUp)
void
ColorBox_SetOnKeyUp(TColorBox AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(ColorBox_SetOnKeyUp)
    MySyscall(pColorBox_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetOnMouseEnter)
void
ColorBox_SetOnMouseEnter(TColorBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ColorBox_SetOnMouseEnter)
    MySyscall(pColorBox_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetOnMouseLeave)
void
ColorBox_SetOnMouseLeave(TColorBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ColorBox_SetOnMouseLeave)
    MySyscall(pColorBox_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetOnSelect)
void
ColorBox_SetOnSelect(TColorBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ColorBox_SetOnSelect)
    MySyscall(pColorBox_SetOnSelect, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetCharCase)
TEditCharCase
ColorBox_GetCharCase(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetCharCase)
    return (TEditCharCase)MySyscall(pColorBox_GetCharCase, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetCharCase)
void
ColorBox_SetCharCase(TColorBox AObj, TEditCharCase AValue) {
    GET_FUNC_ADDR(ColorBox_SetCharCase)
    MySyscall(pColorBox_SetCharCase, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetSelText)
char*
ColorBox_GetSelText(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetSelText)
    return (char*)MySyscall(pColorBox_GetSelText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetSelText)
void
ColorBox_SetSelText(TColorBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ColorBox_SetSelText)
    MySyscall(pColorBox_SetSelText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetCanvas)
TCanvas
ColorBox_GetCanvas(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetCanvas)
    return (TCanvas)MySyscall(pColorBox_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetDroppedDown)
BOOL
ColorBox_GetDroppedDown(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetDroppedDown)
    return (BOOL)MySyscall(pColorBox_GetDroppedDown, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetDroppedDown)
void
ColorBox_SetDroppedDown(TColorBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorBox_SetDroppedDown)
    MySyscall(pColorBox_SetDroppedDown, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetItems)
TStrings
ColorBox_GetItems(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetItems)
    return (TStrings)MySyscall(pColorBox_GetItems, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetItems)
void
ColorBox_SetItems(TColorBox AObj, TStrings AValue) {
    GET_FUNC_ADDR(ColorBox_SetItems)
    MySyscall(pColorBox_SetItems, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetSelLength)
int32_t
ColorBox_GetSelLength(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetSelLength)
    return (int32_t)MySyscall(pColorBox_GetSelLength, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetSelLength)
void
ColorBox_SetSelLength(TColorBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorBox_SetSelLength)
    MySyscall(pColorBox_SetSelLength, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetSelStart)
int32_t
ColorBox_GetSelStart(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetSelStart)
    return (int32_t)MySyscall(pColorBox_GetSelStart, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetSelStart)
void
ColorBox_SetSelStart(TColorBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorBox_SetSelStart)
    MySyscall(pColorBox_SetSelStart, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetItemIndex)
int32_t
ColorBox_GetItemIndex(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetItemIndex)
    return (int32_t)MySyscall(pColorBox_GetItemIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetItemIndex)
void
ColorBox_SetItemIndex(TColorBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorBox_SetItemIndex)
    MySyscall(pColorBox_SetItemIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetDockClientCount)
int32_t
ColorBox_GetDockClientCount(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetDockClientCount)
    return (int32_t)MySyscall(pColorBox_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetDockSite)
BOOL
ColorBox_GetDockSite(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetDockSite)
    return (BOOL)MySyscall(pColorBox_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetDockSite)
void
ColorBox_SetDockSite(TColorBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorBox_SetDockSite)
    MySyscall(pColorBox_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetMouseInClient)
BOOL
ColorBox_GetMouseInClient(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetMouseInClient)
    return (BOOL)MySyscall(pColorBox_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetVisibleDockClientCount)
int32_t
ColorBox_GetVisibleDockClientCount(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pColorBox_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetBrush)
TBrush
ColorBox_GetBrush(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetBrush)
    return (TBrush)MySyscall(pColorBox_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetControlCount)
int32_t
ColorBox_GetControlCount(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetControlCount)
    return (int32_t)MySyscall(pColorBox_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetHandle)
HWND
ColorBox_GetHandle(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetHandle)
    return (HWND)MySyscall(pColorBox_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetParentWindow)
HWND
ColorBox_GetParentWindow(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetParentWindow)
    return (HWND)MySyscall(pColorBox_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetParentWindow)
void
ColorBox_SetParentWindow(TColorBox AObj, HWND AValue) {
    GET_FUNC_ADDR(ColorBox_SetParentWindow)
    MySyscall(pColorBox_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetShowing)
BOOL
ColorBox_GetShowing(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetShowing)
    return (BOOL)MySyscall(pColorBox_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetUseDockManager)
BOOL
ColorBox_GetUseDockManager(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetUseDockManager)
    return (BOOL)MySyscall(pColorBox_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetUseDockManager)
void
ColorBox_SetUseDockManager(TColorBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorBox_SetUseDockManager)
    MySyscall(pColorBox_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetAction)
TAction
ColorBox_GetAction(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetAction)
    return (TAction)MySyscall(pColorBox_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetAction)
void
ColorBox_SetAction(TColorBox AObj, TAction AValue) {
    GET_FUNC_ADDR(ColorBox_SetAction)
    MySyscall(pColorBox_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetBoundsRect)
TRect
ColorBox_GetBoundsRect(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetBoundsRect)
    TRect result;
    MySyscall(pColorBox_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ColorBox_SetBoundsRect)
void
ColorBox_SetBoundsRect(TColorBox AObj, TRect AValue) {
    GET_FUNC_ADDR(ColorBox_SetBoundsRect)
    MySyscall(pColorBox_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetClientHeight)
int32_t
ColorBox_GetClientHeight(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetClientHeight)
    return (int32_t)MySyscall(pColorBox_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetClientHeight)
void
ColorBox_SetClientHeight(TColorBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorBox_SetClientHeight)
    MySyscall(pColorBox_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetClientOrigin)
TPoint
ColorBox_GetClientOrigin(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetClientOrigin)
    TPoint result;
    MySyscall(pColorBox_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ColorBox_GetClientRect)
TRect
ColorBox_GetClientRect(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetClientRect)
    TRect result;
    MySyscall(pColorBox_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ColorBox_GetClientWidth)
int32_t
ColorBox_GetClientWidth(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetClientWidth)
    return (int32_t)MySyscall(pColorBox_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetClientWidth)
void
ColorBox_SetClientWidth(TColorBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorBox_SetClientWidth)
    MySyscall(pColorBox_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetControlState)
TControlState
ColorBox_GetControlState(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetControlState)
    return (TControlState)MySyscall(pColorBox_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetControlState)
void
ColorBox_SetControlState(TColorBox AObj, TControlState AValue) {
    GET_FUNC_ADDR(ColorBox_SetControlState)
    MySyscall(pColorBox_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetControlStyle)
TControlStyle
ColorBox_GetControlStyle(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetControlStyle)
    return (TControlStyle)MySyscall(pColorBox_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetControlStyle)
void
ColorBox_SetControlStyle(TColorBox AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(ColorBox_SetControlStyle)
    MySyscall(pColorBox_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetFloating)
BOOL
ColorBox_GetFloating(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetFloating)
    return (BOOL)MySyscall(pColorBox_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetParent)
TWinControl
ColorBox_GetParent(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetParent)
    return (TWinControl)MySyscall(pColorBox_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetParent)
void
ColorBox_SetParent(TColorBox AObj, TWinControl AValue) {
    GET_FUNC_ADDR(ColorBox_SetParent)
    MySyscall(pColorBox_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetLeft)
int32_t
ColorBox_GetLeft(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetLeft)
    return (int32_t)MySyscall(pColorBox_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetLeft)
void
ColorBox_SetLeft(TColorBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorBox_SetLeft)
    MySyscall(pColorBox_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetTop)
int32_t
ColorBox_GetTop(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetTop)
    return (int32_t)MySyscall(pColorBox_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetTop)
void
ColorBox_SetTop(TColorBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorBox_SetTop)
    MySyscall(pColorBox_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetWidth)
int32_t
ColorBox_GetWidth(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetWidth)
    return (int32_t)MySyscall(pColorBox_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetWidth)
void
ColorBox_SetWidth(TColorBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorBox_SetWidth)
    MySyscall(pColorBox_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetHeight)
int32_t
ColorBox_GetHeight(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetHeight)
    return (int32_t)MySyscall(pColorBox_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetHeight)
void
ColorBox_SetHeight(TColorBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorBox_SetHeight)
    MySyscall(pColorBox_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetCursor)
TCursor
ColorBox_GetCursor(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetCursor)
    return (TCursor)MySyscall(pColorBox_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetCursor)
void
ColorBox_SetCursor(TColorBox AObj, TCursor AValue) {
    GET_FUNC_ADDR(ColorBox_SetCursor)
    MySyscall(pColorBox_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetHint)
char*
ColorBox_GetHint(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetHint)
    return (char*)MySyscall(pColorBox_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetHint)
void
ColorBox_SetHint(TColorBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ColorBox_SetHint)
    MySyscall(pColorBox_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetComponentCount)
int32_t
ColorBox_GetComponentCount(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetComponentCount)
    return (int32_t)MySyscall(pColorBox_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetComponentIndex)
int32_t
ColorBox_GetComponentIndex(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetComponentIndex)
    return (int32_t)MySyscall(pColorBox_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetComponentIndex)
void
ColorBox_SetComponentIndex(TColorBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorBox_SetComponentIndex)
    MySyscall(pColorBox_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetOwner)
TComponent
ColorBox_GetOwner(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetOwner)
    return (TComponent)MySyscall(pColorBox_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetName)
char*
ColorBox_GetName(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetName)
    return (char*)MySyscall(pColorBox_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetName)
void
ColorBox_SetName(TColorBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ColorBox_SetName)
    MySyscall(pColorBox_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetTag)
intptr_t
ColorBox_GetTag(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetTag)
    return (intptr_t)MySyscall(pColorBox_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetTag)
void
ColorBox_SetTag(TColorBox AObj, intptr_t AValue) {
    GET_FUNC_ADDR(ColorBox_SetTag)
    MySyscall(pColorBox_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetAnchorSideLeft)
TAnchorSide
ColorBox_GetAnchorSideLeft(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pColorBox_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetAnchorSideLeft)
void
ColorBox_SetAnchorSideLeft(TColorBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ColorBox_SetAnchorSideLeft)
    MySyscall(pColorBox_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetAnchorSideTop)
TAnchorSide
ColorBox_GetAnchorSideTop(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pColorBox_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetAnchorSideTop)
void
ColorBox_SetAnchorSideTop(TColorBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ColorBox_SetAnchorSideTop)
    MySyscall(pColorBox_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetAnchorSideRight)
TAnchorSide
ColorBox_GetAnchorSideRight(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pColorBox_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetAnchorSideRight)
void
ColorBox_SetAnchorSideRight(TColorBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ColorBox_SetAnchorSideRight)
    MySyscall(pColorBox_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetAnchorSideBottom)
TAnchorSide
ColorBox_GetAnchorSideBottom(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pColorBox_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetAnchorSideBottom)
void
ColorBox_SetAnchorSideBottom(TColorBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ColorBox_SetAnchorSideBottom)
    MySyscall(pColorBox_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetChildSizing)
TControlChildSizing
ColorBox_GetChildSizing(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetChildSizing)
    return (TControlChildSizing)MySyscall(pColorBox_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetChildSizing)
void
ColorBox_SetChildSizing(TColorBox AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(ColorBox_SetChildSizing)
    MySyscall(pColorBox_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetBorderSpacing)
TControlBorderSpacing
ColorBox_GetBorderSpacing(TColorBox AObj) {
    GET_FUNC_ADDR(ColorBox_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pColorBox_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_SetBorderSpacing)
void
ColorBox_SetBorderSpacing(TColorBox AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(ColorBox_SetBorderSpacing)
    MySyscall(pColorBox_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetColors)
TColor
ColorBox_GetColors(TColorBox AObj, int32_t Index) {
    GET_FUNC_ADDR(ColorBox_GetColors)
    return (TColor)MySyscall(pColorBox_GetColors, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetColorNames)
char*
ColorBox_GetColorNames(TColorBox AObj, int32_t Index) {
    GET_FUNC_ADDR(ColorBox_GetColorNames)
    return (char*)MySyscall(pColorBox_GetColorNames, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetDockClients)
TControl
ColorBox_GetDockClients(TColorBox AObj, int32_t Index) {
    GET_FUNC_ADDR(ColorBox_GetDockClients)
    return (TControl)MySyscall(pColorBox_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetControls)
TControl
ColorBox_GetControls(TColorBox AObj, int32_t Index) {
    GET_FUNC_ADDR(ColorBox_GetControls)
    return (TControl)MySyscall(pColorBox_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetComponents)
TComponent
ColorBox_GetComponents(TColorBox AObj, int32_t AIndex) {
    GET_FUNC_ADDR(ColorBox_GetComponents)
    return (TComponent)MySyscall(pColorBox_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_GetAnchorSide)
TAnchorSide
ColorBox_GetAnchorSide(TColorBox AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(ColorBox_GetAnchorSide)
    return (TAnchorSide)MySyscall(pColorBox_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorBox_StaticClassType)
TClass
ColorBox_StaticClassType() {
    GET_FUNC_ADDR(ColorBox_StaticClassType)
    return (TClass)MySyscall(pColorBox_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TColorListBox-------------------

DEFINE_FUNC_PTR(ColorListBox_Create)
TColorListBox
ColorListBox_Create(TComponent AOwner) {
    GET_FUNC_ADDR(ColorListBox_Create)
    return (TColorListBox)MySyscall(pColorListBox_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_Free)
void
ColorListBox_Free(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_Free)
    MySyscall(pColorListBox_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_AddItem)
void
ColorListBox_AddItem(TColorListBox AObj, CChar char* Item, TObject AObject) {
    GET_FUNC_ADDR(ColorListBox_AddItem)
    MySyscall(pColorListBox_AddItem, 3, AObj, Item, AObject ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_Clear)
void
ColorListBox_Clear(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_Clear)
    MySyscall(pColorListBox_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_ClearSelection)
void
ColorListBox_ClearSelection(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_ClearSelection)
    MySyscall(pColorListBox_ClearSelection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_DeleteSelected)
void
ColorListBox_DeleteSelected(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_DeleteSelected)
    MySyscall(pColorListBox_DeleteSelected, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_ItemAtPos)
int32_t
ColorListBox_ItemAtPos(TColorListBox AObj, TPoint Pos, BOOL Existing) {
    GET_FUNC_ADDR(ColorListBox_ItemAtPos)
    return (int32_t)MySyscall(pColorListBox_ItemAtPos, 3, AObj, &Pos, Existing ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_ItemRect)
TRect
ColorListBox_ItemRect(TColorListBox AObj, int32_t Index) {
    GET_FUNC_ADDR(ColorListBox_ItemRect)
    TRect result;
    MySyscall(pColorListBox_ItemRect, 3, AObj, Index, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ColorListBox_SelectAll)
void
ColorListBox_SelectAll(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_SelectAll)
    MySyscall(pColorListBox_SelectAll, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_CanFocus)
BOOL
ColorListBox_CanFocus(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_CanFocus)
    return (BOOL)MySyscall(pColorListBox_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_ContainsControl)
BOOL
ColorListBox_ContainsControl(TColorListBox AObj, TControl Control) {
    GET_FUNC_ADDR(ColorListBox_ContainsControl)
    return (BOOL)MySyscall(pColorListBox_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_ControlAtPos)
TControl
ColorListBox_ControlAtPos(TColorListBox AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(ColorListBox_ControlAtPos)
    return (TControl)MySyscall(pColorListBox_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_DisableAlign)
void
ColorListBox_DisableAlign(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_DisableAlign)
    MySyscall(pColorListBox_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_EnableAlign)
void
ColorListBox_EnableAlign(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_EnableAlign)
    MySyscall(pColorListBox_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_FindChildControl)
TControl
ColorListBox_FindChildControl(TColorListBox AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(ColorListBox_FindChildControl)
    return (TControl)MySyscall(pColorListBox_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_FlipChildren)
void
ColorListBox_FlipChildren(TColorListBox AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(ColorListBox_FlipChildren)
    MySyscall(pColorListBox_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_Focused)
BOOL
ColorListBox_Focused(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_Focused)
    return (BOOL)MySyscall(pColorListBox_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_HandleAllocated)
BOOL
ColorListBox_HandleAllocated(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_HandleAllocated)
    return (BOOL)MySyscall(pColorListBox_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_InsertControl)
void
ColorListBox_InsertControl(TColorListBox AObj, TControl AControl) {
    GET_FUNC_ADDR(ColorListBox_InsertControl)
    MySyscall(pColorListBox_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_Invalidate)
void
ColorListBox_Invalidate(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_Invalidate)
    MySyscall(pColorListBox_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_PaintTo)
void
ColorListBox_PaintTo(TColorListBox AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(ColorListBox_PaintTo)
    MySyscall(pColorListBox_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_RemoveControl)
void
ColorListBox_RemoveControl(TColorListBox AObj, TControl AControl) {
    GET_FUNC_ADDR(ColorListBox_RemoveControl)
    MySyscall(pColorListBox_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_Realign)
void
ColorListBox_Realign(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_Realign)
    MySyscall(pColorListBox_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_Repaint)
void
ColorListBox_Repaint(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_Repaint)
    MySyscall(pColorListBox_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_ScaleBy)
void
ColorListBox_ScaleBy(TColorListBox AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(ColorListBox_ScaleBy)
    MySyscall(pColorListBox_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_ScrollBy)
void
ColorListBox_ScrollBy(TColorListBox AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(ColorListBox_ScrollBy)
    MySyscall(pColorListBox_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetBounds)
void
ColorListBox_SetBounds(TColorListBox AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(ColorListBox_SetBounds)
    MySyscall(pColorListBox_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetFocus)
void
ColorListBox_SetFocus(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_SetFocus)
    MySyscall(pColorListBox_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_Update)
void
ColorListBox_Update(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_Update)
    MySyscall(pColorListBox_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_BringToFront)
void
ColorListBox_BringToFront(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_BringToFront)
    MySyscall(pColorListBox_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_ClientToScreen)
TPoint
ColorListBox_ClientToScreen(TColorListBox AObj, TPoint Point) {
    GET_FUNC_ADDR(ColorListBox_ClientToScreen)
    TPoint result;
    MySyscall(pColorListBox_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ColorListBox_ClientToParent)
TPoint
ColorListBox_ClientToParent(TColorListBox AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ColorListBox_ClientToParent)
    TPoint result;
    MySyscall(pColorListBox_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ColorListBox_Dragging)
BOOL
ColorListBox_Dragging(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_Dragging)
    return (BOOL)MySyscall(pColorListBox_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_HasParent)
BOOL
ColorListBox_HasParent(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_HasParent)
    return (BOOL)MySyscall(pColorListBox_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_Hide)
void
ColorListBox_Hide(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_Hide)
    MySyscall(pColorListBox_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_Perform)
intptr_t
ColorListBox_Perform(TColorListBox AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(ColorListBox_Perform)
    return (intptr_t)MySyscall(pColorListBox_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_Refresh)
void
ColorListBox_Refresh(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_Refresh)
    MySyscall(pColorListBox_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_ScreenToClient)
TPoint
ColorListBox_ScreenToClient(TColorListBox AObj, TPoint Point) {
    GET_FUNC_ADDR(ColorListBox_ScreenToClient)
    TPoint result;
    MySyscall(pColorListBox_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ColorListBox_ParentToClient)
TPoint
ColorListBox_ParentToClient(TColorListBox AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ColorListBox_ParentToClient)
    TPoint result;
    MySyscall(pColorListBox_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ColorListBox_SendToBack)
void
ColorListBox_SendToBack(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_SendToBack)
    MySyscall(pColorListBox_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_Show)
void
ColorListBox_Show(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_Show)
    MySyscall(pColorListBox_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetTextBuf)
int32_t
ColorListBox_GetTextBuf(TColorListBox AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(ColorListBox_GetTextBuf)
    return (int32_t)MySyscall(pColorListBox_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetTextLen)
int32_t
ColorListBox_GetTextLen(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetTextLen)
    return (int32_t)MySyscall(pColorListBox_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetTextBuf)
void
ColorListBox_SetTextBuf(TColorListBox AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(ColorListBox_SetTextBuf)
    MySyscall(pColorListBox_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_FindComponent)
TComponent
ColorListBox_FindComponent(TColorListBox AObj, CChar char* AName) {
    GET_FUNC_ADDR(ColorListBox_FindComponent)
    return (TComponent)MySyscall(pColorListBox_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetNamePath)
char*
ColorListBox_GetNamePath(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetNamePath)
    return (char*)MySyscall(pColorListBox_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_Assign)
void
ColorListBox_Assign(TColorListBox AObj, TObject Source) {
    GET_FUNC_ADDR(ColorListBox_Assign)
    MySyscall(pColorListBox_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_ClassType)
TClass
ColorListBox_ClassType(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_ClassType)
    return (TClass)MySyscall(pColorListBox_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_ClassName)
char*
ColorListBox_ClassName(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_ClassName)
    return (char*)MySyscall(pColorListBox_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_InstanceSize)
int32_t
ColorListBox_InstanceSize(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_InstanceSize)
    return (int32_t)MySyscall(pColorListBox_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_InheritsFrom)
BOOL
ColorListBox_InheritsFrom(TColorListBox AObj, TClass AClass) {
    GET_FUNC_ADDR(ColorListBox_InheritsFrom)
    return (BOOL)MySyscall(pColorListBox_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_Equals)
BOOL
ColorListBox_Equals(TColorListBox AObj, TObject Obj) {
    GET_FUNC_ADDR(ColorListBox_Equals)
    return (BOOL)MySyscall(pColorListBox_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetHashCode)
int32_t
ColorListBox_GetHashCode(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetHashCode)
    return (int32_t)MySyscall(pColorListBox_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_ToString)
char*
ColorListBox_ToString(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_ToString)
    return (char*)MySyscall(pColorListBox_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_AnchorToNeighbour)
void
ColorListBox_AnchorToNeighbour(TColorListBox AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ColorListBox_AnchorToNeighbour)
    MySyscall(pColorListBox_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_AnchorParallel)
void
ColorListBox_AnchorParallel(TColorListBox AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ColorListBox_AnchorParallel)
    MySyscall(pColorListBox_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_AnchorHorizontalCenterTo)
void
ColorListBox_AnchorHorizontalCenterTo(TColorListBox AObj, TControl ASibling) {
    GET_FUNC_ADDR(ColorListBox_AnchorHorizontalCenterTo)
    MySyscall(pColorListBox_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_AnchorVerticalCenterTo)
void
ColorListBox_AnchorVerticalCenterTo(TColorListBox AObj, TControl ASibling) {
    GET_FUNC_ADDR(ColorListBox_AnchorVerticalCenterTo)
    MySyscall(pColorListBox_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_AnchorSame)
void
ColorListBox_AnchorSame(TColorListBox AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(ColorListBox_AnchorSame)
    MySyscall(pColorListBox_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_AnchorAsAlign)
void
ColorListBox_AnchorAsAlign(TColorListBox AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(ColorListBox_AnchorAsAlign)
    MySyscall(pColorListBox_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_AnchorClient)
void
ColorListBox_AnchorClient(TColorListBox AObj, int32_t ASpace) {
    GET_FUNC_ADDR(ColorListBox_AnchorClient)
    MySyscall(pColorListBox_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_ScaleDesignToForm)
int32_t
ColorListBox_ScaleDesignToForm(TColorListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorListBox_ScaleDesignToForm)
    return (int32_t)MySyscall(pColorListBox_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_ScaleFormToDesign)
int32_t
ColorListBox_ScaleFormToDesign(TColorListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorListBox_ScaleFormToDesign)
    return (int32_t)MySyscall(pColorListBox_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_Scale96ToForm)
int32_t
ColorListBox_Scale96ToForm(TColorListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorListBox_Scale96ToForm)
    return (int32_t)MySyscall(pColorListBox_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_ScaleFormTo96)
int32_t
ColorListBox_ScaleFormTo96(TColorListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorListBox_ScaleFormTo96)
    return (int32_t)MySyscall(pColorListBox_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_Scale96ToFont)
int32_t
ColorListBox_Scale96ToFont(TColorListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorListBox_Scale96ToFont)
    return (int32_t)MySyscall(pColorListBox_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_ScaleFontTo96)
int32_t
ColorListBox_ScaleFontTo96(TColorListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorListBox_ScaleFontTo96)
    return (int32_t)MySyscall(pColorListBox_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_ScaleScreenToFont)
int32_t
ColorListBox_ScaleScreenToFont(TColorListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorListBox_ScaleScreenToFont)
    return (int32_t)MySyscall(pColorListBox_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_ScaleFontToScreen)
int32_t
ColorListBox_ScaleFontToScreen(TColorListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorListBox_ScaleFontToScreen)
    return (int32_t)MySyscall(pColorListBox_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_Scale96ToScreen)
int32_t
ColorListBox_Scale96ToScreen(TColorListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorListBox_Scale96ToScreen)
    return (int32_t)MySyscall(pColorListBox_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_ScaleScreenTo96)
int32_t
ColorListBox_ScaleScreenTo96(TColorListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorListBox_ScaleScreenTo96)
    return (int32_t)MySyscall(pColorListBox_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_AutoAdjustLayout)
void
ColorListBox_AutoAdjustLayout(TColorListBox AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(ColorListBox_AutoAdjustLayout)
    MySyscall(pColorListBox_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_FixDesignFontsPPI)
void
ColorListBox_FixDesignFontsPPI(TColorListBox AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(ColorListBox_FixDesignFontsPPI)
    MySyscall(pColorListBox_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_ScaleFontsPPI)
void
ColorListBox_ScaleFontsPPI(TColorListBox AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(ColorListBox_ScaleFontsPPI)
    MySyscall(pColorListBox_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetAlign)
TAlign
ColorListBox_GetAlign(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetAlign)
    return (TAlign)MySyscall(pColorListBox_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetAlign)
void
ColorListBox_SetAlign(TColorListBox AObj, TAlign AValue) {
    GET_FUNC_ADDR(ColorListBox_SetAlign)
    MySyscall(pColorListBox_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetDefaultColorColor)
TColor
ColorListBox_GetDefaultColorColor(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetDefaultColorColor)
    return (TColor)MySyscall(pColorListBox_GetDefaultColorColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetDefaultColorColor)
void
ColorListBox_SetDefaultColorColor(TColorListBox AObj, TColor AValue) {
    GET_FUNC_ADDR(ColorListBox_SetDefaultColorColor)
    MySyscall(pColorListBox_SetDefaultColorColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetNoneColorColor)
TColor
ColorListBox_GetNoneColorColor(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetNoneColorColor)
    return (TColor)MySyscall(pColorListBox_GetNoneColorColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetNoneColorColor)
void
ColorListBox_SetNoneColorColor(TColorListBox AObj, TColor AValue) {
    GET_FUNC_ADDR(ColorListBox_SetNoneColorColor)
    MySyscall(pColorListBox_SetNoneColorColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetSelected)
TColor
ColorListBox_GetSelected(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetSelected)
    return (TColor)MySyscall(pColorListBox_GetSelected, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetSelected)
void
ColorListBox_SetSelected(TColorListBox AObj, TColor AValue) {
    GET_FUNC_ADDR(ColorListBox_SetSelected)
    MySyscall(pColorListBox_SetSelected, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetStyle)
TColorBoxStyle
ColorListBox_GetStyle(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetStyle)
    return (TColorBoxStyle)MySyscall(pColorListBox_GetStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetStyle)
void
ColorListBox_SetStyle(TColorListBox AObj, TColorBoxStyle AValue) {
    GET_FUNC_ADDR(ColorListBox_SetStyle)
    MySyscall(pColorListBox_SetStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetAnchors)
TAnchors
ColorListBox_GetAnchors(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetAnchors)
    return (TAnchors)MySyscall(pColorListBox_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetAnchors)
void
ColorListBox_SetAnchors(TColorListBox AObj, TAnchors AValue) {
    GET_FUNC_ADDR(ColorListBox_SetAnchors)
    MySyscall(pColorListBox_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetBiDiMode)
TBiDiMode
ColorListBox_GetBiDiMode(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetBiDiMode)
    return (TBiDiMode)MySyscall(pColorListBox_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetBiDiMode)
void
ColorListBox_SetBiDiMode(TColorListBox AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(ColorListBox_SetBiDiMode)
    MySyscall(pColorListBox_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetColor)
TColor
ColorListBox_GetColor(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetColor)
    return (TColor)MySyscall(pColorListBox_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetColor)
void
ColorListBox_SetColor(TColorListBox AObj, TColor AValue) {
    GET_FUNC_ADDR(ColorListBox_SetColor)
    MySyscall(pColorListBox_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetConstraints)
TSizeConstraints
ColorListBox_GetConstraints(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetConstraints)
    return (TSizeConstraints)MySyscall(pColorListBox_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetConstraints)
void
ColorListBox_SetConstraints(TColorListBox AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(ColorListBox_SetConstraints)
    MySyscall(pColorListBox_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetDoubleBuffered)
BOOL
ColorListBox_GetDoubleBuffered(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetDoubleBuffered)
    return (BOOL)MySyscall(pColorListBox_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetDoubleBuffered)
void
ColorListBox_SetDoubleBuffered(TColorListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorListBox_SetDoubleBuffered)
    MySyscall(pColorListBox_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetEnabled)
BOOL
ColorListBox_GetEnabled(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetEnabled)
    return (BOOL)MySyscall(pColorListBox_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetEnabled)
void
ColorListBox_SetEnabled(TColorListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorListBox_SetEnabled)
    MySyscall(pColorListBox_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetFont)
TFont
ColorListBox_GetFont(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetFont)
    return (TFont)MySyscall(pColorListBox_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetFont)
void
ColorListBox_SetFont(TColorListBox AObj, TFont AValue) {
    GET_FUNC_ADDR(ColorListBox_SetFont)
    MySyscall(pColorListBox_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetItemHeight)
int32_t
ColorListBox_GetItemHeight(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetItemHeight)
    return (int32_t)MySyscall(pColorListBox_GetItemHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetItemHeight)
void
ColorListBox_SetItemHeight(TColorListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorListBox_SetItemHeight)
    MySyscall(pColorListBox_SetItemHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetParentColor)
BOOL
ColorListBox_GetParentColor(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetParentColor)
    return (BOOL)MySyscall(pColorListBox_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetParentColor)
void
ColorListBox_SetParentColor(TColorListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorListBox_SetParentColor)
    MySyscall(pColorListBox_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetParentDoubleBuffered)
BOOL
ColorListBox_GetParentDoubleBuffered(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pColorListBox_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetParentDoubleBuffered)
void
ColorListBox_SetParentDoubleBuffered(TColorListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorListBox_SetParentDoubleBuffered)
    MySyscall(pColorListBox_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetParentFont)
BOOL
ColorListBox_GetParentFont(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetParentFont)
    return (BOOL)MySyscall(pColorListBox_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetParentFont)
void
ColorListBox_SetParentFont(TColorListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorListBox_SetParentFont)
    MySyscall(pColorListBox_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetParentShowHint)
BOOL
ColorListBox_GetParentShowHint(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetParentShowHint)
    return (BOOL)MySyscall(pColorListBox_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetParentShowHint)
void
ColorListBox_SetParentShowHint(TColorListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorListBox_SetParentShowHint)
    MySyscall(pColorListBox_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetPopupMenu)
TPopupMenu
ColorListBox_GetPopupMenu(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetPopupMenu)
    return (TPopupMenu)MySyscall(pColorListBox_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetPopupMenu)
void
ColorListBox_SetPopupMenu(TColorListBox AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(ColorListBox_SetPopupMenu)
    MySyscall(pColorListBox_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetShowHint)
BOOL
ColorListBox_GetShowHint(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetShowHint)
    return (BOOL)MySyscall(pColorListBox_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetShowHint)
void
ColorListBox_SetShowHint(TColorListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorListBox_SetShowHint)
    MySyscall(pColorListBox_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetTabOrder)
TTabOrder
ColorListBox_GetTabOrder(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetTabOrder)
    return (TTabOrder)MySyscall(pColorListBox_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetTabOrder)
void
ColorListBox_SetTabOrder(TColorListBox AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(ColorListBox_SetTabOrder)
    MySyscall(pColorListBox_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetTabStop)
BOOL
ColorListBox_GetTabStop(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetTabStop)
    return (BOOL)MySyscall(pColorListBox_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetTabStop)
void
ColorListBox_SetTabStop(TColorListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorListBox_SetTabStop)
    MySyscall(pColorListBox_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetVisible)
BOOL
ColorListBox_GetVisible(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetVisible)
    return (BOOL)MySyscall(pColorListBox_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetVisible)
void
ColorListBox_SetVisible(TColorListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorListBox_SetVisible)
    MySyscall(pColorListBox_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetOnClick)
void
ColorListBox_SetOnClick(TColorListBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ColorListBox_SetOnClick)
    MySyscall(pColorListBox_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetOnContextPopup)
void
ColorListBox_SetOnContextPopup(TColorListBox AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(ColorListBox_SetOnContextPopup)
    MySyscall(pColorListBox_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetOnDblClick)
void
ColorListBox_SetOnDblClick(TColorListBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ColorListBox_SetOnDblClick)
    MySyscall(pColorListBox_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetOnDragDrop)
void
ColorListBox_SetOnDragDrop(TColorListBox AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(ColorListBox_SetOnDragDrop)
    MySyscall(pColorListBox_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetOnDragOver)
void
ColorListBox_SetOnDragOver(TColorListBox AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(ColorListBox_SetOnDragOver)
    MySyscall(pColorListBox_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetOnEndDrag)
void
ColorListBox_SetOnEndDrag(TColorListBox AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(ColorListBox_SetOnEndDrag)
    MySyscall(pColorListBox_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetOnEnter)
void
ColorListBox_SetOnEnter(TColorListBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ColorListBox_SetOnEnter)
    MySyscall(pColorListBox_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetOnExit)
void
ColorListBox_SetOnExit(TColorListBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ColorListBox_SetOnExit)
    MySyscall(pColorListBox_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetOnKeyDown)
void
ColorListBox_SetOnKeyDown(TColorListBox AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(ColorListBox_SetOnKeyDown)
    MySyscall(pColorListBox_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetOnKeyPress)
void
ColorListBox_SetOnKeyPress(TColorListBox AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(ColorListBox_SetOnKeyPress)
    MySyscall(pColorListBox_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetOnKeyUp)
void
ColorListBox_SetOnKeyUp(TColorListBox AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(ColorListBox_SetOnKeyUp)
    MySyscall(pColorListBox_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetOnMouseDown)
void
ColorListBox_SetOnMouseDown(TColorListBox AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(ColorListBox_SetOnMouseDown)
    MySyscall(pColorListBox_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetOnMouseEnter)
void
ColorListBox_SetOnMouseEnter(TColorListBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ColorListBox_SetOnMouseEnter)
    MySyscall(pColorListBox_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetOnMouseLeave)
void
ColorListBox_SetOnMouseLeave(TColorListBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ColorListBox_SetOnMouseLeave)
    MySyscall(pColorListBox_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetOnMouseMove)
void
ColorListBox_SetOnMouseMove(TColorListBox AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(ColorListBox_SetOnMouseMove)
    MySyscall(pColorListBox_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetOnMouseUp)
void
ColorListBox_SetOnMouseUp(TColorListBox AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(ColorListBox_SetOnMouseUp)
    MySyscall(pColorListBox_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetCanvas)
TCanvas
ColorListBox_GetCanvas(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetCanvas)
    return (TCanvas)MySyscall(pColorListBox_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetCount)
int32_t
ColorListBox_GetCount(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetCount)
    return (int32_t)MySyscall(pColorListBox_GetCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetItems)
TStrings
ColorListBox_GetItems(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetItems)
    return (TStrings)MySyscall(pColorListBox_GetItems, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetItems)
void
ColorListBox_SetItems(TColorListBox AObj, TStrings AValue) {
    GET_FUNC_ADDR(ColorListBox_SetItems)
    MySyscall(pColorListBox_SetItems, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetTopIndex)
int32_t
ColorListBox_GetTopIndex(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetTopIndex)
    return (int32_t)MySyscall(pColorListBox_GetTopIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetTopIndex)
void
ColorListBox_SetTopIndex(TColorListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorListBox_SetTopIndex)
    MySyscall(pColorListBox_SetTopIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetMultiSelect)
BOOL
ColorListBox_GetMultiSelect(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetMultiSelect)
    return (BOOL)MySyscall(pColorListBox_GetMultiSelect, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetMultiSelect)
void
ColorListBox_SetMultiSelect(TColorListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorListBox_SetMultiSelect)
    MySyscall(pColorListBox_SetMultiSelect, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetSelCount)
int32_t
ColorListBox_GetSelCount(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetSelCount)
    return (int32_t)MySyscall(pColorListBox_GetSelCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetItemIndex)
int32_t
ColorListBox_GetItemIndex(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetItemIndex)
    return (int32_t)MySyscall(pColorListBox_GetItemIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetItemIndex)
void
ColorListBox_SetItemIndex(TColorListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorListBox_SetItemIndex)
    MySyscall(pColorListBox_SetItemIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetDockClientCount)
int32_t
ColorListBox_GetDockClientCount(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetDockClientCount)
    return (int32_t)MySyscall(pColorListBox_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetDockSite)
BOOL
ColorListBox_GetDockSite(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetDockSite)
    return (BOOL)MySyscall(pColorListBox_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetDockSite)
void
ColorListBox_SetDockSite(TColorListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorListBox_SetDockSite)
    MySyscall(pColorListBox_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetMouseInClient)
BOOL
ColorListBox_GetMouseInClient(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetMouseInClient)
    return (BOOL)MySyscall(pColorListBox_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetVisibleDockClientCount)
int32_t
ColorListBox_GetVisibleDockClientCount(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pColorListBox_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetBrush)
TBrush
ColorListBox_GetBrush(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetBrush)
    return (TBrush)MySyscall(pColorListBox_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetControlCount)
int32_t
ColorListBox_GetControlCount(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetControlCount)
    return (int32_t)MySyscall(pColorListBox_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetHandle)
HWND
ColorListBox_GetHandle(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetHandle)
    return (HWND)MySyscall(pColorListBox_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetParentWindow)
HWND
ColorListBox_GetParentWindow(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetParentWindow)
    return (HWND)MySyscall(pColorListBox_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetParentWindow)
void
ColorListBox_SetParentWindow(TColorListBox AObj, HWND AValue) {
    GET_FUNC_ADDR(ColorListBox_SetParentWindow)
    MySyscall(pColorListBox_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetShowing)
BOOL
ColorListBox_GetShowing(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetShowing)
    return (BOOL)MySyscall(pColorListBox_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetUseDockManager)
BOOL
ColorListBox_GetUseDockManager(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetUseDockManager)
    return (BOOL)MySyscall(pColorListBox_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetUseDockManager)
void
ColorListBox_SetUseDockManager(TColorListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorListBox_SetUseDockManager)
    MySyscall(pColorListBox_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetAction)
TAction
ColorListBox_GetAction(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetAction)
    return (TAction)MySyscall(pColorListBox_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetAction)
void
ColorListBox_SetAction(TColorListBox AObj, TAction AValue) {
    GET_FUNC_ADDR(ColorListBox_SetAction)
    MySyscall(pColorListBox_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetBoundsRect)
TRect
ColorListBox_GetBoundsRect(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetBoundsRect)
    TRect result;
    MySyscall(pColorListBox_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ColorListBox_SetBoundsRect)
void
ColorListBox_SetBoundsRect(TColorListBox AObj, TRect AValue) {
    GET_FUNC_ADDR(ColorListBox_SetBoundsRect)
    MySyscall(pColorListBox_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetClientHeight)
int32_t
ColorListBox_GetClientHeight(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetClientHeight)
    return (int32_t)MySyscall(pColorListBox_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetClientHeight)
void
ColorListBox_SetClientHeight(TColorListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorListBox_SetClientHeight)
    MySyscall(pColorListBox_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetClientOrigin)
TPoint
ColorListBox_GetClientOrigin(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetClientOrigin)
    TPoint result;
    MySyscall(pColorListBox_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ColorListBox_GetClientRect)
TRect
ColorListBox_GetClientRect(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetClientRect)
    TRect result;
    MySyscall(pColorListBox_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ColorListBox_GetClientWidth)
int32_t
ColorListBox_GetClientWidth(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetClientWidth)
    return (int32_t)MySyscall(pColorListBox_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetClientWidth)
void
ColorListBox_SetClientWidth(TColorListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorListBox_SetClientWidth)
    MySyscall(pColorListBox_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetControlState)
TControlState
ColorListBox_GetControlState(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetControlState)
    return (TControlState)MySyscall(pColorListBox_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetControlState)
void
ColorListBox_SetControlState(TColorListBox AObj, TControlState AValue) {
    GET_FUNC_ADDR(ColorListBox_SetControlState)
    MySyscall(pColorListBox_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetControlStyle)
TControlStyle
ColorListBox_GetControlStyle(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetControlStyle)
    return (TControlStyle)MySyscall(pColorListBox_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetControlStyle)
void
ColorListBox_SetControlStyle(TColorListBox AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(ColorListBox_SetControlStyle)
    MySyscall(pColorListBox_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetFloating)
BOOL
ColorListBox_GetFloating(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetFloating)
    return (BOOL)MySyscall(pColorListBox_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetParent)
TWinControl
ColorListBox_GetParent(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetParent)
    return (TWinControl)MySyscall(pColorListBox_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetParent)
void
ColorListBox_SetParent(TColorListBox AObj, TWinControl AValue) {
    GET_FUNC_ADDR(ColorListBox_SetParent)
    MySyscall(pColorListBox_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetLeft)
int32_t
ColorListBox_GetLeft(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetLeft)
    return (int32_t)MySyscall(pColorListBox_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetLeft)
void
ColorListBox_SetLeft(TColorListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorListBox_SetLeft)
    MySyscall(pColorListBox_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetTop)
int32_t
ColorListBox_GetTop(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetTop)
    return (int32_t)MySyscall(pColorListBox_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetTop)
void
ColorListBox_SetTop(TColorListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorListBox_SetTop)
    MySyscall(pColorListBox_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetWidth)
int32_t
ColorListBox_GetWidth(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetWidth)
    return (int32_t)MySyscall(pColorListBox_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetWidth)
void
ColorListBox_SetWidth(TColorListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorListBox_SetWidth)
    MySyscall(pColorListBox_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetHeight)
int32_t
ColorListBox_GetHeight(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetHeight)
    return (int32_t)MySyscall(pColorListBox_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetHeight)
void
ColorListBox_SetHeight(TColorListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorListBox_SetHeight)
    MySyscall(pColorListBox_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetCursor)
TCursor
ColorListBox_GetCursor(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetCursor)
    return (TCursor)MySyscall(pColorListBox_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetCursor)
void
ColorListBox_SetCursor(TColorListBox AObj, TCursor AValue) {
    GET_FUNC_ADDR(ColorListBox_SetCursor)
    MySyscall(pColorListBox_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetHint)
char*
ColorListBox_GetHint(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetHint)
    return (char*)MySyscall(pColorListBox_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetHint)
void
ColorListBox_SetHint(TColorListBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ColorListBox_SetHint)
    MySyscall(pColorListBox_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetComponentCount)
int32_t
ColorListBox_GetComponentCount(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetComponentCount)
    return (int32_t)MySyscall(pColorListBox_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetComponentIndex)
int32_t
ColorListBox_GetComponentIndex(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetComponentIndex)
    return (int32_t)MySyscall(pColorListBox_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetComponentIndex)
void
ColorListBox_SetComponentIndex(TColorListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorListBox_SetComponentIndex)
    MySyscall(pColorListBox_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetOwner)
TComponent
ColorListBox_GetOwner(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetOwner)
    return (TComponent)MySyscall(pColorListBox_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetName)
char*
ColorListBox_GetName(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetName)
    return (char*)MySyscall(pColorListBox_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetName)
void
ColorListBox_SetName(TColorListBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ColorListBox_SetName)
    MySyscall(pColorListBox_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetTag)
intptr_t
ColorListBox_GetTag(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetTag)
    return (intptr_t)MySyscall(pColorListBox_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetTag)
void
ColorListBox_SetTag(TColorListBox AObj, intptr_t AValue) {
    GET_FUNC_ADDR(ColorListBox_SetTag)
    MySyscall(pColorListBox_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetAnchorSideLeft)
TAnchorSide
ColorListBox_GetAnchorSideLeft(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pColorListBox_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetAnchorSideLeft)
void
ColorListBox_SetAnchorSideLeft(TColorListBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ColorListBox_SetAnchorSideLeft)
    MySyscall(pColorListBox_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetAnchorSideTop)
TAnchorSide
ColorListBox_GetAnchorSideTop(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pColorListBox_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetAnchorSideTop)
void
ColorListBox_SetAnchorSideTop(TColorListBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ColorListBox_SetAnchorSideTop)
    MySyscall(pColorListBox_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetAnchorSideRight)
TAnchorSide
ColorListBox_GetAnchorSideRight(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pColorListBox_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetAnchorSideRight)
void
ColorListBox_SetAnchorSideRight(TColorListBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ColorListBox_SetAnchorSideRight)
    MySyscall(pColorListBox_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetAnchorSideBottom)
TAnchorSide
ColorListBox_GetAnchorSideBottom(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pColorListBox_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetAnchorSideBottom)
void
ColorListBox_SetAnchorSideBottom(TColorListBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ColorListBox_SetAnchorSideBottom)
    MySyscall(pColorListBox_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetChildSizing)
TControlChildSizing
ColorListBox_GetChildSizing(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetChildSizing)
    return (TControlChildSizing)MySyscall(pColorListBox_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetChildSizing)
void
ColorListBox_SetChildSizing(TColorListBox AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(ColorListBox_SetChildSizing)
    MySyscall(pColorListBox_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetBorderSpacing)
TControlBorderSpacing
ColorListBox_GetBorderSpacing(TColorListBox AObj) {
    GET_FUNC_ADDR(ColorListBox_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pColorListBox_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_SetBorderSpacing)
void
ColorListBox_SetBorderSpacing(TColorListBox AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(ColorListBox_SetBorderSpacing)
    MySyscall(pColorListBox_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetColors)
TColor
ColorListBox_GetColors(TColorListBox AObj, int32_t Index) {
    GET_FUNC_ADDR(ColorListBox_GetColors)
    return (TColor)MySyscall(pColorListBox_GetColors, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetColorNames)
char*
ColorListBox_GetColorNames(TColorListBox AObj, int32_t Index) {
    GET_FUNC_ADDR(ColorListBox_GetColorNames)
    return (char*)MySyscall(pColorListBox_GetColorNames, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetDockClients)
TControl
ColorListBox_GetDockClients(TColorListBox AObj, int32_t Index) {
    GET_FUNC_ADDR(ColorListBox_GetDockClients)
    return (TControl)MySyscall(pColorListBox_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetControls)
TControl
ColorListBox_GetControls(TColorListBox AObj, int32_t Index) {
    GET_FUNC_ADDR(ColorListBox_GetControls)
    return (TControl)MySyscall(pColorListBox_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetComponents)
TComponent
ColorListBox_GetComponents(TColorListBox AObj, int32_t AIndex) {
    GET_FUNC_ADDR(ColorListBox_GetComponents)
    return (TComponent)MySyscall(pColorListBox_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_GetAnchorSide)
TAnchorSide
ColorListBox_GetAnchorSide(TColorListBox AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(ColorListBox_GetAnchorSide)
    return (TAnchorSide)MySyscall(pColorListBox_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorListBox_StaticClassType)
TClass
ColorListBox_StaticClassType() {
    GET_FUNC_ADDR(ColorListBox_StaticClassType)
    return (TClass)MySyscall(pColorListBox_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TTrayIcon-------------------

DEFINE_FUNC_PTR(TrayIcon_Create)
TTrayIcon
TrayIcon_Create(TComponent AOwner) {
    GET_FUNC_ADDR(TrayIcon_Create)
    return (TTrayIcon)MySyscall(pTrayIcon_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_Free)
void
TrayIcon_Free(TTrayIcon AObj) {
    GET_FUNC_ADDR(TrayIcon_Free)
    MySyscall(pTrayIcon_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_ShowBalloonHint)
void
TrayIcon_ShowBalloonHint(TTrayIcon AObj) {
    GET_FUNC_ADDR(TrayIcon_ShowBalloonHint)
    MySyscall(pTrayIcon_ShowBalloonHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_FindComponent)
TComponent
TrayIcon_FindComponent(TTrayIcon AObj, CChar char* AName) {
    GET_FUNC_ADDR(TrayIcon_FindComponent)
    return (TComponent)MySyscall(pTrayIcon_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_GetNamePath)
char*
TrayIcon_GetNamePath(TTrayIcon AObj) {
    GET_FUNC_ADDR(TrayIcon_GetNamePath)
    return (char*)MySyscall(pTrayIcon_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_HasParent)
BOOL
TrayIcon_HasParent(TTrayIcon AObj) {
    GET_FUNC_ADDR(TrayIcon_HasParent)
    return (BOOL)MySyscall(pTrayIcon_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_Assign)
void
TrayIcon_Assign(TTrayIcon AObj, TObject Source) {
    GET_FUNC_ADDR(TrayIcon_Assign)
    MySyscall(pTrayIcon_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_ClassType)
TClass
TrayIcon_ClassType(TTrayIcon AObj) {
    GET_FUNC_ADDR(TrayIcon_ClassType)
    return (TClass)MySyscall(pTrayIcon_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_ClassName)
char*
TrayIcon_ClassName(TTrayIcon AObj) {
    GET_FUNC_ADDR(TrayIcon_ClassName)
    return (char*)MySyscall(pTrayIcon_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_InstanceSize)
int32_t
TrayIcon_InstanceSize(TTrayIcon AObj) {
    GET_FUNC_ADDR(TrayIcon_InstanceSize)
    return (int32_t)MySyscall(pTrayIcon_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_InheritsFrom)
BOOL
TrayIcon_InheritsFrom(TTrayIcon AObj, TClass AClass) {
    GET_FUNC_ADDR(TrayIcon_InheritsFrom)
    return (BOOL)MySyscall(pTrayIcon_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_Equals)
BOOL
TrayIcon_Equals(TTrayIcon AObj, TObject Obj) {
    GET_FUNC_ADDR(TrayIcon_Equals)
    return (BOOL)MySyscall(pTrayIcon_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_GetHashCode)
int32_t
TrayIcon_GetHashCode(TTrayIcon AObj) {
    GET_FUNC_ADDR(TrayIcon_GetHashCode)
    return (int32_t)MySyscall(pTrayIcon_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_ToString)
char*
TrayIcon_ToString(TTrayIcon AObj) {
    GET_FUNC_ADDR(TrayIcon_ToString)
    return (char*)MySyscall(pTrayIcon_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_GetAnimateInterval)
uint32_t
TrayIcon_GetAnimateInterval(TTrayIcon AObj) {
    GET_FUNC_ADDR(TrayIcon_GetAnimateInterval)
    return (uint32_t)MySyscall(pTrayIcon_GetAnimateInterval, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_SetAnimateInterval)
void
TrayIcon_SetAnimateInterval(TTrayIcon AObj, uint32_t AValue) {
    GET_FUNC_ADDR(TrayIcon_SetAnimateInterval)
    MySyscall(pTrayIcon_SetAnimateInterval, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_GetHint)
char*
TrayIcon_GetHint(TTrayIcon AObj) {
    GET_FUNC_ADDR(TrayIcon_GetHint)
    return (char*)MySyscall(pTrayIcon_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_SetHint)
void
TrayIcon_SetHint(TTrayIcon AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TrayIcon_SetHint)
    MySyscall(pTrayIcon_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_GetBalloonHint)
char*
TrayIcon_GetBalloonHint(TTrayIcon AObj) {
    GET_FUNC_ADDR(TrayIcon_GetBalloonHint)
    return (char*)MySyscall(pTrayIcon_GetBalloonHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_SetBalloonHint)
void
TrayIcon_SetBalloonHint(TTrayIcon AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TrayIcon_SetBalloonHint)
    MySyscall(pTrayIcon_SetBalloonHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_GetBalloonTitle)
char*
TrayIcon_GetBalloonTitle(TTrayIcon AObj) {
    GET_FUNC_ADDR(TrayIcon_GetBalloonTitle)
    return (char*)MySyscall(pTrayIcon_GetBalloonTitle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_SetBalloonTitle)
void
TrayIcon_SetBalloonTitle(TTrayIcon AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TrayIcon_SetBalloonTitle)
    MySyscall(pTrayIcon_SetBalloonTitle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_GetBalloonTimeout)
int32_t
TrayIcon_GetBalloonTimeout(TTrayIcon AObj) {
    GET_FUNC_ADDR(TrayIcon_GetBalloonTimeout)
    return (int32_t)MySyscall(pTrayIcon_GetBalloonTimeout, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_SetBalloonTimeout)
void
TrayIcon_SetBalloonTimeout(TTrayIcon AObj, int32_t AValue) {
    GET_FUNC_ADDR(TrayIcon_SetBalloonTimeout)
    MySyscall(pTrayIcon_SetBalloonTimeout, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_GetBalloonFlags)
TBalloonFlags
TrayIcon_GetBalloonFlags(TTrayIcon AObj) {
    GET_FUNC_ADDR(TrayIcon_GetBalloonFlags)
    return (TBalloonFlags)MySyscall(pTrayIcon_GetBalloonFlags, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_SetBalloonFlags)
void
TrayIcon_SetBalloonFlags(TTrayIcon AObj, TBalloonFlags AValue) {
    GET_FUNC_ADDR(TrayIcon_SetBalloonFlags)
    MySyscall(pTrayIcon_SetBalloonFlags, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_GetIcon)
TIcon
TrayIcon_GetIcon(TTrayIcon AObj) {
    GET_FUNC_ADDR(TrayIcon_GetIcon)
    return (TIcon)MySyscall(pTrayIcon_GetIcon, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_SetIcon)
void
TrayIcon_SetIcon(TTrayIcon AObj, TIcon AValue) {
    GET_FUNC_ADDR(TrayIcon_SetIcon)
    MySyscall(pTrayIcon_SetIcon, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_GetPopupMenu)
TPopupMenu
TrayIcon_GetPopupMenu(TTrayIcon AObj) {
    GET_FUNC_ADDR(TrayIcon_GetPopupMenu)
    return (TPopupMenu)MySyscall(pTrayIcon_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_SetPopupMenu)
void
TrayIcon_SetPopupMenu(TTrayIcon AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(TrayIcon_SetPopupMenu)
    MySyscall(pTrayIcon_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_GetVisible)
BOOL
TrayIcon_GetVisible(TTrayIcon AObj) {
    GET_FUNC_ADDR(TrayIcon_GetVisible)
    return (BOOL)MySyscall(pTrayIcon_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_SetVisible)
void
TrayIcon_SetVisible(TTrayIcon AObj, BOOL AValue) {
    GET_FUNC_ADDR(TrayIcon_SetVisible)
    MySyscall(pTrayIcon_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_SetOnClick)
void
TrayIcon_SetOnClick(TTrayIcon AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(TrayIcon_SetOnClick)
    MySyscall(pTrayIcon_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_SetOnDblClick)
void
TrayIcon_SetOnDblClick(TTrayIcon AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(TrayIcon_SetOnDblClick)
    MySyscall(pTrayIcon_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_SetOnMouseMove)
void
TrayIcon_SetOnMouseMove(TTrayIcon AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(TrayIcon_SetOnMouseMove)
    MySyscall(pTrayIcon_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_SetOnMouseUp)
void
TrayIcon_SetOnMouseUp(TTrayIcon AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(TrayIcon_SetOnMouseUp)
    MySyscall(pTrayIcon_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_SetOnMouseDown)
void
TrayIcon_SetOnMouseDown(TTrayIcon AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(TrayIcon_SetOnMouseDown)
    MySyscall(pTrayIcon_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_GetComponentCount)
int32_t
TrayIcon_GetComponentCount(TTrayIcon AObj) {
    GET_FUNC_ADDR(TrayIcon_GetComponentCount)
    return (int32_t)MySyscall(pTrayIcon_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_GetComponentIndex)
int32_t
TrayIcon_GetComponentIndex(TTrayIcon AObj) {
    GET_FUNC_ADDR(TrayIcon_GetComponentIndex)
    return (int32_t)MySyscall(pTrayIcon_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_SetComponentIndex)
void
TrayIcon_SetComponentIndex(TTrayIcon AObj, int32_t AValue) {
    GET_FUNC_ADDR(TrayIcon_SetComponentIndex)
    MySyscall(pTrayIcon_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_GetOwner)
TComponent
TrayIcon_GetOwner(TTrayIcon AObj) {
    GET_FUNC_ADDR(TrayIcon_GetOwner)
    return (TComponent)MySyscall(pTrayIcon_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_GetName)
char*
TrayIcon_GetName(TTrayIcon AObj) {
    GET_FUNC_ADDR(TrayIcon_GetName)
    return (char*)MySyscall(pTrayIcon_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_SetName)
void
TrayIcon_SetName(TTrayIcon AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TrayIcon_SetName)
    MySyscall(pTrayIcon_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_GetTag)
intptr_t
TrayIcon_GetTag(TTrayIcon AObj) {
    GET_FUNC_ADDR(TrayIcon_GetTag)
    return (intptr_t)MySyscall(pTrayIcon_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_SetTag)
void
TrayIcon_SetTag(TTrayIcon AObj, intptr_t AValue) {
    GET_FUNC_ADDR(TrayIcon_SetTag)
    MySyscall(pTrayIcon_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_GetComponents)
TComponent
TrayIcon_GetComponents(TTrayIcon AObj, int32_t AIndex) {
    GET_FUNC_ADDR(TrayIcon_GetComponents)
    return (TComponent)MySyscall(pTrayIcon_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrayIcon_StaticClassType)
TClass
TrayIcon_StaticClassType() {
    GET_FUNC_ADDR(TrayIcon_StaticClassType)
    return (TClass)MySyscall(pTrayIcon_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TOpenDialog-------------------

DEFINE_FUNC_PTR(OpenDialog_Create)
TOpenDialog
OpenDialog_Create(TComponent AOwner) {
    GET_FUNC_ADDR(OpenDialog_Create)
    return (TOpenDialog)MySyscall(pOpenDialog_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_Free)
void
OpenDialog_Free(TOpenDialog AObj) {
    GET_FUNC_ADDR(OpenDialog_Free)
    MySyscall(pOpenDialog_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_Execute)
BOOL
OpenDialog_Execute(TOpenDialog AObj) {
    GET_FUNC_ADDR(OpenDialog_Execute)
    return (BOOL)MySyscall(pOpenDialog_Execute, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_FindComponent)
TComponent
OpenDialog_FindComponent(TOpenDialog AObj, CChar char* AName) {
    GET_FUNC_ADDR(OpenDialog_FindComponent)
    return (TComponent)MySyscall(pOpenDialog_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_GetNamePath)
char*
OpenDialog_GetNamePath(TOpenDialog AObj) {
    GET_FUNC_ADDR(OpenDialog_GetNamePath)
    return (char*)MySyscall(pOpenDialog_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_HasParent)
BOOL
OpenDialog_HasParent(TOpenDialog AObj) {
    GET_FUNC_ADDR(OpenDialog_HasParent)
    return (BOOL)MySyscall(pOpenDialog_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_Assign)
void
OpenDialog_Assign(TOpenDialog AObj, TObject Source) {
    GET_FUNC_ADDR(OpenDialog_Assign)
    MySyscall(pOpenDialog_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_ClassType)
TClass
OpenDialog_ClassType(TOpenDialog AObj) {
    GET_FUNC_ADDR(OpenDialog_ClassType)
    return (TClass)MySyscall(pOpenDialog_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_ClassName)
char*
OpenDialog_ClassName(TOpenDialog AObj) {
    GET_FUNC_ADDR(OpenDialog_ClassName)
    return (char*)MySyscall(pOpenDialog_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_InstanceSize)
int32_t
OpenDialog_InstanceSize(TOpenDialog AObj) {
    GET_FUNC_ADDR(OpenDialog_InstanceSize)
    return (int32_t)MySyscall(pOpenDialog_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_InheritsFrom)
BOOL
OpenDialog_InheritsFrom(TOpenDialog AObj, TClass AClass) {
    GET_FUNC_ADDR(OpenDialog_InheritsFrom)
    return (BOOL)MySyscall(pOpenDialog_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_Equals)
BOOL
OpenDialog_Equals(TOpenDialog AObj, TObject Obj) {
    GET_FUNC_ADDR(OpenDialog_Equals)
    return (BOOL)MySyscall(pOpenDialog_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_GetHashCode)
int32_t
OpenDialog_GetHashCode(TOpenDialog AObj) {
    GET_FUNC_ADDR(OpenDialog_GetHashCode)
    return (int32_t)MySyscall(pOpenDialog_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_ToString)
char*
OpenDialog_ToString(TOpenDialog AObj) {
    GET_FUNC_ADDR(OpenDialog_ToString)
    return (char*)MySyscall(pOpenDialog_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_GetFiles)
TStrings
OpenDialog_GetFiles(TOpenDialog AObj) {
    GET_FUNC_ADDR(OpenDialog_GetFiles)
    return (TStrings)MySyscall(pOpenDialog_GetFiles, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_GetDefaultExt)
char*
OpenDialog_GetDefaultExt(TOpenDialog AObj) {
    GET_FUNC_ADDR(OpenDialog_GetDefaultExt)
    return (char*)MySyscall(pOpenDialog_GetDefaultExt, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_SetDefaultExt)
void
OpenDialog_SetDefaultExt(TOpenDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(OpenDialog_SetDefaultExt)
    MySyscall(pOpenDialog_SetDefaultExt, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_GetFileName)
char*
OpenDialog_GetFileName(TOpenDialog AObj) {
    GET_FUNC_ADDR(OpenDialog_GetFileName)
    return (char*)MySyscall(pOpenDialog_GetFileName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_SetFileName)
void
OpenDialog_SetFileName(TOpenDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(OpenDialog_SetFileName)
    MySyscall(pOpenDialog_SetFileName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_GetFilter)
char*
OpenDialog_GetFilter(TOpenDialog AObj) {
    GET_FUNC_ADDR(OpenDialog_GetFilter)
    return (char*)MySyscall(pOpenDialog_GetFilter, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_SetFilter)
void
OpenDialog_SetFilter(TOpenDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(OpenDialog_SetFilter)
    MySyscall(pOpenDialog_SetFilter, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_GetFilterIndex)
int32_t
OpenDialog_GetFilterIndex(TOpenDialog AObj) {
    GET_FUNC_ADDR(OpenDialog_GetFilterIndex)
    return (int32_t)MySyscall(pOpenDialog_GetFilterIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_SetFilterIndex)
void
OpenDialog_SetFilterIndex(TOpenDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(OpenDialog_SetFilterIndex)
    MySyscall(pOpenDialog_SetFilterIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_GetInitialDir)
char*
OpenDialog_GetInitialDir(TOpenDialog AObj) {
    GET_FUNC_ADDR(OpenDialog_GetInitialDir)
    return (char*)MySyscall(pOpenDialog_GetInitialDir, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_SetInitialDir)
void
OpenDialog_SetInitialDir(TOpenDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(OpenDialog_SetInitialDir)
    MySyscall(pOpenDialog_SetInitialDir, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_GetOptions)
TOpenOptions
OpenDialog_GetOptions(TOpenDialog AObj) {
    GET_FUNC_ADDR(OpenDialog_GetOptions)
    return (TOpenOptions)MySyscall(pOpenDialog_GetOptions, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_SetOptions)
void
OpenDialog_SetOptions(TOpenDialog AObj, TOpenOptions AValue) {
    GET_FUNC_ADDR(OpenDialog_SetOptions)
    MySyscall(pOpenDialog_SetOptions, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_GetTitle)
char*
OpenDialog_GetTitle(TOpenDialog AObj) {
    GET_FUNC_ADDR(OpenDialog_GetTitle)
    return (char*)MySyscall(pOpenDialog_GetTitle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_SetTitle)
void
OpenDialog_SetTitle(TOpenDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(OpenDialog_SetTitle)
    MySyscall(pOpenDialog_SetTitle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_GetHandle)
HWND
OpenDialog_GetHandle(TOpenDialog AObj) {
    GET_FUNC_ADDR(OpenDialog_GetHandle)
    return (HWND)MySyscall(pOpenDialog_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_SetOnClose)
void
OpenDialog_SetOnClose(TOpenDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(OpenDialog_SetOnClose)
    MySyscall(pOpenDialog_SetOnClose, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_SetOnShow)
void
OpenDialog_SetOnShow(TOpenDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(OpenDialog_SetOnShow)
    MySyscall(pOpenDialog_SetOnShow, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_GetComponentCount)
int32_t
OpenDialog_GetComponentCount(TOpenDialog AObj) {
    GET_FUNC_ADDR(OpenDialog_GetComponentCount)
    return (int32_t)MySyscall(pOpenDialog_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_GetComponentIndex)
int32_t
OpenDialog_GetComponentIndex(TOpenDialog AObj) {
    GET_FUNC_ADDR(OpenDialog_GetComponentIndex)
    return (int32_t)MySyscall(pOpenDialog_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_SetComponentIndex)
void
OpenDialog_SetComponentIndex(TOpenDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(OpenDialog_SetComponentIndex)
    MySyscall(pOpenDialog_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_GetOwner)
TComponent
OpenDialog_GetOwner(TOpenDialog AObj) {
    GET_FUNC_ADDR(OpenDialog_GetOwner)
    return (TComponent)MySyscall(pOpenDialog_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_GetName)
char*
OpenDialog_GetName(TOpenDialog AObj) {
    GET_FUNC_ADDR(OpenDialog_GetName)
    return (char*)MySyscall(pOpenDialog_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_SetName)
void
OpenDialog_SetName(TOpenDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(OpenDialog_SetName)
    MySyscall(pOpenDialog_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_GetTag)
intptr_t
OpenDialog_GetTag(TOpenDialog AObj) {
    GET_FUNC_ADDR(OpenDialog_GetTag)
    return (intptr_t)MySyscall(pOpenDialog_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_SetTag)
void
OpenDialog_SetTag(TOpenDialog AObj, intptr_t AValue) {
    GET_FUNC_ADDR(OpenDialog_SetTag)
    MySyscall(pOpenDialog_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_GetComponents)
TComponent
OpenDialog_GetComponents(TOpenDialog AObj, int32_t AIndex) {
    GET_FUNC_ADDR(OpenDialog_GetComponents)
    return (TComponent)MySyscall(pOpenDialog_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenDialog_StaticClassType)
TClass
OpenDialog_StaticClassType() {
    GET_FUNC_ADDR(OpenDialog_StaticClassType)
    return (TClass)MySyscall(pOpenDialog_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TSaveDialog-------------------

DEFINE_FUNC_PTR(SaveDialog_Create)
TSaveDialog
SaveDialog_Create(TComponent AOwner) {
    GET_FUNC_ADDR(SaveDialog_Create)
    return (TSaveDialog)MySyscall(pSaveDialog_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_Free)
void
SaveDialog_Free(TSaveDialog AObj) {
    GET_FUNC_ADDR(SaveDialog_Free)
    MySyscall(pSaveDialog_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_Execute)
BOOL
SaveDialog_Execute(TSaveDialog AObj) {
    GET_FUNC_ADDR(SaveDialog_Execute)
    return (BOOL)MySyscall(pSaveDialog_Execute, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_FindComponent)
TComponent
SaveDialog_FindComponent(TSaveDialog AObj, CChar char* AName) {
    GET_FUNC_ADDR(SaveDialog_FindComponent)
    return (TComponent)MySyscall(pSaveDialog_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_GetNamePath)
char*
SaveDialog_GetNamePath(TSaveDialog AObj) {
    GET_FUNC_ADDR(SaveDialog_GetNamePath)
    return (char*)MySyscall(pSaveDialog_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_HasParent)
BOOL
SaveDialog_HasParent(TSaveDialog AObj) {
    GET_FUNC_ADDR(SaveDialog_HasParent)
    return (BOOL)MySyscall(pSaveDialog_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_Assign)
void
SaveDialog_Assign(TSaveDialog AObj, TObject Source) {
    GET_FUNC_ADDR(SaveDialog_Assign)
    MySyscall(pSaveDialog_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_ClassType)
TClass
SaveDialog_ClassType(TSaveDialog AObj) {
    GET_FUNC_ADDR(SaveDialog_ClassType)
    return (TClass)MySyscall(pSaveDialog_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_ClassName)
char*
SaveDialog_ClassName(TSaveDialog AObj) {
    GET_FUNC_ADDR(SaveDialog_ClassName)
    return (char*)MySyscall(pSaveDialog_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_InstanceSize)
int32_t
SaveDialog_InstanceSize(TSaveDialog AObj) {
    GET_FUNC_ADDR(SaveDialog_InstanceSize)
    return (int32_t)MySyscall(pSaveDialog_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_InheritsFrom)
BOOL
SaveDialog_InheritsFrom(TSaveDialog AObj, TClass AClass) {
    GET_FUNC_ADDR(SaveDialog_InheritsFrom)
    return (BOOL)MySyscall(pSaveDialog_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_Equals)
BOOL
SaveDialog_Equals(TSaveDialog AObj, TObject Obj) {
    GET_FUNC_ADDR(SaveDialog_Equals)
    return (BOOL)MySyscall(pSaveDialog_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_GetHashCode)
int32_t
SaveDialog_GetHashCode(TSaveDialog AObj) {
    GET_FUNC_ADDR(SaveDialog_GetHashCode)
    return (int32_t)MySyscall(pSaveDialog_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_ToString)
char*
SaveDialog_ToString(TSaveDialog AObj) {
    GET_FUNC_ADDR(SaveDialog_ToString)
    return (char*)MySyscall(pSaveDialog_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_GetFiles)
TStrings
SaveDialog_GetFiles(TSaveDialog AObj) {
    GET_FUNC_ADDR(SaveDialog_GetFiles)
    return (TStrings)MySyscall(pSaveDialog_GetFiles, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_GetDefaultExt)
char*
SaveDialog_GetDefaultExt(TSaveDialog AObj) {
    GET_FUNC_ADDR(SaveDialog_GetDefaultExt)
    return (char*)MySyscall(pSaveDialog_GetDefaultExt, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_SetDefaultExt)
void
SaveDialog_SetDefaultExt(TSaveDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SaveDialog_SetDefaultExt)
    MySyscall(pSaveDialog_SetDefaultExt, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_GetFileName)
char*
SaveDialog_GetFileName(TSaveDialog AObj) {
    GET_FUNC_ADDR(SaveDialog_GetFileName)
    return (char*)MySyscall(pSaveDialog_GetFileName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_SetFileName)
void
SaveDialog_SetFileName(TSaveDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SaveDialog_SetFileName)
    MySyscall(pSaveDialog_SetFileName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_GetFilter)
char*
SaveDialog_GetFilter(TSaveDialog AObj) {
    GET_FUNC_ADDR(SaveDialog_GetFilter)
    return (char*)MySyscall(pSaveDialog_GetFilter, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_SetFilter)
void
SaveDialog_SetFilter(TSaveDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SaveDialog_SetFilter)
    MySyscall(pSaveDialog_SetFilter, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_GetFilterIndex)
int32_t
SaveDialog_GetFilterIndex(TSaveDialog AObj) {
    GET_FUNC_ADDR(SaveDialog_GetFilterIndex)
    return (int32_t)MySyscall(pSaveDialog_GetFilterIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_SetFilterIndex)
void
SaveDialog_SetFilterIndex(TSaveDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(SaveDialog_SetFilterIndex)
    MySyscall(pSaveDialog_SetFilterIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_GetInitialDir)
char*
SaveDialog_GetInitialDir(TSaveDialog AObj) {
    GET_FUNC_ADDR(SaveDialog_GetInitialDir)
    return (char*)MySyscall(pSaveDialog_GetInitialDir, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_SetInitialDir)
void
SaveDialog_SetInitialDir(TSaveDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SaveDialog_SetInitialDir)
    MySyscall(pSaveDialog_SetInitialDir, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_GetOptions)
TOpenOptions
SaveDialog_GetOptions(TSaveDialog AObj) {
    GET_FUNC_ADDR(SaveDialog_GetOptions)
    return (TOpenOptions)MySyscall(pSaveDialog_GetOptions, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_SetOptions)
void
SaveDialog_SetOptions(TSaveDialog AObj, TOpenOptions AValue) {
    GET_FUNC_ADDR(SaveDialog_SetOptions)
    MySyscall(pSaveDialog_SetOptions, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_GetTitle)
char*
SaveDialog_GetTitle(TSaveDialog AObj) {
    GET_FUNC_ADDR(SaveDialog_GetTitle)
    return (char*)MySyscall(pSaveDialog_GetTitle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_SetTitle)
void
SaveDialog_SetTitle(TSaveDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SaveDialog_SetTitle)
    MySyscall(pSaveDialog_SetTitle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_GetHandle)
HWND
SaveDialog_GetHandle(TSaveDialog AObj) {
    GET_FUNC_ADDR(SaveDialog_GetHandle)
    return (HWND)MySyscall(pSaveDialog_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_SetOnClose)
void
SaveDialog_SetOnClose(TSaveDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(SaveDialog_SetOnClose)
    MySyscall(pSaveDialog_SetOnClose, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_SetOnShow)
void
SaveDialog_SetOnShow(TSaveDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(SaveDialog_SetOnShow)
    MySyscall(pSaveDialog_SetOnShow, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_GetComponentCount)
int32_t
SaveDialog_GetComponentCount(TSaveDialog AObj) {
    GET_FUNC_ADDR(SaveDialog_GetComponentCount)
    return (int32_t)MySyscall(pSaveDialog_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_GetComponentIndex)
int32_t
SaveDialog_GetComponentIndex(TSaveDialog AObj) {
    GET_FUNC_ADDR(SaveDialog_GetComponentIndex)
    return (int32_t)MySyscall(pSaveDialog_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_SetComponentIndex)
void
SaveDialog_SetComponentIndex(TSaveDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(SaveDialog_SetComponentIndex)
    MySyscall(pSaveDialog_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_GetOwner)
TComponent
SaveDialog_GetOwner(TSaveDialog AObj) {
    GET_FUNC_ADDR(SaveDialog_GetOwner)
    return (TComponent)MySyscall(pSaveDialog_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_GetName)
char*
SaveDialog_GetName(TSaveDialog AObj) {
    GET_FUNC_ADDR(SaveDialog_GetName)
    return (char*)MySyscall(pSaveDialog_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_SetName)
void
SaveDialog_SetName(TSaveDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SaveDialog_SetName)
    MySyscall(pSaveDialog_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_GetTag)
intptr_t
SaveDialog_GetTag(TSaveDialog AObj) {
    GET_FUNC_ADDR(SaveDialog_GetTag)
    return (intptr_t)MySyscall(pSaveDialog_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_SetTag)
void
SaveDialog_SetTag(TSaveDialog AObj, intptr_t AValue) {
    GET_FUNC_ADDR(SaveDialog_SetTag)
    MySyscall(pSaveDialog_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_GetComponents)
TComponent
SaveDialog_GetComponents(TSaveDialog AObj, int32_t AIndex) {
    GET_FUNC_ADDR(SaveDialog_GetComponents)
    return (TComponent)MySyscall(pSaveDialog_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SaveDialog_StaticClassType)
TClass
SaveDialog_StaticClassType() {
    GET_FUNC_ADDR(SaveDialog_StaticClassType)
    return (TClass)MySyscall(pSaveDialog_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TColorDialog-------------------

DEFINE_FUNC_PTR(ColorDialog_Create)
TColorDialog
ColorDialog_Create(TComponent AOwner) {
    GET_FUNC_ADDR(ColorDialog_Create)
    return (TColorDialog)MySyscall(pColorDialog_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_Free)
void
ColorDialog_Free(TColorDialog AObj) {
    GET_FUNC_ADDR(ColorDialog_Free)
    MySyscall(pColorDialog_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_Execute)
BOOL
ColorDialog_Execute(TColorDialog AObj) {
    GET_FUNC_ADDR(ColorDialog_Execute)
    return (BOOL)MySyscall(pColorDialog_Execute, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_FindComponent)
TComponent
ColorDialog_FindComponent(TColorDialog AObj, CChar char* AName) {
    GET_FUNC_ADDR(ColorDialog_FindComponent)
    return (TComponent)MySyscall(pColorDialog_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_GetNamePath)
char*
ColorDialog_GetNamePath(TColorDialog AObj) {
    GET_FUNC_ADDR(ColorDialog_GetNamePath)
    return (char*)MySyscall(pColorDialog_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_HasParent)
BOOL
ColorDialog_HasParent(TColorDialog AObj) {
    GET_FUNC_ADDR(ColorDialog_HasParent)
    return (BOOL)MySyscall(pColorDialog_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_Assign)
void
ColorDialog_Assign(TColorDialog AObj, TObject Source) {
    GET_FUNC_ADDR(ColorDialog_Assign)
    MySyscall(pColorDialog_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_ClassType)
TClass
ColorDialog_ClassType(TColorDialog AObj) {
    GET_FUNC_ADDR(ColorDialog_ClassType)
    return (TClass)MySyscall(pColorDialog_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_ClassName)
char*
ColorDialog_ClassName(TColorDialog AObj) {
    GET_FUNC_ADDR(ColorDialog_ClassName)
    return (char*)MySyscall(pColorDialog_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_InstanceSize)
int32_t
ColorDialog_InstanceSize(TColorDialog AObj) {
    GET_FUNC_ADDR(ColorDialog_InstanceSize)
    return (int32_t)MySyscall(pColorDialog_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_InheritsFrom)
BOOL
ColorDialog_InheritsFrom(TColorDialog AObj, TClass AClass) {
    GET_FUNC_ADDR(ColorDialog_InheritsFrom)
    return (BOOL)MySyscall(pColorDialog_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_Equals)
BOOL
ColorDialog_Equals(TColorDialog AObj, TObject Obj) {
    GET_FUNC_ADDR(ColorDialog_Equals)
    return (BOOL)MySyscall(pColorDialog_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_GetHashCode)
int32_t
ColorDialog_GetHashCode(TColorDialog AObj) {
    GET_FUNC_ADDR(ColorDialog_GetHashCode)
    return (int32_t)MySyscall(pColorDialog_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_ToString)
char*
ColorDialog_ToString(TColorDialog AObj) {
    GET_FUNC_ADDR(ColorDialog_ToString)
    return (char*)MySyscall(pColorDialog_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_GetColor)
TColor
ColorDialog_GetColor(TColorDialog AObj) {
    GET_FUNC_ADDR(ColorDialog_GetColor)
    return (TColor)MySyscall(pColorDialog_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_SetColor)
void
ColorDialog_SetColor(TColorDialog AObj, TColor AValue) {
    GET_FUNC_ADDR(ColorDialog_SetColor)
    MySyscall(pColorDialog_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_GetCustomColors)
TStrings
ColorDialog_GetCustomColors(TColorDialog AObj) {
    GET_FUNC_ADDR(ColorDialog_GetCustomColors)
    return (TStrings)MySyscall(pColorDialog_GetCustomColors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_SetCustomColors)
void
ColorDialog_SetCustomColors(TColorDialog AObj, TStrings AValue) {
    GET_FUNC_ADDR(ColorDialog_SetCustomColors)
    MySyscall(pColorDialog_SetCustomColors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_GetHandle)
HWND
ColorDialog_GetHandle(TColorDialog AObj) {
    GET_FUNC_ADDR(ColorDialog_GetHandle)
    return (HWND)MySyscall(pColorDialog_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_SetOnClose)
void
ColorDialog_SetOnClose(TColorDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ColorDialog_SetOnClose)
    MySyscall(pColorDialog_SetOnClose, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_SetOnShow)
void
ColorDialog_SetOnShow(TColorDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ColorDialog_SetOnShow)
    MySyscall(pColorDialog_SetOnShow, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_GetComponentCount)
int32_t
ColorDialog_GetComponentCount(TColorDialog AObj) {
    GET_FUNC_ADDR(ColorDialog_GetComponentCount)
    return (int32_t)MySyscall(pColorDialog_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_GetComponentIndex)
int32_t
ColorDialog_GetComponentIndex(TColorDialog AObj) {
    GET_FUNC_ADDR(ColorDialog_GetComponentIndex)
    return (int32_t)MySyscall(pColorDialog_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_SetComponentIndex)
void
ColorDialog_SetComponentIndex(TColorDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorDialog_SetComponentIndex)
    MySyscall(pColorDialog_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_GetOwner)
TComponent
ColorDialog_GetOwner(TColorDialog AObj) {
    GET_FUNC_ADDR(ColorDialog_GetOwner)
    return (TComponent)MySyscall(pColorDialog_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_GetName)
char*
ColorDialog_GetName(TColorDialog AObj) {
    GET_FUNC_ADDR(ColorDialog_GetName)
    return (char*)MySyscall(pColorDialog_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_SetName)
void
ColorDialog_SetName(TColorDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ColorDialog_SetName)
    MySyscall(pColorDialog_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_GetTag)
intptr_t
ColorDialog_GetTag(TColorDialog AObj) {
    GET_FUNC_ADDR(ColorDialog_GetTag)
    return (intptr_t)MySyscall(pColorDialog_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_SetTag)
void
ColorDialog_SetTag(TColorDialog AObj, intptr_t AValue) {
    GET_FUNC_ADDR(ColorDialog_SetTag)
    MySyscall(pColorDialog_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_GetComponents)
TComponent
ColorDialog_GetComponents(TColorDialog AObj, int32_t AIndex) {
    GET_FUNC_ADDR(ColorDialog_GetComponents)
    return (TComponent)MySyscall(pColorDialog_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorDialog_StaticClassType)
TClass
ColorDialog_StaticClassType() {
    GET_FUNC_ADDR(ColorDialog_StaticClassType)
    return (TClass)MySyscall(pColorDialog_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TFontDialog-------------------

DEFINE_FUNC_PTR(FontDialog_Create)
TFontDialog
FontDialog_Create(TComponent AOwner) {
    GET_FUNC_ADDR(FontDialog_Create)
    return (TFontDialog)MySyscall(pFontDialog_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_Free)
void
FontDialog_Free(TFontDialog AObj) {
    GET_FUNC_ADDR(FontDialog_Free)
    MySyscall(pFontDialog_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_Execute)
BOOL
FontDialog_Execute(TFontDialog AObj) {
    GET_FUNC_ADDR(FontDialog_Execute)
    return (BOOL)MySyscall(pFontDialog_Execute, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_FindComponent)
TComponent
FontDialog_FindComponent(TFontDialog AObj, CChar char* AName) {
    GET_FUNC_ADDR(FontDialog_FindComponent)
    return (TComponent)MySyscall(pFontDialog_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_GetNamePath)
char*
FontDialog_GetNamePath(TFontDialog AObj) {
    GET_FUNC_ADDR(FontDialog_GetNamePath)
    return (char*)MySyscall(pFontDialog_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_HasParent)
BOOL
FontDialog_HasParent(TFontDialog AObj) {
    GET_FUNC_ADDR(FontDialog_HasParent)
    return (BOOL)MySyscall(pFontDialog_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_Assign)
void
FontDialog_Assign(TFontDialog AObj, TObject Source) {
    GET_FUNC_ADDR(FontDialog_Assign)
    MySyscall(pFontDialog_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_ClassType)
TClass
FontDialog_ClassType(TFontDialog AObj) {
    GET_FUNC_ADDR(FontDialog_ClassType)
    return (TClass)MySyscall(pFontDialog_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_ClassName)
char*
FontDialog_ClassName(TFontDialog AObj) {
    GET_FUNC_ADDR(FontDialog_ClassName)
    return (char*)MySyscall(pFontDialog_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_InstanceSize)
int32_t
FontDialog_InstanceSize(TFontDialog AObj) {
    GET_FUNC_ADDR(FontDialog_InstanceSize)
    return (int32_t)MySyscall(pFontDialog_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_InheritsFrom)
BOOL
FontDialog_InheritsFrom(TFontDialog AObj, TClass AClass) {
    GET_FUNC_ADDR(FontDialog_InheritsFrom)
    return (BOOL)MySyscall(pFontDialog_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_Equals)
BOOL
FontDialog_Equals(TFontDialog AObj, TObject Obj) {
    GET_FUNC_ADDR(FontDialog_Equals)
    return (BOOL)MySyscall(pFontDialog_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_GetHashCode)
int32_t
FontDialog_GetHashCode(TFontDialog AObj) {
    GET_FUNC_ADDR(FontDialog_GetHashCode)
    return (int32_t)MySyscall(pFontDialog_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_ToString)
char*
FontDialog_ToString(TFontDialog AObj) {
    GET_FUNC_ADDR(FontDialog_ToString)
    return (char*)MySyscall(pFontDialog_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_GetFont)
TFont
FontDialog_GetFont(TFontDialog AObj) {
    GET_FUNC_ADDR(FontDialog_GetFont)
    return (TFont)MySyscall(pFontDialog_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_SetFont)
void
FontDialog_SetFont(TFontDialog AObj, TFont AValue) {
    GET_FUNC_ADDR(FontDialog_SetFont)
    MySyscall(pFontDialog_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_GetOptions)
TFontDialogOptions
FontDialog_GetOptions(TFontDialog AObj) {
    GET_FUNC_ADDR(FontDialog_GetOptions)
    return (TFontDialogOptions)MySyscall(pFontDialog_GetOptions, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_SetOptions)
void
FontDialog_SetOptions(TFontDialog AObj, TFontDialogOptions AValue) {
    GET_FUNC_ADDR(FontDialog_SetOptions)
    MySyscall(pFontDialog_SetOptions, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_GetHandle)
HWND
FontDialog_GetHandle(TFontDialog AObj) {
    GET_FUNC_ADDR(FontDialog_GetHandle)
    return (HWND)MySyscall(pFontDialog_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_SetOnClose)
void
FontDialog_SetOnClose(TFontDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(FontDialog_SetOnClose)
    MySyscall(pFontDialog_SetOnClose, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_SetOnShow)
void
FontDialog_SetOnShow(TFontDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(FontDialog_SetOnShow)
    MySyscall(pFontDialog_SetOnShow, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_GetComponentCount)
int32_t
FontDialog_GetComponentCount(TFontDialog AObj) {
    GET_FUNC_ADDR(FontDialog_GetComponentCount)
    return (int32_t)MySyscall(pFontDialog_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_GetComponentIndex)
int32_t
FontDialog_GetComponentIndex(TFontDialog AObj) {
    GET_FUNC_ADDR(FontDialog_GetComponentIndex)
    return (int32_t)MySyscall(pFontDialog_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_SetComponentIndex)
void
FontDialog_SetComponentIndex(TFontDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(FontDialog_SetComponentIndex)
    MySyscall(pFontDialog_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_GetOwner)
TComponent
FontDialog_GetOwner(TFontDialog AObj) {
    GET_FUNC_ADDR(FontDialog_GetOwner)
    return (TComponent)MySyscall(pFontDialog_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_GetName)
char*
FontDialog_GetName(TFontDialog AObj) {
    GET_FUNC_ADDR(FontDialog_GetName)
    return (char*)MySyscall(pFontDialog_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_SetName)
void
FontDialog_SetName(TFontDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(FontDialog_SetName)
    MySyscall(pFontDialog_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_GetTag)
intptr_t
FontDialog_GetTag(TFontDialog AObj) {
    GET_FUNC_ADDR(FontDialog_GetTag)
    return (intptr_t)MySyscall(pFontDialog_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_SetTag)
void
FontDialog_SetTag(TFontDialog AObj, intptr_t AValue) {
    GET_FUNC_ADDR(FontDialog_SetTag)
    MySyscall(pFontDialog_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_GetComponents)
TComponent
FontDialog_GetComponents(TFontDialog AObj, int32_t AIndex) {
    GET_FUNC_ADDR(FontDialog_GetComponents)
    return (TComponent)MySyscall(pFontDialog_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FontDialog_StaticClassType)
TClass
FontDialog_StaticClassType() {
    GET_FUNC_ADDR(FontDialog_StaticClassType)
    return (TClass)MySyscall(pFontDialog_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TPrintDialog-------------------

DEFINE_FUNC_PTR(PrintDialog_Create)
TPrintDialog
PrintDialog_Create(TComponent AOwner) {
    GET_FUNC_ADDR(PrintDialog_Create)
    return (TPrintDialog)MySyscall(pPrintDialog_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_Free)
void
PrintDialog_Free(TPrintDialog AObj) {
    GET_FUNC_ADDR(PrintDialog_Free)
    MySyscall(pPrintDialog_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_Execute)
BOOL
PrintDialog_Execute(TPrintDialog AObj) {
    GET_FUNC_ADDR(PrintDialog_Execute)
    return (BOOL)MySyscall(pPrintDialog_Execute, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_FindComponent)
TComponent
PrintDialog_FindComponent(TPrintDialog AObj, CChar char* AName) {
    GET_FUNC_ADDR(PrintDialog_FindComponent)
    return (TComponent)MySyscall(pPrintDialog_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_GetNamePath)
char*
PrintDialog_GetNamePath(TPrintDialog AObj) {
    GET_FUNC_ADDR(PrintDialog_GetNamePath)
    return (char*)MySyscall(pPrintDialog_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_HasParent)
BOOL
PrintDialog_HasParent(TPrintDialog AObj) {
    GET_FUNC_ADDR(PrintDialog_HasParent)
    return (BOOL)MySyscall(pPrintDialog_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_Assign)
void
PrintDialog_Assign(TPrintDialog AObj, TObject Source) {
    GET_FUNC_ADDR(PrintDialog_Assign)
    MySyscall(pPrintDialog_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_ClassType)
TClass
PrintDialog_ClassType(TPrintDialog AObj) {
    GET_FUNC_ADDR(PrintDialog_ClassType)
    return (TClass)MySyscall(pPrintDialog_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_ClassName)
char*
PrintDialog_ClassName(TPrintDialog AObj) {
    GET_FUNC_ADDR(PrintDialog_ClassName)
    return (char*)MySyscall(pPrintDialog_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_InstanceSize)
int32_t
PrintDialog_InstanceSize(TPrintDialog AObj) {
    GET_FUNC_ADDR(PrintDialog_InstanceSize)
    return (int32_t)MySyscall(pPrintDialog_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_InheritsFrom)
BOOL
PrintDialog_InheritsFrom(TPrintDialog AObj, TClass AClass) {
    GET_FUNC_ADDR(PrintDialog_InheritsFrom)
    return (BOOL)MySyscall(pPrintDialog_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_Equals)
BOOL
PrintDialog_Equals(TPrintDialog AObj, TObject Obj) {
    GET_FUNC_ADDR(PrintDialog_Equals)
    return (BOOL)MySyscall(pPrintDialog_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_GetHashCode)
int32_t
PrintDialog_GetHashCode(TPrintDialog AObj) {
    GET_FUNC_ADDR(PrintDialog_GetHashCode)
    return (int32_t)MySyscall(pPrintDialog_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_ToString)
char*
PrintDialog_ToString(TPrintDialog AObj) {
    GET_FUNC_ADDR(PrintDialog_ToString)
    return (char*)MySyscall(pPrintDialog_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_GetCollate)
BOOL
PrintDialog_GetCollate(TPrintDialog AObj) {
    GET_FUNC_ADDR(PrintDialog_GetCollate)
    return (BOOL)MySyscall(pPrintDialog_GetCollate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_SetCollate)
void
PrintDialog_SetCollate(TPrintDialog AObj, BOOL AValue) {
    GET_FUNC_ADDR(PrintDialog_SetCollate)
    MySyscall(pPrintDialog_SetCollate, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_GetCopies)
int32_t
PrintDialog_GetCopies(TPrintDialog AObj) {
    GET_FUNC_ADDR(PrintDialog_GetCopies)
    return (int32_t)MySyscall(pPrintDialog_GetCopies, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_SetCopies)
void
PrintDialog_SetCopies(TPrintDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(PrintDialog_SetCopies)
    MySyscall(pPrintDialog_SetCopies, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_GetFromPage)
int32_t
PrintDialog_GetFromPage(TPrintDialog AObj) {
    GET_FUNC_ADDR(PrintDialog_GetFromPage)
    return (int32_t)MySyscall(pPrintDialog_GetFromPage, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_SetFromPage)
void
PrintDialog_SetFromPage(TPrintDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(PrintDialog_SetFromPage)
    MySyscall(pPrintDialog_SetFromPage, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_GetMinPage)
int32_t
PrintDialog_GetMinPage(TPrintDialog AObj) {
    GET_FUNC_ADDR(PrintDialog_GetMinPage)
    return (int32_t)MySyscall(pPrintDialog_GetMinPage, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_SetMinPage)
void
PrintDialog_SetMinPage(TPrintDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(PrintDialog_SetMinPage)
    MySyscall(pPrintDialog_SetMinPage, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_GetMaxPage)
int32_t
PrintDialog_GetMaxPage(TPrintDialog AObj) {
    GET_FUNC_ADDR(PrintDialog_GetMaxPage)
    return (int32_t)MySyscall(pPrintDialog_GetMaxPage, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_SetMaxPage)
void
PrintDialog_SetMaxPage(TPrintDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(PrintDialog_SetMaxPage)
    MySyscall(pPrintDialog_SetMaxPage, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_GetOptions)
TPrintDialogOptions
PrintDialog_GetOptions(TPrintDialog AObj) {
    GET_FUNC_ADDR(PrintDialog_GetOptions)
    return (TPrintDialogOptions)MySyscall(pPrintDialog_GetOptions, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_SetOptions)
void
PrintDialog_SetOptions(TPrintDialog AObj, TPrintDialogOptions AValue) {
    GET_FUNC_ADDR(PrintDialog_SetOptions)
    MySyscall(pPrintDialog_SetOptions, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_GetPrintToFile)
BOOL
PrintDialog_GetPrintToFile(TPrintDialog AObj) {
    GET_FUNC_ADDR(PrintDialog_GetPrintToFile)
    return (BOOL)MySyscall(pPrintDialog_GetPrintToFile, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_SetPrintToFile)
void
PrintDialog_SetPrintToFile(TPrintDialog AObj, BOOL AValue) {
    GET_FUNC_ADDR(PrintDialog_SetPrintToFile)
    MySyscall(pPrintDialog_SetPrintToFile, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_GetPrintRange)
TPrintRange
PrintDialog_GetPrintRange(TPrintDialog AObj) {
    GET_FUNC_ADDR(PrintDialog_GetPrintRange)
    return (TPrintRange)MySyscall(pPrintDialog_GetPrintRange, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_SetPrintRange)
void
PrintDialog_SetPrintRange(TPrintDialog AObj, TPrintRange AValue) {
    GET_FUNC_ADDR(PrintDialog_SetPrintRange)
    MySyscall(pPrintDialog_SetPrintRange, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_GetToPage)
int32_t
PrintDialog_GetToPage(TPrintDialog AObj) {
    GET_FUNC_ADDR(PrintDialog_GetToPage)
    return (int32_t)MySyscall(pPrintDialog_GetToPage, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_SetToPage)
void
PrintDialog_SetToPage(TPrintDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(PrintDialog_SetToPage)
    MySyscall(pPrintDialog_SetToPage, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_GetHandle)
HWND
PrintDialog_GetHandle(TPrintDialog AObj) {
    GET_FUNC_ADDR(PrintDialog_GetHandle)
    return (HWND)MySyscall(pPrintDialog_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_SetOnClose)
void
PrintDialog_SetOnClose(TPrintDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(PrintDialog_SetOnClose)
    MySyscall(pPrintDialog_SetOnClose, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_SetOnShow)
void
PrintDialog_SetOnShow(TPrintDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(PrintDialog_SetOnShow)
    MySyscall(pPrintDialog_SetOnShow, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_GetComponentCount)
int32_t
PrintDialog_GetComponentCount(TPrintDialog AObj) {
    GET_FUNC_ADDR(PrintDialog_GetComponentCount)
    return (int32_t)MySyscall(pPrintDialog_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_GetComponentIndex)
int32_t
PrintDialog_GetComponentIndex(TPrintDialog AObj) {
    GET_FUNC_ADDR(PrintDialog_GetComponentIndex)
    return (int32_t)MySyscall(pPrintDialog_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_SetComponentIndex)
void
PrintDialog_SetComponentIndex(TPrintDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(PrintDialog_SetComponentIndex)
    MySyscall(pPrintDialog_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_GetOwner)
TComponent
PrintDialog_GetOwner(TPrintDialog AObj) {
    GET_FUNC_ADDR(PrintDialog_GetOwner)
    return (TComponent)MySyscall(pPrintDialog_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_GetName)
char*
PrintDialog_GetName(TPrintDialog AObj) {
    GET_FUNC_ADDR(PrintDialog_GetName)
    return (char*)MySyscall(pPrintDialog_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_SetName)
void
PrintDialog_SetName(TPrintDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(PrintDialog_SetName)
    MySyscall(pPrintDialog_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_GetTag)
intptr_t
PrintDialog_GetTag(TPrintDialog AObj) {
    GET_FUNC_ADDR(PrintDialog_GetTag)
    return (intptr_t)MySyscall(pPrintDialog_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_SetTag)
void
PrintDialog_SetTag(TPrintDialog AObj, intptr_t AValue) {
    GET_FUNC_ADDR(PrintDialog_SetTag)
    MySyscall(pPrintDialog_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_GetComponents)
TComponent
PrintDialog_GetComponents(TPrintDialog AObj, int32_t AIndex) {
    GET_FUNC_ADDR(PrintDialog_GetComponents)
    return (TComponent)MySyscall(pPrintDialog_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrintDialog_StaticClassType)
TClass
PrintDialog_StaticClassType() {
    GET_FUNC_ADDR(PrintDialog_StaticClassType)
    return (TClass)MySyscall(pPrintDialog_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TOpenPictureDialog-------------------

DEFINE_FUNC_PTR(OpenPictureDialog_Create)
TOpenPictureDialog
OpenPictureDialog_Create(TComponent AOwner) {
    GET_FUNC_ADDR(OpenPictureDialog_Create)
    return (TOpenPictureDialog)MySyscall(pOpenPictureDialog_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_Free)
void
OpenPictureDialog_Free(TOpenPictureDialog AObj) {
    GET_FUNC_ADDR(OpenPictureDialog_Free)
    MySyscall(pOpenPictureDialog_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_Execute)
BOOL
OpenPictureDialog_Execute(TOpenPictureDialog AObj) {
    GET_FUNC_ADDR(OpenPictureDialog_Execute)
    return (BOOL)MySyscall(pOpenPictureDialog_Execute, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_FindComponent)
TComponent
OpenPictureDialog_FindComponent(TOpenPictureDialog AObj, CChar char* AName) {
    GET_FUNC_ADDR(OpenPictureDialog_FindComponent)
    return (TComponent)MySyscall(pOpenPictureDialog_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_GetNamePath)
char*
OpenPictureDialog_GetNamePath(TOpenPictureDialog AObj) {
    GET_FUNC_ADDR(OpenPictureDialog_GetNamePath)
    return (char*)MySyscall(pOpenPictureDialog_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_HasParent)
BOOL
OpenPictureDialog_HasParent(TOpenPictureDialog AObj) {
    GET_FUNC_ADDR(OpenPictureDialog_HasParent)
    return (BOOL)MySyscall(pOpenPictureDialog_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_Assign)
void
OpenPictureDialog_Assign(TOpenPictureDialog AObj, TObject Source) {
    GET_FUNC_ADDR(OpenPictureDialog_Assign)
    MySyscall(pOpenPictureDialog_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_ClassType)
TClass
OpenPictureDialog_ClassType(TOpenPictureDialog AObj) {
    GET_FUNC_ADDR(OpenPictureDialog_ClassType)
    return (TClass)MySyscall(pOpenPictureDialog_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_ClassName)
char*
OpenPictureDialog_ClassName(TOpenPictureDialog AObj) {
    GET_FUNC_ADDR(OpenPictureDialog_ClassName)
    return (char*)MySyscall(pOpenPictureDialog_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_InstanceSize)
int32_t
OpenPictureDialog_InstanceSize(TOpenPictureDialog AObj) {
    GET_FUNC_ADDR(OpenPictureDialog_InstanceSize)
    return (int32_t)MySyscall(pOpenPictureDialog_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_InheritsFrom)
BOOL
OpenPictureDialog_InheritsFrom(TOpenPictureDialog AObj, TClass AClass) {
    GET_FUNC_ADDR(OpenPictureDialog_InheritsFrom)
    return (BOOL)MySyscall(pOpenPictureDialog_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_Equals)
BOOL
OpenPictureDialog_Equals(TOpenPictureDialog AObj, TObject Obj) {
    GET_FUNC_ADDR(OpenPictureDialog_Equals)
    return (BOOL)MySyscall(pOpenPictureDialog_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_GetHashCode)
int32_t
OpenPictureDialog_GetHashCode(TOpenPictureDialog AObj) {
    GET_FUNC_ADDR(OpenPictureDialog_GetHashCode)
    return (int32_t)MySyscall(pOpenPictureDialog_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_ToString)
char*
OpenPictureDialog_ToString(TOpenPictureDialog AObj) {
    GET_FUNC_ADDR(OpenPictureDialog_ToString)
    return (char*)MySyscall(pOpenPictureDialog_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_GetFilter)
char*
OpenPictureDialog_GetFilter(TOpenPictureDialog AObj) {
    GET_FUNC_ADDR(OpenPictureDialog_GetFilter)
    return (char*)MySyscall(pOpenPictureDialog_GetFilter, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_SetFilter)
void
OpenPictureDialog_SetFilter(TOpenPictureDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(OpenPictureDialog_SetFilter)
    MySyscall(pOpenPictureDialog_SetFilter, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_GetFiles)
TStrings
OpenPictureDialog_GetFiles(TOpenPictureDialog AObj) {
    GET_FUNC_ADDR(OpenPictureDialog_GetFiles)
    return (TStrings)MySyscall(pOpenPictureDialog_GetFiles, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_GetDefaultExt)
char*
OpenPictureDialog_GetDefaultExt(TOpenPictureDialog AObj) {
    GET_FUNC_ADDR(OpenPictureDialog_GetDefaultExt)
    return (char*)MySyscall(pOpenPictureDialog_GetDefaultExt, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_SetDefaultExt)
void
OpenPictureDialog_SetDefaultExt(TOpenPictureDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(OpenPictureDialog_SetDefaultExt)
    MySyscall(pOpenPictureDialog_SetDefaultExt, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_GetFileName)
char*
OpenPictureDialog_GetFileName(TOpenPictureDialog AObj) {
    GET_FUNC_ADDR(OpenPictureDialog_GetFileName)
    return (char*)MySyscall(pOpenPictureDialog_GetFileName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_SetFileName)
void
OpenPictureDialog_SetFileName(TOpenPictureDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(OpenPictureDialog_SetFileName)
    MySyscall(pOpenPictureDialog_SetFileName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_GetFilterIndex)
int32_t
OpenPictureDialog_GetFilterIndex(TOpenPictureDialog AObj) {
    GET_FUNC_ADDR(OpenPictureDialog_GetFilterIndex)
    return (int32_t)MySyscall(pOpenPictureDialog_GetFilterIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_SetFilterIndex)
void
OpenPictureDialog_SetFilterIndex(TOpenPictureDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(OpenPictureDialog_SetFilterIndex)
    MySyscall(pOpenPictureDialog_SetFilterIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_GetInitialDir)
char*
OpenPictureDialog_GetInitialDir(TOpenPictureDialog AObj) {
    GET_FUNC_ADDR(OpenPictureDialog_GetInitialDir)
    return (char*)MySyscall(pOpenPictureDialog_GetInitialDir, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_SetInitialDir)
void
OpenPictureDialog_SetInitialDir(TOpenPictureDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(OpenPictureDialog_SetInitialDir)
    MySyscall(pOpenPictureDialog_SetInitialDir, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_GetOptions)
TOpenOptions
OpenPictureDialog_GetOptions(TOpenPictureDialog AObj) {
    GET_FUNC_ADDR(OpenPictureDialog_GetOptions)
    return (TOpenOptions)MySyscall(pOpenPictureDialog_GetOptions, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_SetOptions)
void
OpenPictureDialog_SetOptions(TOpenPictureDialog AObj, TOpenOptions AValue) {
    GET_FUNC_ADDR(OpenPictureDialog_SetOptions)
    MySyscall(pOpenPictureDialog_SetOptions, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_GetTitle)
char*
OpenPictureDialog_GetTitle(TOpenPictureDialog AObj) {
    GET_FUNC_ADDR(OpenPictureDialog_GetTitle)
    return (char*)MySyscall(pOpenPictureDialog_GetTitle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_SetTitle)
void
OpenPictureDialog_SetTitle(TOpenPictureDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(OpenPictureDialog_SetTitle)
    MySyscall(pOpenPictureDialog_SetTitle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_GetHandle)
HWND
OpenPictureDialog_GetHandle(TOpenPictureDialog AObj) {
    GET_FUNC_ADDR(OpenPictureDialog_GetHandle)
    return (HWND)MySyscall(pOpenPictureDialog_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_SetOnClose)
void
OpenPictureDialog_SetOnClose(TOpenPictureDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(OpenPictureDialog_SetOnClose)
    MySyscall(pOpenPictureDialog_SetOnClose, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_SetOnShow)
void
OpenPictureDialog_SetOnShow(TOpenPictureDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(OpenPictureDialog_SetOnShow)
    MySyscall(pOpenPictureDialog_SetOnShow, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_GetComponentCount)
int32_t
OpenPictureDialog_GetComponentCount(TOpenPictureDialog AObj) {
    GET_FUNC_ADDR(OpenPictureDialog_GetComponentCount)
    return (int32_t)MySyscall(pOpenPictureDialog_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_GetComponentIndex)
int32_t
OpenPictureDialog_GetComponentIndex(TOpenPictureDialog AObj) {
    GET_FUNC_ADDR(OpenPictureDialog_GetComponentIndex)
    return (int32_t)MySyscall(pOpenPictureDialog_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_SetComponentIndex)
void
OpenPictureDialog_SetComponentIndex(TOpenPictureDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(OpenPictureDialog_SetComponentIndex)
    MySyscall(pOpenPictureDialog_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_GetOwner)
TComponent
OpenPictureDialog_GetOwner(TOpenPictureDialog AObj) {
    GET_FUNC_ADDR(OpenPictureDialog_GetOwner)
    return (TComponent)MySyscall(pOpenPictureDialog_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_GetName)
char*
OpenPictureDialog_GetName(TOpenPictureDialog AObj) {
    GET_FUNC_ADDR(OpenPictureDialog_GetName)
    return (char*)MySyscall(pOpenPictureDialog_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_SetName)
void
OpenPictureDialog_SetName(TOpenPictureDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(OpenPictureDialog_SetName)
    MySyscall(pOpenPictureDialog_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_GetTag)
intptr_t
OpenPictureDialog_GetTag(TOpenPictureDialog AObj) {
    GET_FUNC_ADDR(OpenPictureDialog_GetTag)
    return (intptr_t)MySyscall(pOpenPictureDialog_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_SetTag)
void
OpenPictureDialog_SetTag(TOpenPictureDialog AObj, intptr_t AValue) {
    GET_FUNC_ADDR(OpenPictureDialog_SetTag)
    MySyscall(pOpenPictureDialog_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_GetComponents)
TComponent
OpenPictureDialog_GetComponents(TOpenPictureDialog AObj, int32_t AIndex) {
    GET_FUNC_ADDR(OpenPictureDialog_GetComponents)
    return (TComponent)MySyscall(pOpenPictureDialog_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(OpenPictureDialog_StaticClassType)
TClass
OpenPictureDialog_StaticClassType() {
    GET_FUNC_ADDR(OpenPictureDialog_StaticClassType)
    return (TClass)MySyscall(pOpenPictureDialog_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TSavePictureDialog-------------------

DEFINE_FUNC_PTR(SavePictureDialog_Create)
TSavePictureDialog
SavePictureDialog_Create(TComponent AOwner) {
    GET_FUNC_ADDR(SavePictureDialog_Create)
    return (TSavePictureDialog)MySyscall(pSavePictureDialog_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_Free)
void
SavePictureDialog_Free(TSavePictureDialog AObj) {
    GET_FUNC_ADDR(SavePictureDialog_Free)
    MySyscall(pSavePictureDialog_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_Execute)
BOOL
SavePictureDialog_Execute(TSavePictureDialog AObj) {
    GET_FUNC_ADDR(SavePictureDialog_Execute)
    return (BOOL)MySyscall(pSavePictureDialog_Execute, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_FindComponent)
TComponent
SavePictureDialog_FindComponent(TSavePictureDialog AObj, CChar char* AName) {
    GET_FUNC_ADDR(SavePictureDialog_FindComponent)
    return (TComponent)MySyscall(pSavePictureDialog_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_GetNamePath)
char*
SavePictureDialog_GetNamePath(TSavePictureDialog AObj) {
    GET_FUNC_ADDR(SavePictureDialog_GetNamePath)
    return (char*)MySyscall(pSavePictureDialog_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_HasParent)
BOOL
SavePictureDialog_HasParent(TSavePictureDialog AObj) {
    GET_FUNC_ADDR(SavePictureDialog_HasParent)
    return (BOOL)MySyscall(pSavePictureDialog_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_Assign)
void
SavePictureDialog_Assign(TSavePictureDialog AObj, TObject Source) {
    GET_FUNC_ADDR(SavePictureDialog_Assign)
    MySyscall(pSavePictureDialog_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_ClassType)
TClass
SavePictureDialog_ClassType(TSavePictureDialog AObj) {
    GET_FUNC_ADDR(SavePictureDialog_ClassType)
    return (TClass)MySyscall(pSavePictureDialog_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_ClassName)
char*
SavePictureDialog_ClassName(TSavePictureDialog AObj) {
    GET_FUNC_ADDR(SavePictureDialog_ClassName)
    return (char*)MySyscall(pSavePictureDialog_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_InstanceSize)
int32_t
SavePictureDialog_InstanceSize(TSavePictureDialog AObj) {
    GET_FUNC_ADDR(SavePictureDialog_InstanceSize)
    return (int32_t)MySyscall(pSavePictureDialog_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_InheritsFrom)
BOOL
SavePictureDialog_InheritsFrom(TSavePictureDialog AObj, TClass AClass) {
    GET_FUNC_ADDR(SavePictureDialog_InheritsFrom)
    return (BOOL)MySyscall(pSavePictureDialog_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_Equals)
BOOL
SavePictureDialog_Equals(TSavePictureDialog AObj, TObject Obj) {
    GET_FUNC_ADDR(SavePictureDialog_Equals)
    return (BOOL)MySyscall(pSavePictureDialog_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_GetHashCode)
int32_t
SavePictureDialog_GetHashCode(TSavePictureDialog AObj) {
    GET_FUNC_ADDR(SavePictureDialog_GetHashCode)
    return (int32_t)MySyscall(pSavePictureDialog_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_ToString)
char*
SavePictureDialog_ToString(TSavePictureDialog AObj) {
    GET_FUNC_ADDR(SavePictureDialog_ToString)
    return (char*)MySyscall(pSavePictureDialog_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_GetFilter)
char*
SavePictureDialog_GetFilter(TSavePictureDialog AObj) {
    GET_FUNC_ADDR(SavePictureDialog_GetFilter)
    return (char*)MySyscall(pSavePictureDialog_GetFilter, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_SetFilter)
void
SavePictureDialog_SetFilter(TSavePictureDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SavePictureDialog_SetFilter)
    MySyscall(pSavePictureDialog_SetFilter, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_GetFiles)
TStrings
SavePictureDialog_GetFiles(TSavePictureDialog AObj) {
    GET_FUNC_ADDR(SavePictureDialog_GetFiles)
    return (TStrings)MySyscall(pSavePictureDialog_GetFiles, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_GetDefaultExt)
char*
SavePictureDialog_GetDefaultExt(TSavePictureDialog AObj) {
    GET_FUNC_ADDR(SavePictureDialog_GetDefaultExt)
    return (char*)MySyscall(pSavePictureDialog_GetDefaultExt, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_SetDefaultExt)
void
SavePictureDialog_SetDefaultExt(TSavePictureDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SavePictureDialog_SetDefaultExt)
    MySyscall(pSavePictureDialog_SetDefaultExt, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_GetFileName)
char*
SavePictureDialog_GetFileName(TSavePictureDialog AObj) {
    GET_FUNC_ADDR(SavePictureDialog_GetFileName)
    return (char*)MySyscall(pSavePictureDialog_GetFileName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_SetFileName)
void
SavePictureDialog_SetFileName(TSavePictureDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SavePictureDialog_SetFileName)
    MySyscall(pSavePictureDialog_SetFileName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_GetFilterIndex)
int32_t
SavePictureDialog_GetFilterIndex(TSavePictureDialog AObj) {
    GET_FUNC_ADDR(SavePictureDialog_GetFilterIndex)
    return (int32_t)MySyscall(pSavePictureDialog_GetFilterIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_SetFilterIndex)
void
SavePictureDialog_SetFilterIndex(TSavePictureDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(SavePictureDialog_SetFilterIndex)
    MySyscall(pSavePictureDialog_SetFilterIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_GetInitialDir)
char*
SavePictureDialog_GetInitialDir(TSavePictureDialog AObj) {
    GET_FUNC_ADDR(SavePictureDialog_GetInitialDir)
    return (char*)MySyscall(pSavePictureDialog_GetInitialDir, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_SetInitialDir)
void
SavePictureDialog_SetInitialDir(TSavePictureDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SavePictureDialog_SetInitialDir)
    MySyscall(pSavePictureDialog_SetInitialDir, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_GetOptions)
TOpenOptions
SavePictureDialog_GetOptions(TSavePictureDialog AObj) {
    GET_FUNC_ADDR(SavePictureDialog_GetOptions)
    return (TOpenOptions)MySyscall(pSavePictureDialog_GetOptions, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_SetOptions)
void
SavePictureDialog_SetOptions(TSavePictureDialog AObj, TOpenOptions AValue) {
    GET_FUNC_ADDR(SavePictureDialog_SetOptions)
    MySyscall(pSavePictureDialog_SetOptions, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_GetTitle)
char*
SavePictureDialog_GetTitle(TSavePictureDialog AObj) {
    GET_FUNC_ADDR(SavePictureDialog_GetTitle)
    return (char*)MySyscall(pSavePictureDialog_GetTitle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_SetTitle)
void
SavePictureDialog_SetTitle(TSavePictureDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SavePictureDialog_SetTitle)
    MySyscall(pSavePictureDialog_SetTitle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_GetHandle)
HWND
SavePictureDialog_GetHandle(TSavePictureDialog AObj) {
    GET_FUNC_ADDR(SavePictureDialog_GetHandle)
    return (HWND)MySyscall(pSavePictureDialog_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_SetOnClose)
void
SavePictureDialog_SetOnClose(TSavePictureDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(SavePictureDialog_SetOnClose)
    MySyscall(pSavePictureDialog_SetOnClose, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_SetOnShow)
void
SavePictureDialog_SetOnShow(TSavePictureDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(SavePictureDialog_SetOnShow)
    MySyscall(pSavePictureDialog_SetOnShow, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_GetComponentCount)
int32_t
SavePictureDialog_GetComponentCount(TSavePictureDialog AObj) {
    GET_FUNC_ADDR(SavePictureDialog_GetComponentCount)
    return (int32_t)MySyscall(pSavePictureDialog_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_GetComponentIndex)
int32_t
SavePictureDialog_GetComponentIndex(TSavePictureDialog AObj) {
    GET_FUNC_ADDR(SavePictureDialog_GetComponentIndex)
    return (int32_t)MySyscall(pSavePictureDialog_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_SetComponentIndex)
void
SavePictureDialog_SetComponentIndex(TSavePictureDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(SavePictureDialog_SetComponentIndex)
    MySyscall(pSavePictureDialog_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_GetOwner)
TComponent
SavePictureDialog_GetOwner(TSavePictureDialog AObj) {
    GET_FUNC_ADDR(SavePictureDialog_GetOwner)
    return (TComponent)MySyscall(pSavePictureDialog_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_GetName)
char*
SavePictureDialog_GetName(TSavePictureDialog AObj) {
    GET_FUNC_ADDR(SavePictureDialog_GetName)
    return (char*)MySyscall(pSavePictureDialog_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_SetName)
void
SavePictureDialog_SetName(TSavePictureDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SavePictureDialog_SetName)
    MySyscall(pSavePictureDialog_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_GetTag)
intptr_t
SavePictureDialog_GetTag(TSavePictureDialog AObj) {
    GET_FUNC_ADDR(SavePictureDialog_GetTag)
    return (intptr_t)MySyscall(pSavePictureDialog_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_SetTag)
void
SavePictureDialog_SetTag(TSavePictureDialog AObj, intptr_t AValue) {
    GET_FUNC_ADDR(SavePictureDialog_SetTag)
    MySyscall(pSavePictureDialog_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_GetComponents)
TComponent
SavePictureDialog_GetComponents(TSavePictureDialog AObj, int32_t AIndex) {
    GET_FUNC_ADDR(SavePictureDialog_GetComponents)
    return (TComponent)MySyscall(pSavePictureDialog_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SavePictureDialog_StaticClassType)
TClass
SavePictureDialog_StaticClassType() {
    GET_FUNC_ADDR(SavePictureDialog_StaticClassType)
    return (TClass)MySyscall(pSavePictureDialog_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TSelectDirectoryDialog-------------------

DEFINE_FUNC_PTR(SelectDirectoryDialog_Create)
TSelectDirectoryDialog
SelectDirectoryDialog_Create(TComponent AOwner) {
    GET_FUNC_ADDR(SelectDirectoryDialog_Create)
    return (TSelectDirectoryDialog)MySyscall(pSelectDirectoryDialog_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_Free)
void
SelectDirectoryDialog_Free(TSelectDirectoryDialog AObj) {
    GET_FUNC_ADDR(SelectDirectoryDialog_Free)
    MySyscall(pSelectDirectoryDialog_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_Execute)
BOOL
SelectDirectoryDialog_Execute(TSelectDirectoryDialog AObj) {
    GET_FUNC_ADDR(SelectDirectoryDialog_Execute)
    return (BOOL)MySyscall(pSelectDirectoryDialog_Execute, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_FindComponent)
TComponent
SelectDirectoryDialog_FindComponent(TSelectDirectoryDialog AObj, CChar char* AName) {
    GET_FUNC_ADDR(SelectDirectoryDialog_FindComponent)
    return (TComponent)MySyscall(pSelectDirectoryDialog_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_GetNamePath)
char*
SelectDirectoryDialog_GetNamePath(TSelectDirectoryDialog AObj) {
    GET_FUNC_ADDR(SelectDirectoryDialog_GetNamePath)
    return (char*)MySyscall(pSelectDirectoryDialog_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_HasParent)
BOOL
SelectDirectoryDialog_HasParent(TSelectDirectoryDialog AObj) {
    GET_FUNC_ADDR(SelectDirectoryDialog_HasParent)
    return (BOOL)MySyscall(pSelectDirectoryDialog_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_Assign)
void
SelectDirectoryDialog_Assign(TSelectDirectoryDialog AObj, TObject Source) {
    GET_FUNC_ADDR(SelectDirectoryDialog_Assign)
    MySyscall(pSelectDirectoryDialog_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_ClassType)
TClass
SelectDirectoryDialog_ClassType(TSelectDirectoryDialog AObj) {
    GET_FUNC_ADDR(SelectDirectoryDialog_ClassType)
    return (TClass)MySyscall(pSelectDirectoryDialog_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_ClassName)
char*
SelectDirectoryDialog_ClassName(TSelectDirectoryDialog AObj) {
    GET_FUNC_ADDR(SelectDirectoryDialog_ClassName)
    return (char*)MySyscall(pSelectDirectoryDialog_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_InstanceSize)
int32_t
SelectDirectoryDialog_InstanceSize(TSelectDirectoryDialog AObj) {
    GET_FUNC_ADDR(SelectDirectoryDialog_InstanceSize)
    return (int32_t)MySyscall(pSelectDirectoryDialog_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_InheritsFrom)
BOOL
SelectDirectoryDialog_InheritsFrom(TSelectDirectoryDialog AObj, TClass AClass) {
    GET_FUNC_ADDR(SelectDirectoryDialog_InheritsFrom)
    return (BOOL)MySyscall(pSelectDirectoryDialog_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_Equals)
BOOL
SelectDirectoryDialog_Equals(TSelectDirectoryDialog AObj, TObject Obj) {
    GET_FUNC_ADDR(SelectDirectoryDialog_Equals)
    return (BOOL)MySyscall(pSelectDirectoryDialog_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_GetHashCode)
int32_t
SelectDirectoryDialog_GetHashCode(TSelectDirectoryDialog AObj) {
    GET_FUNC_ADDR(SelectDirectoryDialog_GetHashCode)
    return (int32_t)MySyscall(pSelectDirectoryDialog_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_ToString)
char*
SelectDirectoryDialog_ToString(TSelectDirectoryDialog AObj) {
    GET_FUNC_ADDR(SelectDirectoryDialog_ToString)
    return (char*)MySyscall(pSelectDirectoryDialog_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_GetFiles)
TStrings
SelectDirectoryDialog_GetFiles(TSelectDirectoryDialog AObj) {
    GET_FUNC_ADDR(SelectDirectoryDialog_GetFiles)
    return (TStrings)MySyscall(pSelectDirectoryDialog_GetFiles, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_GetDefaultExt)
char*
SelectDirectoryDialog_GetDefaultExt(TSelectDirectoryDialog AObj) {
    GET_FUNC_ADDR(SelectDirectoryDialog_GetDefaultExt)
    return (char*)MySyscall(pSelectDirectoryDialog_GetDefaultExt, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_SetDefaultExt)
void
SelectDirectoryDialog_SetDefaultExt(TSelectDirectoryDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SelectDirectoryDialog_SetDefaultExt)
    MySyscall(pSelectDirectoryDialog_SetDefaultExt, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_GetFileName)
char*
SelectDirectoryDialog_GetFileName(TSelectDirectoryDialog AObj) {
    GET_FUNC_ADDR(SelectDirectoryDialog_GetFileName)
    return (char*)MySyscall(pSelectDirectoryDialog_GetFileName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_SetFileName)
void
SelectDirectoryDialog_SetFileName(TSelectDirectoryDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SelectDirectoryDialog_SetFileName)
    MySyscall(pSelectDirectoryDialog_SetFileName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_GetFilter)
char*
SelectDirectoryDialog_GetFilter(TSelectDirectoryDialog AObj) {
    GET_FUNC_ADDR(SelectDirectoryDialog_GetFilter)
    return (char*)MySyscall(pSelectDirectoryDialog_GetFilter, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_SetFilter)
void
SelectDirectoryDialog_SetFilter(TSelectDirectoryDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SelectDirectoryDialog_SetFilter)
    MySyscall(pSelectDirectoryDialog_SetFilter, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_GetFilterIndex)
int32_t
SelectDirectoryDialog_GetFilterIndex(TSelectDirectoryDialog AObj) {
    GET_FUNC_ADDR(SelectDirectoryDialog_GetFilterIndex)
    return (int32_t)MySyscall(pSelectDirectoryDialog_GetFilterIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_SetFilterIndex)
void
SelectDirectoryDialog_SetFilterIndex(TSelectDirectoryDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(SelectDirectoryDialog_SetFilterIndex)
    MySyscall(pSelectDirectoryDialog_SetFilterIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_GetInitialDir)
char*
SelectDirectoryDialog_GetInitialDir(TSelectDirectoryDialog AObj) {
    GET_FUNC_ADDR(SelectDirectoryDialog_GetInitialDir)
    return (char*)MySyscall(pSelectDirectoryDialog_GetInitialDir, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_SetInitialDir)
void
SelectDirectoryDialog_SetInitialDir(TSelectDirectoryDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SelectDirectoryDialog_SetInitialDir)
    MySyscall(pSelectDirectoryDialog_SetInitialDir, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_GetOptions)
TOpenOptions
SelectDirectoryDialog_GetOptions(TSelectDirectoryDialog AObj) {
    GET_FUNC_ADDR(SelectDirectoryDialog_GetOptions)
    return (TOpenOptions)MySyscall(pSelectDirectoryDialog_GetOptions, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_SetOptions)
void
SelectDirectoryDialog_SetOptions(TSelectDirectoryDialog AObj, TOpenOptions AValue) {
    GET_FUNC_ADDR(SelectDirectoryDialog_SetOptions)
    MySyscall(pSelectDirectoryDialog_SetOptions, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_GetTitle)
char*
SelectDirectoryDialog_GetTitle(TSelectDirectoryDialog AObj) {
    GET_FUNC_ADDR(SelectDirectoryDialog_GetTitle)
    return (char*)MySyscall(pSelectDirectoryDialog_GetTitle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_SetTitle)
void
SelectDirectoryDialog_SetTitle(TSelectDirectoryDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SelectDirectoryDialog_SetTitle)
    MySyscall(pSelectDirectoryDialog_SetTitle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_GetHandle)
HWND
SelectDirectoryDialog_GetHandle(TSelectDirectoryDialog AObj) {
    GET_FUNC_ADDR(SelectDirectoryDialog_GetHandle)
    return (HWND)MySyscall(pSelectDirectoryDialog_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_SetOnClose)
void
SelectDirectoryDialog_SetOnClose(TSelectDirectoryDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(SelectDirectoryDialog_SetOnClose)
    MySyscall(pSelectDirectoryDialog_SetOnClose, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_SetOnShow)
void
SelectDirectoryDialog_SetOnShow(TSelectDirectoryDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(SelectDirectoryDialog_SetOnShow)
    MySyscall(pSelectDirectoryDialog_SetOnShow, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_GetComponentCount)
int32_t
SelectDirectoryDialog_GetComponentCount(TSelectDirectoryDialog AObj) {
    GET_FUNC_ADDR(SelectDirectoryDialog_GetComponentCount)
    return (int32_t)MySyscall(pSelectDirectoryDialog_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_GetComponentIndex)
int32_t
SelectDirectoryDialog_GetComponentIndex(TSelectDirectoryDialog AObj) {
    GET_FUNC_ADDR(SelectDirectoryDialog_GetComponentIndex)
    return (int32_t)MySyscall(pSelectDirectoryDialog_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_SetComponentIndex)
void
SelectDirectoryDialog_SetComponentIndex(TSelectDirectoryDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(SelectDirectoryDialog_SetComponentIndex)
    MySyscall(pSelectDirectoryDialog_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_GetOwner)
TComponent
SelectDirectoryDialog_GetOwner(TSelectDirectoryDialog AObj) {
    GET_FUNC_ADDR(SelectDirectoryDialog_GetOwner)
    return (TComponent)MySyscall(pSelectDirectoryDialog_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_GetName)
char*
SelectDirectoryDialog_GetName(TSelectDirectoryDialog AObj) {
    GET_FUNC_ADDR(SelectDirectoryDialog_GetName)
    return (char*)MySyscall(pSelectDirectoryDialog_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_SetName)
void
SelectDirectoryDialog_SetName(TSelectDirectoryDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SelectDirectoryDialog_SetName)
    MySyscall(pSelectDirectoryDialog_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_GetTag)
intptr_t
SelectDirectoryDialog_GetTag(TSelectDirectoryDialog AObj) {
    GET_FUNC_ADDR(SelectDirectoryDialog_GetTag)
    return (intptr_t)MySyscall(pSelectDirectoryDialog_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_SetTag)
void
SelectDirectoryDialog_SetTag(TSelectDirectoryDialog AObj, intptr_t AValue) {
    GET_FUNC_ADDR(SelectDirectoryDialog_SetTag)
    MySyscall(pSelectDirectoryDialog_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_GetComponents)
TComponent
SelectDirectoryDialog_GetComponents(TSelectDirectoryDialog AObj, int32_t AIndex) {
    GET_FUNC_ADDR(SelectDirectoryDialog_GetComponents)
    return (TComponent)MySyscall(pSelectDirectoryDialog_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SelectDirectoryDialog_StaticClassType)
TClass
SelectDirectoryDialog_StaticClassType() {
    GET_FUNC_ADDR(SelectDirectoryDialog_StaticClassType)
    return (TClass)MySyscall(pSelectDirectoryDialog_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TRichEdit-------------------

DEFINE_FUNC_PTR(RichEdit_Create)
TRichEdit
RichEdit_Create(TComponent AOwner) {
    GET_FUNC_ADDR(RichEdit_Create)
    return (TRichEdit)MySyscall(pRichEdit_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_Free)
void
RichEdit_Free(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_Free)
    MySyscall(pRichEdit_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_Clear)
void
RichEdit_Clear(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_Clear)
    MySyscall(pRichEdit_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_FindText)
int32_t
RichEdit_FindText(TRichEdit AObj, CChar char* SearchStr, int32_t StartPos, int32_t Length, TSearchTypes Options) {
    GET_FUNC_ADDR(RichEdit_FindText)
    return (int32_t)MySyscall(pRichEdit_FindText, 5, AObj, SearchStr, StartPos, Length, Options ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_ClearSelection)
void
RichEdit_ClearSelection(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_ClearSelection)
    MySyscall(pRichEdit_ClearSelection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_CopyToClipboard)
void
RichEdit_CopyToClipboard(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_CopyToClipboard)
    MySyscall(pRichEdit_CopyToClipboard, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_CutToClipboard)
void
RichEdit_CutToClipboard(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_CutToClipboard)
    MySyscall(pRichEdit_CutToClipboard, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_PasteFromClipboard)
void
RichEdit_PasteFromClipboard(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_PasteFromClipboard)
    MySyscall(pRichEdit_PasteFromClipboard, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_Undo)
void
RichEdit_Undo(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_Undo)
    MySyscall(pRichEdit_Undo, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SelectAll)
void
RichEdit_SelectAll(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_SelectAll)
    MySyscall(pRichEdit_SelectAll, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_CanFocus)
BOOL
RichEdit_CanFocus(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_CanFocus)
    return (BOOL)MySyscall(pRichEdit_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_ContainsControl)
BOOL
RichEdit_ContainsControl(TRichEdit AObj, TControl Control) {
    GET_FUNC_ADDR(RichEdit_ContainsControl)
    return (BOOL)MySyscall(pRichEdit_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_ControlAtPos)
TControl
RichEdit_ControlAtPos(TRichEdit AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(RichEdit_ControlAtPos)
    return (TControl)MySyscall(pRichEdit_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_DisableAlign)
void
RichEdit_DisableAlign(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_DisableAlign)
    MySyscall(pRichEdit_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_EnableAlign)
void
RichEdit_EnableAlign(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_EnableAlign)
    MySyscall(pRichEdit_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_FindChildControl)
TControl
RichEdit_FindChildControl(TRichEdit AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(RichEdit_FindChildControl)
    return (TControl)MySyscall(pRichEdit_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_FlipChildren)
void
RichEdit_FlipChildren(TRichEdit AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(RichEdit_FlipChildren)
    MySyscall(pRichEdit_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_Focused)
BOOL
RichEdit_Focused(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_Focused)
    return (BOOL)MySyscall(pRichEdit_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_HandleAllocated)
BOOL
RichEdit_HandleAllocated(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_HandleAllocated)
    return (BOOL)MySyscall(pRichEdit_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_InsertControl)
void
RichEdit_InsertControl(TRichEdit AObj, TControl AControl) {
    GET_FUNC_ADDR(RichEdit_InsertControl)
    MySyscall(pRichEdit_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_Invalidate)
void
RichEdit_Invalidate(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_Invalidate)
    MySyscall(pRichEdit_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_PaintTo)
void
RichEdit_PaintTo(TRichEdit AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(RichEdit_PaintTo)
    MySyscall(pRichEdit_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_RemoveControl)
void
RichEdit_RemoveControl(TRichEdit AObj, TControl AControl) {
    GET_FUNC_ADDR(RichEdit_RemoveControl)
    MySyscall(pRichEdit_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_Realign)
void
RichEdit_Realign(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_Realign)
    MySyscall(pRichEdit_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_Repaint)
void
RichEdit_Repaint(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_Repaint)
    MySyscall(pRichEdit_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_ScaleBy)
void
RichEdit_ScaleBy(TRichEdit AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(RichEdit_ScaleBy)
    MySyscall(pRichEdit_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_ScrollBy)
void
RichEdit_ScrollBy(TRichEdit AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(RichEdit_ScrollBy)
    MySyscall(pRichEdit_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetBounds)
void
RichEdit_SetBounds(TRichEdit AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(RichEdit_SetBounds)
    MySyscall(pRichEdit_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetFocus)
void
RichEdit_SetFocus(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_SetFocus)
    MySyscall(pRichEdit_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_Update)
void
RichEdit_Update(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_Update)
    MySyscall(pRichEdit_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_BringToFront)
void
RichEdit_BringToFront(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_BringToFront)
    MySyscall(pRichEdit_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_ClientToScreen)
TPoint
RichEdit_ClientToScreen(TRichEdit AObj, TPoint Point) {
    GET_FUNC_ADDR(RichEdit_ClientToScreen)
    TPoint result;
    MySyscall(pRichEdit_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(RichEdit_ClientToParent)
TPoint
RichEdit_ClientToParent(TRichEdit AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(RichEdit_ClientToParent)
    TPoint result;
    MySyscall(pRichEdit_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(RichEdit_Dragging)
BOOL
RichEdit_Dragging(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_Dragging)
    return (BOOL)MySyscall(pRichEdit_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_HasParent)
BOOL
RichEdit_HasParent(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_HasParent)
    return (BOOL)MySyscall(pRichEdit_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_Hide)
void
RichEdit_Hide(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_Hide)
    MySyscall(pRichEdit_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_Perform)
intptr_t
RichEdit_Perform(TRichEdit AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(RichEdit_Perform)
    return (intptr_t)MySyscall(pRichEdit_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_Refresh)
void
RichEdit_Refresh(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_Refresh)
    MySyscall(pRichEdit_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_ScreenToClient)
TPoint
RichEdit_ScreenToClient(TRichEdit AObj, TPoint Point) {
    GET_FUNC_ADDR(RichEdit_ScreenToClient)
    TPoint result;
    MySyscall(pRichEdit_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(RichEdit_ParentToClient)
TPoint
RichEdit_ParentToClient(TRichEdit AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(RichEdit_ParentToClient)
    TPoint result;
    MySyscall(pRichEdit_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(RichEdit_SendToBack)
void
RichEdit_SendToBack(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_SendToBack)
    MySyscall(pRichEdit_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_Show)
void
RichEdit_Show(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_Show)
    MySyscall(pRichEdit_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetTextBuf)
int32_t
RichEdit_GetTextBuf(TRichEdit AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(RichEdit_GetTextBuf)
    return (int32_t)MySyscall(pRichEdit_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetTextLen)
int32_t
RichEdit_GetTextLen(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetTextLen)
    return (int32_t)MySyscall(pRichEdit_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetTextBuf)
void
RichEdit_SetTextBuf(TRichEdit AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(RichEdit_SetTextBuf)
    MySyscall(pRichEdit_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_FindComponent)
TComponent
RichEdit_FindComponent(TRichEdit AObj, CChar char* AName) {
    GET_FUNC_ADDR(RichEdit_FindComponent)
    return (TComponent)MySyscall(pRichEdit_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetNamePath)
char*
RichEdit_GetNamePath(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetNamePath)
    return (char*)MySyscall(pRichEdit_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_Assign)
void
RichEdit_Assign(TRichEdit AObj, TObject Source) {
    GET_FUNC_ADDR(RichEdit_Assign)
    MySyscall(pRichEdit_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_ClassType)
TClass
RichEdit_ClassType(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_ClassType)
    return (TClass)MySyscall(pRichEdit_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_ClassName)
char*
RichEdit_ClassName(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_ClassName)
    return (char*)MySyscall(pRichEdit_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_InstanceSize)
int32_t
RichEdit_InstanceSize(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_InstanceSize)
    return (int32_t)MySyscall(pRichEdit_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_InheritsFrom)
BOOL
RichEdit_InheritsFrom(TRichEdit AObj, TClass AClass) {
    GET_FUNC_ADDR(RichEdit_InheritsFrom)
    return (BOOL)MySyscall(pRichEdit_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_Equals)
BOOL
RichEdit_Equals(TRichEdit AObj, TObject Obj) {
    GET_FUNC_ADDR(RichEdit_Equals)
    return (BOOL)MySyscall(pRichEdit_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetHashCode)
int32_t
RichEdit_GetHashCode(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetHashCode)
    return (int32_t)MySyscall(pRichEdit_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_ToString)
char*
RichEdit_ToString(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_ToString)
    return (char*)MySyscall(pRichEdit_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_AnchorToNeighbour)
void
RichEdit_AnchorToNeighbour(TRichEdit AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(RichEdit_AnchorToNeighbour)
    MySyscall(pRichEdit_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_AnchorParallel)
void
RichEdit_AnchorParallel(TRichEdit AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(RichEdit_AnchorParallel)
    MySyscall(pRichEdit_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_AnchorHorizontalCenterTo)
void
RichEdit_AnchorHorizontalCenterTo(TRichEdit AObj, TControl ASibling) {
    GET_FUNC_ADDR(RichEdit_AnchorHorizontalCenterTo)
    MySyscall(pRichEdit_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_AnchorVerticalCenterTo)
void
RichEdit_AnchorVerticalCenterTo(TRichEdit AObj, TControl ASibling) {
    GET_FUNC_ADDR(RichEdit_AnchorVerticalCenterTo)
    MySyscall(pRichEdit_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_AnchorSame)
void
RichEdit_AnchorSame(TRichEdit AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(RichEdit_AnchorSame)
    MySyscall(pRichEdit_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_AnchorAsAlign)
void
RichEdit_AnchorAsAlign(TRichEdit AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(RichEdit_AnchorAsAlign)
    MySyscall(pRichEdit_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_AnchorClient)
void
RichEdit_AnchorClient(TRichEdit AObj, int32_t ASpace) {
    GET_FUNC_ADDR(RichEdit_AnchorClient)
    MySyscall(pRichEdit_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_ScaleDesignToForm)
int32_t
RichEdit_ScaleDesignToForm(TRichEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(RichEdit_ScaleDesignToForm)
    return (int32_t)MySyscall(pRichEdit_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_ScaleFormToDesign)
int32_t
RichEdit_ScaleFormToDesign(TRichEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(RichEdit_ScaleFormToDesign)
    return (int32_t)MySyscall(pRichEdit_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_Scale96ToForm)
int32_t
RichEdit_Scale96ToForm(TRichEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(RichEdit_Scale96ToForm)
    return (int32_t)MySyscall(pRichEdit_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_ScaleFormTo96)
int32_t
RichEdit_ScaleFormTo96(TRichEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(RichEdit_ScaleFormTo96)
    return (int32_t)MySyscall(pRichEdit_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_Scale96ToFont)
int32_t
RichEdit_Scale96ToFont(TRichEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(RichEdit_Scale96ToFont)
    return (int32_t)MySyscall(pRichEdit_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_ScaleFontTo96)
int32_t
RichEdit_ScaleFontTo96(TRichEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(RichEdit_ScaleFontTo96)
    return (int32_t)MySyscall(pRichEdit_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_ScaleScreenToFont)
int32_t
RichEdit_ScaleScreenToFont(TRichEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(RichEdit_ScaleScreenToFont)
    return (int32_t)MySyscall(pRichEdit_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_ScaleFontToScreen)
int32_t
RichEdit_ScaleFontToScreen(TRichEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(RichEdit_ScaleFontToScreen)
    return (int32_t)MySyscall(pRichEdit_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_Scale96ToScreen)
int32_t
RichEdit_Scale96ToScreen(TRichEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(RichEdit_Scale96ToScreen)
    return (int32_t)MySyscall(pRichEdit_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_ScaleScreenTo96)
int32_t
RichEdit_ScaleScreenTo96(TRichEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(RichEdit_ScaleScreenTo96)
    return (int32_t)MySyscall(pRichEdit_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_AutoAdjustLayout)
void
RichEdit_AutoAdjustLayout(TRichEdit AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(RichEdit_AutoAdjustLayout)
    MySyscall(pRichEdit_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_FixDesignFontsPPI)
void
RichEdit_FixDesignFontsPPI(TRichEdit AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(RichEdit_FixDesignFontsPPI)
    MySyscall(pRichEdit_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_ScaleFontsPPI)
void
RichEdit_ScaleFontsPPI(TRichEdit AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(RichEdit_ScaleFontsPPI)
    MySyscall(pRichEdit_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetAlign)
TAlign
RichEdit_GetAlign(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetAlign)
    return (TAlign)MySyscall(pRichEdit_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetAlign)
void
RichEdit_SetAlign(TRichEdit AObj, TAlign AValue) {
    GET_FUNC_ADDR(RichEdit_SetAlign)
    MySyscall(pRichEdit_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetAlignment)
TAlignment
RichEdit_GetAlignment(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetAlignment)
    return (TAlignment)MySyscall(pRichEdit_GetAlignment, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetAlignment)
void
RichEdit_SetAlignment(TRichEdit AObj, TAlignment AValue) {
    GET_FUNC_ADDR(RichEdit_SetAlignment)
    MySyscall(pRichEdit_SetAlignment, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetAnchors)
TAnchors
RichEdit_GetAnchors(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetAnchors)
    return (TAnchors)MySyscall(pRichEdit_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetAnchors)
void
RichEdit_SetAnchors(TRichEdit AObj, TAnchors AValue) {
    GET_FUNC_ADDR(RichEdit_SetAnchors)
    MySyscall(pRichEdit_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetBiDiMode)
TBiDiMode
RichEdit_GetBiDiMode(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetBiDiMode)
    return (TBiDiMode)MySyscall(pRichEdit_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetBiDiMode)
void
RichEdit_SetBiDiMode(TRichEdit AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(RichEdit_SetBiDiMode)
    MySyscall(pRichEdit_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetBorderStyle)
TBorderStyle
RichEdit_GetBorderStyle(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetBorderStyle)
    return (TBorderStyle)MySyscall(pRichEdit_GetBorderStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetBorderStyle)
void
RichEdit_SetBorderStyle(TRichEdit AObj, TBorderStyle AValue) {
    GET_FUNC_ADDR(RichEdit_SetBorderStyle)
    MySyscall(pRichEdit_SetBorderStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetBorderWidth)
int32_t
RichEdit_GetBorderWidth(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetBorderWidth)
    return (int32_t)MySyscall(pRichEdit_GetBorderWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetBorderWidth)
void
RichEdit_SetBorderWidth(TRichEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(RichEdit_SetBorderWidth)
    MySyscall(pRichEdit_SetBorderWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetColor)
TColor
RichEdit_GetColor(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetColor)
    return (TColor)MySyscall(pRichEdit_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetColor)
void
RichEdit_SetColor(TRichEdit AObj, TColor AValue) {
    GET_FUNC_ADDR(RichEdit_SetColor)
    MySyscall(pRichEdit_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetDragCursor)
TCursor
RichEdit_GetDragCursor(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetDragCursor)
    return (TCursor)MySyscall(pRichEdit_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetDragCursor)
void
RichEdit_SetDragCursor(TRichEdit AObj, TCursor AValue) {
    GET_FUNC_ADDR(RichEdit_SetDragCursor)
    MySyscall(pRichEdit_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetDragKind)
TDragKind
RichEdit_GetDragKind(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetDragKind)
    return (TDragKind)MySyscall(pRichEdit_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetDragKind)
void
RichEdit_SetDragKind(TRichEdit AObj, TDragKind AValue) {
    GET_FUNC_ADDR(RichEdit_SetDragKind)
    MySyscall(pRichEdit_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetDragMode)
TDragMode
RichEdit_GetDragMode(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetDragMode)
    return (TDragMode)MySyscall(pRichEdit_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetDragMode)
void
RichEdit_SetDragMode(TRichEdit AObj, TDragMode AValue) {
    GET_FUNC_ADDR(RichEdit_SetDragMode)
    MySyscall(pRichEdit_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetEnabled)
BOOL
RichEdit_GetEnabled(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetEnabled)
    return (BOOL)MySyscall(pRichEdit_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetEnabled)
void
RichEdit_SetEnabled(TRichEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(RichEdit_SetEnabled)
    MySyscall(pRichEdit_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetFont)
TFont
RichEdit_GetFont(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetFont)
    return (TFont)MySyscall(pRichEdit_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetFont)
void
RichEdit_SetFont(TRichEdit AObj, TFont AValue) {
    GET_FUNC_ADDR(RichEdit_SetFont)
    MySyscall(pRichEdit_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetHideSelection)
BOOL
RichEdit_GetHideSelection(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetHideSelection)
    return (BOOL)MySyscall(pRichEdit_GetHideSelection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetHideSelection)
void
RichEdit_SetHideSelection(TRichEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(RichEdit_SetHideSelection)
    MySyscall(pRichEdit_SetHideSelection, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetConstraints)
TSizeConstraints
RichEdit_GetConstraints(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetConstraints)
    return (TSizeConstraints)MySyscall(pRichEdit_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetConstraints)
void
RichEdit_SetConstraints(TRichEdit AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(RichEdit_SetConstraints)
    MySyscall(pRichEdit_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetLines)
TStrings
RichEdit_GetLines(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetLines)
    return (TStrings)MySyscall(pRichEdit_GetLines, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetLines)
void
RichEdit_SetLines(TRichEdit AObj, TStrings AValue) {
    GET_FUNC_ADDR(RichEdit_SetLines)
    MySyscall(pRichEdit_SetLines, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetMaxLength)
int32_t
RichEdit_GetMaxLength(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetMaxLength)
    return (int32_t)MySyscall(pRichEdit_GetMaxLength, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetMaxLength)
void
RichEdit_SetMaxLength(TRichEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(RichEdit_SetMaxLength)
    MySyscall(pRichEdit_SetMaxLength, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetParentColor)
BOOL
RichEdit_GetParentColor(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetParentColor)
    return (BOOL)MySyscall(pRichEdit_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetParentColor)
void
RichEdit_SetParentColor(TRichEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(RichEdit_SetParentColor)
    MySyscall(pRichEdit_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetParentFont)
BOOL
RichEdit_GetParentFont(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetParentFont)
    return (BOOL)MySyscall(pRichEdit_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetParentFont)
void
RichEdit_SetParentFont(TRichEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(RichEdit_SetParentFont)
    MySyscall(pRichEdit_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetParentShowHint)
BOOL
RichEdit_GetParentShowHint(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetParentShowHint)
    return (BOOL)MySyscall(pRichEdit_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetParentShowHint)
void
RichEdit_SetParentShowHint(TRichEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(RichEdit_SetParentShowHint)
    MySyscall(pRichEdit_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetPopupMenu)
TPopupMenu
RichEdit_GetPopupMenu(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetPopupMenu)
    return (TPopupMenu)MySyscall(pRichEdit_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetPopupMenu)
void
RichEdit_SetPopupMenu(TRichEdit AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(RichEdit_SetPopupMenu)
    MySyscall(pRichEdit_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetReadOnly)
BOOL
RichEdit_GetReadOnly(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetReadOnly)
    return (BOOL)MySyscall(pRichEdit_GetReadOnly, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetReadOnly)
void
RichEdit_SetReadOnly(TRichEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(RichEdit_SetReadOnly)
    MySyscall(pRichEdit_SetReadOnly, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetScrollBars)
TScrollStyle
RichEdit_GetScrollBars(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetScrollBars)
    return (TScrollStyle)MySyscall(pRichEdit_GetScrollBars, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetScrollBars)
void
RichEdit_SetScrollBars(TRichEdit AObj, TScrollStyle AValue) {
    GET_FUNC_ADDR(RichEdit_SetScrollBars)
    MySyscall(pRichEdit_SetScrollBars, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetShowHint)
BOOL
RichEdit_GetShowHint(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetShowHint)
    return (BOOL)MySyscall(pRichEdit_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetShowHint)
void
RichEdit_SetShowHint(TRichEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(RichEdit_SetShowHint)
    MySyscall(pRichEdit_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetTabOrder)
TTabOrder
RichEdit_GetTabOrder(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetTabOrder)
    return (TTabOrder)MySyscall(pRichEdit_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetTabOrder)
void
RichEdit_SetTabOrder(TRichEdit AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(RichEdit_SetTabOrder)
    MySyscall(pRichEdit_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetTabStop)
BOOL
RichEdit_GetTabStop(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetTabStop)
    return (BOOL)MySyscall(pRichEdit_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetTabStop)
void
RichEdit_SetTabStop(TRichEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(RichEdit_SetTabStop)
    MySyscall(pRichEdit_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetVisible)
BOOL
RichEdit_GetVisible(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetVisible)
    return (BOOL)MySyscall(pRichEdit_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetVisible)
void
RichEdit_SetVisible(TRichEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(RichEdit_SetVisible)
    MySyscall(pRichEdit_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetWantTabs)
BOOL
RichEdit_GetWantTabs(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetWantTabs)
    return (BOOL)MySyscall(pRichEdit_GetWantTabs, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetWantTabs)
void
RichEdit_SetWantTabs(TRichEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(RichEdit_SetWantTabs)
    MySyscall(pRichEdit_SetWantTabs, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetWantReturns)
BOOL
RichEdit_GetWantReturns(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetWantReturns)
    return (BOOL)MySyscall(pRichEdit_GetWantReturns, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetWantReturns)
void
RichEdit_SetWantReturns(TRichEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(RichEdit_SetWantReturns)
    MySyscall(pRichEdit_SetWantReturns, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetWordWrap)
BOOL
RichEdit_GetWordWrap(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetWordWrap)
    return (BOOL)MySyscall(pRichEdit_GetWordWrap, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetWordWrap)
void
RichEdit_SetWordWrap(TRichEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(RichEdit_SetWordWrap)
    MySyscall(pRichEdit_SetWordWrap, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetZoom)
int32_t
RichEdit_GetZoom(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetZoom)
    return (int32_t)MySyscall(pRichEdit_GetZoom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetZoom)
void
RichEdit_SetZoom(TRichEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(RichEdit_SetZoom)
    MySyscall(pRichEdit_SetZoom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetOnChange)
void
RichEdit_SetOnChange(TRichEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(RichEdit_SetOnChange)
    MySyscall(pRichEdit_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetOnClick)
void
RichEdit_SetOnClick(TRichEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(RichEdit_SetOnClick)
    MySyscall(pRichEdit_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetOnContextPopup)
void
RichEdit_SetOnContextPopup(TRichEdit AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(RichEdit_SetOnContextPopup)
    MySyscall(pRichEdit_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetOnDblClick)
void
RichEdit_SetOnDblClick(TRichEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(RichEdit_SetOnDblClick)
    MySyscall(pRichEdit_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetOnDragDrop)
void
RichEdit_SetOnDragDrop(TRichEdit AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(RichEdit_SetOnDragDrop)
    MySyscall(pRichEdit_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetOnDragOver)
void
RichEdit_SetOnDragOver(TRichEdit AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(RichEdit_SetOnDragOver)
    MySyscall(pRichEdit_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetOnEndDrag)
void
RichEdit_SetOnEndDrag(TRichEdit AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(RichEdit_SetOnEndDrag)
    MySyscall(pRichEdit_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetOnEnter)
void
RichEdit_SetOnEnter(TRichEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(RichEdit_SetOnEnter)
    MySyscall(pRichEdit_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetOnExit)
void
RichEdit_SetOnExit(TRichEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(RichEdit_SetOnExit)
    MySyscall(pRichEdit_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetOnKeyDown)
void
RichEdit_SetOnKeyDown(TRichEdit AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(RichEdit_SetOnKeyDown)
    MySyscall(pRichEdit_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetOnKeyPress)
void
RichEdit_SetOnKeyPress(TRichEdit AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(RichEdit_SetOnKeyPress)
    MySyscall(pRichEdit_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetOnKeyUp)
void
RichEdit_SetOnKeyUp(TRichEdit AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(RichEdit_SetOnKeyUp)
    MySyscall(pRichEdit_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetOnMouseDown)
void
RichEdit_SetOnMouseDown(TRichEdit AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(RichEdit_SetOnMouseDown)
    MySyscall(pRichEdit_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetOnMouseEnter)
void
RichEdit_SetOnMouseEnter(TRichEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(RichEdit_SetOnMouseEnter)
    MySyscall(pRichEdit_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetOnMouseLeave)
void
RichEdit_SetOnMouseLeave(TRichEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(RichEdit_SetOnMouseLeave)
    MySyscall(pRichEdit_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetOnMouseMove)
void
RichEdit_SetOnMouseMove(TRichEdit AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(RichEdit_SetOnMouseMove)
    MySyscall(pRichEdit_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetOnMouseUp)
void
RichEdit_SetOnMouseUp(TRichEdit AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(RichEdit_SetOnMouseUp)
    MySyscall(pRichEdit_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetOnMouseWheel)
void
RichEdit_SetOnMouseWheel(TRichEdit AObj, TMouseWheelEvent AEventData) {
    GET_FUNC_ADDR(RichEdit_SetOnMouseWheel)
    MySyscall(pRichEdit_SetOnMouseWheel, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetOnMouseWheelDown)
void
RichEdit_SetOnMouseWheelDown(TRichEdit AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(RichEdit_SetOnMouseWheelDown)
    MySyscall(pRichEdit_SetOnMouseWheelDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetOnMouseWheelUp)
void
RichEdit_SetOnMouseWheelUp(TRichEdit AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(RichEdit_SetOnMouseWheelUp)
    MySyscall(pRichEdit_SetOnMouseWheelUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetDefAttributes)
TTextAttributes
RichEdit_GetDefAttributes(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetDefAttributes)
    return (TTextAttributes)MySyscall(pRichEdit_GetDefAttributes, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetDefAttributes)
void
RichEdit_SetDefAttributes(TRichEdit AObj, TTextAttributes AValue) {
    GET_FUNC_ADDR(RichEdit_SetDefAttributes)
    MySyscall(pRichEdit_SetDefAttributes, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetSelAttributes)
TTextAttributes
RichEdit_GetSelAttributes(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetSelAttributes)
    return (TTextAttributes)MySyscall(pRichEdit_GetSelAttributes, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetSelAttributes)
void
RichEdit_SetSelAttributes(TRichEdit AObj, TTextAttributes AValue) {
    GET_FUNC_ADDR(RichEdit_SetSelAttributes)
    MySyscall(pRichEdit_SetSelAttributes, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetParagraph)
TParaAttributes
RichEdit_GetParagraph(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetParagraph)
    return (TParaAttributes)MySyscall(pRichEdit_GetParagraph, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetCaretPos)
TPoint
RichEdit_GetCaretPos(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetCaretPos)
    TPoint result;
    MySyscall(pRichEdit_GetCaretPos, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(RichEdit_SetCaretPos)
void
RichEdit_SetCaretPos(TRichEdit AObj, TPoint AValue) {
    GET_FUNC_ADDR(RichEdit_SetCaretPos)
    MySyscall(pRichEdit_SetCaretPos, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetCanUndo)
BOOL
RichEdit_GetCanUndo(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetCanUndo)
    return (BOOL)MySyscall(pRichEdit_GetCanUndo, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetModified)
BOOL
RichEdit_GetModified(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetModified)
    return (BOOL)MySyscall(pRichEdit_GetModified, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetModified)
void
RichEdit_SetModified(TRichEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(RichEdit_SetModified)
    MySyscall(pRichEdit_SetModified, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetSelLength)
int32_t
RichEdit_GetSelLength(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetSelLength)
    return (int32_t)MySyscall(pRichEdit_GetSelLength, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetSelLength)
void
RichEdit_SetSelLength(TRichEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(RichEdit_SetSelLength)
    MySyscall(pRichEdit_SetSelLength, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetSelStart)
int32_t
RichEdit_GetSelStart(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetSelStart)
    return (int32_t)MySyscall(pRichEdit_GetSelStart, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetSelStart)
void
RichEdit_SetSelStart(TRichEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(RichEdit_SetSelStart)
    MySyscall(pRichEdit_SetSelStart, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetSelText)
char*
RichEdit_GetSelText(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetSelText)
    return (char*)MySyscall(pRichEdit_GetSelText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetSelText)
void
RichEdit_SetSelText(TRichEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(RichEdit_SetSelText)
    MySyscall(pRichEdit_SetSelText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetText)
char*
RichEdit_GetText(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetText)
    return (char*)MySyscall(pRichEdit_GetText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetText)
void
RichEdit_SetText(TRichEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(RichEdit_SetText)
    MySyscall(pRichEdit_SetText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetTextHint)
char*
RichEdit_GetTextHint(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetTextHint)
    return (char*)MySyscall(pRichEdit_GetTextHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetTextHint)
void
RichEdit_SetTextHint(TRichEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(RichEdit_SetTextHint)
    MySyscall(pRichEdit_SetTextHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetDockClientCount)
int32_t
RichEdit_GetDockClientCount(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetDockClientCount)
    return (int32_t)MySyscall(pRichEdit_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetDockSite)
BOOL
RichEdit_GetDockSite(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetDockSite)
    return (BOOL)MySyscall(pRichEdit_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetDockSite)
void
RichEdit_SetDockSite(TRichEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(RichEdit_SetDockSite)
    MySyscall(pRichEdit_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetDoubleBuffered)
BOOL
RichEdit_GetDoubleBuffered(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetDoubleBuffered)
    return (BOOL)MySyscall(pRichEdit_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetDoubleBuffered)
void
RichEdit_SetDoubleBuffered(TRichEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(RichEdit_SetDoubleBuffered)
    MySyscall(pRichEdit_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetMouseInClient)
BOOL
RichEdit_GetMouseInClient(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetMouseInClient)
    return (BOOL)MySyscall(pRichEdit_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetVisibleDockClientCount)
int32_t
RichEdit_GetVisibleDockClientCount(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pRichEdit_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetBrush)
TBrush
RichEdit_GetBrush(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetBrush)
    return (TBrush)MySyscall(pRichEdit_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetControlCount)
int32_t
RichEdit_GetControlCount(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetControlCount)
    return (int32_t)MySyscall(pRichEdit_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetHandle)
HWND
RichEdit_GetHandle(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetHandle)
    return (HWND)MySyscall(pRichEdit_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetParentDoubleBuffered)
BOOL
RichEdit_GetParentDoubleBuffered(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pRichEdit_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetParentDoubleBuffered)
void
RichEdit_SetParentDoubleBuffered(TRichEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(RichEdit_SetParentDoubleBuffered)
    MySyscall(pRichEdit_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetParentWindow)
HWND
RichEdit_GetParentWindow(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetParentWindow)
    return (HWND)MySyscall(pRichEdit_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetParentWindow)
void
RichEdit_SetParentWindow(TRichEdit AObj, HWND AValue) {
    GET_FUNC_ADDR(RichEdit_SetParentWindow)
    MySyscall(pRichEdit_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetShowing)
BOOL
RichEdit_GetShowing(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetShowing)
    return (BOOL)MySyscall(pRichEdit_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetUseDockManager)
BOOL
RichEdit_GetUseDockManager(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetUseDockManager)
    return (BOOL)MySyscall(pRichEdit_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetUseDockManager)
void
RichEdit_SetUseDockManager(TRichEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(RichEdit_SetUseDockManager)
    MySyscall(pRichEdit_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetAction)
TAction
RichEdit_GetAction(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetAction)
    return (TAction)MySyscall(pRichEdit_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetAction)
void
RichEdit_SetAction(TRichEdit AObj, TAction AValue) {
    GET_FUNC_ADDR(RichEdit_SetAction)
    MySyscall(pRichEdit_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetBoundsRect)
TRect
RichEdit_GetBoundsRect(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetBoundsRect)
    TRect result;
    MySyscall(pRichEdit_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(RichEdit_SetBoundsRect)
void
RichEdit_SetBoundsRect(TRichEdit AObj, TRect AValue) {
    GET_FUNC_ADDR(RichEdit_SetBoundsRect)
    MySyscall(pRichEdit_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetClientHeight)
int32_t
RichEdit_GetClientHeight(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetClientHeight)
    return (int32_t)MySyscall(pRichEdit_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetClientHeight)
void
RichEdit_SetClientHeight(TRichEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(RichEdit_SetClientHeight)
    MySyscall(pRichEdit_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetClientOrigin)
TPoint
RichEdit_GetClientOrigin(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetClientOrigin)
    TPoint result;
    MySyscall(pRichEdit_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(RichEdit_GetClientRect)
TRect
RichEdit_GetClientRect(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetClientRect)
    TRect result;
    MySyscall(pRichEdit_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(RichEdit_GetClientWidth)
int32_t
RichEdit_GetClientWidth(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetClientWidth)
    return (int32_t)MySyscall(pRichEdit_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetClientWidth)
void
RichEdit_SetClientWidth(TRichEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(RichEdit_SetClientWidth)
    MySyscall(pRichEdit_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetControlState)
TControlState
RichEdit_GetControlState(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetControlState)
    return (TControlState)MySyscall(pRichEdit_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetControlState)
void
RichEdit_SetControlState(TRichEdit AObj, TControlState AValue) {
    GET_FUNC_ADDR(RichEdit_SetControlState)
    MySyscall(pRichEdit_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetControlStyle)
TControlStyle
RichEdit_GetControlStyle(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetControlStyle)
    return (TControlStyle)MySyscall(pRichEdit_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetControlStyle)
void
RichEdit_SetControlStyle(TRichEdit AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(RichEdit_SetControlStyle)
    MySyscall(pRichEdit_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetFloating)
BOOL
RichEdit_GetFloating(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetFloating)
    return (BOOL)MySyscall(pRichEdit_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetParent)
TWinControl
RichEdit_GetParent(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetParent)
    return (TWinControl)MySyscall(pRichEdit_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetParent)
void
RichEdit_SetParent(TRichEdit AObj, TWinControl AValue) {
    GET_FUNC_ADDR(RichEdit_SetParent)
    MySyscall(pRichEdit_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetLeft)
int32_t
RichEdit_GetLeft(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetLeft)
    return (int32_t)MySyscall(pRichEdit_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetLeft)
void
RichEdit_SetLeft(TRichEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(RichEdit_SetLeft)
    MySyscall(pRichEdit_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetTop)
int32_t
RichEdit_GetTop(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetTop)
    return (int32_t)MySyscall(pRichEdit_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetTop)
void
RichEdit_SetTop(TRichEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(RichEdit_SetTop)
    MySyscall(pRichEdit_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetWidth)
int32_t
RichEdit_GetWidth(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetWidth)
    return (int32_t)MySyscall(pRichEdit_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetWidth)
void
RichEdit_SetWidth(TRichEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(RichEdit_SetWidth)
    MySyscall(pRichEdit_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetHeight)
int32_t
RichEdit_GetHeight(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetHeight)
    return (int32_t)MySyscall(pRichEdit_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetHeight)
void
RichEdit_SetHeight(TRichEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(RichEdit_SetHeight)
    MySyscall(pRichEdit_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetCursor)
TCursor
RichEdit_GetCursor(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetCursor)
    return (TCursor)MySyscall(pRichEdit_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetCursor)
void
RichEdit_SetCursor(TRichEdit AObj, TCursor AValue) {
    GET_FUNC_ADDR(RichEdit_SetCursor)
    MySyscall(pRichEdit_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetHint)
char*
RichEdit_GetHint(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetHint)
    return (char*)MySyscall(pRichEdit_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetHint)
void
RichEdit_SetHint(TRichEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(RichEdit_SetHint)
    MySyscall(pRichEdit_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetComponentCount)
int32_t
RichEdit_GetComponentCount(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetComponentCount)
    return (int32_t)MySyscall(pRichEdit_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetComponentIndex)
int32_t
RichEdit_GetComponentIndex(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetComponentIndex)
    return (int32_t)MySyscall(pRichEdit_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetComponentIndex)
void
RichEdit_SetComponentIndex(TRichEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(RichEdit_SetComponentIndex)
    MySyscall(pRichEdit_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetOwner)
TComponent
RichEdit_GetOwner(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetOwner)
    return (TComponent)MySyscall(pRichEdit_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetName)
char*
RichEdit_GetName(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetName)
    return (char*)MySyscall(pRichEdit_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetName)
void
RichEdit_SetName(TRichEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(RichEdit_SetName)
    MySyscall(pRichEdit_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetTag)
intptr_t
RichEdit_GetTag(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetTag)
    return (intptr_t)MySyscall(pRichEdit_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetTag)
void
RichEdit_SetTag(TRichEdit AObj, intptr_t AValue) {
    GET_FUNC_ADDR(RichEdit_SetTag)
    MySyscall(pRichEdit_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetAnchorSideLeft)
TAnchorSide
RichEdit_GetAnchorSideLeft(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pRichEdit_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetAnchorSideLeft)
void
RichEdit_SetAnchorSideLeft(TRichEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(RichEdit_SetAnchorSideLeft)
    MySyscall(pRichEdit_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetAnchorSideTop)
TAnchorSide
RichEdit_GetAnchorSideTop(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pRichEdit_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetAnchorSideTop)
void
RichEdit_SetAnchorSideTop(TRichEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(RichEdit_SetAnchorSideTop)
    MySyscall(pRichEdit_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetAnchorSideRight)
TAnchorSide
RichEdit_GetAnchorSideRight(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pRichEdit_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetAnchorSideRight)
void
RichEdit_SetAnchorSideRight(TRichEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(RichEdit_SetAnchorSideRight)
    MySyscall(pRichEdit_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetAnchorSideBottom)
TAnchorSide
RichEdit_GetAnchorSideBottom(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pRichEdit_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetAnchorSideBottom)
void
RichEdit_SetAnchorSideBottom(TRichEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(RichEdit_SetAnchorSideBottom)
    MySyscall(pRichEdit_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetChildSizing)
TControlChildSizing
RichEdit_GetChildSizing(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetChildSizing)
    return (TControlChildSizing)MySyscall(pRichEdit_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetChildSizing)
void
RichEdit_SetChildSizing(TRichEdit AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(RichEdit_SetChildSizing)
    MySyscall(pRichEdit_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetBorderSpacing)
TControlBorderSpacing
RichEdit_GetBorderSpacing(TRichEdit AObj) {
    GET_FUNC_ADDR(RichEdit_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pRichEdit_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_SetBorderSpacing)
void
RichEdit_SetBorderSpacing(TRichEdit AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(RichEdit_SetBorderSpacing)
    MySyscall(pRichEdit_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetDockClients)
TControl
RichEdit_GetDockClients(TRichEdit AObj, int32_t Index) {
    GET_FUNC_ADDR(RichEdit_GetDockClients)
    return (TControl)MySyscall(pRichEdit_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetControls)
TControl
RichEdit_GetControls(TRichEdit AObj, int32_t Index) {
    GET_FUNC_ADDR(RichEdit_GetControls)
    return (TControl)MySyscall(pRichEdit_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetComponents)
TComponent
RichEdit_GetComponents(TRichEdit AObj, int32_t AIndex) {
    GET_FUNC_ADDR(RichEdit_GetComponents)
    return (TComponent)MySyscall(pRichEdit_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_GetAnchorSide)
TAnchorSide
RichEdit_GetAnchorSide(TRichEdit AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(RichEdit_GetAnchorSide)
    return (TAnchorSide)MySyscall(pRichEdit_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(RichEdit_StaticClassType)
TClass
RichEdit_StaticClassType() {
    GET_FUNC_ADDR(RichEdit_StaticClassType)
    return (TClass)MySyscall(pRichEdit_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TTrackBar-------------------

DEFINE_FUNC_PTR(TrackBar_Create)
TTrackBar
TrackBar_Create(TComponent AOwner) {
    GET_FUNC_ADDR(TrackBar_Create)
    return (TTrackBar)MySyscall(pTrackBar_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_Free)
void
TrackBar_Free(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_Free)
    MySyscall(pTrackBar_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetTick)
void
TrackBar_SetTick(TTrackBar AObj, int32_t Value) {
    GET_FUNC_ADDR(TrackBar_SetTick)
    MySyscall(pTrackBar_SetTick, 2, AObj, Value ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_CanFocus)
BOOL
TrackBar_CanFocus(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_CanFocus)
    return (BOOL)MySyscall(pTrackBar_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_ContainsControl)
BOOL
TrackBar_ContainsControl(TTrackBar AObj, TControl Control) {
    GET_FUNC_ADDR(TrackBar_ContainsControl)
    return (BOOL)MySyscall(pTrackBar_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_ControlAtPos)
TControl
TrackBar_ControlAtPos(TTrackBar AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(TrackBar_ControlAtPos)
    return (TControl)MySyscall(pTrackBar_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_DisableAlign)
void
TrackBar_DisableAlign(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_DisableAlign)
    MySyscall(pTrackBar_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_EnableAlign)
void
TrackBar_EnableAlign(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_EnableAlign)
    MySyscall(pTrackBar_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_FindChildControl)
TControl
TrackBar_FindChildControl(TTrackBar AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(TrackBar_FindChildControl)
    return (TControl)MySyscall(pTrackBar_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_FlipChildren)
void
TrackBar_FlipChildren(TTrackBar AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(TrackBar_FlipChildren)
    MySyscall(pTrackBar_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_Focused)
BOOL
TrackBar_Focused(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_Focused)
    return (BOOL)MySyscall(pTrackBar_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_HandleAllocated)
BOOL
TrackBar_HandleAllocated(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_HandleAllocated)
    return (BOOL)MySyscall(pTrackBar_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_InsertControl)
void
TrackBar_InsertControl(TTrackBar AObj, TControl AControl) {
    GET_FUNC_ADDR(TrackBar_InsertControl)
    MySyscall(pTrackBar_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_Invalidate)
void
TrackBar_Invalidate(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_Invalidate)
    MySyscall(pTrackBar_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_PaintTo)
void
TrackBar_PaintTo(TTrackBar AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(TrackBar_PaintTo)
    MySyscall(pTrackBar_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_RemoveControl)
void
TrackBar_RemoveControl(TTrackBar AObj, TControl AControl) {
    GET_FUNC_ADDR(TrackBar_RemoveControl)
    MySyscall(pTrackBar_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_Realign)
void
TrackBar_Realign(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_Realign)
    MySyscall(pTrackBar_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_Repaint)
void
TrackBar_Repaint(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_Repaint)
    MySyscall(pTrackBar_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_ScaleBy)
void
TrackBar_ScaleBy(TTrackBar AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(TrackBar_ScaleBy)
    MySyscall(pTrackBar_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_ScrollBy)
void
TrackBar_ScrollBy(TTrackBar AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(TrackBar_ScrollBy)
    MySyscall(pTrackBar_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetBounds)
void
TrackBar_SetBounds(TTrackBar AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(TrackBar_SetBounds)
    MySyscall(pTrackBar_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetFocus)
void
TrackBar_SetFocus(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_SetFocus)
    MySyscall(pTrackBar_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_Update)
void
TrackBar_Update(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_Update)
    MySyscall(pTrackBar_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_BringToFront)
void
TrackBar_BringToFront(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_BringToFront)
    MySyscall(pTrackBar_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_ClientToScreen)
TPoint
TrackBar_ClientToScreen(TTrackBar AObj, TPoint Point) {
    GET_FUNC_ADDR(TrackBar_ClientToScreen)
    TPoint result;
    MySyscall(pTrackBar_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(TrackBar_ClientToParent)
TPoint
TrackBar_ClientToParent(TTrackBar AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(TrackBar_ClientToParent)
    TPoint result;
    MySyscall(pTrackBar_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(TrackBar_Dragging)
BOOL
TrackBar_Dragging(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_Dragging)
    return (BOOL)MySyscall(pTrackBar_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_HasParent)
BOOL
TrackBar_HasParent(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_HasParent)
    return (BOOL)MySyscall(pTrackBar_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_Hide)
void
TrackBar_Hide(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_Hide)
    MySyscall(pTrackBar_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_Perform)
intptr_t
TrackBar_Perform(TTrackBar AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(TrackBar_Perform)
    return (intptr_t)MySyscall(pTrackBar_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_Refresh)
void
TrackBar_Refresh(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_Refresh)
    MySyscall(pTrackBar_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_ScreenToClient)
TPoint
TrackBar_ScreenToClient(TTrackBar AObj, TPoint Point) {
    GET_FUNC_ADDR(TrackBar_ScreenToClient)
    TPoint result;
    MySyscall(pTrackBar_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(TrackBar_ParentToClient)
TPoint
TrackBar_ParentToClient(TTrackBar AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(TrackBar_ParentToClient)
    TPoint result;
    MySyscall(pTrackBar_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(TrackBar_SendToBack)
void
TrackBar_SendToBack(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_SendToBack)
    MySyscall(pTrackBar_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_Show)
void
TrackBar_Show(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_Show)
    MySyscall(pTrackBar_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetTextBuf)
int32_t
TrackBar_GetTextBuf(TTrackBar AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(TrackBar_GetTextBuf)
    return (int32_t)MySyscall(pTrackBar_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetTextLen)
int32_t
TrackBar_GetTextLen(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetTextLen)
    return (int32_t)MySyscall(pTrackBar_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetTextBuf)
void
TrackBar_SetTextBuf(TTrackBar AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(TrackBar_SetTextBuf)
    MySyscall(pTrackBar_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_FindComponent)
TComponent
TrackBar_FindComponent(TTrackBar AObj, CChar char* AName) {
    GET_FUNC_ADDR(TrackBar_FindComponent)
    return (TComponent)MySyscall(pTrackBar_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetNamePath)
char*
TrackBar_GetNamePath(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetNamePath)
    return (char*)MySyscall(pTrackBar_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_Assign)
void
TrackBar_Assign(TTrackBar AObj, TObject Source) {
    GET_FUNC_ADDR(TrackBar_Assign)
    MySyscall(pTrackBar_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_ClassType)
TClass
TrackBar_ClassType(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_ClassType)
    return (TClass)MySyscall(pTrackBar_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_ClassName)
char*
TrackBar_ClassName(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_ClassName)
    return (char*)MySyscall(pTrackBar_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_InstanceSize)
int32_t
TrackBar_InstanceSize(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_InstanceSize)
    return (int32_t)MySyscall(pTrackBar_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_InheritsFrom)
BOOL
TrackBar_InheritsFrom(TTrackBar AObj, TClass AClass) {
    GET_FUNC_ADDR(TrackBar_InheritsFrom)
    return (BOOL)MySyscall(pTrackBar_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_Equals)
BOOL
TrackBar_Equals(TTrackBar AObj, TObject Obj) {
    GET_FUNC_ADDR(TrackBar_Equals)
    return (BOOL)MySyscall(pTrackBar_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetHashCode)
int32_t
TrackBar_GetHashCode(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetHashCode)
    return (int32_t)MySyscall(pTrackBar_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_ToString)
char*
TrackBar_ToString(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_ToString)
    return (char*)MySyscall(pTrackBar_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_AnchorToNeighbour)
void
TrackBar_AnchorToNeighbour(TTrackBar AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(TrackBar_AnchorToNeighbour)
    MySyscall(pTrackBar_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_AnchorParallel)
void
TrackBar_AnchorParallel(TTrackBar AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(TrackBar_AnchorParallel)
    MySyscall(pTrackBar_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_AnchorHorizontalCenterTo)
void
TrackBar_AnchorHorizontalCenterTo(TTrackBar AObj, TControl ASibling) {
    GET_FUNC_ADDR(TrackBar_AnchorHorizontalCenterTo)
    MySyscall(pTrackBar_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_AnchorVerticalCenterTo)
void
TrackBar_AnchorVerticalCenterTo(TTrackBar AObj, TControl ASibling) {
    GET_FUNC_ADDR(TrackBar_AnchorVerticalCenterTo)
    MySyscall(pTrackBar_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_AnchorSame)
void
TrackBar_AnchorSame(TTrackBar AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(TrackBar_AnchorSame)
    MySyscall(pTrackBar_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_AnchorAsAlign)
void
TrackBar_AnchorAsAlign(TTrackBar AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(TrackBar_AnchorAsAlign)
    MySyscall(pTrackBar_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_AnchorClient)
void
TrackBar_AnchorClient(TTrackBar AObj, int32_t ASpace) {
    GET_FUNC_ADDR(TrackBar_AnchorClient)
    MySyscall(pTrackBar_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_ScaleDesignToForm)
int32_t
TrackBar_ScaleDesignToForm(TTrackBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(TrackBar_ScaleDesignToForm)
    return (int32_t)MySyscall(pTrackBar_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_ScaleFormToDesign)
int32_t
TrackBar_ScaleFormToDesign(TTrackBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(TrackBar_ScaleFormToDesign)
    return (int32_t)MySyscall(pTrackBar_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_Scale96ToForm)
int32_t
TrackBar_Scale96ToForm(TTrackBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(TrackBar_Scale96ToForm)
    return (int32_t)MySyscall(pTrackBar_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_ScaleFormTo96)
int32_t
TrackBar_ScaleFormTo96(TTrackBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(TrackBar_ScaleFormTo96)
    return (int32_t)MySyscall(pTrackBar_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_Scale96ToFont)
int32_t
TrackBar_Scale96ToFont(TTrackBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(TrackBar_Scale96ToFont)
    return (int32_t)MySyscall(pTrackBar_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_ScaleFontTo96)
int32_t
TrackBar_ScaleFontTo96(TTrackBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(TrackBar_ScaleFontTo96)
    return (int32_t)MySyscall(pTrackBar_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_ScaleScreenToFont)
int32_t
TrackBar_ScaleScreenToFont(TTrackBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(TrackBar_ScaleScreenToFont)
    return (int32_t)MySyscall(pTrackBar_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_ScaleFontToScreen)
int32_t
TrackBar_ScaleFontToScreen(TTrackBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(TrackBar_ScaleFontToScreen)
    return (int32_t)MySyscall(pTrackBar_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_Scale96ToScreen)
int32_t
TrackBar_Scale96ToScreen(TTrackBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(TrackBar_Scale96ToScreen)
    return (int32_t)MySyscall(pTrackBar_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_ScaleScreenTo96)
int32_t
TrackBar_ScaleScreenTo96(TTrackBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(TrackBar_ScaleScreenTo96)
    return (int32_t)MySyscall(pTrackBar_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_AutoAdjustLayout)
void
TrackBar_AutoAdjustLayout(TTrackBar AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(TrackBar_AutoAdjustLayout)
    MySyscall(pTrackBar_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_FixDesignFontsPPI)
void
TrackBar_FixDesignFontsPPI(TTrackBar AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(TrackBar_FixDesignFontsPPI)
    MySyscall(pTrackBar_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_ScaleFontsPPI)
void
TrackBar_ScaleFontsPPI(TTrackBar AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(TrackBar_ScaleFontsPPI)
    MySyscall(pTrackBar_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetAlign)
TAlign
TrackBar_GetAlign(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetAlign)
    return (TAlign)MySyscall(pTrackBar_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetAlign)
void
TrackBar_SetAlign(TTrackBar AObj, TAlign AValue) {
    GET_FUNC_ADDR(TrackBar_SetAlign)
    MySyscall(pTrackBar_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetAnchors)
TAnchors
TrackBar_GetAnchors(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetAnchors)
    return (TAnchors)MySyscall(pTrackBar_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetAnchors)
void
TrackBar_SetAnchors(TTrackBar AObj, TAnchors AValue) {
    GET_FUNC_ADDR(TrackBar_SetAnchors)
    MySyscall(pTrackBar_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetBorderWidth)
int32_t
TrackBar_GetBorderWidth(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetBorderWidth)
    return (int32_t)MySyscall(pTrackBar_GetBorderWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetBorderWidth)
void
TrackBar_SetBorderWidth(TTrackBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(TrackBar_SetBorderWidth)
    MySyscall(pTrackBar_SetBorderWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetDoubleBuffered)
BOOL
TrackBar_GetDoubleBuffered(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetDoubleBuffered)
    return (BOOL)MySyscall(pTrackBar_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetDoubleBuffered)
void
TrackBar_SetDoubleBuffered(TTrackBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(TrackBar_SetDoubleBuffered)
    MySyscall(pTrackBar_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetDragCursor)
TCursor
TrackBar_GetDragCursor(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetDragCursor)
    return (TCursor)MySyscall(pTrackBar_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetDragCursor)
void
TrackBar_SetDragCursor(TTrackBar AObj, TCursor AValue) {
    GET_FUNC_ADDR(TrackBar_SetDragCursor)
    MySyscall(pTrackBar_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetDragMode)
TDragMode
TrackBar_GetDragMode(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetDragMode)
    return (TDragMode)MySyscall(pTrackBar_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetDragMode)
void
TrackBar_SetDragMode(TTrackBar AObj, TDragMode AValue) {
    GET_FUNC_ADDR(TrackBar_SetDragMode)
    MySyscall(pTrackBar_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetEnabled)
BOOL
TrackBar_GetEnabled(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetEnabled)
    return (BOOL)MySyscall(pTrackBar_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetEnabled)
void
TrackBar_SetEnabled(TTrackBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(TrackBar_SetEnabled)
    MySyscall(pTrackBar_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetConstraints)
TSizeConstraints
TrackBar_GetConstraints(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetConstraints)
    return (TSizeConstraints)MySyscall(pTrackBar_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetConstraints)
void
TrackBar_SetConstraints(TTrackBar AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(TrackBar_SetConstraints)
    MySyscall(pTrackBar_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetLineSize)
int32_t
TrackBar_GetLineSize(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetLineSize)
    return (int32_t)MySyscall(pTrackBar_GetLineSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetLineSize)
void
TrackBar_SetLineSize(TTrackBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(TrackBar_SetLineSize)
    MySyscall(pTrackBar_SetLineSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetMax)
int32_t
TrackBar_GetMax(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetMax)
    return (int32_t)MySyscall(pTrackBar_GetMax, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetMax)
void
TrackBar_SetMax(TTrackBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(TrackBar_SetMax)
    MySyscall(pTrackBar_SetMax, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetMin)
int32_t
TrackBar_GetMin(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetMin)
    return (int32_t)MySyscall(pTrackBar_GetMin, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetMin)
void
TrackBar_SetMin(TTrackBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(TrackBar_SetMin)
    MySyscall(pTrackBar_SetMin, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetOrientation)
TTrackBarOrientation
TrackBar_GetOrientation(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetOrientation)
    return (TTrackBarOrientation)MySyscall(pTrackBar_GetOrientation, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetOrientation)
void
TrackBar_SetOrientation(TTrackBar AObj, TTrackBarOrientation AValue) {
    GET_FUNC_ADDR(TrackBar_SetOrientation)
    MySyscall(pTrackBar_SetOrientation, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetParentDoubleBuffered)
BOOL
TrackBar_GetParentDoubleBuffered(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pTrackBar_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetParentDoubleBuffered)
void
TrackBar_SetParentDoubleBuffered(TTrackBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(TrackBar_SetParentDoubleBuffered)
    MySyscall(pTrackBar_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetParentShowHint)
BOOL
TrackBar_GetParentShowHint(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetParentShowHint)
    return (BOOL)MySyscall(pTrackBar_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetParentShowHint)
void
TrackBar_SetParentShowHint(TTrackBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(TrackBar_SetParentShowHint)
    MySyscall(pTrackBar_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetPageSize)
int32_t
TrackBar_GetPageSize(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetPageSize)
    return (int32_t)MySyscall(pTrackBar_GetPageSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetPageSize)
void
TrackBar_SetPageSize(TTrackBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(TrackBar_SetPageSize)
    MySyscall(pTrackBar_SetPageSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetPopupMenu)
TPopupMenu
TrackBar_GetPopupMenu(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetPopupMenu)
    return (TPopupMenu)MySyscall(pTrackBar_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetPopupMenu)
void
TrackBar_SetPopupMenu(TTrackBar AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(TrackBar_SetPopupMenu)
    MySyscall(pTrackBar_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetFrequency)
int32_t
TrackBar_GetFrequency(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetFrequency)
    return (int32_t)MySyscall(pTrackBar_GetFrequency, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetFrequency)
void
TrackBar_SetFrequency(TTrackBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(TrackBar_SetFrequency)
    MySyscall(pTrackBar_SetFrequency, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetPosition)
int32_t
TrackBar_GetPosition(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetPosition)
    return (int32_t)MySyscall(pTrackBar_GetPosition, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetPosition)
void
TrackBar_SetPosition(TTrackBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(TrackBar_SetPosition)
    MySyscall(pTrackBar_SetPosition, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetSelEnd)
int32_t
TrackBar_GetSelEnd(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetSelEnd)
    return (int32_t)MySyscall(pTrackBar_GetSelEnd, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetSelEnd)
void
TrackBar_SetSelEnd(TTrackBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(TrackBar_SetSelEnd)
    MySyscall(pTrackBar_SetSelEnd, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetSelStart)
int32_t
TrackBar_GetSelStart(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetSelStart)
    return (int32_t)MySyscall(pTrackBar_GetSelStart, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetSelStart)
void
TrackBar_SetSelStart(TTrackBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(TrackBar_SetSelStart)
    MySyscall(pTrackBar_SetSelStart, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetShowHint)
BOOL
TrackBar_GetShowHint(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetShowHint)
    return (BOOL)MySyscall(pTrackBar_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetShowHint)
void
TrackBar_SetShowHint(TTrackBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(TrackBar_SetShowHint)
    MySyscall(pTrackBar_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetShowSelRange)
BOOL
TrackBar_GetShowSelRange(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetShowSelRange)
    return (BOOL)MySyscall(pTrackBar_GetShowSelRange, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetShowSelRange)
void
TrackBar_SetShowSelRange(TTrackBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(TrackBar_SetShowSelRange)
    MySyscall(pTrackBar_SetShowSelRange, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetTabOrder)
TTabOrder
TrackBar_GetTabOrder(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetTabOrder)
    return (TTabOrder)MySyscall(pTrackBar_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetTabOrder)
void
TrackBar_SetTabOrder(TTrackBar AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(TrackBar_SetTabOrder)
    MySyscall(pTrackBar_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetTabStop)
BOOL
TrackBar_GetTabStop(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetTabStop)
    return (BOOL)MySyscall(pTrackBar_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetTabStop)
void
TrackBar_SetTabStop(TTrackBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(TrackBar_SetTabStop)
    MySyscall(pTrackBar_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetTickMarks)
TTickMark
TrackBar_GetTickMarks(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetTickMarks)
    return (TTickMark)MySyscall(pTrackBar_GetTickMarks, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetTickMarks)
void
TrackBar_SetTickMarks(TTrackBar AObj, TTickMark AValue) {
    GET_FUNC_ADDR(TrackBar_SetTickMarks)
    MySyscall(pTrackBar_SetTickMarks, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetTickStyle)
TTickStyle
TrackBar_GetTickStyle(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetTickStyle)
    return (TTickStyle)MySyscall(pTrackBar_GetTickStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetTickStyle)
void
TrackBar_SetTickStyle(TTrackBar AObj, TTickStyle AValue) {
    GET_FUNC_ADDR(TrackBar_SetTickStyle)
    MySyscall(pTrackBar_SetTickStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetVisible)
BOOL
TrackBar_GetVisible(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetVisible)
    return (BOOL)MySyscall(pTrackBar_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetVisible)
void
TrackBar_SetVisible(TTrackBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(TrackBar_SetVisible)
    MySyscall(pTrackBar_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetOnContextPopup)
void
TrackBar_SetOnContextPopup(TTrackBar AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(TrackBar_SetOnContextPopup)
    MySyscall(pTrackBar_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetOnChange)
void
TrackBar_SetOnChange(TTrackBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(TrackBar_SetOnChange)
    MySyscall(pTrackBar_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetOnDragDrop)
void
TrackBar_SetOnDragDrop(TTrackBar AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(TrackBar_SetOnDragDrop)
    MySyscall(pTrackBar_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetOnDragOver)
void
TrackBar_SetOnDragOver(TTrackBar AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(TrackBar_SetOnDragOver)
    MySyscall(pTrackBar_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetOnEndDrag)
void
TrackBar_SetOnEndDrag(TTrackBar AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(TrackBar_SetOnEndDrag)
    MySyscall(pTrackBar_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetOnEnter)
void
TrackBar_SetOnEnter(TTrackBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(TrackBar_SetOnEnter)
    MySyscall(pTrackBar_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetOnExit)
void
TrackBar_SetOnExit(TTrackBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(TrackBar_SetOnExit)
    MySyscall(pTrackBar_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetOnKeyDown)
void
TrackBar_SetOnKeyDown(TTrackBar AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(TrackBar_SetOnKeyDown)
    MySyscall(pTrackBar_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetOnKeyPress)
void
TrackBar_SetOnKeyPress(TTrackBar AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(TrackBar_SetOnKeyPress)
    MySyscall(pTrackBar_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetOnKeyUp)
void
TrackBar_SetOnKeyUp(TTrackBar AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(TrackBar_SetOnKeyUp)
    MySyscall(pTrackBar_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetDockClientCount)
int32_t
TrackBar_GetDockClientCount(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetDockClientCount)
    return (int32_t)MySyscall(pTrackBar_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetDockSite)
BOOL
TrackBar_GetDockSite(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetDockSite)
    return (BOOL)MySyscall(pTrackBar_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetDockSite)
void
TrackBar_SetDockSite(TTrackBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(TrackBar_SetDockSite)
    MySyscall(pTrackBar_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetMouseInClient)
BOOL
TrackBar_GetMouseInClient(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetMouseInClient)
    return (BOOL)MySyscall(pTrackBar_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetVisibleDockClientCount)
int32_t
TrackBar_GetVisibleDockClientCount(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pTrackBar_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetBrush)
TBrush
TrackBar_GetBrush(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetBrush)
    return (TBrush)MySyscall(pTrackBar_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetControlCount)
int32_t
TrackBar_GetControlCount(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetControlCount)
    return (int32_t)MySyscall(pTrackBar_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetHandle)
HWND
TrackBar_GetHandle(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetHandle)
    return (HWND)MySyscall(pTrackBar_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetParentWindow)
HWND
TrackBar_GetParentWindow(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetParentWindow)
    return (HWND)MySyscall(pTrackBar_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetParentWindow)
void
TrackBar_SetParentWindow(TTrackBar AObj, HWND AValue) {
    GET_FUNC_ADDR(TrackBar_SetParentWindow)
    MySyscall(pTrackBar_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetShowing)
BOOL
TrackBar_GetShowing(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetShowing)
    return (BOOL)MySyscall(pTrackBar_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetUseDockManager)
BOOL
TrackBar_GetUseDockManager(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetUseDockManager)
    return (BOOL)MySyscall(pTrackBar_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetUseDockManager)
void
TrackBar_SetUseDockManager(TTrackBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(TrackBar_SetUseDockManager)
    MySyscall(pTrackBar_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetAction)
TAction
TrackBar_GetAction(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetAction)
    return (TAction)MySyscall(pTrackBar_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetAction)
void
TrackBar_SetAction(TTrackBar AObj, TAction AValue) {
    GET_FUNC_ADDR(TrackBar_SetAction)
    MySyscall(pTrackBar_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetBiDiMode)
TBiDiMode
TrackBar_GetBiDiMode(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetBiDiMode)
    return (TBiDiMode)MySyscall(pTrackBar_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetBiDiMode)
void
TrackBar_SetBiDiMode(TTrackBar AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(TrackBar_SetBiDiMode)
    MySyscall(pTrackBar_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetBoundsRect)
TRect
TrackBar_GetBoundsRect(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetBoundsRect)
    TRect result;
    MySyscall(pTrackBar_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(TrackBar_SetBoundsRect)
void
TrackBar_SetBoundsRect(TTrackBar AObj, TRect AValue) {
    GET_FUNC_ADDR(TrackBar_SetBoundsRect)
    MySyscall(pTrackBar_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetClientHeight)
int32_t
TrackBar_GetClientHeight(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetClientHeight)
    return (int32_t)MySyscall(pTrackBar_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetClientHeight)
void
TrackBar_SetClientHeight(TTrackBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(TrackBar_SetClientHeight)
    MySyscall(pTrackBar_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetClientOrigin)
TPoint
TrackBar_GetClientOrigin(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetClientOrigin)
    TPoint result;
    MySyscall(pTrackBar_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(TrackBar_GetClientRect)
TRect
TrackBar_GetClientRect(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetClientRect)
    TRect result;
    MySyscall(pTrackBar_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(TrackBar_GetClientWidth)
int32_t
TrackBar_GetClientWidth(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetClientWidth)
    return (int32_t)MySyscall(pTrackBar_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetClientWidth)
void
TrackBar_SetClientWidth(TTrackBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(TrackBar_SetClientWidth)
    MySyscall(pTrackBar_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetControlState)
TControlState
TrackBar_GetControlState(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetControlState)
    return (TControlState)MySyscall(pTrackBar_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetControlState)
void
TrackBar_SetControlState(TTrackBar AObj, TControlState AValue) {
    GET_FUNC_ADDR(TrackBar_SetControlState)
    MySyscall(pTrackBar_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetControlStyle)
TControlStyle
TrackBar_GetControlStyle(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetControlStyle)
    return (TControlStyle)MySyscall(pTrackBar_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetControlStyle)
void
TrackBar_SetControlStyle(TTrackBar AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(TrackBar_SetControlStyle)
    MySyscall(pTrackBar_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetFloating)
BOOL
TrackBar_GetFloating(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetFloating)
    return (BOOL)MySyscall(pTrackBar_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetParent)
TWinControl
TrackBar_GetParent(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetParent)
    return (TWinControl)MySyscall(pTrackBar_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetParent)
void
TrackBar_SetParent(TTrackBar AObj, TWinControl AValue) {
    GET_FUNC_ADDR(TrackBar_SetParent)
    MySyscall(pTrackBar_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetLeft)
int32_t
TrackBar_GetLeft(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetLeft)
    return (int32_t)MySyscall(pTrackBar_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetLeft)
void
TrackBar_SetLeft(TTrackBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(TrackBar_SetLeft)
    MySyscall(pTrackBar_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetTop)
int32_t
TrackBar_GetTop(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetTop)
    return (int32_t)MySyscall(pTrackBar_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetTop)
void
TrackBar_SetTop(TTrackBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(TrackBar_SetTop)
    MySyscall(pTrackBar_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetWidth)
int32_t
TrackBar_GetWidth(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetWidth)
    return (int32_t)MySyscall(pTrackBar_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetWidth)
void
TrackBar_SetWidth(TTrackBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(TrackBar_SetWidth)
    MySyscall(pTrackBar_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetHeight)
int32_t
TrackBar_GetHeight(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetHeight)
    return (int32_t)MySyscall(pTrackBar_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetHeight)
void
TrackBar_SetHeight(TTrackBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(TrackBar_SetHeight)
    MySyscall(pTrackBar_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetCursor)
TCursor
TrackBar_GetCursor(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetCursor)
    return (TCursor)MySyscall(pTrackBar_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetCursor)
void
TrackBar_SetCursor(TTrackBar AObj, TCursor AValue) {
    GET_FUNC_ADDR(TrackBar_SetCursor)
    MySyscall(pTrackBar_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetHint)
char*
TrackBar_GetHint(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetHint)
    return (char*)MySyscall(pTrackBar_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetHint)
void
TrackBar_SetHint(TTrackBar AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TrackBar_SetHint)
    MySyscall(pTrackBar_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetComponentCount)
int32_t
TrackBar_GetComponentCount(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetComponentCount)
    return (int32_t)MySyscall(pTrackBar_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetComponentIndex)
int32_t
TrackBar_GetComponentIndex(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetComponentIndex)
    return (int32_t)MySyscall(pTrackBar_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetComponentIndex)
void
TrackBar_SetComponentIndex(TTrackBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(TrackBar_SetComponentIndex)
    MySyscall(pTrackBar_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetOwner)
TComponent
TrackBar_GetOwner(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetOwner)
    return (TComponent)MySyscall(pTrackBar_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetName)
char*
TrackBar_GetName(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetName)
    return (char*)MySyscall(pTrackBar_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetName)
void
TrackBar_SetName(TTrackBar AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TrackBar_SetName)
    MySyscall(pTrackBar_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetTag)
intptr_t
TrackBar_GetTag(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetTag)
    return (intptr_t)MySyscall(pTrackBar_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetTag)
void
TrackBar_SetTag(TTrackBar AObj, intptr_t AValue) {
    GET_FUNC_ADDR(TrackBar_SetTag)
    MySyscall(pTrackBar_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetAnchorSideLeft)
TAnchorSide
TrackBar_GetAnchorSideLeft(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pTrackBar_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetAnchorSideLeft)
void
TrackBar_SetAnchorSideLeft(TTrackBar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(TrackBar_SetAnchorSideLeft)
    MySyscall(pTrackBar_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetAnchorSideTop)
TAnchorSide
TrackBar_GetAnchorSideTop(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pTrackBar_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetAnchorSideTop)
void
TrackBar_SetAnchorSideTop(TTrackBar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(TrackBar_SetAnchorSideTop)
    MySyscall(pTrackBar_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetAnchorSideRight)
TAnchorSide
TrackBar_GetAnchorSideRight(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pTrackBar_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetAnchorSideRight)
void
TrackBar_SetAnchorSideRight(TTrackBar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(TrackBar_SetAnchorSideRight)
    MySyscall(pTrackBar_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetAnchorSideBottom)
TAnchorSide
TrackBar_GetAnchorSideBottom(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pTrackBar_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetAnchorSideBottom)
void
TrackBar_SetAnchorSideBottom(TTrackBar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(TrackBar_SetAnchorSideBottom)
    MySyscall(pTrackBar_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetChildSizing)
TControlChildSizing
TrackBar_GetChildSizing(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetChildSizing)
    return (TControlChildSizing)MySyscall(pTrackBar_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetChildSizing)
void
TrackBar_SetChildSizing(TTrackBar AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(TrackBar_SetChildSizing)
    MySyscall(pTrackBar_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetBorderSpacing)
TControlBorderSpacing
TrackBar_GetBorderSpacing(TTrackBar AObj) {
    GET_FUNC_ADDR(TrackBar_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pTrackBar_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_SetBorderSpacing)
void
TrackBar_SetBorderSpacing(TTrackBar AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(TrackBar_SetBorderSpacing)
    MySyscall(pTrackBar_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetDockClients)
TControl
TrackBar_GetDockClients(TTrackBar AObj, int32_t Index) {
    GET_FUNC_ADDR(TrackBar_GetDockClients)
    return (TControl)MySyscall(pTrackBar_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetControls)
TControl
TrackBar_GetControls(TTrackBar AObj, int32_t Index) {
    GET_FUNC_ADDR(TrackBar_GetControls)
    return (TControl)MySyscall(pTrackBar_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetComponents)
TComponent
TrackBar_GetComponents(TTrackBar AObj, int32_t AIndex) {
    GET_FUNC_ADDR(TrackBar_GetComponents)
    return (TComponent)MySyscall(pTrackBar_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_GetAnchorSide)
TAnchorSide
TrackBar_GetAnchorSide(TTrackBar AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(TrackBar_GetAnchorSide)
    return (TAnchorSide)MySyscall(pTrackBar_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TrackBar_StaticClassType)
TClass
TrackBar_StaticClassType() {
    GET_FUNC_ADDR(TrackBar_StaticClassType)
    return (TClass)MySyscall(pTrackBar_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TImageList-------------------

DEFINE_FUNC_PTR(ImageList_Create)
TImageList
ImageList_Create(TComponent AOwner) {
    GET_FUNC_ADDR(ImageList_Create)
    return (TImageList)MySyscall(pImageList_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_Free)
void
ImageList_Free(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_Free)
    MySyscall(pImageList_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_StretchDraw)
void
ImageList_StretchDraw(TImageList AObj, TCanvas ACanvas, int32_t AIndex, TRect ARect, BOOL AEnabled) {
    GET_FUNC_ADDR(ImageList_StretchDraw)
    MySyscall(pImageList_StretchDraw, 5, AObj, ACanvas, AIndex, &ARect, AEnabled ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_AddSliced)
int32_t
ImageList_AddSliced(TImageList AObj, TBitmap Image, int32_t AHorizontalCount, int32_t AVerticalCount) {
    GET_FUNC_ADDR(ImageList_AddSliced)
    return (int32_t)MySyscall(pImageList_AddSliced, 4, AObj, Image, AHorizontalCount, AVerticalCount ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_GetHotSpot)
TPoint
ImageList_GetHotSpot(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_GetHotSpot)
    TPoint result;
    MySyscall(pImageList_GetHotSpot, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ImageList_HideDragImage)
void
ImageList_HideDragImage(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_HideDragImage)
    MySyscall(pImageList_HideDragImage, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_ShowDragImage)
void
ImageList_ShowDragImage(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_ShowDragImage)
    MySyscall(pImageList_ShowDragImage, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_Assign)
void
ImageList_Assign(TImageList AObj, TObject Source) {
    GET_FUNC_ADDR(ImageList_Assign)
    MySyscall(pImageList_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_Add)
int32_t
ImageList_Add(TImageList AObj, TBitmap Image, TBitmap Mask) {
    GET_FUNC_ADDR(ImageList_Add)
    return (int32_t)MySyscall(pImageList_Add, 3, AObj, Image, Mask ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_AddIcon)
int32_t
ImageList_AddIcon(TImageList AObj, TIcon Image) {
    GET_FUNC_ADDR(ImageList_AddIcon)
    return (int32_t)MySyscall(pImageList_AddIcon, 2, AObj, Image ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_AddImages)
void
ImageList_AddImages(TImageList AObj, TImageList Value) {
    GET_FUNC_ADDR(ImageList_AddImages)
    MySyscall(pImageList_AddImages, 2, AObj, Value ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_AddMasked)
int32_t
ImageList_AddMasked(TImageList AObj, TBitmap Image, TColor MaskColor) {
    GET_FUNC_ADDR(ImageList_AddMasked)
    return (int32_t)MySyscall(pImageList_AddMasked, 3, AObj, Image, MaskColor ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_Clear)
void
ImageList_Clear(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_Clear)
    MySyscall(pImageList_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_Delete)
void
ImageList_Delete(TImageList AObj, int32_t Index) {
    GET_FUNC_ADDR(ImageList_Delete)
    MySyscall(pImageList_Delete, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_Insert)
void
ImageList_Insert(TImageList AObj, int32_t Index, TBitmap Image, TBitmap Mask) {
    GET_FUNC_ADDR(ImageList_Insert)
    MySyscall(pImageList_Insert, 4, AObj, Index, Image, Mask ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_InsertIcon)
void
ImageList_InsertIcon(TImageList AObj, int32_t Index, TIcon Image) {
    GET_FUNC_ADDR(ImageList_InsertIcon)
    MySyscall(pImageList_InsertIcon, 3, AObj, Index, Image ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_InsertMasked)
void
ImageList_InsertMasked(TImageList AObj, int32_t Index, TBitmap Image, TColor MaskColor) {
    GET_FUNC_ADDR(ImageList_InsertMasked)
    MySyscall(pImageList_InsertMasked, 4, AObj, Index, Image, MaskColor ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_Move)
void
ImageList_Move(TImageList AObj, int32_t CurIndex, int32_t NewIndex) {
    GET_FUNC_ADDR(ImageList_Move)
    MySyscall(pImageList_Move, 3, AObj, CurIndex, NewIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_Replace)
void
ImageList_Replace(TImageList AObj, int32_t Index, TBitmap Image, TBitmap Mask) {
    GET_FUNC_ADDR(ImageList_Replace)
    MySyscall(pImageList_Replace, 4, AObj, Index, Image, Mask ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_ReplaceMasked)
void
ImageList_ReplaceMasked(TImageList AObj, int32_t Index, TBitmap NewImage, TColor MaskColor) {
    GET_FUNC_ADDR(ImageList_ReplaceMasked)
    MySyscall(pImageList_ReplaceMasked, 4, AObj, Index, NewImage, MaskColor ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_BeginUpdate)
void
ImageList_BeginUpdate(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_BeginUpdate)
    MySyscall(pImageList_BeginUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_EndUpdate)
void
ImageList_EndUpdate(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_EndUpdate)
    MySyscall(pImageList_EndUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_FindComponent)
TComponent
ImageList_FindComponent(TImageList AObj, CChar char* AName) {
    GET_FUNC_ADDR(ImageList_FindComponent)
    return (TComponent)MySyscall(pImageList_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_GetNamePath)
char*
ImageList_GetNamePath(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_GetNamePath)
    return (char*)MySyscall(pImageList_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_HasParent)
BOOL
ImageList_HasParent(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_HasParent)
    return (BOOL)MySyscall(pImageList_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_ClassType)
TClass
ImageList_ClassType(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_ClassType)
    return (TClass)MySyscall(pImageList_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_ClassName)
char*
ImageList_ClassName(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_ClassName)
    return (char*)MySyscall(pImageList_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_InstanceSize)
int32_t
ImageList_InstanceSize(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_InstanceSize)
    return (int32_t)MySyscall(pImageList_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_InheritsFrom)
BOOL
ImageList_InheritsFrom(TImageList AObj, TClass AClass) {
    GET_FUNC_ADDR(ImageList_InheritsFrom)
    return (BOOL)MySyscall(pImageList_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_Equals)
BOOL
ImageList_Equals(TImageList AObj, TObject Obj) {
    GET_FUNC_ADDR(ImageList_Equals)
    return (BOOL)MySyscall(pImageList_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_GetHashCode)
int32_t
ImageList_GetHashCode(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_GetHashCode)
    return (int32_t)MySyscall(pImageList_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_ToString)
char*
ImageList_ToString(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_ToString)
    return (char*)MySyscall(pImageList_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_GetScaled)
BOOL
ImageList_GetScaled(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_GetScaled)
    return (BOOL)MySyscall(pImageList_GetScaled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_SetScaled)
void
ImageList_SetScaled(TImageList AObj, BOOL AValue) {
    GET_FUNC_ADDR(ImageList_SetScaled)
    MySyscall(pImageList_SetScaled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_GetShareImages)
BOOL
ImageList_GetShareImages(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_GetShareImages)
    return (BOOL)MySyscall(pImageList_GetShareImages, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_SetShareImages)
void
ImageList_SetShareImages(TImageList AObj, BOOL AValue) {
    GET_FUNC_ADDR(ImageList_SetShareImages)
    MySyscall(pImageList_SetShareImages, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_GetCount)
int32_t
ImageList_GetCount(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_GetCount)
    return (int32_t)MySyscall(pImageList_GetCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_GetBlendColor)
TColor
ImageList_GetBlendColor(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_GetBlendColor)
    return (TColor)MySyscall(pImageList_GetBlendColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_SetBlendColor)
void
ImageList_SetBlendColor(TImageList AObj, TColor AValue) {
    GET_FUNC_ADDR(ImageList_SetBlendColor)
    MySyscall(pImageList_SetBlendColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_GetBkColor)
TColor
ImageList_GetBkColor(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_GetBkColor)
    return (TColor)MySyscall(pImageList_GetBkColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_SetBkColor)
void
ImageList_SetBkColor(TImageList AObj, TColor AValue) {
    GET_FUNC_ADDR(ImageList_SetBkColor)
    MySyscall(pImageList_SetBkColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_GetAllocBy)
int32_t
ImageList_GetAllocBy(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_GetAllocBy)
    return (int32_t)MySyscall(pImageList_GetAllocBy, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_SetAllocBy)
void
ImageList_SetAllocBy(TImageList AObj, int32_t AValue) {
    GET_FUNC_ADDR(ImageList_SetAllocBy)
    MySyscall(pImageList_SetAllocBy, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_GetDrawingStyle)
TDrawingStyle
ImageList_GetDrawingStyle(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_GetDrawingStyle)
    return (TDrawingStyle)MySyscall(pImageList_GetDrawingStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_SetDrawingStyle)
void
ImageList_SetDrawingStyle(TImageList AObj, TDrawingStyle AValue) {
    GET_FUNC_ADDR(ImageList_SetDrawingStyle)
    MySyscall(pImageList_SetDrawingStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_GetHeight)
int32_t
ImageList_GetHeight(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_GetHeight)
    return (int32_t)MySyscall(pImageList_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_SetHeight)
void
ImageList_SetHeight(TImageList AObj, int32_t AValue) {
    GET_FUNC_ADDR(ImageList_SetHeight)
    MySyscall(pImageList_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_GetImageType)
TImageType
ImageList_GetImageType(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_GetImageType)
    return (TImageType)MySyscall(pImageList_GetImageType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_SetImageType)
void
ImageList_SetImageType(TImageList AObj, TImageType AValue) {
    GET_FUNC_ADDR(ImageList_SetImageType)
    MySyscall(pImageList_SetImageType, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_GetMasked)
BOOL
ImageList_GetMasked(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_GetMasked)
    return (BOOL)MySyscall(pImageList_GetMasked, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_SetMasked)
void
ImageList_SetMasked(TImageList AObj, BOOL AValue) {
    GET_FUNC_ADDR(ImageList_SetMasked)
    MySyscall(pImageList_SetMasked, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_SetOnChange)
void
ImageList_SetOnChange(TImageList AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ImageList_SetOnChange)
    MySyscall(pImageList_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_GetWidth)
int32_t
ImageList_GetWidth(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_GetWidth)
    return (int32_t)MySyscall(pImageList_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_SetWidth)
void
ImageList_SetWidth(TImageList AObj, int32_t AValue) {
    GET_FUNC_ADDR(ImageList_SetWidth)
    MySyscall(pImageList_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_GetDragCursor)
TCursor
ImageList_GetDragCursor(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_GetDragCursor)
    return (TCursor)MySyscall(pImageList_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_SetDragCursor)
void
ImageList_SetDragCursor(TImageList AObj, TCursor AValue) {
    GET_FUNC_ADDR(ImageList_SetDragCursor)
    MySyscall(pImageList_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_GetDragging)
BOOL
ImageList_GetDragging(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_GetDragging)
    return (BOOL)MySyscall(pImageList_GetDragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_GetComponentCount)
int32_t
ImageList_GetComponentCount(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_GetComponentCount)
    return (int32_t)MySyscall(pImageList_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_GetComponentIndex)
int32_t
ImageList_GetComponentIndex(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_GetComponentIndex)
    return (int32_t)MySyscall(pImageList_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_SetComponentIndex)
void
ImageList_SetComponentIndex(TImageList AObj, int32_t AValue) {
    GET_FUNC_ADDR(ImageList_SetComponentIndex)
    MySyscall(pImageList_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_GetOwner)
TComponent
ImageList_GetOwner(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_GetOwner)
    return (TComponent)MySyscall(pImageList_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_GetName)
char*
ImageList_GetName(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_GetName)
    return (char*)MySyscall(pImageList_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_SetName)
void
ImageList_SetName(TImageList AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ImageList_SetName)
    MySyscall(pImageList_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_GetTag)
intptr_t
ImageList_GetTag(TImageList AObj) {
    GET_FUNC_ADDR(ImageList_GetTag)
    return (intptr_t)MySyscall(pImageList_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_SetTag)
void
ImageList_SetTag(TImageList AObj, intptr_t AValue) {
    GET_FUNC_ADDR(ImageList_SetTag)
    MySyscall(pImageList_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_GetComponents)
TComponent
ImageList_GetComponents(TImageList AObj, int32_t AIndex) {
    GET_FUNC_ADDR(ImageList_GetComponents)
    return (TComponent)MySyscall(pImageList_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_StaticClassType)
TClass
ImageList_StaticClassType() {
    GET_FUNC_ADDR(ImageList_StaticClassType)
    return (TClass)MySyscall(pImageList_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_Draw1)
void
ImageList_Draw1(TImageList AObj, TCanvas Canvas, int32_t X, int32_t Y, int32_t Index, BOOL Enabled) {
    GET_FUNC_ADDR(ImageList_Draw1)
    MySyscall(pImageList_Draw1, 6, AObj, Canvas, X, Y, Index, Enabled ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_DrawOverlay1)
void
ImageList_DrawOverlay1(TImageList AObj, TCanvas Canvas, int32_t X, int32_t Y, int32_t ImageIndex, uint8_t Overlay, BOOL Enabled) {
    GET_FUNC_ADDR(ImageList_DrawOverlay1)
    MySyscall(pImageList_DrawOverlay1, 7, AObj, Canvas, X, Y, ImageIndex, Overlay, Enabled ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageList_GetIcon1)
void
ImageList_GetIcon1(TImageList AObj, int32_t Index, TIcon Image) {
    GET_FUNC_ADDR(ImageList_GetIcon1)
    MySyscall(pImageList_GetIcon1, 3, AObj, Index, Image ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TUpDown-------------------

DEFINE_FUNC_PTR(UpDown_Create)
TUpDown
UpDown_Create(TComponent AOwner) {
    GET_FUNC_ADDR(UpDown_Create)
    return (TUpDown)MySyscall(pUpDown_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_Free)
void
UpDown_Free(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_Free)
    MySyscall(pUpDown_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_CanFocus)
BOOL
UpDown_CanFocus(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_CanFocus)
    return (BOOL)MySyscall(pUpDown_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_ContainsControl)
BOOL
UpDown_ContainsControl(TUpDown AObj, TControl Control) {
    GET_FUNC_ADDR(UpDown_ContainsControl)
    return (BOOL)MySyscall(pUpDown_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_ControlAtPos)
TControl
UpDown_ControlAtPos(TUpDown AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(UpDown_ControlAtPos)
    return (TControl)MySyscall(pUpDown_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_DisableAlign)
void
UpDown_DisableAlign(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_DisableAlign)
    MySyscall(pUpDown_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_EnableAlign)
void
UpDown_EnableAlign(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_EnableAlign)
    MySyscall(pUpDown_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_FindChildControl)
TControl
UpDown_FindChildControl(TUpDown AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(UpDown_FindChildControl)
    return (TControl)MySyscall(pUpDown_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_FlipChildren)
void
UpDown_FlipChildren(TUpDown AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(UpDown_FlipChildren)
    MySyscall(pUpDown_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_Focused)
BOOL
UpDown_Focused(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_Focused)
    return (BOOL)MySyscall(pUpDown_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_HandleAllocated)
BOOL
UpDown_HandleAllocated(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_HandleAllocated)
    return (BOOL)MySyscall(pUpDown_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_InsertControl)
void
UpDown_InsertControl(TUpDown AObj, TControl AControl) {
    GET_FUNC_ADDR(UpDown_InsertControl)
    MySyscall(pUpDown_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_Invalidate)
void
UpDown_Invalidate(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_Invalidate)
    MySyscall(pUpDown_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_PaintTo)
void
UpDown_PaintTo(TUpDown AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(UpDown_PaintTo)
    MySyscall(pUpDown_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_RemoveControl)
void
UpDown_RemoveControl(TUpDown AObj, TControl AControl) {
    GET_FUNC_ADDR(UpDown_RemoveControl)
    MySyscall(pUpDown_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_Realign)
void
UpDown_Realign(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_Realign)
    MySyscall(pUpDown_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_Repaint)
void
UpDown_Repaint(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_Repaint)
    MySyscall(pUpDown_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_ScaleBy)
void
UpDown_ScaleBy(TUpDown AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(UpDown_ScaleBy)
    MySyscall(pUpDown_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_ScrollBy)
void
UpDown_ScrollBy(TUpDown AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(UpDown_ScrollBy)
    MySyscall(pUpDown_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetBounds)
void
UpDown_SetBounds(TUpDown AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(UpDown_SetBounds)
    MySyscall(pUpDown_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetFocus)
void
UpDown_SetFocus(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_SetFocus)
    MySyscall(pUpDown_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_Update)
void
UpDown_Update(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_Update)
    MySyscall(pUpDown_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_BringToFront)
void
UpDown_BringToFront(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_BringToFront)
    MySyscall(pUpDown_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_ClientToScreen)
TPoint
UpDown_ClientToScreen(TUpDown AObj, TPoint Point) {
    GET_FUNC_ADDR(UpDown_ClientToScreen)
    TPoint result;
    MySyscall(pUpDown_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(UpDown_ClientToParent)
TPoint
UpDown_ClientToParent(TUpDown AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(UpDown_ClientToParent)
    TPoint result;
    MySyscall(pUpDown_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(UpDown_Dragging)
BOOL
UpDown_Dragging(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_Dragging)
    return (BOOL)MySyscall(pUpDown_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_HasParent)
BOOL
UpDown_HasParent(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_HasParent)
    return (BOOL)MySyscall(pUpDown_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_Hide)
void
UpDown_Hide(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_Hide)
    MySyscall(pUpDown_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_Perform)
intptr_t
UpDown_Perform(TUpDown AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(UpDown_Perform)
    return (intptr_t)MySyscall(pUpDown_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_Refresh)
void
UpDown_Refresh(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_Refresh)
    MySyscall(pUpDown_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_ScreenToClient)
TPoint
UpDown_ScreenToClient(TUpDown AObj, TPoint Point) {
    GET_FUNC_ADDR(UpDown_ScreenToClient)
    TPoint result;
    MySyscall(pUpDown_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(UpDown_ParentToClient)
TPoint
UpDown_ParentToClient(TUpDown AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(UpDown_ParentToClient)
    TPoint result;
    MySyscall(pUpDown_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(UpDown_SendToBack)
void
UpDown_SendToBack(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_SendToBack)
    MySyscall(pUpDown_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_Show)
void
UpDown_Show(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_Show)
    MySyscall(pUpDown_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetTextBuf)
int32_t
UpDown_GetTextBuf(TUpDown AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(UpDown_GetTextBuf)
    return (int32_t)MySyscall(pUpDown_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetTextLen)
int32_t
UpDown_GetTextLen(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetTextLen)
    return (int32_t)MySyscall(pUpDown_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetTextBuf)
void
UpDown_SetTextBuf(TUpDown AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(UpDown_SetTextBuf)
    MySyscall(pUpDown_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_FindComponent)
TComponent
UpDown_FindComponent(TUpDown AObj, CChar char* AName) {
    GET_FUNC_ADDR(UpDown_FindComponent)
    return (TComponent)MySyscall(pUpDown_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetNamePath)
char*
UpDown_GetNamePath(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetNamePath)
    return (char*)MySyscall(pUpDown_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_Assign)
void
UpDown_Assign(TUpDown AObj, TObject Source) {
    GET_FUNC_ADDR(UpDown_Assign)
    MySyscall(pUpDown_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_ClassType)
TClass
UpDown_ClassType(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_ClassType)
    return (TClass)MySyscall(pUpDown_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_ClassName)
char*
UpDown_ClassName(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_ClassName)
    return (char*)MySyscall(pUpDown_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_InstanceSize)
int32_t
UpDown_InstanceSize(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_InstanceSize)
    return (int32_t)MySyscall(pUpDown_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_InheritsFrom)
BOOL
UpDown_InheritsFrom(TUpDown AObj, TClass AClass) {
    GET_FUNC_ADDR(UpDown_InheritsFrom)
    return (BOOL)MySyscall(pUpDown_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_Equals)
BOOL
UpDown_Equals(TUpDown AObj, TObject Obj) {
    GET_FUNC_ADDR(UpDown_Equals)
    return (BOOL)MySyscall(pUpDown_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetHashCode)
int32_t
UpDown_GetHashCode(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetHashCode)
    return (int32_t)MySyscall(pUpDown_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_ToString)
char*
UpDown_ToString(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_ToString)
    return (char*)MySyscall(pUpDown_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_AnchorToNeighbour)
void
UpDown_AnchorToNeighbour(TUpDown AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(UpDown_AnchorToNeighbour)
    MySyscall(pUpDown_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_AnchorParallel)
void
UpDown_AnchorParallel(TUpDown AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(UpDown_AnchorParallel)
    MySyscall(pUpDown_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_AnchorHorizontalCenterTo)
void
UpDown_AnchorHorizontalCenterTo(TUpDown AObj, TControl ASibling) {
    GET_FUNC_ADDR(UpDown_AnchorHorizontalCenterTo)
    MySyscall(pUpDown_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_AnchorVerticalCenterTo)
void
UpDown_AnchorVerticalCenterTo(TUpDown AObj, TControl ASibling) {
    GET_FUNC_ADDR(UpDown_AnchorVerticalCenterTo)
    MySyscall(pUpDown_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_AnchorSame)
void
UpDown_AnchorSame(TUpDown AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(UpDown_AnchorSame)
    MySyscall(pUpDown_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_AnchorAsAlign)
void
UpDown_AnchorAsAlign(TUpDown AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(UpDown_AnchorAsAlign)
    MySyscall(pUpDown_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_AnchorClient)
void
UpDown_AnchorClient(TUpDown AObj, int32_t ASpace) {
    GET_FUNC_ADDR(UpDown_AnchorClient)
    MySyscall(pUpDown_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_ScaleDesignToForm)
int32_t
UpDown_ScaleDesignToForm(TUpDown AObj, int32_t ASize) {
    GET_FUNC_ADDR(UpDown_ScaleDesignToForm)
    return (int32_t)MySyscall(pUpDown_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_ScaleFormToDesign)
int32_t
UpDown_ScaleFormToDesign(TUpDown AObj, int32_t ASize) {
    GET_FUNC_ADDR(UpDown_ScaleFormToDesign)
    return (int32_t)MySyscall(pUpDown_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_Scale96ToForm)
int32_t
UpDown_Scale96ToForm(TUpDown AObj, int32_t ASize) {
    GET_FUNC_ADDR(UpDown_Scale96ToForm)
    return (int32_t)MySyscall(pUpDown_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_ScaleFormTo96)
int32_t
UpDown_ScaleFormTo96(TUpDown AObj, int32_t ASize) {
    GET_FUNC_ADDR(UpDown_ScaleFormTo96)
    return (int32_t)MySyscall(pUpDown_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_Scale96ToFont)
int32_t
UpDown_Scale96ToFont(TUpDown AObj, int32_t ASize) {
    GET_FUNC_ADDR(UpDown_Scale96ToFont)
    return (int32_t)MySyscall(pUpDown_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_ScaleFontTo96)
int32_t
UpDown_ScaleFontTo96(TUpDown AObj, int32_t ASize) {
    GET_FUNC_ADDR(UpDown_ScaleFontTo96)
    return (int32_t)MySyscall(pUpDown_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_ScaleScreenToFont)
int32_t
UpDown_ScaleScreenToFont(TUpDown AObj, int32_t ASize) {
    GET_FUNC_ADDR(UpDown_ScaleScreenToFont)
    return (int32_t)MySyscall(pUpDown_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_ScaleFontToScreen)
int32_t
UpDown_ScaleFontToScreen(TUpDown AObj, int32_t ASize) {
    GET_FUNC_ADDR(UpDown_ScaleFontToScreen)
    return (int32_t)MySyscall(pUpDown_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_Scale96ToScreen)
int32_t
UpDown_Scale96ToScreen(TUpDown AObj, int32_t ASize) {
    GET_FUNC_ADDR(UpDown_Scale96ToScreen)
    return (int32_t)MySyscall(pUpDown_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_ScaleScreenTo96)
int32_t
UpDown_ScaleScreenTo96(TUpDown AObj, int32_t ASize) {
    GET_FUNC_ADDR(UpDown_ScaleScreenTo96)
    return (int32_t)MySyscall(pUpDown_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_AutoAdjustLayout)
void
UpDown_AutoAdjustLayout(TUpDown AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(UpDown_AutoAdjustLayout)
    MySyscall(pUpDown_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_FixDesignFontsPPI)
void
UpDown_FixDesignFontsPPI(TUpDown AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(UpDown_FixDesignFontsPPI)
    MySyscall(pUpDown_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_ScaleFontsPPI)
void
UpDown_ScaleFontsPPI(TUpDown AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(UpDown_ScaleFontsPPI)
    MySyscall(pUpDown_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetAnchors)
TAnchors
UpDown_GetAnchors(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetAnchors)
    return (TAnchors)MySyscall(pUpDown_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetAnchors)
void
UpDown_SetAnchors(TUpDown AObj, TAnchors AValue) {
    GET_FUNC_ADDR(UpDown_SetAnchors)
    MySyscall(pUpDown_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetDoubleBuffered)
BOOL
UpDown_GetDoubleBuffered(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetDoubleBuffered)
    return (BOOL)MySyscall(pUpDown_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetDoubleBuffered)
void
UpDown_SetDoubleBuffered(TUpDown AObj, BOOL AValue) {
    GET_FUNC_ADDR(UpDown_SetDoubleBuffered)
    MySyscall(pUpDown_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetEnabled)
BOOL
UpDown_GetEnabled(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetEnabled)
    return (BOOL)MySyscall(pUpDown_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetEnabled)
void
UpDown_SetEnabled(TUpDown AObj, BOOL AValue) {
    GET_FUNC_ADDR(UpDown_SetEnabled)
    MySyscall(pUpDown_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetHint)
char*
UpDown_GetHint(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetHint)
    return (char*)MySyscall(pUpDown_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetHint)
void
UpDown_SetHint(TUpDown AObj, CChar char* AValue) {
    GET_FUNC_ADDR(UpDown_SetHint)
    MySyscall(pUpDown_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetMin)
int32_t
UpDown_GetMin(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetMin)
    return (int32_t)MySyscall(pUpDown_GetMin, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetMin)
void
UpDown_SetMin(TUpDown AObj, int32_t AValue) {
    GET_FUNC_ADDR(UpDown_SetMin)
    MySyscall(pUpDown_SetMin, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetMax)
int32_t
UpDown_GetMax(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetMax)
    return (int32_t)MySyscall(pUpDown_GetMax, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetMax)
void
UpDown_SetMax(TUpDown AObj, int32_t AValue) {
    GET_FUNC_ADDR(UpDown_SetMax)
    MySyscall(pUpDown_SetMax, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetIncrement)
int32_t
UpDown_GetIncrement(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetIncrement)
    return (int32_t)MySyscall(pUpDown_GetIncrement, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetIncrement)
void
UpDown_SetIncrement(TUpDown AObj, int32_t AValue) {
    GET_FUNC_ADDR(UpDown_SetIncrement)
    MySyscall(pUpDown_SetIncrement, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetConstraints)
TSizeConstraints
UpDown_GetConstraints(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetConstraints)
    return (TSizeConstraints)MySyscall(pUpDown_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetConstraints)
void
UpDown_SetConstraints(TUpDown AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(UpDown_SetConstraints)
    MySyscall(pUpDown_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetOrientation)
TUDOrientation
UpDown_GetOrientation(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetOrientation)
    return (TUDOrientation)MySyscall(pUpDown_GetOrientation, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetOrientation)
void
UpDown_SetOrientation(TUpDown AObj, TUDOrientation AValue) {
    GET_FUNC_ADDR(UpDown_SetOrientation)
    MySyscall(pUpDown_SetOrientation, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetParentDoubleBuffered)
BOOL
UpDown_GetParentDoubleBuffered(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pUpDown_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetParentDoubleBuffered)
void
UpDown_SetParentDoubleBuffered(TUpDown AObj, BOOL AValue) {
    GET_FUNC_ADDR(UpDown_SetParentDoubleBuffered)
    MySyscall(pUpDown_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetParentShowHint)
BOOL
UpDown_GetParentShowHint(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetParentShowHint)
    return (BOOL)MySyscall(pUpDown_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetParentShowHint)
void
UpDown_SetParentShowHint(TUpDown AObj, BOOL AValue) {
    GET_FUNC_ADDR(UpDown_SetParentShowHint)
    MySyscall(pUpDown_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetPopupMenu)
TPopupMenu
UpDown_GetPopupMenu(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetPopupMenu)
    return (TPopupMenu)MySyscall(pUpDown_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetPopupMenu)
void
UpDown_SetPopupMenu(TUpDown AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(UpDown_SetPopupMenu)
    MySyscall(pUpDown_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetPosition)
int32_t
UpDown_GetPosition(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetPosition)
    return (int32_t)MySyscall(pUpDown_GetPosition, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetPosition)
void
UpDown_SetPosition(TUpDown AObj, int32_t AValue) {
    GET_FUNC_ADDR(UpDown_SetPosition)
    MySyscall(pUpDown_SetPosition, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetShowHint)
BOOL
UpDown_GetShowHint(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetShowHint)
    return (BOOL)MySyscall(pUpDown_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetShowHint)
void
UpDown_SetShowHint(TUpDown AObj, BOOL AValue) {
    GET_FUNC_ADDR(UpDown_SetShowHint)
    MySyscall(pUpDown_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetTabOrder)
TTabOrder
UpDown_GetTabOrder(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetTabOrder)
    return (TTabOrder)MySyscall(pUpDown_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetTabOrder)
void
UpDown_SetTabOrder(TUpDown AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(UpDown_SetTabOrder)
    MySyscall(pUpDown_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetTabStop)
BOOL
UpDown_GetTabStop(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetTabStop)
    return (BOOL)MySyscall(pUpDown_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetTabStop)
void
UpDown_SetTabStop(TUpDown AObj, BOOL AValue) {
    GET_FUNC_ADDR(UpDown_SetTabStop)
    MySyscall(pUpDown_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetVisible)
BOOL
UpDown_GetVisible(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetVisible)
    return (BOOL)MySyscall(pUpDown_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetVisible)
void
UpDown_SetVisible(TUpDown AObj, BOOL AValue) {
    GET_FUNC_ADDR(UpDown_SetVisible)
    MySyscall(pUpDown_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetWrap)
BOOL
UpDown_GetWrap(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetWrap)
    return (BOOL)MySyscall(pUpDown_GetWrap, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetWrap)
void
UpDown_SetWrap(TUpDown AObj, BOOL AValue) {
    GET_FUNC_ADDR(UpDown_SetWrap)
    MySyscall(pUpDown_SetWrap, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetOnChanging)
void
UpDown_SetOnChanging(TUpDown AObj, TUDChangingEvent AEventData) {
    GET_FUNC_ADDR(UpDown_SetOnChanging)
    MySyscall(pUpDown_SetOnChanging, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetOnContextPopup)
void
UpDown_SetOnContextPopup(TUpDown AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(UpDown_SetOnContextPopup)
    MySyscall(pUpDown_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetOnClick)
void
UpDown_SetOnClick(TUpDown AObj, TUDClickEvent AEventData) {
    GET_FUNC_ADDR(UpDown_SetOnClick)
    MySyscall(pUpDown_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetOnEnter)
void
UpDown_SetOnEnter(TUpDown AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(UpDown_SetOnEnter)
    MySyscall(pUpDown_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetOnExit)
void
UpDown_SetOnExit(TUpDown AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(UpDown_SetOnExit)
    MySyscall(pUpDown_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetOnMouseDown)
void
UpDown_SetOnMouseDown(TUpDown AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(UpDown_SetOnMouseDown)
    MySyscall(pUpDown_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetOnMouseEnter)
void
UpDown_SetOnMouseEnter(TUpDown AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(UpDown_SetOnMouseEnter)
    MySyscall(pUpDown_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetOnMouseLeave)
void
UpDown_SetOnMouseLeave(TUpDown AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(UpDown_SetOnMouseLeave)
    MySyscall(pUpDown_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetOnMouseMove)
void
UpDown_SetOnMouseMove(TUpDown AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(UpDown_SetOnMouseMove)
    MySyscall(pUpDown_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetOnMouseUp)
void
UpDown_SetOnMouseUp(TUpDown AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(UpDown_SetOnMouseUp)
    MySyscall(pUpDown_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetDockClientCount)
int32_t
UpDown_GetDockClientCount(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetDockClientCount)
    return (int32_t)MySyscall(pUpDown_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetDockSite)
BOOL
UpDown_GetDockSite(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetDockSite)
    return (BOOL)MySyscall(pUpDown_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetDockSite)
void
UpDown_SetDockSite(TUpDown AObj, BOOL AValue) {
    GET_FUNC_ADDR(UpDown_SetDockSite)
    MySyscall(pUpDown_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetMouseInClient)
BOOL
UpDown_GetMouseInClient(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetMouseInClient)
    return (BOOL)MySyscall(pUpDown_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetVisibleDockClientCount)
int32_t
UpDown_GetVisibleDockClientCount(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pUpDown_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetBrush)
TBrush
UpDown_GetBrush(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetBrush)
    return (TBrush)MySyscall(pUpDown_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetControlCount)
int32_t
UpDown_GetControlCount(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetControlCount)
    return (int32_t)MySyscall(pUpDown_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetHandle)
HWND
UpDown_GetHandle(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetHandle)
    return (HWND)MySyscall(pUpDown_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetParentWindow)
HWND
UpDown_GetParentWindow(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetParentWindow)
    return (HWND)MySyscall(pUpDown_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetParentWindow)
void
UpDown_SetParentWindow(TUpDown AObj, HWND AValue) {
    GET_FUNC_ADDR(UpDown_SetParentWindow)
    MySyscall(pUpDown_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetShowing)
BOOL
UpDown_GetShowing(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetShowing)
    return (BOOL)MySyscall(pUpDown_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetUseDockManager)
BOOL
UpDown_GetUseDockManager(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetUseDockManager)
    return (BOOL)MySyscall(pUpDown_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetUseDockManager)
void
UpDown_SetUseDockManager(TUpDown AObj, BOOL AValue) {
    GET_FUNC_ADDR(UpDown_SetUseDockManager)
    MySyscall(pUpDown_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetAction)
TAction
UpDown_GetAction(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetAction)
    return (TAction)MySyscall(pUpDown_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetAction)
void
UpDown_SetAction(TUpDown AObj, TAction AValue) {
    GET_FUNC_ADDR(UpDown_SetAction)
    MySyscall(pUpDown_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetAlign)
TAlign
UpDown_GetAlign(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetAlign)
    return (TAlign)MySyscall(pUpDown_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetAlign)
void
UpDown_SetAlign(TUpDown AObj, TAlign AValue) {
    GET_FUNC_ADDR(UpDown_SetAlign)
    MySyscall(pUpDown_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetBiDiMode)
TBiDiMode
UpDown_GetBiDiMode(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetBiDiMode)
    return (TBiDiMode)MySyscall(pUpDown_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetBiDiMode)
void
UpDown_SetBiDiMode(TUpDown AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(UpDown_SetBiDiMode)
    MySyscall(pUpDown_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetBoundsRect)
TRect
UpDown_GetBoundsRect(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetBoundsRect)
    TRect result;
    MySyscall(pUpDown_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(UpDown_SetBoundsRect)
void
UpDown_SetBoundsRect(TUpDown AObj, TRect AValue) {
    GET_FUNC_ADDR(UpDown_SetBoundsRect)
    MySyscall(pUpDown_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetClientHeight)
int32_t
UpDown_GetClientHeight(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetClientHeight)
    return (int32_t)MySyscall(pUpDown_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetClientHeight)
void
UpDown_SetClientHeight(TUpDown AObj, int32_t AValue) {
    GET_FUNC_ADDR(UpDown_SetClientHeight)
    MySyscall(pUpDown_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetClientOrigin)
TPoint
UpDown_GetClientOrigin(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetClientOrigin)
    TPoint result;
    MySyscall(pUpDown_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(UpDown_GetClientRect)
TRect
UpDown_GetClientRect(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetClientRect)
    TRect result;
    MySyscall(pUpDown_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(UpDown_GetClientWidth)
int32_t
UpDown_GetClientWidth(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetClientWidth)
    return (int32_t)MySyscall(pUpDown_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetClientWidth)
void
UpDown_SetClientWidth(TUpDown AObj, int32_t AValue) {
    GET_FUNC_ADDR(UpDown_SetClientWidth)
    MySyscall(pUpDown_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetControlState)
TControlState
UpDown_GetControlState(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetControlState)
    return (TControlState)MySyscall(pUpDown_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetControlState)
void
UpDown_SetControlState(TUpDown AObj, TControlState AValue) {
    GET_FUNC_ADDR(UpDown_SetControlState)
    MySyscall(pUpDown_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetControlStyle)
TControlStyle
UpDown_GetControlStyle(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetControlStyle)
    return (TControlStyle)MySyscall(pUpDown_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetControlStyle)
void
UpDown_SetControlStyle(TUpDown AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(UpDown_SetControlStyle)
    MySyscall(pUpDown_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetFloating)
BOOL
UpDown_GetFloating(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetFloating)
    return (BOOL)MySyscall(pUpDown_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetParent)
TWinControl
UpDown_GetParent(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetParent)
    return (TWinControl)MySyscall(pUpDown_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetParent)
void
UpDown_SetParent(TUpDown AObj, TWinControl AValue) {
    GET_FUNC_ADDR(UpDown_SetParent)
    MySyscall(pUpDown_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetLeft)
int32_t
UpDown_GetLeft(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetLeft)
    return (int32_t)MySyscall(pUpDown_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetLeft)
void
UpDown_SetLeft(TUpDown AObj, int32_t AValue) {
    GET_FUNC_ADDR(UpDown_SetLeft)
    MySyscall(pUpDown_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetTop)
int32_t
UpDown_GetTop(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetTop)
    return (int32_t)MySyscall(pUpDown_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetTop)
void
UpDown_SetTop(TUpDown AObj, int32_t AValue) {
    GET_FUNC_ADDR(UpDown_SetTop)
    MySyscall(pUpDown_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetWidth)
int32_t
UpDown_GetWidth(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetWidth)
    return (int32_t)MySyscall(pUpDown_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetWidth)
void
UpDown_SetWidth(TUpDown AObj, int32_t AValue) {
    GET_FUNC_ADDR(UpDown_SetWidth)
    MySyscall(pUpDown_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetHeight)
int32_t
UpDown_GetHeight(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetHeight)
    return (int32_t)MySyscall(pUpDown_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetHeight)
void
UpDown_SetHeight(TUpDown AObj, int32_t AValue) {
    GET_FUNC_ADDR(UpDown_SetHeight)
    MySyscall(pUpDown_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetCursor)
TCursor
UpDown_GetCursor(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetCursor)
    return (TCursor)MySyscall(pUpDown_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetCursor)
void
UpDown_SetCursor(TUpDown AObj, TCursor AValue) {
    GET_FUNC_ADDR(UpDown_SetCursor)
    MySyscall(pUpDown_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetComponentCount)
int32_t
UpDown_GetComponentCount(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetComponentCount)
    return (int32_t)MySyscall(pUpDown_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetComponentIndex)
int32_t
UpDown_GetComponentIndex(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetComponentIndex)
    return (int32_t)MySyscall(pUpDown_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetComponentIndex)
void
UpDown_SetComponentIndex(TUpDown AObj, int32_t AValue) {
    GET_FUNC_ADDR(UpDown_SetComponentIndex)
    MySyscall(pUpDown_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetOwner)
TComponent
UpDown_GetOwner(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetOwner)
    return (TComponent)MySyscall(pUpDown_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetName)
char*
UpDown_GetName(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetName)
    return (char*)MySyscall(pUpDown_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetName)
void
UpDown_SetName(TUpDown AObj, CChar char* AValue) {
    GET_FUNC_ADDR(UpDown_SetName)
    MySyscall(pUpDown_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetTag)
intptr_t
UpDown_GetTag(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetTag)
    return (intptr_t)MySyscall(pUpDown_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetTag)
void
UpDown_SetTag(TUpDown AObj, intptr_t AValue) {
    GET_FUNC_ADDR(UpDown_SetTag)
    MySyscall(pUpDown_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetAnchorSideLeft)
TAnchorSide
UpDown_GetAnchorSideLeft(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pUpDown_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetAnchorSideLeft)
void
UpDown_SetAnchorSideLeft(TUpDown AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(UpDown_SetAnchorSideLeft)
    MySyscall(pUpDown_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetAnchorSideTop)
TAnchorSide
UpDown_GetAnchorSideTop(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pUpDown_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetAnchorSideTop)
void
UpDown_SetAnchorSideTop(TUpDown AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(UpDown_SetAnchorSideTop)
    MySyscall(pUpDown_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetAnchorSideRight)
TAnchorSide
UpDown_GetAnchorSideRight(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pUpDown_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetAnchorSideRight)
void
UpDown_SetAnchorSideRight(TUpDown AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(UpDown_SetAnchorSideRight)
    MySyscall(pUpDown_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetAnchorSideBottom)
TAnchorSide
UpDown_GetAnchorSideBottom(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pUpDown_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetAnchorSideBottom)
void
UpDown_SetAnchorSideBottom(TUpDown AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(UpDown_SetAnchorSideBottom)
    MySyscall(pUpDown_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetChildSizing)
TControlChildSizing
UpDown_GetChildSizing(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetChildSizing)
    return (TControlChildSizing)MySyscall(pUpDown_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetChildSizing)
void
UpDown_SetChildSizing(TUpDown AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(UpDown_SetChildSizing)
    MySyscall(pUpDown_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetBorderSpacing)
TControlBorderSpacing
UpDown_GetBorderSpacing(TUpDown AObj) {
    GET_FUNC_ADDR(UpDown_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pUpDown_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_SetBorderSpacing)
void
UpDown_SetBorderSpacing(TUpDown AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(UpDown_SetBorderSpacing)
    MySyscall(pUpDown_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetDockClients)
TControl
UpDown_GetDockClients(TUpDown AObj, int32_t Index) {
    GET_FUNC_ADDR(UpDown_GetDockClients)
    return (TControl)MySyscall(pUpDown_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetControls)
TControl
UpDown_GetControls(TUpDown AObj, int32_t Index) {
    GET_FUNC_ADDR(UpDown_GetControls)
    return (TControl)MySyscall(pUpDown_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetComponents)
TComponent
UpDown_GetComponents(TUpDown AObj, int32_t AIndex) {
    GET_FUNC_ADDR(UpDown_GetComponents)
    return (TComponent)MySyscall(pUpDown_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_GetAnchorSide)
TAnchorSide
UpDown_GetAnchorSide(TUpDown AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(UpDown_GetAnchorSide)
    return (TAnchorSide)MySyscall(pUpDown_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(UpDown_StaticClassType)
TClass
UpDown_StaticClassType() {
    GET_FUNC_ADDR(UpDown_StaticClassType)
    return (TClass)MySyscall(pUpDown_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TProgressBar-------------------

DEFINE_FUNC_PTR(ProgressBar_Create)
TProgressBar
ProgressBar_Create(TComponent AOwner) {
    GET_FUNC_ADDR(ProgressBar_Create)
    return (TProgressBar)MySyscall(pProgressBar_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_Free)
void
ProgressBar_Free(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_Free)
    MySyscall(pProgressBar_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_StepIt)
void
ProgressBar_StepIt(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_StepIt)
    MySyscall(pProgressBar_StepIt, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_StepBy)
void
ProgressBar_StepBy(TProgressBar AObj, int32_t Delta) {
    GET_FUNC_ADDR(ProgressBar_StepBy)
    MySyscall(pProgressBar_StepBy, 2, AObj, Delta ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_CanFocus)
BOOL
ProgressBar_CanFocus(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_CanFocus)
    return (BOOL)MySyscall(pProgressBar_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_ContainsControl)
BOOL
ProgressBar_ContainsControl(TProgressBar AObj, TControl Control) {
    GET_FUNC_ADDR(ProgressBar_ContainsControl)
    return (BOOL)MySyscall(pProgressBar_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_ControlAtPos)
TControl
ProgressBar_ControlAtPos(TProgressBar AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(ProgressBar_ControlAtPos)
    return (TControl)MySyscall(pProgressBar_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_DisableAlign)
void
ProgressBar_DisableAlign(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_DisableAlign)
    MySyscall(pProgressBar_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_EnableAlign)
void
ProgressBar_EnableAlign(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_EnableAlign)
    MySyscall(pProgressBar_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_FindChildControl)
TControl
ProgressBar_FindChildControl(TProgressBar AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(ProgressBar_FindChildControl)
    return (TControl)MySyscall(pProgressBar_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_FlipChildren)
void
ProgressBar_FlipChildren(TProgressBar AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(ProgressBar_FlipChildren)
    MySyscall(pProgressBar_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_Focused)
BOOL
ProgressBar_Focused(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_Focused)
    return (BOOL)MySyscall(pProgressBar_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_HandleAllocated)
BOOL
ProgressBar_HandleAllocated(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_HandleAllocated)
    return (BOOL)MySyscall(pProgressBar_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_InsertControl)
void
ProgressBar_InsertControl(TProgressBar AObj, TControl AControl) {
    GET_FUNC_ADDR(ProgressBar_InsertControl)
    MySyscall(pProgressBar_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_Invalidate)
void
ProgressBar_Invalidate(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_Invalidate)
    MySyscall(pProgressBar_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_PaintTo)
void
ProgressBar_PaintTo(TProgressBar AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(ProgressBar_PaintTo)
    MySyscall(pProgressBar_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_RemoveControl)
void
ProgressBar_RemoveControl(TProgressBar AObj, TControl AControl) {
    GET_FUNC_ADDR(ProgressBar_RemoveControl)
    MySyscall(pProgressBar_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_Realign)
void
ProgressBar_Realign(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_Realign)
    MySyscall(pProgressBar_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_Repaint)
void
ProgressBar_Repaint(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_Repaint)
    MySyscall(pProgressBar_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_ScaleBy)
void
ProgressBar_ScaleBy(TProgressBar AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(ProgressBar_ScaleBy)
    MySyscall(pProgressBar_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_ScrollBy)
void
ProgressBar_ScrollBy(TProgressBar AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(ProgressBar_ScrollBy)
    MySyscall(pProgressBar_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetBounds)
void
ProgressBar_SetBounds(TProgressBar AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(ProgressBar_SetBounds)
    MySyscall(pProgressBar_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetFocus)
void
ProgressBar_SetFocus(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_SetFocus)
    MySyscall(pProgressBar_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_Update)
void
ProgressBar_Update(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_Update)
    MySyscall(pProgressBar_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_BringToFront)
void
ProgressBar_BringToFront(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_BringToFront)
    MySyscall(pProgressBar_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_ClientToScreen)
TPoint
ProgressBar_ClientToScreen(TProgressBar AObj, TPoint Point) {
    GET_FUNC_ADDR(ProgressBar_ClientToScreen)
    TPoint result;
    MySyscall(pProgressBar_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ProgressBar_ClientToParent)
TPoint
ProgressBar_ClientToParent(TProgressBar AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ProgressBar_ClientToParent)
    TPoint result;
    MySyscall(pProgressBar_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ProgressBar_Dragging)
BOOL
ProgressBar_Dragging(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_Dragging)
    return (BOOL)MySyscall(pProgressBar_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_HasParent)
BOOL
ProgressBar_HasParent(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_HasParent)
    return (BOOL)MySyscall(pProgressBar_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_Hide)
void
ProgressBar_Hide(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_Hide)
    MySyscall(pProgressBar_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_Perform)
intptr_t
ProgressBar_Perform(TProgressBar AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(ProgressBar_Perform)
    return (intptr_t)MySyscall(pProgressBar_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_Refresh)
void
ProgressBar_Refresh(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_Refresh)
    MySyscall(pProgressBar_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_ScreenToClient)
TPoint
ProgressBar_ScreenToClient(TProgressBar AObj, TPoint Point) {
    GET_FUNC_ADDR(ProgressBar_ScreenToClient)
    TPoint result;
    MySyscall(pProgressBar_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ProgressBar_ParentToClient)
TPoint
ProgressBar_ParentToClient(TProgressBar AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ProgressBar_ParentToClient)
    TPoint result;
    MySyscall(pProgressBar_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ProgressBar_SendToBack)
void
ProgressBar_SendToBack(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_SendToBack)
    MySyscall(pProgressBar_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_Show)
void
ProgressBar_Show(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_Show)
    MySyscall(pProgressBar_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetTextBuf)
int32_t
ProgressBar_GetTextBuf(TProgressBar AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(ProgressBar_GetTextBuf)
    return (int32_t)MySyscall(pProgressBar_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetTextLen)
int32_t
ProgressBar_GetTextLen(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetTextLen)
    return (int32_t)MySyscall(pProgressBar_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetTextBuf)
void
ProgressBar_SetTextBuf(TProgressBar AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(ProgressBar_SetTextBuf)
    MySyscall(pProgressBar_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_FindComponent)
TComponent
ProgressBar_FindComponent(TProgressBar AObj, CChar char* AName) {
    GET_FUNC_ADDR(ProgressBar_FindComponent)
    return (TComponent)MySyscall(pProgressBar_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetNamePath)
char*
ProgressBar_GetNamePath(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetNamePath)
    return (char*)MySyscall(pProgressBar_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_Assign)
void
ProgressBar_Assign(TProgressBar AObj, TObject Source) {
    GET_FUNC_ADDR(ProgressBar_Assign)
    MySyscall(pProgressBar_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_ClassType)
TClass
ProgressBar_ClassType(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_ClassType)
    return (TClass)MySyscall(pProgressBar_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_ClassName)
char*
ProgressBar_ClassName(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_ClassName)
    return (char*)MySyscall(pProgressBar_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_InstanceSize)
int32_t
ProgressBar_InstanceSize(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_InstanceSize)
    return (int32_t)MySyscall(pProgressBar_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_InheritsFrom)
BOOL
ProgressBar_InheritsFrom(TProgressBar AObj, TClass AClass) {
    GET_FUNC_ADDR(ProgressBar_InheritsFrom)
    return (BOOL)MySyscall(pProgressBar_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_Equals)
BOOL
ProgressBar_Equals(TProgressBar AObj, TObject Obj) {
    GET_FUNC_ADDR(ProgressBar_Equals)
    return (BOOL)MySyscall(pProgressBar_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetHashCode)
int32_t
ProgressBar_GetHashCode(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetHashCode)
    return (int32_t)MySyscall(pProgressBar_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_ToString)
char*
ProgressBar_ToString(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_ToString)
    return (char*)MySyscall(pProgressBar_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_AnchorToNeighbour)
void
ProgressBar_AnchorToNeighbour(TProgressBar AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ProgressBar_AnchorToNeighbour)
    MySyscall(pProgressBar_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_AnchorParallel)
void
ProgressBar_AnchorParallel(TProgressBar AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ProgressBar_AnchorParallel)
    MySyscall(pProgressBar_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_AnchorHorizontalCenterTo)
void
ProgressBar_AnchorHorizontalCenterTo(TProgressBar AObj, TControl ASibling) {
    GET_FUNC_ADDR(ProgressBar_AnchorHorizontalCenterTo)
    MySyscall(pProgressBar_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_AnchorVerticalCenterTo)
void
ProgressBar_AnchorVerticalCenterTo(TProgressBar AObj, TControl ASibling) {
    GET_FUNC_ADDR(ProgressBar_AnchorVerticalCenterTo)
    MySyscall(pProgressBar_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_AnchorSame)
void
ProgressBar_AnchorSame(TProgressBar AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(ProgressBar_AnchorSame)
    MySyscall(pProgressBar_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_AnchorAsAlign)
void
ProgressBar_AnchorAsAlign(TProgressBar AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(ProgressBar_AnchorAsAlign)
    MySyscall(pProgressBar_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_AnchorClient)
void
ProgressBar_AnchorClient(TProgressBar AObj, int32_t ASpace) {
    GET_FUNC_ADDR(ProgressBar_AnchorClient)
    MySyscall(pProgressBar_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_ScaleDesignToForm)
int32_t
ProgressBar_ScaleDesignToForm(TProgressBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ProgressBar_ScaleDesignToForm)
    return (int32_t)MySyscall(pProgressBar_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_ScaleFormToDesign)
int32_t
ProgressBar_ScaleFormToDesign(TProgressBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ProgressBar_ScaleFormToDesign)
    return (int32_t)MySyscall(pProgressBar_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_Scale96ToForm)
int32_t
ProgressBar_Scale96ToForm(TProgressBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ProgressBar_Scale96ToForm)
    return (int32_t)MySyscall(pProgressBar_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_ScaleFormTo96)
int32_t
ProgressBar_ScaleFormTo96(TProgressBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ProgressBar_ScaleFormTo96)
    return (int32_t)MySyscall(pProgressBar_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_Scale96ToFont)
int32_t
ProgressBar_Scale96ToFont(TProgressBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ProgressBar_Scale96ToFont)
    return (int32_t)MySyscall(pProgressBar_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_ScaleFontTo96)
int32_t
ProgressBar_ScaleFontTo96(TProgressBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ProgressBar_ScaleFontTo96)
    return (int32_t)MySyscall(pProgressBar_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_ScaleScreenToFont)
int32_t
ProgressBar_ScaleScreenToFont(TProgressBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ProgressBar_ScaleScreenToFont)
    return (int32_t)MySyscall(pProgressBar_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_ScaleFontToScreen)
int32_t
ProgressBar_ScaleFontToScreen(TProgressBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ProgressBar_ScaleFontToScreen)
    return (int32_t)MySyscall(pProgressBar_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_Scale96ToScreen)
int32_t
ProgressBar_Scale96ToScreen(TProgressBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ProgressBar_Scale96ToScreen)
    return (int32_t)MySyscall(pProgressBar_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_ScaleScreenTo96)
int32_t
ProgressBar_ScaleScreenTo96(TProgressBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ProgressBar_ScaleScreenTo96)
    return (int32_t)MySyscall(pProgressBar_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_AutoAdjustLayout)
void
ProgressBar_AutoAdjustLayout(TProgressBar AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(ProgressBar_AutoAdjustLayout)
    MySyscall(pProgressBar_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_FixDesignFontsPPI)
void
ProgressBar_FixDesignFontsPPI(TProgressBar AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(ProgressBar_FixDesignFontsPPI)
    MySyscall(pProgressBar_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_ScaleFontsPPI)
void
ProgressBar_ScaleFontsPPI(TProgressBar AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(ProgressBar_ScaleFontsPPI)
    MySyscall(pProgressBar_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetAlign)
TAlign
ProgressBar_GetAlign(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetAlign)
    return (TAlign)MySyscall(pProgressBar_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetAlign)
void
ProgressBar_SetAlign(TProgressBar AObj, TAlign AValue) {
    GET_FUNC_ADDR(ProgressBar_SetAlign)
    MySyscall(pProgressBar_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetAnchors)
TAnchors
ProgressBar_GetAnchors(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetAnchors)
    return (TAnchors)MySyscall(pProgressBar_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetAnchors)
void
ProgressBar_SetAnchors(TProgressBar AObj, TAnchors AValue) {
    GET_FUNC_ADDR(ProgressBar_SetAnchors)
    MySyscall(pProgressBar_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetBorderWidth)
int32_t
ProgressBar_GetBorderWidth(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetBorderWidth)
    return (int32_t)MySyscall(pProgressBar_GetBorderWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetBorderWidth)
void
ProgressBar_SetBorderWidth(TProgressBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ProgressBar_SetBorderWidth)
    MySyscall(pProgressBar_SetBorderWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetDoubleBuffered)
BOOL
ProgressBar_GetDoubleBuffered(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetDoubleBuffered)
    return (BOOL)MySyscall(pProgressBar_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetDoubleBuffered)
void
ProgressBar_SetDoubleBuffered(TProgressBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ProgressBar_SetDoubleBuffered)
    MySyscall(pProgressBar_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetDragCursor)
TCursor
ProgressBar_GetDragCursor(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetDragCursor)
    return (TCursor)MySyscall(pProgressBar_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetDragCursor)
void
ProgressBar_SetDragCursor(TProgressBar AObj, TCursor AValue) {
    GET_FUNC_ADDR(ProgressBar_SetDragCursor)
    MySyscall(pProgressBar_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetDragKind)
TDragKind
ProgressBar_GetDragKind(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetDragKind)
    return (TDragKind)MySyscall(pProgressBar_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetDragKind)
void
ProgressBar_SetDragKind(TProgressBar AObj, TDragKind AValue) {
    GET_FUNC_ADDR(ProgressBar_SetDragKind)
    MySyscall(pProgressBar_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetDragMode)
TDragMode
ProgressBar_GetDragMode(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetDragMode)
    return (TDragMode)MySyscall(pProgressBar_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetDragMode)
void
ProgressBar_SetDragMode(TProgressBar AObj, TDragMode AValue) {
    GET_FUNC_ADDR(ProgressBar_SetDragMode)
    MySyscall(pProgressBar_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetEnabled)
BOOL
ProgressBar_GetEnabled(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetEnabled)
    return (BOOL)MySyscall(pProgressBar_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetEnabled)
void
ProgressBar_SetEnabled(TProgressBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ProgressBar_SetEnabled)
    MySyscall(pProgressBar_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetHint)
char*
ProgressBar_GetHint(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetHint)
    return (char*)MySyscall(pProgressBar_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetHint)
void
ProgressBar_SetHint(TProgressBar AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ProgressBar_SetHint)
    MySyscall(pProgressBar_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetConstraints)
TSizeConstraints
ProgressBar_GetConstraints(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetConstraints)
    return (TSizeConstraints)MySyscall(pProgressBar_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetConstraints)
void
ProgressBar_SetConstraints(TProgressBar AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(ProgressBar_SetConstraints)
    MySyscall(pProgressBar_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetMin)
int32_t
ProgressBar_GetMin(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetMin)
    return (int32_t)MySyscall(pProgressBar_GetMin, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetMin)
void
ProgressBar_SetMin(TProgressBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ProgressBar_SetMin)
    MySyscall(pProgressBar_SetMin, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetMax)
int32_t
ProgressBar_GetMax(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetMax)
    return (int32_t)MySyscall(pProgressBar_GetMax, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetMax)
void
ProgressBar_SetMax(TProgressBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ProgressBar_SetMax)
    MySyscall(pProgressBar_SetMax, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetOrientation)
TProgressBarOrientation
ProgressBar_GetOrientation(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetOrientation)
    return (TProgressBarOrientation)MySyscall(pProgressBar_GetOrientation, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetOrientation)
void
ProgressBar_SetOrientation(TProgressBar AObj, TProgressBarOrientation AValue) {
    GET_FUNC_ADDR(ProgressBar_SetOrientation)
    MySyscall(pProgressBar_SetOrientation, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetParentDoubleBuffered)
BOOL
ProgressBar_GetParentDoubleBuffered(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pProgressBar_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetParentDoubleBuffered)
void
ProgressBar_SetParentDoubleBuffered(TProgressBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ProgressBar_SetParentDoubleBuffered)
    MySyscall(pProgressBar_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetParentShowHint)
BOOL
ProgressBar_GetParentShowHint(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetParentShowHint)
    return (BOOL)MySyscall(pProgressBar_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetParentShowHint)
void
ProgressBar_SetParentShowHint(TProgressBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ProgressBar_SetParentShowHint)
    MySyscall(pProgressBar_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetPopupMenu)
TPopupMenu
ProgressBar_GetPopupMenu(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetPopupMenu)
    return (TPopupMenu)MySyscall(pProgressBar_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetPopupMenu)
void
ProgressBar_SetPopupMenu(TProgressBar AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(ProgressBar_SetPopupMenu)
    MySyscall(pProgressBar_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetPosition)
int32_t
ProgressBar_GetPosition(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetPosition)
    return (int32_t)MySyscall(pProgressBar_GetPosition, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetPosition)
void
ProgressBar_SetPosition(TProgressBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ProgressBar_SetPosition)
    MySyscall(pProgressBar_SetPosition, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetSmooth)
BOOL
ProgressBar_GetSmooth(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetSmooth)
    return (BOOL)MySyscall(pProgressBar_GetSmooth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetSmooth)
void
ProgressBar_SetSmooth(TProgressBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ProgressBar_SetSmooth)
    MySyscall(pProgressBar_SetSmooth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetStyle)
TProgressBarStyle
ProgressBar_GetStyle(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetStyle)
    return (TProgressBarStyle)MySyscall(pProgressBar_GetStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetStyle)
void
ProgressBar_SetStyle(TProgressBar AObj, TProgressBarStyle AValue) {
    GET_FUNC_ADDR(ProgressBar_SetStyle)
    MySyscall(pProgressBar_SetStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetStep)
int32_t
ProgressBar_GetStep(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetStep)
    return (int32_t)MySyscall(pProgressBar_GetStep, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetStep)
void
ProgressBar_SetStep(TProgressBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ProgressBar_SetStep)
    MySyscall(pProgressBar_SetStep, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetShowHint)
BOOL
ProgressBar_GetShowHint(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetShowHint)
    return (BOOL)MySyscall(pProgressBar_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetShowHint)
void
ProgressBar_SetShowHint(TProgressBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ProgressBar_SetShowHint)
    MySyscall(pProgressBar_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetTabOrder)
TTabOrder
ProgressBar_GetTabOrder(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetTabOrder)
    return (TTabOrder)MySyscall(pProgressBar_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetTabOrder)
void
ProgressBar_SetTabOrder(TProgressBar AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(ProgressBar_SetTabOrder)
    MySyscall(pProgressBar_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetTabStop)
BOOL
ProgressBar_GetTabStop(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetTabStop)
    return (BOOL)MySyscall(pProgressBar_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetTabStop)
void
ProgressBar_SetTabStop(TProgressBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ProgressBar_SetTabStop)
    MySyscall(pProgressBar_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetVisible)
BOOL
ProgressBar_GetVisible(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetVisible)
    return (BOOL)MySyscall(pProgressBar_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetVisible)
void
ProgressBar_SetVisible(TProgressBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ProgressBar_SetVisible)
    MySyscall(pProgressBar_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetOnContextPopup)
void
ProgressBar_SetOnContextPopup(TProgressBar AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(ProgressBar_SetOnContextPopup)
    MySyscall(pProgressBar_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetOnDragDrop)
void
ProgressBar_SetOnDragDrop(TProgressBar AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(ProgressBar_SetOnDragDrop)
    MySyscall(pProgressBar_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetOnDragOver)
void
ProgressBar_SetOnDragOver(TProgressBar AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(ProgressBar_SetOnDragOver)
    MySyscall(pProgressBar_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetOnEndDrag)
void
ProgressBar_SetOnEndDrag(TProgressBar AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(ProgressBar_SetOnEndDrag)
    MySyscall(pProgressBar_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetOnEnter)
void
ProgressBar_SetOnEnter(TProgressBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ProgressBar_SetOnEnter)
    MySyscall(pProgressBar_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetOnExit)
void
ProgressBar_SetOnExit(TProgressBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ProgressBar_SetOnExit)
    MySyscall(pProgressBar_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetOnMouseDown)
void
ProgressBar_SetOnMouseDown(TProgressBar AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(ProgressBar_SetOnMouseDown)
    MySyscall(pProgressBar_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetOnMouseEnter)
void
ProgressBar_SetOnMouseEnter(TProgressBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ProgressBar_SetOnMouseEnter)
    MySyscall(pProgressBar_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetOnMouseLeave)
void
ProgressBar_SetOnMouseLeave(TProgressBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ProgressBar_SetOnMouseLeave)
    MySyscall(pProgressBar_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetOnMouseMove)
void
ProgressBar_SetOnMouseMove(TProgressBar AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(ProgressBar_SetOnMouseMove)
    MySyscall(pProgressBar_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetOnMouseUp)
void
ProgressBar_SetOnMouseUp(TProgressBar AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(ProgressBar_SetOnMouseUp)
    MySyscall(pProgressBar_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetDockClientCount)
int32_t
ProgressBar_GetDockClientCount(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetDockClientCount)
    return (int32_t)MySyscall(pProgressBar_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetDockSite)
BOOL
ProgressBar_GetDockSite(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetDockSite)
    return (BOOL)MySyscall(pProgressBar_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetDockSite)
void
ProgressBar_SetDockSite(TProgressBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ProgressBar_SetDockSite)
    MySyscall(pProgressBar_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetMouseInClient)
BOOL
ProgressBar_GetMouseInClient(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetMouseInClient)
    return (BOOL)MySyscall(pProgressBar_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetVisibleDockClientCount)
int32_t
ProgressBar_GetVisibleDockClientCount(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pProgressBar_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetBrush)
TBrush
ProgressBar_GetBrush(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetBrush)
    return (TBrush)MySyscall(pProgressBar_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetControlCount)
int32_t
ProgressBar_GetControlCount(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetControlCount)
    return (int32_t)MySyscall(pProgressBar_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetHandle)
HWND
ProgressBar_GetHandle(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetHandle)
    return (HWND)MySyscall(pProgressBar_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetParentWindow)
HWND
ProgressBar_GetParentWindow(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetParentWindow)
    return (HWND)MySyscall(pProgressBar_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetParentWindow)
void
ProgressBar_SetParentWindow(TProgressBar AObj, HWND AValue) {
    GET_FUNC_ADDR(ProgressBar_SetParentWindow)
    MySyscall(pProgressBar_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetShowing)
BOOL
ProgressBar_GetShowing(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetShowing)
    return (BOOL)MySyscall(pProgressBar_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetUseDockManager)
BOOL
ProgressBar_GetUseDockManager(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetUseDockManager)
    return (BOOL)MySyscall(pProgressBar_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetUseDockManager)
void
ProgressBar_SetUseDockManager(TProgressBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ProgressBar_SetUseDockManager)
    MySyscall(pProgressBar_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetAction)
TAction
ProgressBar_GetAction(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetAction)
    return (TAction)MySyscall(pProgressBar_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetAction)
void
ProgressBar_SetAction(TProgressBar AObj, TAction AValue) {
    GET_FUNC_ADDR(ProgressBar_SetAction)
    MySyscall(pProgressBar_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetBiDiMode)
TBiDiMode
ProgressBar_GetBiDiMode(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetBiDiMode)
    return (TBiDiMode)MySyscall(pProgressBar_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetBiDiMode)
void
ProgressBar_SetBiDiMode(TProgressBar AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(ProgressBar_SetBiDiMode)
    MySyscall(pProgressBar_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetBoundsRect)
TRect
ProgressBar_GetBoundsRect(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetBoundsRect)
    TRect result;
    MySyscall(pProgressBar_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ProgressBar_SetBoundsRect)
void
ProgressBar_SetBoundsRect(TProgressBar AObj, TRect AValue) {
    GET_FUNC_ADDR(ProgressBar_SetBoundsRect)
    MySyscall(pProgressBar_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetClientHeight)
int32_t
ProgressBar_GetClientHeight(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetClientHeight)
    return (int32_t)MySyscall(pProgressBar_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetClientHeight)
void
ProgressBar_SetClientHeight(TProgressBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ProgressBar_SetClientHeight)
    MySyscall(pProgressBar_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetClientOrigin)
TPoint
ProgressBar_GetClientOrigin(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetClientOrigin)
    TPoint result;
    MySyscall(pProgressBar_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ProgressBar_GetClientRect)
TRect
ProgressBar_GetClientRect(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetClientRect)
    TRect result;
    MySyscall(pProgressBar_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ProgressBar_GetClientWidth)
int32_t
ProgressBar_GetClientWidth(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetClientWidth)
    return (int32_t)MySyscall(pProgressBar_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetClientWidth)
void
ProgressBar_SetClientWidth(TProgressBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ProgressBar_SetClientWidth)
    MySyscall(pProgressBar_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetControlState)
TControlState
ProgressBar_GetControlState(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetControlState)
    return (TControlState)MySyscall(pProgressBar_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetControlState)
void
ProgressBar_SetControlState(TProgressBar AObj, TControlState AValue) {
    GET_FUNC_ADDR(ProgressBar_SetControlState)
    MySyscall(pProgressBar_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetControlStyle)
TControlStyle
ProgressBar_GetControlStyle(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetControlStyle)
    return (TControlStyle)MySyscall(pProgressBar_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetControlStyle)
void
ProgressBar_SetControlStyle(TProgressBar AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(ProgressBar_SetControlStyle)
    MySyscall(pProgressBar_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetFloating)
BOOL
ProgressBar_GetFloating(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetFloating)
    return (BOOL)MySyscall(pProgressBar_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetParent)
TWinControl
ProgressBar_GetParent(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetParent)
    return (TWinControl)MySyscall(pProgressBar_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetParent)
void
ProgressBar_SetParent(TProgressBar AObj, TWinControl AValue) {
    GET_FUNC_ADDR(ProgressBar_SetParent)
    MySyscall(pProgressBar_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetLeft)
int32_t
ProgressBar_GetLeft(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetLeft)
    return (int32_t)MySyscall(pProgressBar_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetLeft)
void
ProgressBar_SetLeft(TProgressBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ProgressBar_SetLeft)
    MySyscall(pProgressBar_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetTop)
int32_t
ProgressBar_GetTop(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetTop)
    return (int32_t)MySyscall(pProgressBar_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetTop)
void
ProgressBar_SetTop(TProgressBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ProgressBar_SetTop)
    MySyscall(pProgressBar_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetWidth)
int32_t
ProgressBar_GetWidth(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetWidth)
    return (int32_t)MySyscall(pProgressBar_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetWidth)
void
ProgressBar_SetWidth(TProgressBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ProgressBar_SetWidth)
    MySyscall(pProgressBar_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetHeight)
int32_t
ProgressBar_GetHeight(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetHeight)
    return (int32_t)MySyscall(pProgressBar_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetHeight)
void
ProgressBar_SetHeight(TProgressBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ProgressBar_SetHeight)
    MySyscall(pProgressBar_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetCursor)
TCursor
ProgressBar_GetCursor(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetCursor)
    return (TCursor)MySyscall(pProgressBar_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetCursor)
void
ProgressBar_SetCursor(TProgressBar AObj, TCursor AValue) {
    GET_FUNC_ADDR(ProgressBar_SetCursor)
    MySyscall(pProgressBar_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetComponentCount)
int32_t
ProgressBar_GetComponentCount(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetComponentCount)
    return (int32_t)MySyscall(pProgressBar_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetComponentIndex)
int32_t
ProgressBar_GetComponentIndex(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetComponentIndex)
    return (int32_t)MySyscall(pProgressBar_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetComponentIndex)
void
ProgressBar_SetComponentIndex(TProgressBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ProgressBar_SetComponentIndex)
    MySyscall(pProgressBar_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetOwner)
TComponent
ProgressBar_GetOwner(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetOwner)
    return (TComponent)MySyscall(pProgressBar_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetName)
char*
ProgressBar_GetName(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetName)
    return (char*)MySyscall(pProgressBar_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetName)
void
ProgressBar_SetName(TProgressBar AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ProgressBar_SetName)
    MySyscall(pProgressBar_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetTag)
intptr_t
ProgressBar_GetTag(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetTag)
    return (intptr_t)MySyscall(pProgressBar_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetTag)
void
ProgressBar_SetTag(TProgressBar AObj, intptr_t AValue) {
    GET_FUNC_ADDR(ProgressBar_SetTag)
    MySyscall(pProgressBar_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetAnchorSideLeft)
TAnchorSide
ProgressBar_GetAnchorSideLeft(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pProgressBar_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetAnchorSideLeft)
void
ProgressBar_SetAnchorSideLeft(TProgressBar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ProgressBar_SetAnchorSideLeft)
    MySyscall(pProgressBar_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetAnchorSideTop)
TAnchorSide
ProgressBar_GetAnchorSideTop(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pProgressBar_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetAnchorSideTop)
void
ProgressBar_SetAnchorSideTop(TProgressBar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ProgressBar_SetAnchorSideTop)
    MySyscall(pProgressBar_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetAnchorSideRight)
TAnchorSide
ProgressBar_GetAnchorSideRight(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pProgressBar_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetAnchorSideRight)
void
ProgressBar_SetAnchorSideRight(TProgressBar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ProgressBar_SetAnchorSideRight)
    MySyscall(pProgressBar_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetAnchorSideBottom)
TAnchorSide
ProgressBar_GetAnchorSideBottom(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pProgressBar_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetAnchorSideBottom)
void
ProgressBar_SetAnchorSideBottom(TProgressBar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ProgressBar_SetAnchorSideBottom)
    MySyscall(pProgressBar_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetChildSizing)
TControlChildSizing
ProgressBar_GetChildSizing(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetChildSizing)
    return (TControlChildSizing)MySyscall(pProgressBar_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetChildSizing)
void
ProgressBar_SetChildSizing(TProgressBar AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(ProgressBar_SetChildSizing)
    MySyscall(pProgressBar_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetBorderSpacing)
TControlBorderSpacing
ProgressBar_GetBorderSpacing(TProgressBar AObj) {
    GET_FUNC_ADDR(ProgressBar_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pProgressBar_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_SetBorderSpacing)
void
ProgressBar_SetBorderSpacing(TProgressBar AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(ProgressBar_SetBorderSpacing)
    MySyscall(pProgressBar_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetDockClients)
TControl
ProgressBar_GetDockClients(TProgressBar AObj, int32_t Index) {
    GET_FUNC_ADDR(ProgressBar_GetDockClients)
    return (TControl)MySyscall(pProgressBar_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetControls)
TControl
ProgressBar_GetControls(TProgressBar AObj, int32_t Index) {
    GET_FUNC_ADDR(ProgressBar_GetControls)
    return (TControl)MySyscall(pProgressBar_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetComponents)
TComponent
ProgressBar_GetComponents(TProgressBar AObj, int32_t AIndex) {
    GET_FUNC_ADDR(ProgressBar_GetComponents)
    return (TComponent)MySyscall(pProgressBar_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_GetAnchorSide)
TAnchorSide
ProgressBar_GetAnchorSide(TProgressBar AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(ProgressBar_GetAnchorSide)
    return (TAnchorSide)MySyscall(pProgressBar_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ProgressBar_StaticClassType)
TClass
ProgressBar_StaticClassType() {
    GET_FUNC_ADDR(ProgressBar_StaticClassType)
    return (TClass)MySyscall(pProgressBar_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TDateTimePicker-------------------

DEFINE_FUNC_PTR(DateTimePicker_Create)
TDateTimePicker
ateTimePicker_Create(TComponent AOwner) {
    GET_FUNC_ADDR(DateTimePicker_Create)
    return (TDateTimePicker)MySyscall(pDateTimePicker_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_Free)
void
ateTimePicker_Free(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_Free)
    MySyscall(pDateTimePicker_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_DateIsNull)
BOOL
ateTimePicker_DateIsNull(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_DateIsNull)
    return (BOOL)MySyscall(pDateTimePicker_DateIsNull, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SelectDate)
void
ateTimePicker_SelectDate(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_SelectDate)
    MySyscall(pDateTimePicker_SelectDate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SelectTime)
void
ateTimePicker_SelectTime(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_SelectTime)
    MySyscall(pDateTimePicker_SelectTime, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_CanFocus)
BOOL
ateTimePicker_CanFocus(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_CanFocus)
    return (BOOL)MySyscall(pDateTimePicker_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_ContainsControl)
BOOL
ateTimePicker_ContainsControl(TDateTimePicker AObj, TControl Control) {
    GET_FUNC_ADDR(DateTimePicker_ContainsControl)
    return (BOOL)MySyscall(pDateTimePicker_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_ControlAtPos)
TControl
ateTimePicker_ControlAtPos(TDateTimePicker AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(DateTimePicker_ControlAtPos)
    return (TControl)MySyscall(pDateTimePicker_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_DisableAlign)
void
ateTimePicker_DisableAlign(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_DisableAlign)
    MySyscall(pDateTimePicker_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_EnableAlign)
void
ateTimePicker_EnableAlign(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_EnableAlign)
    MySyscall(pDateTimePicker_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_FindChildControl)
TControl
ateTimePicker_FindChildControl(TDateTimePicker AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(DateTimePicker_FindChildControl)
    return (TControl)MySyscall(pDateTimePicker_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_FlipChildren)
void
ateTimePicker_FlipChildren(TDateTimePicker AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(DateTimePicker_FlipChildren)
    MySyscall(pDateTimePicker_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_Focused)
BOOL
ateTimePicker_Focused(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_Focused)
    return (BOOL)MySyscall(pDateTimePicker_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_HandleAllocated)
BOOL
ateTimePicker_HandleAllocated(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_HandleAllocated)
    return (BOOL)MySyscall(pDateTimePicker_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_InsertControl)
void
ateTimePicker_InsertControl(TDateTimePicker AObj, TControl AControl) {
    GET_FUNC_ADDR(DateTimePicker_InsertControl)
    MySyscall(pDateTimePicker_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_Invalidate)
void
ateTimePicker_Invalidate(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_Invalidate)
    MySyscall(pDateTimePicker_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_PaintTo)
void
ateTimePicker_PaintTo(TDateTimePicker AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(DateTimePicker_PaintTo)
    MySyscall(pDateTimePicker_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_RemoveControl)
void
ateTimePicker_RemoveControl(TDateTimePicker AObj, TControl AControl) {
    GET_FUNC_ADDR(DateTimePicker_RemoveControl)
    MySyscall(pDateTimePicker_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_Realign)
void
ateTimePicker_Realign(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_Realign)
    MySyscall(pDateTimePicker_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_Repaint)
void
ateTimePicker_Repaint(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_Repaint)
    MySyscall(pDateTimePicker_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_ScaleBy)
void
ateTimePicker_ScaleBy(TDateTimePicker AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(DateTimePicker_ScaleBy)
    MySyscall(pDateTimePicker_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_ScrollBy)
void
ateTimePicker_ScrollBy(TDateTimePicker AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(DateTimePicker_ScrollBy)
    MySyscall(pDateTimePicker_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetBounds)
void
ateTimePicker_SetBounds(TDateTimePicker AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(DateTimePicker_SetBounds)
    MySyscall(pDateTimePicker_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetFocus)
void
ateTimePicker_SetFocus(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_SetFocus)
    MySyscall(pDateTimePicker_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_Update)
void
ateTimePicker_Update(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_Update)
    MySyscall(pDateTimePicker_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_BringToFront)
void
ateTimePicker_BringToFront(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_BringToFront)
    MySyscall(pDateTimePicker_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_ClientToScreen)
TPoint
ateTimePicker_ClientToScreen(TDateTimePicker AObj, TPoint Point) {
    GET_FUNC_ADDR(DateTimePicker_ClientToScreen)
    TPoint result;
    MySyscall(pDateTimePicker_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DateTimePicker_ClientToParent)
TPoint
ateTimePicker_ClientToParent(TDateTimePicker AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(DateTimePicker_ClientToParent)
    TPoint result;
    MySyscall(pDateTimePicker_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DateTimePicker_Dragging)
BOOL
ateTimePicker_Dragging(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_Dragging)
    return (BOOL)MySyscall(pDateTimePicker_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_HasParent)
BOOL
ateTimePicker_HasParent(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_HasParent)
    return (BOOL)MySyscall(pDateTimePicker_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_Hide)
void
ateTimePicker_Hide(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_Hide)
    MySyscall(pDateTimePicker_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_Perform)
intptr_t
ateTimePicker_Perform(TDateTimePicker AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(DateTimePicker_Perform)
    return (intptr_t)MySyscall(pDateTimePicker_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_Refresh)
void
ateTimePicker_Refresh(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_Refresh)
    MySyscall(pDateTimePicker_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_ScreenToClient)
TPoint
ateTimePicker_ScreenToClient(TDateTimePicker AObj, TPoint Point) {
    GET_FUNC_ADDR(DateTimePicker_ScreenToClient)
    TPoint result;
    MySyscall(pDateTimePicker_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DateTimePicker_ParentToClient)
TPoint
ateTimePicker_ParentToClient(TDateTimePicker AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(DateTimePicker_ParentToClient)
    TPoint result;
    MySyscall(pDateTimePicker_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DateTimePicker_SendToBack)
void
ateTimePicker_SendToBack(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_SendToBack)
    MySyscall(pDateTimePicker_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_Show)
void
ateTimePicker_Show(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_Show)
    MySyscall(pDateTimePicker_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetTextBuf)
int32_t
ateTimePicker_GetTextBuf(TDateTimePicker AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(DateTimePicker_GetTextBuf)
    return (int32_t)MySyscall(pDateTimePicker_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetTextLen)
int32_t
ateTimePicker_GetTextLen(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetTextLen)
    return (int32_t)MySyscall(pDateTimePicker_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetTextBuf)
void
ateTimePicker_SetTextBuf(TDateTimePicker AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(DateTimePicker_SetTextBuf)
    MySyscall(pDateTimePicker_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_FindComponent)
TComponent
ateTimePicker_FindComponent(TDateTimePicker AObj, CChar char* AName) {
    GET_FUNC_ADDR(DateTimePicker_FindComponent)
    return (TComponent)MySyscall(pDateTimePicker_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetNamePath)
char*
ateTimePicker_GetNamePath(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetNamePath)
    return (char*)MySyscall(pDateTimePicker_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_Assign)
void
ateTimePicker_Assign(TDateTimePicker AObj, TObject Source) {
    GET_FUNC_ADDR(DateTimePicker_Assign)
    MySyscall(pDateTimePicker_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_ClassType)
TClass
ateTimePicker_ClassType(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_ClassType)
    return (TClass)MySyscall(pDateTimePicker_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_ClassName)
char*
ateTimePicker_ClassName(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_ClassName)
    return (char*)MySyscall(pDateTimePicker_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_InstanceSize)
int32_t
DateTimePicker_InstanceSize(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_InstanceSize)
    return (int32_t)MySyscall(pDateTimePicker_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_InheritsFrom)
BOOL
ateTimePicker_InheritsFrom(TDateTimePicker AObj, TClass AClass) {
    GET_FUNC_ADDR(DateTimePicker_InheritsFrom)
    return (BOOL)MySyscall(pDateTimePicker_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_Equals)
BOOL
ateTimePicker_Equals(TDateTimePicker AObj, TObject Obj) {
    GET_FUNC_ADDR(DateTimePicker_Equals)
    return (BOOL)MySyscall(pDateTimePicker_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetHashCode)
int32_t
ateTimePicker_GetHashCode(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetHashCode)
    return (int32_t)MySyscall(pDateTimePicker_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_ToString)
char*
ateTimePicker_ToString(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_ToString)
    return (char*)MySyscall(pDateTimePicker_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_AnchorToNeighbour)
void
ateTimePicker_AnchorToNeighbour(TDateTimePicker AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(DateTimePicker_AnchorToNeighbour)
    MySyscall(pDateTimePicker_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_AnchorParallel)
void
ateTimePicker_AnchorParallel(TDateTimePicker AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(DateTimePicker_AnchorParallel)
    MySyscall(pDateTimePicker_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_AnchorHorizontalCenterTo)
void
ateTimePicker_AnchorHorizontalCenterTo(TDateTimePicker AObj, TControl ASibling) {
    GET_FUNC_ADDR(DateTimePicker_AnchorHorizontalCenterTo)
    MySyscall(pDateTimePicker_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_AnchorVerticalCenterTo)
void
ateTimePicker_AnchorVerticalCenterTo(TDateTimePicker AObj, TControl ASibling) {
    GET_FUNC_ADDR(DateTimePicker_AnchorVerticalCenterTo)
    MySyscall(pDateTimePicker_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_AnchorSame)
void
ateTimePicker_AnchorSame(TDateTimePicker AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(DateTimePicker_AnchorSame)
    MySyscall(pDateTimePicker_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_AnchorAsAlign)
void
ateTimePicker_AnchorAsAlign(TDateTimePicker AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(DateTimePicker_AnchorAsAlign)
    MySyscall(pDateTimePicker_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_AnchorClient)
void
ateTimePicker_AnchorClient(TDateTimePicker AObj, int32_t ASpace) {
    GET_FUNC_ADDR(DateTimePicker_AnchorClient)
    MySyscall(pDateTimePicker_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_ScaleDesignToForm)
int32_t
ateTimePicker_ScaleDesignToForm(TDateTimePicker AObj, int32_t ASize) {
    GET_FUNC_ADDR(DateTimePicker_ScaleDesignToForm)
    return (int32_t)MySyscall(pDateTimePicker_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_ScaleFormToDesign)
int32_t
ateTimePicker_ScaleFormToDesign(TDateTimePicker AObj, int32_t ASize) {
    GET_FUNC_ADDR(DateTimePicker_ScaleFormToDesign)
    return (int32_t)MySyscall(pDateTimePicker_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_Scale96ToForm)
int32_t
ateTimePicker_Scale96ToForm(TDateTimePicker AObj, int32_t ASize) {
    GET_FUNC_ADDR(DateTimePicker_Scale96ToForm)
    return (int32_t)MySyscall(pDateTimePicker_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_ScaleFormTo96)
int32_t
ateTimePicker_ScaleFormTo96(TDateTimePicker AObj, int32_t ASize) {
    GET_FUNC_ADDR(DateTimePicker_ScaleFormTo96)
    return (int32_t)MySyscall(pDateTimePicker_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_Scale96ToFont)
int32_t
ateTimePicker_Scale96ToFont(TDateTimePicker AObj, int32_t ASize) {
    GET_FUNC_ADDR(DateTimePicker_Scale96ToFont)
    return (int32_t)MySyscall(pDateTimePicker_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_ScaleFontTo96)
int32_t
ateTimePicker_ScaleFontTo96(TDateTimePicker AObj, int32_t ASize) {
    GET_FUNC_ADDR(DateTimePicker_ScaleFontTo96)
    return (int32_t)MySyscall(pDateTimePicker_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_ScaleScreenToFont)
int32_t
ateTimePicker_ScaleScreenToFont(TDateTimePicker AObj, int32_t ASize) {
    GET_FUNC_ADDR(DateTimePicker_ScaleScreenToFont)
    return (int32_t)MySyscall(pDateTimePicker_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_ScaleFontToScreen)
int32_t
ateTimePicker_ScaleFontToScreen(TDateTimePicker AObj, int32_t ASize) {
    GET_FUNC_ADDR(DateTimePicker_ScaleFontToScreen)
    return (int32_t)MySyscall(pDateTimePicker_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_Scale96ToScreen)
int32_t
ateTimePicker_Scale96ToScreen(TDateTimePicker AObj, int32_t ASize) {
    GET_FUNC_ADDR(DateTimePicker_Scale96ToScreen)
    return (int32_t)MySyscall(pDateTimePicker_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_ScaleScreenTo96)
int32_t
ateTimePicker_ScaleScreenTo96(TDateTimePicker AObj, int32_t ASize) {
    GET_FUNC_ADDR(DateTimePicker_ScaleScreenTo96)
    return (int32_t)MySyscall(pDateTimePicker_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_AutoAdjustLayout)
void
ateTimePicker_AutoAdjustLayout(TDateTimePicker AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(DateTimePicker_AutoAdjustLayout)
    MySyscall(pDateTimePicker_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_FixDesignFontsPPI)
void
ateTimePicker_FixDesignFontsPPI(TDateTimePicker AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(DateTimePicker_FixDesignFontsPPI)
    MySyscall(pDateTimePicker_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_ScaleFontsPPI)
void
ateTimePicker_ScaleFontsPPI(TDateTimePicker AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(DateTimePicker_ScaleFontsPPI)
    MySyscall(pDateTimePicker_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetArrowShape)
TArrowShape
ateTimePicker_GetArrowShape(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetArrowShape)
    return (TArrowShape)MySyscall(pDateTimePicker_GetArrowShape, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetArrowShape)
void
ateTimePicker_SetArrowShape(TDateTimePicker AObj, TArrowShape AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetArrowShape)
    MySyscall(pDateTimePicker_SetArrowShape, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetAutoAdvance)
BOOL
ateTimePicker_GetAutoAdvance(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetAutoAdvance)
    return (BOOL)MySyscall(pDateTimePicker_GetAutoAdvance, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetAutoAdvance)
void
ateTimePicker_SetAutoAdvance(TDateTimePicker AObj, BOOL AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetAutoAdvance)
    MySyscall(pDateTimePicker_SetAutoAdvance, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetAutoButtonSize)
BOOL
ateTimePicker_GetAutoButtonSize(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetAutoButtonSize)
    return (BOOL)MySyscall(pDateTimePicker_GetAutoButtonSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetAutoButtonSize)
void
ateTimePicker_SetAutoButtonSize(TDateTimePicker AObj, BOOL AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetAutoButtonSize)
    MySyscall(pDateTimePicker_SetAutoButtonSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetCascade)
BOOL
ateTimePicker_GetCascade(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetCascade)
    return (BOOL)MySyscall(pDateTimePicker_GetCascade, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetCascade)
void
ateTimePicker_SetCascade(TDateTimePicker AObj, BOOL AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetCascade)
    MySyscall(pDateTimePicker_SetCascade, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetCenturyFrom)
uint16_t
ateTimePicker_GetCenturyFrom(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetCenturyFrom)
    return (uint16_t)MySyscall(pDateTimePicker_GetCenturyFrom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetCenturyFrom)
void
ateTimePicker_SetCenturyFrom(TDateTimePicker AObj, uint16_t AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetCenturyFrom)
    MySyscall(pDateTimePicker_SetCenturyFrom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetDateDisplayOrder)
TDateDisplayOrder
ateTimePicker_GetDateDisplayOrder(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetDateDisplayOrder)
    return (TDateDisplayOrder)MySyscall(pDateTimePicker_GetDateDisplayOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetDateDisplayOrder)
void
ateTimePicker_SetDateDisplayOrder(TDateTimePicker AObj, TDateDisplayOrder AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetDateDisplayOrder)
    MySyscall(pDateTimePicker_SetDateDisplayOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetDateSeparator)
char*
ateTimePicker_GetDateSeparator(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetDateSeparator)
    return (char*)MySyscall(pDateTimePicker_GetDateSeparator, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetDateSeparator)
void
ateTimePicker_SetDateSeparator(TDateTimePicker AObj, CChar char* AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetDateSeparator)
    MySyscall(pDateTimePicker_SetDateSeparator, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetHideDateTimeParts)
TDateTimeParts
ateTimePicker_GetHideDateTimeParts(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetHideDateTimeParts)
    return (TDateTimeParts)MySyscall(pDateTimePicker_GetHideDateTimeParts, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetHideDateTimeParts)
void
ateTimePicker_SetHideDateTimeParts(TDateTimePicker AObj, TDateTimeParts AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetHideDateTimeParts)
    MySyscall(pDateTimePicker_SetHideDateTimeParts, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetLeadingZeros)
BOOL
ateTimePicker_GetLeadingZeros(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetLeadingZeros)
    return (BOOL)MySyscall(pDateTimePicker_GetLeadingZeros, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetLeadingZeros)
void
ateTimePicker_SetLeadingZeros(TDateTimePicker AObj, BOOL AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetLeadingZeros)
    MySyscall(pDateTimePicker_SetLeadingZeros, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetMonthNames)
char*
ateTimePicker_GetMonthNames(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetMonthNames)
    return (char*)MySyscall(pDateTimePicker_GetMonthNames, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetMonthNames)
void
ateTimePicker_SetMonthNames(TDateTimePicker AObj, CChar char* AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetMonthNames)
    MySyscall(pDateTimePicker_SetMonthNames, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetShowMonthNames)
BOOL
ateTimePicker_GetShowMonthNames(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetShowMonthNames)
    return (BOOL)MySyscall(pDateTimePicker_GetShowMonthNames, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetShowMonthNames)
void
ateTimePicker_SetShowMonthNames(TDateTimePicker AObj, BOOL AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetShowMonthNames)
    MySyscall(pDateTimePicker_SetShowMonthNames, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetNullInputAllowed)
BOOL
ateTimePicker_GetNullInputAllowed(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetNullInputAllowed)
    return (BOOL)MySyscall(pDateTimePicker_GetNullInputAllowed, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetNullInputAllowed)
void
ateTimePicker_SetNullInputAllowed(TDateTimePicker AObj, BOOL AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetNullInputAllowed)
    MySyscall(pDateTimePicker_SetNullInputAllowed, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetOptions)
TDateTimePickerOptions
ateTimePicker_GetOptions(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetOptions)
    return (TDateTimePickerOptions)MySyscall(pDateTimePicker_GetOptions, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetOptions)
void
ateTimePicker_SetOptions(TDateTimePicker AObj, TDateTimePickerOptions AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetOptions)
    MySyscall(pDateTimePicker_SetOptions, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetShowCheckBox)
BOOL
ateTimePicker_GetShowCheckBox(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetShowCheckBox)
    return (BOOL)MySyscall(pDateTimePicker_GetShowCheckBox, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetShowCheckBox)
void
ateTimePicker_SetShowCheckBox(TDateTimePicker AObj, BOOL AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetShowCheckBox)
    MySyscall(pDateTimePicker_SetShowCheckBox, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetReadOnly)
BOOL
ateTimePicker_GetReadOnly(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetReadOnly)
    return (BOOL)MySyscall(pDateTimePicker_GetReadOnly, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetReadOnly)
void
ateTimePicker_SetReadOnly(TDateTimePicker AObj, BOOL AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetReadOnly)
    MySyscall(pDateTimePicker_SetReadOnly, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetTextForNullDate)
char*
ateTimePicker_GetTextForNullDate(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetTextForNullDate)
    return (char*)MySyscall(pDateTimePicker_GetTextForNullDate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetTextForNullDate)
void
ateTimePicker_SetTextForNullDate(TDateTimePicker AObj, CChar char* AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetTextForNullDate)
    MySyscall(pDateTimePicker_SetTextForNullDate, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetTimeDisplay)
TTimeDisplay
ateTimePicker_GetTimeDisplay(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetTimeDisplay)
    return (TTimeDisplay)MySyscall(pDateTimePicker_GetTimeDisplay, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetTimeDisplay)
void
ateTimePicker_SetTimeDisplay(TDateTimePicker AObj, TTimeDisplay AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetTimeDisplay)
    MySyscall(pDateTimePicker_SetTimeDisplay, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetTimeFormat)
TTimeFormat
ateTimePicker_GetTimeFormat(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetTimeFormat)
    return (TTimeFormat)MySyscall(pDateTimePicker_GetTimeFormat, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetTimeFormat)
void
ateTimePicker_SetTimeFormat(TDateTimePicker AObj, TTimeFormat AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetTimeFormat)
    MySyscall(pDateTimePicker_SetTimeFormat, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetTimeSeparator)
char*
ateTimePicker_GetTimeSeparator(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetTimeSeparator)
    return (char*)MySyscall(pDateTimePicker_GetTimeSeparator, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetTimeSeparator)
void
ateTimePicker_SetTimeSeparator(TDateTimePicker AObj, CChar char* AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetTimeSeparator)
    MySyscall(pDateTimePicker_SetTimeSeparator, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetTrailingSeparator)
BOOL
ateTimePicker_GetTrailingSeparator(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetTrailingSeparator)
    return (BOOL)MySyscall(pDateTimePicker_GetTrailingSeparator, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetTrailingSeparator)
void
ateTimePicker_SetTrailingSeparator(TDateTimePicker AObj, BOOL AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetTrailingSeparator)
    MySyscall(pDateTimePicker_SetTrailingSeparator, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetUseDefaultSeparators)
BOOL
ateTimePicker_GetUseDefaultSeparators(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetUseDefaultSeparators)
    return (BOOL)MySyscall(pDateTimePicker_GetUseDefaultSeparators, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetUseDefaultSeparators)
void
ateTimePicker_SetUseDefaultSeparators(TDateTimePicker AObj, BOOL AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetUseDefaultSeparators)
    MySyscall(pDateTimePicker_SetUseDefaultSeparators, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetDroppedDown)
BOOL
ateTimePicker_GetDroppedDown(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetDroppedDown)
    return (BOOL)MySyscall(pDateTimePicker_GetDroppedDown, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetDateTime)
uint32_t
ateTimePicker_GetDateTime(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetDateTime)
    uint32_t result;
    MySyscall(pDateTimePicker_GetDateTime, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DateTimePicker_SetDateTime)
void
ateTimePicker_SetDateTime(TDateTimePicker AObj, uint32_t AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetDateTime)
    MySyscall(pDateTimePicker_SetDateTime, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetAlign)
TAlign
ateTimePicker_GetAlign(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetAlign)
    return (TAlign)MySyscall(pDateTimePicker_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetAlign)
void
ateTimePicker_SetAlign(TDateTimePicker AObj, TAlign AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetAlign)
    MySyscall(pDateTimePicker_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetAnchors)
TAnchors
ateTimePicker_GetAnchors(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetAnchors)
    return (TAnchors)MySyscall(pDateTimePicker_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetAnchors)
void
ateTimePicker_SetAnchors(TDateTimePicker AObj, TAnchors AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetAnchors)
    MySyscall(pDateTimePicker_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetBiDiMode)
TBiDiMode
ateTimePicker_GetBiDiMode(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetBiDiMode)
    return (TBiDiMode)MySyscall(pDateTimePicker_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetBiDiMode)
void
ateTimePicker_SetBiDiMode(TDateTimePicker AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetBiDiMode)
    MySyscall(pDateTimePicker_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetCalAlignment)
TDTCalAlignment
ateTimePicker_GetCalAlignment(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetCalAlignment)
    return (TDTCalAlignment)MySyscall(pDateTimePicker_GetCalAlignment, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetCalAlignment)
void
ateTimePicker_SetCalAlignment(TDateTimePicker AObj, TDTCalAlignment AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetCalAlignment)
    MySyscall(pDateTimePicker_SetCalAlignment, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetConstraints)
TSizeConstraints
ateTimePicker_GetConstraints(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetConstraints)
    return (TSizeConstraints)MySyscall(pDateTimePicker_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetConstraints)
void
ateTimePicker_SetConstraints(TDateTimePicker AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetConstraints)
    MySyscall(pDateTimePicker_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetDate)
uint32_t
ateTimePicker_GetDate(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetDate)
    uint32_t result;
    MySyscall(pDateTimePicker_GetDate, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DateTimePicker_SetDate)
void
ateTimePicker_SetDate(TDateTimePicker AObj, uint32_t AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetDate)
    MySyscall(pDateTimePicker_SetDate, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetTime)
uint32_t
ateTimePicker_GetTime(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetTime)
    uint32_t result;
    MySyscall(pDateTimePicker_GetTime, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DateTimePicker_SetTime)
void
ateTimePicker_SetTime(TDateTimePicker AObj, uint32_t AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetTime)
    MySyscall(pDateTimePicker_SetTime, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetChecked)
BOOL
ateTimePicker_GetChecked(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetChecked)
    return (BOOL)MySyscall(pDateTimePicker_GetChecked, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetChecked)
void
ateTimePicker_SetChecked(TDateTimePicker AObj, BOOL AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetChecked)
    MySyscall(pDateTimePicker_SetChecked, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetColor)
TColor
ateTimePicker_GetColor(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetColor)
    return (TColor)MySyscall(pDateTimePicker_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetColor)
void
ateTimePicker_SetColor(TDateTimePicker AObj, TColor AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetColor)
    MySyscall(pDateTimePicker_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetDateMode)
TDTDateMode
ateTimePicker_GetDateMode(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetDateMode)
    return (TDTDateMode)MySyscall(pDateTimePicker_GetDateMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetDateMode)
void
ateTimePicker_SetDateMode(TDateTimePicker AObj, TDTDateMode AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetDateMode)
    MySyscall(pDateTimePicker_SetDateMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetDoubleBuffered)
BOOL
ateTimePicker_GetDoubleBuffered(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetDoubleBuffered)
    return (BOOL)MySyscall(pDateTimePicker_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetDoubleBuffered)
void
ateTimePicker_SetDoubleBuffered(TDateTimePicker AObj, BOOL AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetDoubleBuffered)
    MySyscall(pDateTimePicker_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetEnabled)
BOOL
ateTimePicker_GetEnabled(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetEnabled)
    return (BOOL)MySyscall(pDateTimePicker_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetEnabled)
void
ateTimePicker_SetEnabled(TDateTimePicker AObj, BOOL AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetEnabled)
    MySyscall(pDateTimePicker_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetFont)
TFont
ateTimePicker_GetFont(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetFont)
    return (TFont)MySyscall(pDateTimePicker_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetFont)
void
ateTimePicker_SetFont(TDateTimePicker AObj, TFont AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetFont)
    MySyscall(pDateTimePicker_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetKind)
TDateTimeKind
ateTimePicker_GetKind(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetKind)
    return (TDateTimeKind)MySyscall(pDateTimePicker_GetKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetKind)
void
ateTimePicker_SetKind(TDateTimePicker AObj, TDateTimeKind AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetKind)
    MySyscall(pDateTimePicker_SetKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetMaxDate)
uint32_t
ateTimePicker_GetMaxDate(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetMaxDate)
    uint32_t result;
    MySyscall(pDateTimePicker_GetMaxDate, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DateTimePicker_SetMaxDate)
void
ateTimePicker_SetMaxDate(TDateTimePicker AObj, uint32_t AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetMaxDate)
    MySyscall(pDateTimePicker_SetMaxDate, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetMinDate)
uint32_t
ateTimePicker_GetMinDate(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetMinDate)
    uint32_t result;
    MySyscall(pDateTimePicker_GetMinDate, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DateTimePicker_SetMinDate)
void
ateTimePicker_SetMinDate(TDateTimePicker AObj, uint32_t AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetMinDate)
    MySyscall(pDateTimePicker_SetMinDate, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetParentColor)
BOOL
ateTimePicker_GetParentColor(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetParentColor)
    return (BOOL)MySyscall(pDateTimePicker_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetParentColor)
void
ateTimePicker_SetParentColor(TDateTimePicker AObj, BOOL AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetParentColor)
    MySyscall(pDateTimePicker_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetParentDoubleBuffered)
BOOL
ateTimePicker_GetParentDoubleBuffered(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pDateTimePicker_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetParentDoubleBuffered)
void
ateTimePicker_SetParentDoubleBuffered(TDateTimePicker AObj, BOOL AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetParentDoubleBuffered)
    MySyscall(pDateTimePicker_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetParentFont)
BOOL
ateTimePicker_GetParentFont(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetParentFont)
    return (BOOL)MySyscall(pDateTimePicker_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetParentFont)
void
ateTimePicker_SetParentFont(TDateTimePicker AObj, BOOL AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetParentFont)
    MySyscall(pDateTimePicker_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetParentShowHint)
BOOL
ateTimePicker_GetParentShowHint(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetParentShowHint)
    return (BOOL)MySyscall(pDateTimePicker_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetParentShowHint)
void
ateTimePicker_SetParentShowHint(TDateTimePicker AObj, BOOL AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetParentShowHint)
    MySyscall(pDateTimePicker_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetPopupMenu)
TPopupMenu
ateTimePicker_GetPopupMenu(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetPopupMenu)
    return (TPopupMenu)MySyscall(pDateTimePicker_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetPopupMenu)
void
ateTimePicker_SetPopupMenu(TDateTimePicker AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetPopupMenu)
    MySyscall(pDateTimePicker_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetShowHint)
BOOL
ateTimePicker_GetShowHint(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetShowHint)
    return (BOOL)MySyscall(pDateTimePicker_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetShowHint)
void
ateTimePicker_SetShowHint(TDateTimePicker AObj, BOOL AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetShowHint)
    MySyscall(pDateTimePicker_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetTabOrder)
TTabOrder
ateTimePicker_GetTabOrder(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetTabOrder)
    return (TTabOrder)MySyscall(pDateTimePicker_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetTabOrder)
void
ateTimePicker_SetTabOrder(TDateTimePicker AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetTabOrder)
    MySyscall(pDateTimePicker_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetTabStop)
BOOL
ateTimePicker_GetTabStop(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetTabStop)
    return (BOOL)MySyscall(pDateTimePicker_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetTabStop)
void
ateTimePicker_SetTabStop(TDateTimePicker AObj, BOOL AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetTabStop)
    MySyscall(pDateTimePicker_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetVisible)
BOOL
ateTimePicker_GetVisible(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetVisible)
    return (BOOL)MySyscall(pDateTimePicker_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetVisible)
void
ateTimePicker_SetVisible(TDateTimePicker AObj, BOOL AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetVisible)
    MySyscall(pDateTimePicker_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetOnClick)
void
ateTimePicker_SetOnClick(TDateTimePicker AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(DateTimePicker_SetOnClick)
    MySyscall(pDateTimePicker_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetOnCloseUp)
void
ateTimePicker_SetOnCloseUp(TDateTimePicker AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(DateTimePicker_SetOnCloseUp)
    MySyscall(pDateTimePicker_SetOnCloseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetOnChange)
void
ateTimePicker_SetOnChange(TDateTimePicker AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(DateTimePicker_SetOnChange)
    MySyscall(pDateTimePicker_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetOnContextPopup)
void
ateTimePicker_SetOnContextPopup(TDateTimePicker AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(DateTimePicker_SetOnContextPopup)
    MySyscall(pDateTimePicker_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetOnDropDown)
void
ateTimePicker_SetOnDropDown(TDateTimePicker AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(DateTimePicker_SetOnDropDown)
    MySyscall(pDateTimePicker_SetOnDropDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetOnEnter)
void
ateTimePicker_SetOnEnter(TDateTimePicker AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(DateTimePicker_SetOnEnter)
    MySyscall(pDateTimePicker_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetOnExit)
void
ateTimePicker_SetOnExit(TDateTimePicker AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(DateTimePicker_SetOnExit)
    MySyscall(pDateTimePicker_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetOnKeyDown)
void
ateTimePicker_SetOnKeyDown(TDateTimePicker AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(DateTimePicker_SetOnKeyDown)
    MySyscall(pDateTimePicker_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetOnKeyPress)
void
ateTimePicker_SetOnKeyPress(TDateTimePicker AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(DateTimePicker_SetOnKeyPress)
    MySyscall(pDateTimePicker_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetOnKeyUp)
void
ateTimePicker_SetOnKeyUp(TDateTimePicker AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(DateTimePicker_SetOnKeyUp)
    MySyscall(pDateTimePicker_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetOnMouseEnter)
void
ateTimePicker_SetOnMouseEnter(TDateTimePicker AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(DateTimePicker_SetOnMouseEnter)
    MySyscall(pDateTimePicker_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetOnMouseLeave)
void
ateTimePicker_SetOnMouseLeave(TDateTimePicker AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(DateTimePicker_SetOnMouseLeave)
    MySyscall(pDateTimePicker_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetDockClientCount)
int32_t
ateTimePicker_GetDockClientCount(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetDockClientCount)
    return (int32_t)MySyscall(pDateTimePicker_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetDockSite)
BOOL
ateTimePicker_GetDockSite(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetDockSite)
    return (BOOL)MySyscall(pDateTimePicker_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetDockSite)
void
ateTimePicker_SetDockSite(TDateTimePicker AObj, BOOL AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetDockSite)
    MySyscall(pDateTimePicker_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetMouseInClient)
BOOL
ateTimePicker_GetMouseInClient(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetMouseInClient)
    return (BOOL)MySyscall(pDateTimePicker_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetVisibleDockClientCount)
int32_t
ateTimePicker_GetVisibleDockClientCount(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pDateTimePicker_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetBrush)
TBrush
ateTimePicker_GetBrush(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetBrush)
    return (TBrush)MySyscall(pDateTimePicker_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetControlCount)
int32_t
ateTimePicker_GetControlCount(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetControlCount)
    return (int32_t)MySyscall(pDateTimePicker_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetHandle)
HWND
ateTimePicker_GetHandle(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetHandle)
    return (HWND)MySyscall(pDateTimePicker_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetParentWindow)
HWND
ateTimePicker_GetParentWindow(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetParentWindow)
    return (HWND)MySyscall(pDateTimePicker_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetParentWindow)
void
ateTimePicker_SetParentWindow(TDateTimePicker AObj, HWND AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetParentWindow)
    MySyscall(pDateTimePicker_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetShowing)
BOOL
ateTimePicker_GetShowing(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetShowing)
    return (BOOL)MySyscall(pDateTimePicker_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetUseDockManager)
BOOL
ateTimePicker_GetUseDockManager(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetUseDockManager)
    return (BOOL)MySyscall(pDateTimePicker_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetUseDockManager)
void
ateTimePicker_SetUseDockManager(TDateTimePicker AObj, BOOL AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetUseDockManager)
    MySyscall(pDateTimePicker_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetAction)
TAction
ateTimePicker_GetAction(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetAction)
    return (TAction)MySyscall(pDateTimePicker_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetAction)
void
ateTimePicker_SetAction(TDateTimePicker AObj, TAction AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetAction)
    MySyscall(pDateTimePicker_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetBoundsRect)
TRect
ateTimePicker_GetBoundsRect(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetBoundsRect)
    TRect result;
    MySyscall(pDateTimePicker_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DateTimePicker_SetBoundsRect)
void
ateTimePicker_SetBoundsRect(TDateTimePicker AObj, TRect AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetBoundsRect)
    MySyscall(pDateTimePicker_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetClientHeight)
int32_t
ateTimePicker_GetClientHeight(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetClientHeight)
    return (int32_t)MySyscall(pDateTimePicker_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetClientHeight)
void
ateTimePicker_SetClientHeight(TDateTimePicker AObj, int32_t AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetClientHeight)
    MySyscall(pDateTimePicker_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetClientOrigin)
TPoint
ateTimePicker_GetClientOrigin(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetClientOrigin)
    TPoint result;
    MySyscall(pDateTimePicker_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DateTimePicker_GetClientRect)
TRect
ateTimePicker_GetClientRect(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetClientRect)
    TRect result;
    MySyscall(pDateTimePicker_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DateTimePicker_GetClientWidth)
int32_t
ateTimePicker_GetClientWidth(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetClientWidth)
    return (int32_t)MySyscall(pDateTimePicker_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetClientWidth)
void
ateTimePicker_SetClientWidth(TDateTimePicker AObj, int32_t AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetClientWidth)
    MySyscall(pDateTimePicker_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetControlState)
TControlState
ateTimePicker_GetControlState(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetControlState)
    return (TControlState)MySyscall(pDateTimePicker_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetControlState)
void
ateTimePicker_SetControlState(TDateTimePicker AObj, TControlState AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetControlState)
    MySyscall(pDateTimePicker_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetControlStyle)
TControlStyle
ateTimePicker_GetControlStyle(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetControlStyle)
    return (TControlStyle)MySyscall(pDateTimePicker_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetControlStyle)
void
ateTimePicker_SetControlStyle(TDateTimePicker AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetControlStyle)
    MySyscall(pDateTimePicker_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetFloating)
BOOL
ateTimePicker_GetFloating(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetFloating)
    return (BOOL)MySyscall(pDateTimePicker_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetParent)
TWinControl
ateTimePicker_GetParent(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetParent)
    return (TWinControl)MySyscall(pDateTimePicker_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetParent)
void
ateTimePicker_SetParent(TDateTimePicker AObj, TWinControl AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetParent)
    MySyscall(pDateTimePicker_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetLeft)
int32_t
ateTimePicker_GetLeft(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetLeft)
    return (int32_t)MySyscall(pDateTimePicker_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetLeft)
void
ateTimePicker_SetLeft(TDateTimePicker AObj, int32_t AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetLeft)
    MySyscall(pDateTimePicker_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetTop)
int32_t
ateTimePicker_GetTop(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetTop)
    return (int32_t)MySyscall(pDateTimePicker_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetTop)
void
ateTimePicker_SetTop(TDateTimePicker AObj, int32_t AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetTop)
    MySyscall(pDateTimePicker_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetWidth)
int32_t
ateTimePicker_GetWidth(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetWidth)
    return (int32_t)MySyscall(pDateTimePicker_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetWidth)
void
ateTimePicker_SetWidth(TDateTimePicker AObj, int32_t AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetWidth)
    MySyscall(pDateTimePicker_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetHeight)
int32_t
ateTimePicker_GetHeight(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetHeight)
    return (int32_t)MySyscall(pDateTimePicker_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetHeight)
void
ateTimePicker_SetHeight(TDateTimePicker AObj, int32_t AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetHeight)
    MySyscall(pDateTimePicker_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetCursor)
TCursor
ateTimePicker_GetCursor(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetCursor)
    return (TCursor)MySyscall(pDateTimePicker_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetCursor)
void
ateTimePicker_SetCursor(TDateTimePicker AObj, TCursor AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetCursor)
    MySyscall(pDateTimePicker_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetHint)
char*
ateTimePicker_GetHint(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetHint)
    return (char*)MySyscall(pDateTimePicker_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetHint)
void
ateTimePicker_SetHint(TDateTimePicker AObj, CChar char* AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetHint)
    MySyscall(pDateTimePicker_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetComponentCount)
int32_t
ateTimePicker_GetComponentCount(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetComponentCount)
    return (int32_t)MySyscall(pDateTimePicker_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetComponentIndex)
int32_t
ateTimePicker_GetComponentIndex(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetComponentIndex)
    return (int32_t)MySyscall(pDateTimePicker_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetComponentIndex)
void
ateTimePicker_SetComponentIndex(TDateTimePicker AObj, int32_t AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetComponentIndex)
    MySyscall(pDateTimePicker_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetOwner)
TComponent
ateTimePicker_GetOwner(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetOwner)
    return (TComponent)MySyscall(pDateTimePicker_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetName)
char*
ateTimePicker_GetName(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetName)
    return (char*)MySyscall(pDateTimePicker_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetName)
void
ateTimePicker_SetName(TDateTimePicker AObj, CChar char* AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetName)
    MySyscall(pDateTimePicker_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetTag)
intptr_t
ateTimePicker_GetTag(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetTag)
    return (intptr_t)MySyscall(pDateTimePicker_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetTag)
void
ateTimePicker_SetTag(TDateTimePicker AObj, intptr_t AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetTag)
    MySyscall(pDateTimePicker_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetAnchorSideLeft)
TAnchorSide
ateTimePicker_GetAnchorSideLeft(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pDateTimePicker_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetAnchorSideLeft)
void
ateTimePicker_SetAnchorSideLeft(TDateTimePicker AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetAnchorSideLeft)
    MySyscall(pDateTimePicker_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetAnchorSideTop)
TAnchorSide
ateTimePicker_GetAnchorSideTop(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pDateTimePicker_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetAnchorSideTop)
void
ateTimePicker_SetAnchorSideTop(TDateTimePicker AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetAnchorSideTop)
    MySyscall(pDateTimePicker_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetAnchorSideRight)
TAnchorSide
ateTimePicker_GetAnchorSideRight(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pDateTimePicker_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetAnchorSideRight)
void
ateTimePicker_SetAnchorSideRight(TDateTimePicker AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetAnchorSideRight)
    MySyscall(pDateTimePicker_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetAnchorSideBottom)
TAnchorSide
ateTimePicker_GetAnchorSideBottom(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pDateTimePicker_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetAnchorSideBottom)
void
ateTimePicker_SetAnchorSideBottom(TDateTimePicker AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetAnchorSideBottom)
    MySyscall(pDateTimePicker_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetChildSizing)
TControlChildSizing
ateTimePicker_GetChildSizing(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetChildSizing)
    return (TControlChildSizing)MySyscall(pDateTimePicker_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetChildSizing)
void
ateTimePicker_SetChildSizing(TDateTimePicker AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetChildSizing)
    MySyscall(pDateTimePicker_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetBorderSpacing)
TControlBorderSpacing
ateTimePicker_GetBorderSpacing(TDateTimePicker AObj) {
    GET_FUNC_ADDR(DateTimePicker_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pDateTimePicker_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_SetBorderSpacing)
void
ateTimePicker_SetBorderSpacing(TDateTimePicker AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(DateTimePicker_SetBorderSpacing)
    MySyscall(pDateTimePicker_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetDockClients)
TControl
ateTimePicker_GetDockClients(TDateTimePicker AObj, int32_t Index) {
    GET_FUNC_ADDR(DateTimePicker_GetDockClients)
    return (TControl)MySyscall(pDateTimePicker_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetControls)
TControl
ateTimePicker_GetControls(TDateTimePicker AObj, int32_t Index) {
    GET_FUNC_ADDR(DateTimePicker_GetControls)
    return (TControl)MySyscall(pDateTimePicker_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetComponents)
TComponent
ateTimePicker_GetComponents(TDateTimePicker AObj, int32_t AIndex) {
    GET_FUNC_ADDR(DateTimePicker_GetComponents)
    return (TComponent)MySyscall(pDateTimePicker_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_GetAnchorSide)
TAnchorSide
ateTimePicker_GetAnchorSide(TDateTimePicker AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(DateTimePicker_GetAnchorSide)
    return (TAnchorSide)MySyscall(pDateTimePicker_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DateTimePicker_StaticClassType)
TClass
ateTimePicker_StaticClassType() {
    GET_FUNC_ADDR(DateTimePicker_StaticClassType)
    return (TClass)MySyscall(pDateTimePicker_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TMonthCalendar-------------------

DEFINE_FUNC_PTR(MonthCalendar_Create)
TMonthCalendar
MonthCalendar_Create(TComponent AOwner) {
    GET_FUNC_ADDR(MonthCalendar_Create)
    return (TMonthCalendar)MySyscall(pMonthCalendar_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_Free)
void
MonthCalendar_Free(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_Free)
    MySyscall(pMonthCalendar_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_CanFocus)
BOOL
MonthCalendar_CanFocus(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_CanFocus)
    return (BOOL)MySyscall(pMonthCalendar_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_ContainsControl)
BOOL
MonthCalendar_ContainsControl(TMonthCalendar AObj, TControl Control) {
    GET_FUNC_ADDR(MonthCalendar_ContainsControl)
    return (BOOL)MySyscall(pMonthCalendar_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_ControlAtPos)
TControl
MonthCalendar_ControlAtPos(TMonthCalendar AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(MonthCalendar_ControlAtPos)
    return (TControl)MySyscall(pMonthCalendar_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_DisableAlign)
void
MonthCalendar_DisableAlign(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_DisableAlign)
    MySyscall(pMonthCalendar_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_EnableAlign)
void
MonthCalendar_EnableAlign(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_EnableAlign)
    MySyscall(pMonthCalendar_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_FindChildControl)
TControl
MonthCalendar_FindChildControl(TMonthCalendar AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(MonthCalendar_FindChildControl)
    return (TControl)MySyscall(pMonthCalendar_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_FlipChildren)
void
MonthCalendar_FlipChildren(TMonthCalendar AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(MonthCalendar_FlipChildren)
    MySyscall(pMonthCalendar_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_Focused)
BOOL
MonthCalendar_Focused(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_Focused)
    return (BOOL)MySyscall(pMonthCalendar_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_HandleAllocated)
BOOL
MonthCalendar_HandleAllocated(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_HandleAllocated)
    return (BOOL)MySyscall(pMonthCalendar_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_InsertControl)
void
MonthCalendar_InsertControl(TMonthCalendar AObj, TControl AControl) {
    GET_FUNC_ADDR(MonthCalendar_InsertControl)
    MySyscall(pMonthCalendar_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_Invalidate)
void
MonthCalendar_Invalidate(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_Invalidate)
    MySyscall(pMonthCalendar_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_PaintTo)
void
MonthCalendar_PaintTo(TMonthCalendar AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(MonthCalendar_PaintTo)
    MySyscall(pMonthCalendar_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_RemoveControl)
void
MonthCalendar_RemoveControl(TMonthCalendar AObj, TControl AControl) {
    GET_FUNC_ADDR(MonthCalendar_RemoveControl)
    MySyscall(pMonthCalendar_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_Realign)
void
MonthCalendar_Realign(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_Realign)
    MySyscall(pMonthCalendar_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_Repaint)
void
MonthCalendar_Repaint(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_Repaint)
    MySyscall(pMonthCalendar_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_ScaleBy)
void
MonthCalendar_ScaleBy(TMonthCalendar AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(MonthCalendar_ScaleBy)
    MySyscall(pMonthCalendar_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_ScrollBy)
void
MonthCalendar_ScrollBy(TMonthCalendar AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(MonthCalendar_ScrollBy)
    MySyscall(pMonthCalendar_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetBounds)
void
MonthCalendar_SetBounds(TMonthCalendar AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(MonthCalendar_SetBounds)
    MySyscall(pMonthCalendar_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetFocus)
void
MonthCalendar_SetFocus(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_SetFocus)
    MySyscall(pMonthCalendar_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_Update)
void
MonthCalendar_Update(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_Update)
    MySyscall(pMonthCalendar_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_BringToFront)
void
MonthCalendar_BringToFront(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_BringToFront)
    MySyscall(pMonthCalendar_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_ClientToScreen)
TPoint
MonthCalendar_ClientToScreen(TMonthCalendar AObj, TPoint Point) {
    GET_FUNC_ADDR(MonthCalendar_ClientToScreen)
    TPoint result;
    MySyscall(pMonthCalendar_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MonthCalendar_ClientToParent)
TPoint
MonthCalendar_ClientToParent(TMonthCalendar AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(MonthCalendar_ClientToParent)
    TPoint result;
    MySyscall(pMonthCalendar_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MonthCalendar_Dragging)
BOOL
MonthCalendar_Dragging(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_Dragging)
    return (BOOL)MySyscall(pMonthCalendar_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_HasParent)
BOOL
MonthCalendar_HasParent(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_HasParent)
    return (BOOL)MySyscall(pMonthCalendar_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_Hide)
void
MonthCalendar_Hide(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_Hide)
    MySyscall(pMonthCalendar_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_Perform)
intptr_t
MonthCalendar_Perform(TMonthCalendar AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(MonthCalendar_Perform)
    return (intptr_t)MySyscall(pMonthCalendar_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_Refresh)
void
MonthCalendar_Refresh(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_Refresh)
    MySyscall(pMonthCalendar_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_ScreenToClient)
TPoint
MonthCalendar_ScreenToClient(TMonthCalendar AObj, TPoint Point) {
    GET_FUNC_ADDR(MonthCalendar_ScreenToClient)
    TPoint result;
    MySyscall(pMonthCalendar_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MonthCalendar_ParentToClient)
TPoint
MonthCalendar_ParentToClient(TMonthCalendar AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(MonthCalendar_ParentToClient)
    TPoint result;
    MySyscall(pMonthCalendar_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MonthCalendar_SendToBack)
void
MonthCalendar_SendToBack(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_SendToBack)
    MySyscall(pMonthCalendar_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_Show)
void
MonthCalendar_Show(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_Show)
    MySyscall(pMonthCalendar_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetTextBuf)
int32_t
MonthCalendar_GetTextBuf(TMonthCalendar AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(MonthCalendar_GetTextBuf)
    return (int32_t)MySyscall(pMonthCalendar_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetTextLen)
int32_t
MonthCalendar_GetTextLen(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetTextLen)
    return (int32_t)MySyscall(pMonthCalendar_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetTextBuf)
void
MonthCalendar_SetTextBuf(TMonthCalendar AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(MonthCalendar_SetTextBuf)
    MySyscall(pMonthCalendar_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_FindComponent)
TComponent
MonthCalendar_FindComponent(TMonthCalendar AObj, CChar char* AName) {
    GET_FUNC_ADDR(MonthCalendar_FindComponent)
    return (TComponent)MySyscall(pMonthCalendar_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetNamePath)
char*
MonthCalendar_GetNamePath(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetNamePath)
    return (char*)MySyscall(pMonthCalendar_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_Assign)
void
MonthCalendar_Assign(TMonthCalendar AObj, TObject Source) {
    GET_FUNC_ADDR(MonthCalendar_Assign)
    MySyscall(pMonthCalendar_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_ClassType)
TClass
MonthCalendar_ClassType(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_ClassType)
    return (TClass)MySyscall(pMonthCalendar_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_ClassName)
char*
MonthCalendar_ClassName(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_ClassName)
    return (char*)MySyscall(pMonthCalendar_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_InstanceSize)
int32_t
MonthCalendar_InstanceSize(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_InstanceSize)
    return (int32_t)MySyscall(pMonthCalendar_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_InheritsFrom)
BOOL
MonthCalendar_InheritsFrom(TMonthCalendar AObj, TClass AClass) {
    GET_FUNC_ADDR(MonthCalendar_InheritsFrom)
    return (BOOL)MySyscall(pMonthCalendar_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_Equals)
BOOL
MonthCalendar_Equals(TMonthCalendar AObj, TObject Obj) {
    GET_FUNC_ADDR(MonthCalendar_Equals)
    return (BOOL)MySyscall(pMonthCalendar_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetHashCode)
int32_t
MonthCalendar_GetHashCode(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetHashCode)
    return (int32_t)MySyscall(pMonthCalendar_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_ToString)
char*
MonthCalendar_ToString(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_ToString)
    return (char*)MySyscall(pMonthCalendar_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_AnchorToNeighbour)
void
MonthCalendar_AnchorToNeighbour(TMonthCalendar AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(MonthCalendar_AnchorToNeighbour)
    MySyscall(pMonthCalendar_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_AnchorParallel)
void
MonthCalendar_AnchorParallel(TMonthCalendar AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(MonthCalendar_AnchorParallel)
    MySyscall(pMonthCalendar_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_AnchorHorizontalCenterTo)
void
MonthCalendar_AnchorHorizontalCenterTo(TMonthCalendar AObj, TControl ASibling) {
    GET_FUNC_ADDR(MonthCalendar_AnchorHorizontalCenterTo)
    MySyscall(pMonthCalendar_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_AnchorVerticalCenterTo)
void
MonthCalendar_AnchorVerticalCenterTo(TMonthCalendar AObj, TControl ASibling) {
    GET_FUNC_ADDR(MonthCalendar_AnchorVerticalCenterTo)
    MySyscall(pMonthCalendar_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_AnchorSame)
void
MonthCalendar_AnchorSame(TMonthCalendar AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(MonthCalendar_AnchorSame)
    MySyscall(pMonthCalendar_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_AnchorAsAlign)
void
MonthCalendar_AnchorAsAlign(TMonthCalendar AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(MonthCalendar_AnchorAsAlign)
    MySyscall(pMonthCalendar_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_AnchorClient)
void
MonthCalendar_AnchorClient(TMonthCalendar AObj, int32_t ASpace) {
    GET_FUNC_ADDR(MonthCalendar_AnchorClient)
    MySyscall(pMonthCalendar_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_ScaleDesignToForm)
int32_t
MonthCalendar_ScaleDesignToForm(TMonthCalendar AObj, int32_t ASize) {
    GET_FUNC_ADDR(MonthCalendar_ScaleDesignToForm)
    return (int32_t)MySyscall(pMonthCalendar_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_ScaleFormToDesign)
int32_t
MonthCalendar_ScaleFormToDesign(TMonthCalendar AObj, int32_t ASize) {
    GET_FUNC_ADDR(MonthCalendar_ScaleFormToDesign)
    return (int32_t)MySyscall(pMonthCalendar_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_Scale96ToForm)
int32_t
MonthCalendar_Scale96ToForm(TMonthCalendar AObj, int32_t ASize) {
    GET_FUNC_ADDR(MonthCalendar_Scale96ToForm)
    return (int32_t)MySyscall(pMonthCalendar_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_ScaleFormTo96)
int32_t
MonthCalendar_ScaleFormTo96(TMonthCalendar AObj, int32_t ASize) {
    GET_FUNC_ADDR(MonthCalendar_ScaleFormTo96)
    return (int32_t)MySyscall(pMonthCalendar_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_Scale96ToFont)
int32_t
MonthCalendar_Scale96ToFont(TMonthCalendar AObj, int32_t ASize) {
    GET_FUNC_ADDR(MonthCalendar_Scale96ToFont)
    return (int32_t)MySyscall(pMonthCalendar_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_ScaleFontTo96)
int32_t
MonthCalendar_ScaleFontTo96(TMonthCalendar AObj, int32_t ASize) {
    GET_FUNC_ADDR(MonthCalendar_ScaleFontTo96)
    return (int32_t)MySyscall(pMonthCalendar_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_ScaleScreenToFont)
int32_t
MonthCalendar_ScaleScreenToFont(TMonthCalendar AObj, int32_t ASize) {
    GET_FUNC_ADDR(MonthCalendar_ScaleScreenToFont)
    return (int32_t)MySyscall(pMonthCalendar_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_ScaleFontToScreen)
int32_t
MonthCalendar_ScaleFontToScreen(TMonthCalendar AObj, int32_t ASize) {
    GET_FUNC_ADDR(MonthCalendar_ScaleFontToScreen)
    return (int32_t)MySyscall(pMonthCalendar_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_Scale96ToScreen)
int32_t
MonthCalendar_Scale96ToScreen(TMonthCalendar AObj, int32_t ASize) {
    GET_FUNC_ADDR(MonthCalendar_Scale96ToScreen)
    return (int32_t)MySyscall(pMonthCalendar_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_ScaleScreenTo96)
int32_t
MonthCalendar_ScaleScreenTo96(TMonthCalendar AObj, int32_t ASize) {
    GET_FUNC_ADDR(MonthCalendar_ScaleScreenTo96)
    return (int32_t)MySyscall(pMonthCalendar_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_AutoAdjustLayout)
void
MonthCalendar_AutoAdjustLayout(TMonthCalendar AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(MonthCalendar_AutoAdjustLayout)
    MySyscall(pMonthCalendar_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_FixDesignFontsPPI)
void
MonthCalendar_FixDesignFontsPPI(TMonthCalendar AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(MonthCalendar_FixDesignFontsPPI)
    MySyscall(pMonthCalendar_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_ScaleFontsPPI)
void
MonthCalendar_ScaleFontsPPI(TMonthCalendar AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(MonthCalendar_ScaleFontsPPI)
    MySyscall(pMonthCalendar_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetDateTime)
uint32_t
MonthCalendar_GetDateTime(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetDateTime)
    uint32_t result;
    MySyscall(pMonthCalendar_GetDateTime, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MonthCalendar_SetDateTime)
void
MonthCalendar_SetDateTime(TMonthCalendar AObj, uint32_t AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetDateTime)
    MySyscall(pMonthCalendar_SetDateTime, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetAlign)
TAlign
MonthCalendar_GetAlign(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetAlign)
    return (TAlign)MySyscall(pMonthCalendar_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetAlign)
void
MonthCalendar_SetAlign(TMonthCalendar AObj, TAlign AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetAlign)
    MySyscall(pMonthCalendar_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetAnchors)
TAnchors
MonthCalendar_GetAnchors(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetAnchors)
    return (TAnchors)MySyscall(pMonthCalendar_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetAnchors)
void
MonthCalendar_SetAnchors(TMonthCalendar AObj, TAnchors AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetAnchors)
    MySyscall(pMonthCalendar_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetAutoSize)
BOOL
MonthCalendar_GetAutoSize(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetAutoSize)
    return (BOOL)MySyscall(pMonthCalendar_GetAutoSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetAutoSize)
void
MonthCalendar_SetAutoSize(TMonthCalendar AObj, BOOL AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetAutoSize)
    MySyscall(pMonthCalendar_SetAutoSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetBorderWidth)
int32_t
MonthCalendar_GetBorderWidth(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetBorderWidth)
    return (int32_t)MySyscall(pMonthCalendar_GetBorderWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetBorderWidth)
void
MonthCalendar_SetBorderWidth(TMonthCalendar AObj, int32_t AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetBorderWidth)
    MySyscall(pMonthCalendar_SetBorderWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetBiDiMode)
TBiDiMode
MonthCalendar_GetBiDiMode(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetBiDiMode)
    return (TBiDiMode)MySyscall(pMonthCalendar_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetBiDiMode)
void
MonthCalendar_SetBiDiMode(TMonthCalendar AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetBiDiMode)
    MySyscall(pMonthCalendar_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetConstraints)
TSizeConstraints
MonthCalendar_GetConstraints(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetConstraints)
    return (TSizeConstraints)MySyscall(pMonthCalendar_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetConstraints)
void
MonthCalendar_SetConstraints(TMonthCalendar AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetConstraints)
    MySyscall(pMonthCalendar_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetDate)
uint32_t
MonthCalendar_GetDate(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetDate)
    uint32_t result;
    MySyscall(pMonthCalendar_GetDate, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MonthCalendar_SetDate)
void
MonthCalendar_SetDate(TMonthCalendar AObj, uint32_t AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetDate)
    MySyscall(pMonthCalendar_SetDate, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetDoubleBuffered)
BOOL
MonthCalendar_GetDoubleBuffered(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetDoubleBuffered)
    return (BOOL)MySyscall(pMonthCalendar_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetDoubleBuffered)
void
MonthCalendar_SetDoubleBuffered(TMonthCalendar AObj, BOOL AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetDoubleBuffered)
    MySyscall(pMonthCalendar_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetDragCursor)
TCursor
MonthCalendar_GetDragCursor(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetDragCursor)
    return (TCursor)MySyscall(pMonthCalendar_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetDragCursor)
void
MonthCalendar_SetDragCursor(TMonthCalendar AObj, TCursor AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetDragCursor)
    MySyscall(pMonthCalendar_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetDragKind)
TDragKind
MonthCalendar_GetDragKind(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetDragKind)
    return (TDragKind)MySyscall(pMonthCalendar_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetDragKind)
void
MonthCalendar_SetDragKind(TMonthCalendar AObj, TDragKind AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetDragKind)
    MySyscall(pMonthCalendar_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetDragMode)
TDragMode
MonthCalendar_GetDragMode(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetDragMode)
    return (TDragMode)MySyscall(pMonthCalendar_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetDragMode)
void
MonthCalendar_SetDragMode(TMonthCalendar AObj, TDragMode AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetDragMode)
    MySyscall(pMonthCalendar_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetEnabled)
BOOL
MonthCalendar_GetEnabled(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetEnabled)
    return (BOOL)MySyscall(pMonthCalendar_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetEnabled)
void
MonthCalendar_SetEnabled(TMonthCalendar AObj, BOOL AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetEnabled)
    MySyscall(pMonthCalendar_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetFont)
TFont
MonthCalendar_GetFont(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetFont)
    return (TFont)MySyscall(pMonthCalendar_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetFont)
void
MonthCalendar_SetFont(TMonthCalendar AObj, TFont AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetFont)
    MySyscall(pMonthCalendar_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetParentDoubleBuffered)
BOOL
MonthCalendar_GetParentDoubleBuffered(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pMonthCalendar_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetParentDoubleBuffered)
void
MonthCalendar_SetParentDoubleBuffered(TMonthCalendar AObj, BOOL AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetParentDoubleBuffered)
    MySyscall(pMonthCalendar_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetPopupMenu)
TPopupMenu
MonthCalendar_GetPopupMenu(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetPopupMenu)
    return (TPopupMenu)MySyscall(pMonthCalendar_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetPopupMenu)
void
MonthCalendar_SetPopupMenu(TMonthCalendar AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetPopupMenu)
    MySyscall(pMonthCalendar_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetShowHint)
BOOL
MonthCalendar_GetShowHint(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetShowHint)
    return (BOOL)MySyscall(pMonthCalendar_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetShowHint)
void
MonthCalendar_SetShowHint(TMonthCalendar AObj, BOOL AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetShowHint)
    MySyscall(pMonthCalendar_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetTabOrder)
TTabOrder
MonthCalendar_GetTabOrder(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetTabOrder)
    return (TTabOrder)MySyscall(pMonthCalendar_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetTabOrder)
void
MonthCalendar_SetTabOrder(TMonthCalendar AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetTabOrder)
    MySyscall(pMonthCalendar_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetTabStop)
BOOL
MonthCalendar_GetTabStop(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetTabStop)
    return (BOOL)MySyscall(pMonthCalendar_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetTabStop)
void
MonthCalendar_SetTabStop(TMonthCalendar AObj, BOOL AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetTabStop)
    MySyscall(pMonthCalendar_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetVisible)
BOOL
MonthCalendar_GetVisible(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetVisible)
    return (BOOL)MySyscall(pMonthCalendar_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetVisible)
void
MonthCalendar_SetVisible(TMonthCalendar AObj, BOOL AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetVisible)
    MySyscall(pMonthCalendar_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetOnClick)
void
MonthCalendar_SetOnClick(TMonthCalendar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(MonthCalendar_SetOnClick)
    MySyscall(pMonthCalendar_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetOnContextPopup)
void
MonthCalendar_SetOnContextPopup(TMonthCalendar AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(MonthCalendar_SetOnContextPopup)
    MySyscall(pMonthCalendar_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetOnDblClick)
void
MonthCalendar_SetOnDblClick(TMonthCalendar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(MonthCalendar_SetOnDblClick)
    MySyscall(pMonthCalendar_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetOnDragDrop)
void
MonthCalendar_SetOnDragDrop(TMonthCalendar AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(MonthCalendar_SetOnDragDrop)
    MySyscall(pMonthCalendar_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetOnDragOver)
void
MonthCalendar_SetOnDragOver(TMonthCalendar AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(MonthCalendar_SetOnDragOver)
    MySyscall(pMonthCalendar_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetOnEndDock)
void
MonthCalendar_SetOnEndDock(TMonthCalendar AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(MonthCalendar_SetOnEndDock)
    MySyscall(pMonthCalendar_SetOnEndDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetOnEndDrag)
void
MonthCalendar_SetOnEndDrag(TMonthCalendar AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(MonthCalendar_SetOnEndDrag)
    MySyscall(pMonthCalendar_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetOnEnter)
void
MonthCalendar_SetOnEnter(TMonthCalendar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(MonthCalendar_SetOnEnter)
    MySyscall(pMonthCalendar_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetOnExit)
void
MonthCalendar_SetOnExit(TMonthCalendar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(MonthCalendar_SetOnExit)
    MySyscall(pMonthCalendar_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetOnKeyDown)
void
MonthCalendar_SetOnKeyDown(TMonthCalendar AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(MonthCalendar_SetOnKeyDown)
    MySyscall(pMonthCalendar_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetOnKeyPress)
void
MonthCalendar_SetOnKeyPress(TMonthCalendar AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(MonthCalendar_SetOnKeyPress)
    MySyscall(pMonthCalendar_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetOnKeyUp)
void
MonthCalendar_SetOnKeyUp(TMonthCalendar AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(MonthCalendar_SetOnKeyUp)
    MySyscall(pMonthCalendar_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetOnMouseEnter)
void
MonthCalendar_SetOnMouseEnter(TMonthCalendar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(MonthCalendar_SetOnMouseEnter)
    MySyscall(pMonthCalendar_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetOnMouseLeave)
void
MonthCalendar_SetOnMouseLeave(TMonthCalendar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(MonthCalendar_SetOnMouseLeave)
    MySyscall(pMonthCalendar_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetOnStartDock)
void
MonthCalendar_SetOnStartDock(TMonthCalendar AObj, TStartDockEvent AEventData) {
    GET_FUNC_ADDR(MonthCalendar_SetOnStartDock)
    MySyscall(pMonthCalendar_SetOnStartDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetDockClientCount)
int32_t
MonthCalendar_GetDockClientCount(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetDockClientCount)
    return (int32_t)MySyscall(pMonthCalendar_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetDockSite)
BOOL
MonthCalendar_GetDockSite(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetDockSite)
    return (BOOL)MySyscall(pMonthCalendar_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetDockSite)
void
MonthCalendar_SetDockSite(TMonthCalendar AObj, BOOL AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetDockSite)
    MySyscall(pMonthCalendar_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetMouseInClient)
BOOL
MonthCalendar_GetMouseInClient(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetMouseInClient)
    return (BOOL)MySyscall(pMonthCalendar_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetVisibleDockClientCount)
int32_t
MonthCalendar_GetVisibleDockClientCount(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pMonthCalendar_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetBrush)
TBrush
MonthCalendar_GetBrush(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetBrush)
    return (TBrush)MySyscall(pMonthCalendar_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetControlCount)
int32_t
MonthCalendar_GetControlCount(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetControlCount)
    return (int32_t)MySyscall(pMonthCalendar_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetHandle)
HWND
MonthCalendar_GetHandle(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetHandle)
    return (HWND)MySyscall(pMonthCalendar_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetParentWindow)
HWND
MonthCalendar_GetParentWindow(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetParentWindow)
    return (HWND)MySyscall(pMonthCalendar_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetParentWindow)
void
MonthCalendar_SetParentWindow(TMonthCalendar AObj, HWND AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetParentWindow)
    MySyscall(pMonthCalendar_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetShowing)
BOOL
MonthCalendar_GetShowing(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetShowing)
    return (BOOL)MySyscall(pMonthCalendar_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetUseDockManager)
BOOL
MonthCalendar_GetUseDockManager(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetUseDockManager)
    return (BOOL)MySyscall(pMonthCalendar_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetUseDockManager)
void
MonthCalendar_SetUseDockManager(TMonthCalendar AObj, BOOL AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetUseDockManager)
    MySyscall(pMonthCalendar_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetAction)
TAction
MonthCalendar_GetAction(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetAction)
    return (TAction)MySyscall(pMonthCalendar_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetAction)
void
MonthCalendar_SetAction(TMonthCalendar AObj, TAction AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetAction)
    MySyscall(pMonthCalendar_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetBoundsRect)
TRect
MonthCalendar_GetBoundsRect(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetBoundsRect)
    TRect result;
    MySyscall(pMonthCalendar_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MonthCalendar_SetBoundsRect)
void
MonthCalendar_SetBoundsRect(TMonthCalendar AObj, TRect AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetBoundsRect)
    MySyscall(pMonthCalendar_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetClientHeight)
int32_t
MonthCalendar_GetClientHeight(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetClientHeight)
    return (int32_t)MySyscall(pMonthCalendar_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetClientHeight)
void
MonthCalendar_SetClientHeight(TMonthCalendar AObj, int32_t AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetClientHeight)
    MySyscall(pMonthCalendar_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetClientOrigin)
TPoint
MonthCalendar_GetClientOrigin(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetClientOrigin)
    TPoint result;
    MySyscall(pMonthCalendar_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MonthCalendar_GetClientRect)
TRect
MonthCalendar_GetClientRect(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetClientRect)
    TRect result;
    MySyscall(pMonthCalendar_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MonthCalendar_GetClientWidth)
int32_t
MonthCalendar_GetClientWidth(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetClientWidth)
    return (int32_t)MySyscall(pMonthCalendar_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetClientWidth)
void
MonthCalendar_SetClientWidth(TMonthCalendar AObj, int32_t AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetClientWidth)
    MySyscall(pMonthCalendar_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetControlState)
TControlState
MonthCalendar_GetControlState(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetControlState)
    return (TControlState)MySyscall(pMonthCalendar_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetControlState)
void
MonthCalendar_SetControlState(TMonthCalendar AObj, TControlState AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetControlState)
    MySyscall(pMonthCalendar_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetControlStyle)
TControlStyle
MonthCalendar_GetControlStyle(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetControlStyle)
    return (TControlStyle)MySyscall(pMonthCalendar_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetControlStyle)
void
MonthCalendar_SetControlStyle(TMonthCalendar AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetControlStyle)
    MySyscall(pMonthCalendar_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetFloating)
BOOL
MonthCalendar_GetFloating(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetFloating)
    return (BOOL)MySyscall(pMonthCalendar_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetParent)
TWinControl
MonthCalendar_GetParent(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetParent)
    return (TWinControl)MySyscall(pMonthCalendar_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetParent)
void
MonthCalendar_SetParent(TMonthCalendar AObj, TWinControl AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetParent)
    MySyscall(pMonthCalendar_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetLeft)
int32_t
MonthCalendar_GetLeft(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetLeft)
    return (int32_t)MySyscall(pMonthCalendar_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetLeft)
void
MonthCalendar_SetLeft(TMonthCalendar AObj, int32_t AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetLeft)
    MySyscall(pMonthCalendar_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetTop)
int32_t
MonthCalendar_GetTop(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetTop)
    return (int32_t)MySyscall(pMonthCalendar_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetTop)
void
MonthCalendar_SetTop(TMonthCalendar AObj, int32_t AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetTop)
    MySyscall(pMonthCalendar_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetWidth)
int32_t
MonthCalendar_GetWidth(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetWidth)
    return (int32_t)MySyscall(pMonthCalendar_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetWidth)
void
MonthCalendar_SetWidth(TMonthCalendar AObj, int32_t AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetWidth)
    MySyscall(pMonthCalendar_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetHeight)
int32_t
MonthCalendar_GetHeight(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetHeight)
    return (int32_t)MySyscall(pMonthCalendar_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetHeight)
void
MonthCalendar_SetHeight(TMonthCalendar AObj, int32_t AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetHeight)
    MySyscall(pMonthCalendar_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetCursor)
TCursor
MonthCalendar_GetCursor(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetCursor)
    return (TCursor)MySyscall(pMonthCalendar_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetCursor)
void
MonthCalendar_SetCursor(TMonthCalendar AObj, TCursor AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetCursor)
    MySyscall(pMonthCalendar_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetHint)
char*
MonthCalendar_GetHint(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetHint)
    return (char*)MySyscall(pMonthCalendar_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetHint)
void
MonthCalendar_SetHint(TMonthCalendar AObj, CChar char* AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetHint)
    MySyscall(pMonthCalendar_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetComponentCount)
int32_t
MonthCalendar_GetComponentCount(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetComponentCount)
    return (int32_t)MySyscall(pMonthCalendar_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetComponentIndex)
int32_t
MonthCalendar_GetComponentIndex(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetComponentIndex)
    return (int32_t)MySyscall(pMonthCalendar_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetComponentIndex)
void
MonthCalendar_SetComponentIndex(TMonthCalendar AObj, int32_t AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetComponentIndex)
    MySyscall(pMonthCalendar_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetOwner)
TComponent
MonthCalendar_GetOwner(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetOwner)
    return (TComponent)MySyscall(pMonthCalendar_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetName)
char*
MonthCalendar_GetName(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetName)
    return (char*)MySyscall(pMonthCalendar_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetName)
void
MonthCalendar_SetName(TMonthCalendar AObj, CChar char* AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetName)
    MySyscall(pMonthCalendar_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetTag)
intptr_t
MonthCalendar_GetTag(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetTag)
    return (intptr_t)MySyscall(pMonthCalendar_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetTag)
void
MonthCalendar_SetTag(TMonthCalendar AObj, intptr_t AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetTag)
    MySyscall(pMonthCalendar_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetAnchorSideLeft)
TAnchorSide
MonthCalendar_GetAnchorSideLeft(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pMonthCalendar_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetAnchorSideLeft)
void
MonthCalendar_SetAnchorSideLeft(TMonthCalendar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetAnchorSideLeft)
    MySyscall(pMonthCalendar_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetAnchorSideTop)
TAnchorSide
MonthCalendar_GetAnchorSideTop(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pMonthCalendar_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetAnchorSideTop)
void
MonthCalendar_SetAnchorSideTop(TMonthCalendar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetAnchorSideTop)
    MySyscall(pMonthCalendar_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetAnchorSideRight)
TAnchorSide
MonthCalendar_GetAnchorSideRight(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pMonthCalendar_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetAnchorSideRight)
void
MonthCalendar_SetAnchorSideRight(TMonthCalendar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetAnchorSideRight)
    MySyscall(pMonthCalendar_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetAnchorSideBottom)
TAnchorSide
MonthCalendar_GetAnchorSideBottom(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pMonthCalendar_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetAnchorSideBottom)
void
MonthCalendar_SetAnchorSideBottom(TMonthCalendar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetAnchorSideBottom)
    MySyscall(pMonthCalendar_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetChildSizing)
TControlChildSizing
MonthCalendar_GetChildSizing(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetChildSizing)
    return (TControlChildSizing)MySyscall(pMonthCalendar_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetChildSizing)
void
MonthCalendar_SetChildSizing(TMonthCalendar AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetChildSizing)
    MySyscall(pMonthCalendar_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetBorderSpacing)
TControlBorderSpacing
MonthCalendar_GetBorderSpacing(TMonthCalendar AObj) {
    GET_FUNC_ADDR(MonthCalendar_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pMonthCalendar_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_SetBorderSpacing)
void
MonthCalendar_SetBorderSpacing(TMonthCalendar AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(MonthCalendar_SetBorderSpacing)
    MySyscall(pMonthCalendar_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetDockClients)
TControl
MonthCalendar_GetDockClients(TMonthCalendar AObj, int32_t Index) {
    GET_FUNC_ADDR(MonthCalendar_GetDockClients)
    return (TControl)MySyscall(pMonthCalendar_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetControls)
TControl
MonthCalendar_GetControls(TMonthCalendar AObj, int32_t Index) {
    GET_FUNC_ADDR(MonthCalendar_GetControls)
    return (TControl)MySyscall(pMonthCalendar_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetComponents)
TComponent
MonthCalendar_GetComponents(TMonthCalendar AObj, int32_t AIndex) {
    GET_FUNC_ADDR(MonthCalendar_GetComponents)
    return (TComponent)MySyscall(pMonthCalendar_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_GetAnchorSide)
TAnchorSide
MonthCalendar_GetAnchorSide(TMonthCalendar AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(MonthCalendar_GetAnchorSide)
    return (TAnchorSide)MySyscall(pMonthCalendar_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MonthCalendar_StaticClassType)
TClass
MonthCalendar_StaticClassType() {
    GET_FUNC_ADDR(MonthCalendar_StaticClassType)
    return (TClass)MySyscall(pMonthCalendar_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TListView-------------------

DEFINE_FUNC_PTR(ListView_Create)
TListView
ListView_Create(TComponent AOwner) {
    GET_FUNC_ADDR(ListView_Create)
    return (TListView)MySyscall(pListView_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_Free)
void
ListView_Free(TListView AObj) {
    GET_FUNC_ADDR(ListView_Free)
    MySyscall(pListView_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_AddItem)
void
ListView_AddItem(TListView AObj, CChar char* Item, TObject AObject) {
    GET_FUNC_ADDR(ListView_AddItem)
    MySyscall(pListView_AddItem, 3, AObj, Item, AObject ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_AlphaSort)
BOOL
ListView_AlphaSort(TListView AObj) {
    GET_FUNC_ADDR(ListView_AlphaSort)
    return (BOOL)MySyscall(pListView_AlphaSort, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_Clear)
void
ListView_Clear(TListView AObj) {
    GET_FUNC_ADDR(ListView_Clear)
    MySyscall(pListView_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_ClearSelection)
void
ListView_ClearSelection(TListView AObj) {
    GET_FUNC_ADDR(ListView_ClearSelection)
    MySyscall(pListView_ClearSelection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_DeleteSelected)
void
ListView_DeleteSelected(TListView AObj) {
    GET_FUNC_ADDR(ListView_DeleteSelected)
    MySyscall(pListView_DeleteSelected, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetHitTestInfoAt)
THitTests
ListView_GetHitTestInfoAt(TListView AObj, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(ListView_GetHitTestInfoAt)
    return (THitTests)MySyscall(pListView_GetHitTestInfoAt, 3, AObj, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetItemAt)
TListItem
ListView_GetItemAt(TListView AObj, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(ListView_GetItemAt)
    return (TListItem)MySyscall(pListView_GetItemAt, 3, AObj, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetNearestItem)
TListItem
ListView_GetNearestItem(TListView AObj, TPoint Point, TSearchDirection Direction) {
    GET_FUNC_ADDR(ListView_GetNearestItem)
    return (TListItem)MySyscall(pListView_GetNearestItem, 3, AObj, &Point, Direction ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetNextItem)
TListItem
ListView_GetNextItem(TListView AObj, TListItem StartItem, TSearchDirection Direction, TListItemStates States) {
    GET_FUNC_ADDR(ListView_GetNextItem)
    return (TListItem)MySyscall(pListView_GetNextItem, 4, AObj, StartItem, Direction, States ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_IsEditing)
BOOL
ListView_IsEditing(TListView AObj) {
    GET_FUNC_ADDR(ListView_IsEditing)
    return (BOOL)MySyscall(pListView_IsEditing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SelectAll)
void
ListView_SelectAll(TListView AObj) {
    GET_FUNC_ADDR(ListView_SelectAll)
    MySyscall(pListView_SelectAll, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_CustomSort)
BOOL
ListView_CustomSort(TListView AObj, PFNLVCOMPARE SortProc, intptr_t lParam) {
    GET_FUNC_ADDR(ListView_CustomSort)
    return (BOOL)MySyscall(pListView_CustomSort, 3, AObj, SortProc, lParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_CanFocus)
BOOL
ListView_CanFocus(TListView AObj) {
    GET_FUNC_ADDR(ListView_CanFocus)
    return (BOOL)MySyscall(pListView_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_ContainsControl)
BOOL
ListView_ContainsControl(TListView AObj, TControl Control) {
    GET_FUNC_ADDR(ListView_ContainsControl)
    return (BOOL)MySyscall(pListView_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_ControlAtPos)
TControl
ListView_ControlAtPos(TListView AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(ListView_ControlAtPos)
    return (TControl)MySyscall(pListView_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_DisableAlign)
void
ListView_DisableAlign(TListView AObj) {
    GET_FUNC_ADDR(ListView_DisableAlign)
    MySyscall(pListView_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_EnableAlign)
void
ListView_EnableAlign(TListView AObj) {
    GET_FUNC_ADDR(ListView_EnableAlign)
    MySyscall(pListView_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_FindChildControl)
TControl
ListView_FindChildControl(TListView AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(ListView_FindChildControl)
    return (TControl)MySyscall(pListView_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_FlipChildren)
void
ListView_FlipChildren(TListView AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(ListView_FlipChildren)
    MySyscall(pListView_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_Focused)
BOOL
ListView_Focused(TListView AObj) {
    GET_FUNC_ADDR(ListView_Focused)
    return (BOOL)MySyscall(pListView_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_HandleAllocated)
BOOL
ListView_HandleAllocated(TListView AObj) {
    GET_FUNC_ADDR(ListView_HandleAllocated)
    return (BOOL)MySyscall(pListView_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_InsertControl)
void
ListView_InsertControl(TListView AObj, TControl AControl) {
    GET_FUNC_ADDR(ListView_InsertControl)
    MySyscall(pListView_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_Invalidate)
void
ListView_Invalidate(TListView AObj) {
    GET_FUNC_ADDR(ListView_Invalidate)
    MySyscall(pListView_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_PaintTo)
void
ListView_PaintTo(TListView AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(ListView_PaintTo)
    MySyscall(pListView_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_RemoveControl)
void
ListView_RemoveControl(TListView AObj, TControl AControl) {
    GET_FUNC_ADDR(ListView_RemoveControl)
    MySyscall(pListView_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_Realign)
void
ListView_Realign(TListView AObj) {
    GET_FUNC_ADDR(ListView_Realign)
    MySyscall(pListView_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_Repaint)
void
ListView_Repaint(TListView AObj) {
    GET_FUNC_ADDR(ListView_Repaint)
    MySyscall(pListView_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_ScaleBy)
void
ListView_ScaleBy(TListView AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(ListView_ScaleBy)
    MySyscall(pListView_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_ScrollBy)
void
ListView_ScrollBy(TListView AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(ListView_ScrollBy)
    MySyscall(pListView_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetBounds)
void
ListView_SetBounds(TListView AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(ListView_SetBounds)
    MySyscall(pListView_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetFocus)
void
ListView_SetFocus(TListView AObj) {
    GET_FUNC_ADDR(ListView_SetFocus)
    MySyscall(pListView_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_Update)
void
ListView_Update(TListView AObj) {
    GET_FUNC_ADDR(ListView_Update)
    MySyscall(pListView_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_BringToFront)
void
ListView_BringToFront(TListView AObj) {
    GET_FUNC_ADDR(ListView_BringToFront)
    MySyscall(pListView_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_ClientToScreen)
TPoint
ListView_ClientToScreen(TListView AObj, TPoint Point) {
    GET_FUNC_ADDR(ListView_ClientToScreen)
    TPoint result;
    MySyscall(pListView_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ListView_ClientToParent)
TPoint
ListView_ClientToParent(TListView AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ListView_ClientToParent)
    TPoint result;
    MySyscall(pListView_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ListView_Dragging)
BOOL
ListView_Dragging(TListView AObj) {
    GET_FUNC_ADDR(ListView_Dragging)
    return (BOOL)MySyscall(pListView_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_HasParent)
BOOL
ListView_HasParent(TListView AObj) {
    GET_FUNC_ADDR(ListView_HasParent)
    return (BOOL)MySyscall(pListView_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_Hide)
void
ListView_Hide(TListView AObj) {
    GET_FUNC_ADDR(ListView_Hide)
    MySyscall(pListView_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_Perform)
intptr_t
ListView_Perform(TListView AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(ListView_Perform)
    return (intptr_t)MySyscall(pListView_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_Refresh)
void
ListView_Refresh(TListView AObj) {
    GET_FUNC_ADDR(ListView_Refresh)
    MySyscall(pListView_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_ScreenToClient)
TPoint
ListView_ScreenToClient(TListView AObj, TPoint Point) {
    GET_FUNC_ADDR(ListView_ScreenToClient)
    TPoint result;
    MySyscall(pListView_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ListView_ParentToClient)
TPoint
ListView_ParentToClient(TListView AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ListView_ParentToClient)
    TPoint result;
    MySyscall(pListView_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ListView_SendToBack)
void
ListView_SendToBack(TListView AObj) {
    GET_FUNC_ADDR(ListView_SendToBack)
    MySyscall(pListView_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_Show)
void
ListView_Show(TListView AObj) {
    GET_FUNC_ADDR(ListView_Show)
    MySyscall(pListView_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetTextBuf)
int32_t
ListView_GetTextBuf(TListView AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(ListView_GetTextBuf)
    return (int32_t)MySyscall(pListView_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetTextLen)
int32_t
ListView_GetTextLen(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetTextLen)
    return (int32_t)MySyscall(pListView_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetTextBuf)
void
ListView_SetTextBuf(TListView AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(ListView_SetTextBuf)
    MySyscall(pListView_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_FindComponent)
TComponent
ListView_FindComponent(TListView AObj, CChar char* AName) {
    GET_FUNC_ADDR(ListView_FindComponent)
    return (TComponent)MySyscall(pListView_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetNamePath)
char*
ListView_GetNamePath(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetNamePath)
    return (char*)MySyscall(pListView_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_Assign)
void
ListView_Assign(TListView AObj, TObject Source) {
    GET_FUNC_ADDR(ListView_Assign)
    MySyscall(pListView_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_ClassType)
TClass
ListView_ClassType(TListView AObj) {
    GET_FUNC_ADDR(ListView_ClassType)
    return (TClass)MySyscall(pListView_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_ClassName)
char*
ListView_ClassName(TListView AObj) {
    GET_FUNC_ADDR(ListView_ClassName)
    return (char*)MySyscall(pListView_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_InstanceSize)
int32_t
ListView_InstanceSize(TListView AObj) {
    GET_FUNC_ADDR(ListView_InstanceSize)
    return (int32_t)MySyscall(pListView_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_InheritsFrom)
BOOL
ListView_InheritsFrom(TListView AObj, TClass AClass) {
    GET_FUNC_ADDR(ListView_InheritsFrom)
    return (BOOL)MySyscall(pListView_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_Equals)
BOOL
ListView_Equals(TListView AObj, TObject Obj) {
    GET_FUNC_ADDR(ListView_Equals)
    return (BOOL)MySyscall(pListView_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetHashCode)
int32_t
ListView_GetHashCode(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetHashCode)
    return (int32_t)MySyscall(pListView_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_ToString)
char*
ListView_ToString(TListView AObj) {
    GET_FUNC_ADDR(ListView_ToString)
    return (char*)MySyscall(pListView_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_AnchorToNeighbour)
void
ListView_AnchorToNeighbour(TListView AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ListView_AnchorToNeighbour)
    MySyscall(pListView_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_AnchorParallel)
void
ListView_AnchorParallel(TListView AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ListView_AnchorParallel)
    MySyscall(pListView_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_AnchorHorizontalCenterTo)
void
ListView_AnchorHorizontalCenterTo(TListView AObj, TControl ASibling) {
    GET_FUNC_ADDR(ListView_AnchorHorizontalCenterTo)
    MySyscall(pListView_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_AnchorVerticalCenterTo)
void
ListView_AnchorVerticalCenterTo(TListView AObj, TControl ASibling) {
    GET_FUNC_ADDR(ListView_AnchorVerticalCenterTo)
    MySyscall(pListView_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_AnchorSame)
void
ListView_AnchorSame(TListView AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(ListView_AnchorSame)
    MySyscall(pListView_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_AnchorAsAlign)
void
ListView_AnchorAsAlign(TListView AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(ListView_AnchorAsAlign)
    MySyscall(pListView_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_AnchorClient)
void
ListView_AnchorClient(TListView AObj, int32_t ASpace) {
    GET_FUNC_ADDR(ListView_AnchorClient)
    MySyscall(pListView_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_ScaleDesignToForm)
int32_t
ListView_ScaleDesignToForm(TListView AObj, int32_t ASize) {
    GET_FUNC_ADDR(ListView_ScaleDesignToForm)
    return (int32_t)MySyscall(pListView_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_ScaleFormToDesign)
int32_t
ListView_ScaleFormToDesign(TListView AObj, int32_t ASize) {
    GET_FUNC_ADDR(ListView_ScaleFormToDesign)
    return (int32_t)MySyscall(pListView_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_Scale96ToForm)
int32_t
ListView_Scale96ToForm(TListView AObj, int32_t ASize) {
    GET_FUNC_ADDR(ListView_Scale96ToForm)
    return (int32_t)MySyscall(pListView_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_ScaleFormTo96)
int32_t
ListView_ScaleFormTo96(TListView AObj, int32_t ASize) {
    GET_FUNC_ADDR(ListView_ScaleFormTo96)
    return (int32_t)MySyscall(pListView_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_Scale96ToFont)
int32_t
ListView_Scale96ToFont(TListView AObj, int32_t ASize) {
    GET_FUNC_ADDR(ListView_Scale96ToFont)
    return (int32_t)MySyscall(pListView_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_ScaleFontTo96)
int32_t
ListView_ScaleFontTo96(TListView AObj, int32_t ASize) {
    GET_FUNC_ADDR(ListView_ScaleFontTo96)
    return (int32_t)MySyscall(pListView_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_ScaleScreenToFont)
int32_t
ListView_ScaleScreenToFont(TListView AObj, int32_t ASize) {
    GET_FUNC_ADDR(ListView_ScaleScreenToFont)
    return (int32_t)MySyscall(pListView_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_ScaleFontToScreen)
int32_t
ListView_ScaleFontToScreen(TListView AObj, int32_t ASize) {
    GET_FUNC_ADDR(ListView_ScaleFontToScreen)
    return (int32_t)MySyscall(pListView_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_Scale96ToScreen)
int32_t
ListView_Scale96ToScreen(TListView AObj, int32_t ASize) {
    GET_FUNC_ADDR(ListView_Scale96ToScreen)
    return (int32_t)MySyscall(pListView_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_ScaleScreenTo96)
int32_t
ListView_ScaleScreenTo96(TListView AObj, int32_t ASize) {
    GET_FUNC_ADDR(ListView_ScaleScreenTo96)
    return (int32_t)MySyscall(pListView_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_AutoAdjustLayout)
void
ListView_AutoAdjustLayout(TListView AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(ListView_AutoAdjustLayout)
    MySyscall(pListView_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_FixDesignFontsPPI)
void
ListView_FixDesignFontsPPI(TListView AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(ListView_FixDesignFontsPPI)
    MySyscall(pListView_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_ScaleFontsPPI)
void
ListView_ScaleFontsPPI(TListView AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(ListView_ScaleFontsPPI)
    MySyscall(pListView_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetAutoSort)
BOOL
ListView_GetAutoSort(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetAutoSort)
    return (BOOL)MySyscall(pListView_GetAutoSort, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetAutoSort)
void
ListView_SetAutoSort(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetAutoSort)
    MySyscall(pListView_SetAutoSort, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetAutoSortIndicator)
BOOL
ListView_GetAutoSortIndicator(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetAutoSortIndicator)
    return (BOOL)MySyscall(pListView_GetAutoSortIndicator, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetAutoSortIndicator)
void
ListView_SetAutoSortIndicator(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetAutoSortIndicator)
    MySyscall(pListView_SetAutoSortIndicator, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetAutoWidthLastColumn)
BOOL
ListView_GetAutoWidthLastColumn(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetAutoWidthLastColumn)
    return (BOOL)MySyscall(pListView_GetAutoWidthLastColumn, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetAutoWidthLastColumn)
void
ListView_SetAutoWidthLastColumn(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetAutoWidthLastColumn)
    MySyscall(pListView_SetAutoWidthLastColumn, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetSmallImagesWidth)
int32_t
ListView_GetSmallImagesWidth(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetSmallImagesWidth)
    return (int32_t)MySyscall(pListView_GetSmallImagesWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetSmallImagesWidth)
void
ListView_SetSmallImagesWidth(TListView AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListView_SetSmallImagesWidth)
    MySyscall(pListView_SetSmallImagesWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetSortColumn)
int32_t
ListView_GetSortColumn(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetSortColumn)
    return (int32_t)MySyscall(pListView_GetSortColumn, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetSortColumn)
void
ListView_SetSortColumn(TListView AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListView_SetSortColumn)
    MySyscall(pListView_SetSortColumn, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetSortDirection)
TSortDirection
ListView_GetSortDirection(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetSortDirection)
    return (TSortDirection)MySyscall(pListView_GetSortDirection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetSortDirection)
void
ListView_SetSortDirection(TListView AObj, TSortDirection AValue) {
    GET_FUNC_ADDR(ListView_SetSortDirection)
    MySyscall(pListView_SetSortDirection, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetLargeImagesWidth)
int32_t
ListView_GetLargeImagesWidth(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetLargeImagesWidth)
    return (int32_t)MySyscall(pListView_GetLargeImagesWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetLargeImagesWidth)
void
ListView_SetLargeImagesWidth(TListView AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListView_SetLargeImagesWidth)
    MySyscall(pListView_SetLargeImagesWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetStateImagesWidth)
int32_t
ListView_GetStateImagesWidth(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetStateImagesWidth)
    return (int32_t)MySyscall(pListView_GetStateImagesWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetStateImagesWidth)
void
ListView_SetStateImagesWidth(TListView AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListView_SetStateImagesWidth)
    MySyscall(pListView_SetStateImagesWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetToolTips)
BOOL
ListView_GetToolTips(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetToolTips)
    return (BOOL)MySyscall(pListView_GetToolTips, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetToolTips)
void
ListView_SetToolTips(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetToolTips)
    MySyscall(pListView_SetToolTips, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetScrollBars)
TScrollStyle
ListView_GetScrollBars(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetScrollBars)
    return (TScrollStyle)MySyscall(pListView_GetScrollBars, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetScrollBars)
void
ListView_SetScrollBars(TListView AObj, TScrollStyle AValue) {
    GET_FUNC_ADDR(ListView_SetScrollBars)
    MySyscall(pListView_SetScrollBars, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetColumnCount)
int32_t
ListView_GetColumnCount(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetColumnCount)
    return (int32_t)MySyscall(pListView_GetColumnCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetAction)
TAction
ListView_GetAction(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetAction)
    return (TAction)MySyscall(pListView_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetAction)
void
ListView_SetAction(TListView AObj, TAction AValue) {
    GET_FUNC_ADDR(ListView_SetAction)
    MySyscall(pListView_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetAlign)
TAlign
ListView_GetAlign(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetAlign)
    return (TAlign)MySyscall(pListView_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetAlign)
void
ListView_SetAlign(TListView AObj, TAlign AValue) {
    GET_FUNC_ADDR(ListView_SetAlign)
    MySyscall(pListView_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetAllocBy)
int32_t
ListView_GetAllocBy(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetAllocBy)
    return (int32_t)MySyscall(pListView_GetAllocBy, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetAllocBy)
void
ListView_SetAllocBy(TListView AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListView_SetAllocBy)
    MySyscall(pListView_SetAllocBy, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetAnchors)
TAnchors
ListView_GetAnchors(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetAnchors)
    return (TAnchors)MySyscall(pListView_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetAnchors)
void
ListView_SetAnchors(TListView AObj, TAnchors AValue) {
    GET_FUNC_ADDR(ListView_SetAnchors)
    MySyscall(pListView_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetBiDiMode)
TBiDiMode
ListView_GetBiDiMode(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetBiDiMode)
    return (TBiDiMode)MySyscall(pListView_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetBiDiMode)
void
ListView_SetBiDiMode(TListView AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(ListView_SetBiDiMode)
    MySyscall(pListView_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetBorderStyle)
TBorderStyle
ListView_GetBorderStyle(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetBorderStyle)
    return (TBorderStyle)MySyscall(pListView_GetBorderStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetBorderStyle)
void
ListView_SetBorderStyle(TListView AObj, TBorderStyle AValue) {
    GET_FUNC_ADDR(ListView_SetBorderStyle)
    MySyscall(pListView_SetBorderStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetBorderWidth)
int32_t
ListView_GetBorderWidth(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetBorderWidth)
    return (int32_t)MySyscall(pListView_GetBorderWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetBorderWidth)
void
ListView_SetBorderWidth(TListView AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListView_SetBorderWidth)
    MySyscall(pListView_SetBorderWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetCheckboxes)
BOOL
ListView_GetCheckboxes(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetCheckboxes)
    return (BOOL)MySyscall(pListView_GetCheckboxes, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetCheckboxes)
void
ListView_SetCheckboxes(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetCheckboxes)
    MySyscall(pListView_SetCheckboxes, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetColor)
TColor
ListView_GetColor(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetColor)
    return (TColor)MySyscall(pListView_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetColor)
void
ListView_SetColor(TListView AObj, TColor AValue) {
    GET_FUNC_ADDR(ListView_SetColor)
    MySyscall(pListView_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetColumns)
TListColumns
ListView_GetColumns(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetColumns)
    return (TListColumns)MySyscall(pListView_GetColumns, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetColumns)
void
ListView_SetColumns(TListView AObj, TListColumns AValue) {
    GET_FUNC_ADDR(ListView_SetColumns)
    MySyscall(pListView_SetColumns, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetColumnClick)
BOOL
ListView_GetColumnClick(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetColumnClick)
    return (BOOL)MySyscall(pListView_GetColumnClick, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetColumnClick)
void
ListView_SetColumnClick(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetColumnClick)
    MySyscall(pListView_SetColumnClick, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetConstraints)
TSizeConstraints
ListView_GetConstraints(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetConstraints)
    return (TSizeConstraints)MySyscall(pListView_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetConstraints)
void
ListView_SetConstraints(TListView AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(ListView_SetConstraints)
    MySyscall(pListView_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetDoubleBuffered)
BOOL
ListView_GetDoubleBuffered(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetDoubleBuffered)
    return (BOOL)MySyscall(pListView_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetDoubleBuffered)
void
ListView_SetDoubleBuffered(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetDoubleBuffered)
    MySyscall(pListView_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetDragCursor)
TCursor
ListView_GetDragCursor(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetDragCursor)
    return (TCursor)MySyscall(pListView_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetDragCursor)
void
ListView_SetDragCursor(TListView AObj, TCursor AValue) {
    GET_FUNC_ADDR(ListView_SetDragCursor)
    MySyscall(pListView_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetDragKind)
TDragKind
ListView_GetDragKind(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetDragKind)
    return (TDragKind)MySyscall(pListView_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetDragKind)
void
ListView_SetDragKind(TListView AObj, TDragKind AValue) {
    GET_FUNC_ADDR(ListView_SetDragKind)
    MySyscall(pListView_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetDragMode)
TDragMode
ListView_GetDragMode(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetDragMode)
    return (TDragMode)MySyscall(pListView_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetDragMode)
void
ListView_SetDragMode(TListView AObj, TDragMode AValue) {
    GET_FUNC_ADDR(ListView_SetDragMode)
    MySyscall(pListView_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetEnabled)
BOOL
ListView_GetEnabled(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetEnabled)
    return (BOOL)MySyscall(pListView_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetEnabled)
void
ListView_SetEnabled(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetEnabled)
    MySyscall(pListView_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetFont)
TFont
ListView_GetFont(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetFont)
    return (TFont)MySyscall(pListView_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetFont)
void
ListView_SetFont(TListView AObj, TFont AValue) {
    GET_FUNC_ADDR(ListView_SetFont)
    MySyscall(pListView_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetFlatScrollBars)
BOOL
ListView_GetFlatScrollBars(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetFlatScrollBars)
    return (BOOL)MySyscall(pListView_GetFlatScrollBars, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetFlatScrollBars)
void
ListView_SetFlatScrollBars(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetFlatScrollBars)
    MySyscall(pListView_SetFlatScrollBars, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetFullDrag)
BOOL
ListView_GetFullDrag(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetFullDrag)
    return (BOOL)MySyscall(pListView_GetFullDrag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetFullDrag)
void
ListView_SetFullDrag(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetFullDrag)
    MySyscall(pListView_SetFullDrag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetGridLines)
BOOL
ListView_GetGridLines(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetGridLines)
    return (BOOL)MySyscall(pListView_GetGridLines, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetGridLines)
void
ListView_SetGridLines(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetGridLines)
    MySyscall(pListView_SetGridLines, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetHideSelection)
BOOL
ListView_GetHideSelection(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetHideSelection)
    return (BOOL)MySyscall(pListView_GetHideSelection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetHideSelection)
void
ListView_SetHideSelection(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetHideSelection)
    MySyscall(pListView_SetHideSelection, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetHotTrack)
BOOL
ListView_GetHotTrack(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetHotTrack)
    return (BOOL)MySyscall(pListView_GetHotTrack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetHotTrack)
void
ListView_SetHotTrack(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetHotTrack)
    MySyscall(pListView_SetHotTrack, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetIconOptions)
TIconOptions
ListView_GetIconOptions(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetIconOptions)
    return (TIconOptions)MySyscall(pListView_GetIconOptions, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetIconOptions)
void
ListView_SetIconOptions(TListView AObj, TIconOptions AValue) {
    GET_FUNC_ADDR(ListView_SetIconOptions)
    MySyscall(pListView_SetIconOptions, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetItems)
TListItems
ListView_GetItems(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetItems)
    return (TListItems)MySyscall(pListView_GetItems, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetItems)
void
ListView_SetItems(TListView AObj, TListItems AValue) {
    GET_FUNC_ADDR(ListView_SetItems)
    MySyscall(pListView_SetItems, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetLargeImages)
TImageList
ListView_GetLargeImages(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetLargeImages)
    return (TImageList)MySyscall(pListView_GetLargeImages, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetLargeImages)
void
ListView_SetLargeImages(TListView AObj, TImageList AValue) {
    GET_FUNC_ADDR(ListView_SetLargeImages)
    MySyscall(pListView_SetLargeImages, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetMultiSelect)
BOOL
ListView_GetMultiSelect(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetMultiSelect)
    return (BOOL)MySyscall(pListView_GetMultiSelect, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetMultiSelect)
void
ListView_SetMultiSelect(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetMultiSelect)
    MySyscall(pListView_SetMultiSelect, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetOwnerData)
BOOL
ListView_GetOwnerData(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetOwnerData)
    return (BOOL)MySyscall(pListView_GetOwnerData, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOwnerData)
void
ListView_SetOwnerData(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetOwnerData)
    MySyscall(pListView_SetOwnerData, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetOwnerDraw)
BOOL
ListView_GetOwnerDraw(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetOwnerDraw)
    return (BOOL)MySyscall(pListView_GetOwnerDraw, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOwnerDraw)
void
ListView_SetOwnerDraw(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetOwnerDraw)
    MySyscall(pListView_SetOwnerDraw, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetReadOnly)
BOOL
ListView_GetReadOnly(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetReadOnly)
    return (BOOL)MySyscall(pListView_GetReadOnly, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetReadOnly)
void
ListView_SetReadOnly(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetReadOnly)
    MySyscall(pListView_SetReadOnly, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetRowSelect)
BOOL
ListView_GetRowSelect(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetRowSelect)
    return (BOOL)MySyscall(pListView_GetRowSelect, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetRowSelect)
void
ListView_SetRowSelect(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetRowSelect)
    MySyscall(pListView_SetRowSelect, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetParentColor)
BOOL
ListView_GetParentColor(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetParentColor)
    return (BOOL)MySyscall(pListView_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetParentColor)
void
ListView_SetParentColor(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetParentColor)
    MySyscall(pListView_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetParentDoubleBuffered)
BOOL
ListView_GetParentDoubleBuffered(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pListView_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetParentDoubleBuffered)
void
ListView_SetParentDoubleBuffered(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetParentDoubleBuffered)
    MySyscall(pListView_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetParentFont)
BOOL
ListView_GetParentFont(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetParentFont)
    return (BOOL)MySyscall(pListView_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetParentFont)
void
ListView_SetParentFont(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetParentFont)
    MySyscall(pListView_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetParentShowHint)
BOOL
ListView_GetParentShowHint(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetParentShowHint)
    return (BOOL)MySyscall(pListView_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetParentShowHint)
void
ListView_SetParentShowHint(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetParentShowHint)
    MySyscall(pListView_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetPopupMenu)
TPopupMenu
ListView_GetPopupMenu(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetPopupMenu)
    return (TPopupMenu)MySyscall(pListView_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetPopupMenu)
void
ListView_SetPopupMenu(TListView AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(ListView_SetPopupMenu)
    MySyscall(pListView_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetShowColumnHeaders)
BOOL
ListView_GetShowColumnHeaders(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetShowColumnHeaders)
    return (BOOL)MySyscall(pListView_GetShowColumnHeaders, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetShowColumnHeaders)
void
ListView_SetShowColumnHeaders(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetShowColumnHeaders)
    MySyscall(pListView_SetShowColumnHeaders, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetShowHint)
BOOL
ListView_GetShowHint(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetShowHint)
    return (BOOL)MySyscall(pListView_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetShowHint)
void
ListView_SetShowHint(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetShowHint)
    MySyscall(pListView_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetSmallImages)
TImageList
ListView_GetSmallImages(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetSmallImages)
    return (TImageList)MySyscall(pListView_GetSmallImages, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetSmallImages)
void
ListView_SetSmallImages(TListView AObj, TImageList AValue) {
    GET_FUNC_ADDR(ListView_SetSmallImages)
    MySyscall(pListView_SetSmallImages, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetSortType)
TSortType
ListView_GetSortType(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetSortType)
    return (TSortType)MySyscall(pListView_GetSortType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetSortType)
void
ListView_SetSortType(TListView AObj, TSortType AValue) {
    GET_FUNC_ADDR(ListView_SetSortType)
    MySyscall(pListView_SetSortType, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetStateImages)
TImageList
ListView_GetStateImages(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetStateImages)
    return (TImageList)MySyscall(pListView_GetStateImages, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetStateImages)
void
ListView_SetStateImages(TListView AObj, TImageList AValue) {
    GET_FUNC_ADDR(ListView_SetStateImages)
    MySyscall(pListView_SetStateImages, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetTabOrder)
TTabOrder
ListView_GetTabOrder(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetTabOrder)
    return (TTabOrder)MySyscall(pListView_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetTabOrder)
void
ListView_SetTabOrder(TListView AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(ListView_SetTabOrder)
    MySyscall(pListView_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetTabStop)
BOOL
ListView_GetTabStop(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetTabStop)
    return (BOOL)MySyscall(pListView_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetTabStop)
void
ListView_SetTabStop(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetTabStop)
    MySyscall(pListView_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetViewStyle)
TViewStyle
ListView_GetViewStyle(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetViewStyle)
    return (TViewStyle)MySyscall(pListView_GetViewStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetViewStyle)
void
ListView_SetViewStyle(TListView AObj, TViewStyle AValue) {
    GET_FUNC_ADDR(ListView_SetViewStyle)
    MySyscall(pListView_SetViewStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetVisible)
BOOL
ListView_GetVisible(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetVisible)
    return (BOOL)MySyscall(pListView_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetVisible)
void
ListView_SetVisible(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetVisible)
    MySyscall(pListView_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnAdvancedCustomDraw)
void
ListView_SetOnAdvancedCustomDraw(TListView AObj, TLVAdvancedCustomDrawEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnAdvancedCustomDraw)
    MySyscall(pListView_SetOnAdvancedCustomDraw, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnAdvancedCustomDrawItem)
void
ListView_SetOnAdvancedCustomDrawItem(TListView AObj, TLVAdvancedCustomDrawItemEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnAdvancedCustomDrawItem)
    MySyscall(pListView_SetOnAdvancedCustomDrawItem, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnAdvancedCustomDrawSubItem)
void
ListView_SetOnAdvancedCustomDrawSubItem(TListView AObj, TLVAdvancedCustomDrawSubItemEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnAdvancedCustomDrawSubItem)
    MySyscall(pListView_SetOnAdvancedCustomDrawSubItem, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnChange)
void
ListView_SetOnChange(TListView AObj, TLVChangeEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnChange)
    MySyscall(pListView_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnClick)
void
ListView_SetOnClick(TListView AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnClick)
    MySyscall(pListView_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnColumnClick)
void
ListView_SetOnColumnClick(TListView AObj, TLVColumnClickEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnColumnClick)
    MySyscall(pListView_SetOnColumnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnCompare)
void
ListView_SetOnCompare(TListView AObj, TLVCompareEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnCompare)
    MySyscall(pListView_SetOnCompare, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnContextPopup)
void
ListView_SetOnContextPopup(TListView AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnContextPopup)
    MySyscall(pListView_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnCustomDraw)
void
ListView_SetOnCustomDraw(TListView AObj, TLVCustomDrawEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnCustomDraw)
    MySyscall(pListView_SetOnCustomDraw, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnCustomDrawItem)
void
ListView_SetOnCustomDrawItem(TListView AObj, TLVCustomDrawItemEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnCustomDrawItem)
    MySyscall(pListView_SetOnCustomDrawItem, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnCustomDrawSubItem)
void
ListView_SetOnCustomDrawSubItem(TListView AObj, TLVCustomDrawSubItemEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnCustomDrawSubItem)
    MySyscall(pListView_SetOnCustomDrawSubItem, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnData)
void
ListView_SetOnData(TListView AObj, TLVDataEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnData)
    MySyscall(pListView_SetOnData, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnDataFind)
void
ListView_SetOnDataFind(TListView AObj, TLVDataFindEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnDataFind)
    MySyscall(pListView_SetOnDataFind, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnDataHint)
void
ListView_SetOnDataHint(TListView AObj, TLVDataHintEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnDataHint)
    MySyscall(pListView_SetOnDataHint, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnDblClick)
void
ListView_SetOnDblClick(TListView AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnDblClick)
    MySyscall(pListView_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnDeletion)
void
ListView_SetOnDeletion(TListView AObj, TLVDeletedEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnDeletion)
    MySyscall(pListView_SetOnDeletion, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnDrawItem)
void
ListView_SetOnDrawItem(TListView AObj, TLVDrawItemEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnDrawItem)
    MySyscall(pListView_SetOnDrawItem, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnEdited)
void
ListView_SetOnEdited(TListView AObj, TLVEditedEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnEdited)
    MySyscall(pListView_SetOnEdited, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnEditing)
void
ListView_SetOnEditing(TListView AObj, TLVEditingEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnEditing)
    MySyscall(pListView_SetOnEditing, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnEndDock)
void
ListView_SetOnEndDock(TListView AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnEndDock)
    MySyscall(pListView_SetOnEndDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnEndDrag)
void
ListView_SetOnEndDrag(TListView AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnEndDrag)
    MySyscall(pListView_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnEnter)
void
ListView_SetOnEnter(TListView AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnEnter)
    MySyscall(pListView_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnExit)
void
ListView_SetOnExit(TListView AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnExit)
    MySyscall(pListView_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnDragDrop)
void
ListView_SetOnDragDrop(TListView AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnDragDrop)
    MySyscall(pListView_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnDragOver)
void
ListView_SetOnDragOver(TListView AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnDragOver)
    MySyscall(pListView_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnInsert)
void
ListView_SetOnInsert(TListView AObj, TLVDeletedEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnInsert)
    MySyscall(pListView_SetOnInsert, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnKeyDown)
void
ListView_SetOnKeyDown(TListView AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnKeyDown)
    MySyscall(pListView_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnKeyPress)
void
ListView_SetOnKeyPress(TListView AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnKeyPress)
    MySyscall(pListView_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnKeyUp)
void
ListView_SetOnKeyUp(TListView AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnKeyUp)
    MySyscall(pListView_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnMouseDown)
void
ListView_SetOnMouseDown(TListView AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnMouseDown)
    MySyscall(pListView_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnMouseEnter)
void
ListView_SetOnMouseEnter(TListView AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnMouseEnter)
    MySyscall(pListView_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnMouseLeave)
void
ListView_SetOnMouseLeave(TListView AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnMouseLeave)
    MySyscall(pListView_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnMouseMove)
void
ListView_SetOnMouseMove(TListView AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnMouseMove)
    MySyscall(pListView_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnMouseUp)
void
ListView_SetOnMouseUp(TListView AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnMouseUp)
    MySyscall(pListView_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnResize)
void
ListView_SetOnResize(TListView AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnResize)
    MySyscall(pListView_SetOnResize, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnSelectItem)
void
ListView_SetOnSelectItem(TListView AObj, TLVSelectItemEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnSelectItem)
    MySyscall(pListView_SetOnSelectItem, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnItemChecked)
void
ListView_SetOnItemChecked(TListView AObj, TLVCheckedItemEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnItemChecked)
    MySyscall(pListView_SetOnItemChecked, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetOnStartDock)
void
ListView_SetOnStartDock(TListView AObj, TStartDockEvent AEventData) {
    GET_FUNC_ADDR(ListView_SetOnStartDock)
    MySyscall(pListView_SetOnStartDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetCanvas)
TCanvas
ListView_GetCanvas(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetCanvas)
    return (TCanvas)MySyscall(pListView_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetDropTarget)
TListItem
ListView_GetDropTarget(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetDropTarget)
    return (TListItem)MySyscall(pListView_GetDropTarget, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetDropTarget)
void
ListView_SetDropTarget(TListView AObj, TListItem AValue) {
    GET_FUNC_ADDR(ListView_SetDropTarget)
    MySyscall(pListView_SetDropTarget, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetItemFocused)
TListItem
ListView_GetItemFocused(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetItemFocused)
    return (TListItem)MySyscall(pListView_GetItemFocused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetItemFocused)
void
ListView_SetItemFocused(TListView AObj, TListItem AValue) {
    GET_FUNC_ADDR(ListView_SetItemFocused)
    MySyscall(pListView_SetItemFocused, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetSelCount)
int32_t
ListView_GetSelCount(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetSelCount)
    return (int32_t)MySyscall(pListView_GetSelCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetSelected)
TListItem
ListView_GetSelected(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetSelected)
    return (TListItem)MySyscall(pListView_GetSelected, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetSelected)
void
ListView_SetSelected(TListView AObj, TListItem AValue) {
    GET_FUNC_ADDR(ListView_SetSelected)
    MySyscall(pListView_SetSelected, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetTopItem)
TListItem
ListView_GetTopItem(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetTopItem)
    return (TListItem)MySyscall(pListView_GetTopItem, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetVisibleRowCount)
int32_t
ListView_GetVisibleRowCount(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetVisibleRowCount)
    return (int32_t)MySyscall(pListView_GetVisibleRowCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetItemIndex)
int32_t
ListView_GetItemIndex(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetItemIndex)
    return (int32_t)MySyscall(pListView_GetItemIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetItemIndex)
void
ListView_SetItemIndex(TListView AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListView_SetItemIndex)
    MySyscall(pListView_SetItemIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetDockClientCount)
int32_t
ListView_GetDockClientCount(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetDockClientCount)
    return (int32_t)MySyscall(pListView_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetDockSite)
BOOL
ListView_GetDockSite(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetDockSite)
    return (BOOL)MySyscall(pListView_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetDockSite)
void
ListView_SetDockSite(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetDockSite)
    MySyscall(pListView_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetMouseInClient)
BOOL
ListView_GetMouseInClient(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetMouseInClient)
    return (BOOL)MySyscall(pListView_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetVisibleDockClientCount)
int32_t
ListView_GetVisibleDockClientCount(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pListView_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetBrush)
TBrush
ListView_GetBrush(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetBrush)
    return (TBrush)MySyscall(pListView_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetControlCount)
int32_t
ListView_GetControlCount(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetControlCount)
    return (int32_t)MySyscall(pListView_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetHandle)
HWND
ListView_GetHandle(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetHandle)
    return (HWND)MySyscall(pListView_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetParentWindow)
HWND
ListView_GetParentWindow(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetParentWindow)
    return (HWND)MySyscall(pListView_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetParentWindow)
void
ListView_SetParentWindow(TListView AObj, HWND AValue) {
    GET_FUNC_ADDR(ListView_SetParentWindow)
    MySyscall(pListView_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetShowing)
BOOL
ListView_GetShowing(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetShowing)
    return (BOOL)MySyscall(pListView_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetUseDockManager)
BOOL
ListView_GetUseDockManager(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetUseDockManager)
    return (BOOL)MySyscall(pListView_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetUseDockManager)
void
ListView_SetUseDockManager(TListView AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListView_SetUseDockManager)
    MySyscall(pListView_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetBoundsRect)
TRect
ListView_GetBoundsRect(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetBoundsRect)
    TRect result;
    MySyscall(pListView_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ListView_SetBoundsRect)
void
ListView_SetBoundsRect(TListView AObj, TRect AValue) {
    GET_FUNC_ADDR(ListView_SetBoundsRect)
    MySyscall(pListView_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetClientHeight)
int32_t
ListView_GetClientHeight(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetClientHeight)
    return (int32_t)MySyscall(pListView_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetClientHeight)
void
ListView_SetClientHeight(TListView AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListView_SetClientHeight)
    MySyscall(pListView_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetClientOrigin)
TPoint
ListView_GetClientOrigin(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetClientOrigin)
    TPoint result;
    MySyscall(pListView_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ListView_GetClientRect)
TRect
ListView_GetClientRect(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetClientRect)
    TRect result;
    MySyscall(pListView_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ListView_GetClientWidth)
int32_t
ListView_GetClientWidth(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetClientWidth)
    return (int32_t)MySyscall(pListView_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetClientWidth)
void
ListView_SetClientWidth(TListView AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListView_SetClientWidth)
    MySyscall(pListView_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetControlState)
TControlState
ListView_GetControlState(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetControlState)
    return (TControlState)MySyscall(pListView_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetControlState)
void
ListView_SetControlState(TListView AObj, TControlState AValue) {
    GET_FUNC_ADDR(ListView_SetControlState)
    MySyscall(pListView_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetControlStyle)
TControlStyle
ListView_GetControlStyle(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetControlStyle)
    return (TControlStyle)MySyscall(pListView_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetControlStyle)
void
ListView_SetControlStyle(TListView AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(ListView_SetControlStyle)
    MySyscall(pListView_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetFloating)
BOOL
ListView_GetFloating(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetFloating)
    return (BOOL)MySyscall(pListView_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetParent)
TWinControl
ListView_GetParent(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetParent)
    return (TWinControl)MySyscall(pListView_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetParent)
void
ListView_SetParent(TListView AObj, TWinControl AValue) {
    GET_FUNC_ADDR(ListView_SetParent)
    MySyscall(pListView_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetLeft)
int32_t
ListView_GetLeft(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetLeft)
    return (int32_t)MySyscall(pListView_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetLeft)
void
ListView_SetLeft(TListView AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListView_SetLeft)
    MySyscall(pListView_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetTop)
int32_t
ListView_GetTop(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetTop)
    return (int32_t)MySyscall(pListView_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetTop)
void
ListView_SetTop(TListView AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListView_SetTop)
    MySyscall(pListView_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetWidth)
int32_t
ListView_GetWidth(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetWidth)
    return (int32_t)MySyscall(pListView_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetWidth)
void
ListView_SetWidth(TListView AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListView_SetWidth)
    MySyscall(pListView_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetHeight)
int32_t
ListView_GetHeight(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetHeight)
    return (int32_t)MySyscall(pListView_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetHeight)
void
ListView_SetHeight(TListView AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListView_SetHeight)
    MySyscall(pListView_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetCursor)
TCursor
ListView_GetCursor(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetCursor)
    return (TCursor)MySyscall(pListView_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetCursor)
void
ListView_SetCursor(TListView AObj, TCursor AValue) {
    GET_FUNC_ADDR(ListView_SetCursor)
    MySyscall(pListView_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetHint)
char*
ListView_GetHint(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetHint)
    return (char*)MySyscall(pListView_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetHint)
void
ListView_SetHint(TListView AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ListView_SetHint)
    MySyscall(pListView_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetComponentCount)
int32_t
ListView_GetComponentCount(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetComponentCount)
    return (int32_t)MySyscall(pListView_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetComponentIndex)
int32_t
ListView_GetComponentIndex(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetComponentIndex)
    return (int32_t)MySyscall(pListView_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetComponentIndex)
void
ListView_SetComponentIndex(TListView AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListView_SetComponentIndex)
    MySyscall(pListView_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetOwner)
TComponent
ListView_GetOwner(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetOwner)
    return (TComponent)MySyscall(pListView_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetName)
char*
ListView_GetName(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetName)
    return (char*)MySyscall(pListView_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetName)
void
ListView_SetName(TListView AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ListView_SetName)
    MySyscall(pListView_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetTag)
intptr_t
ListView_GetTag(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetTag)
    return (intptr_t)MySyscall(pListView_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetTag)
void
ListView_SetTag(TListView AObj, intptr_t AValue) {
    GET_FUNC_ADDR(ListView_SetTag)
    MySyscall(pListView_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetAnchorSideLeft)
TAnchorSide
ListView_GetAnchorSideLeft(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pListView_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetAnchorSideLeft)
void
ListView_SetAnchorSideLeft(TListView AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ListView_SetAnchorSideLeft)
    MySyscall(pListView_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetAnchorSideTop)
TAnchorSide
ListView_GetAnchorSideTop(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pListView_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetAnchorSideTop)
void
ListView_SetAnchorSideTop(TListView AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ListView_SetAnchorSideTop)
    MySyscall(pListView_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetAnchorSideRight)
TAnchorSide
ListView_GetAnchorSideRight(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pListView_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetAnchorSideRight)
void
ListView_SetAnchorSideRight(TListView AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ListView_SetAnchorSideRight)
    MySyscall(pListView_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetAnchorSideBottom)
TAnchorSide
ListView_GetAnchorSideBottom(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pListView_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetAnchorSideBottom)
void
ListView_SetAnchorSideBottom(TListView AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ListView_SetAnchorSideBottom)
    MySyscall(pListView_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetChildSizing)
TControlChildSizing
ListView_GetChildSizing(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetChildSizing)
    return (TControlChildSizing)MySyscall(pListView_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetChildSizing)
void
ListView_SetChildSizing(TListView AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(ListView_SetChildSizing)
    MySyscall(pListView_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetBorderSpacing)
TControlBorderSpacing
ListView_GetBorderSpacing(TListView AObj) {
    GET_FUNC_ADDR(ListView_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pListView_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_SetBorderSpacing)
void
ListView_SetBorderSpacing(TListView AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(ListView_SetBorderSpacing)
    MySyscall(pListView_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetColumn)
TListColumn
ListView_GetColumn(TListView AObj, int32_t Index) {
    GET_FUNC_ADDR(ListView_GetColumn)
    return (TListColumn)MySyscall(pListView_GetColumn, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetDockClients)
TControl
ListView_GetDockClients(TListView AObj, int32_t Index) {
    GET_FUNC_ADDR(ListView_GetDockClients)
    return (TControl)MySyscall(pListView_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetControls)
TControl
ListView_GetControls(TListView AObj, int32_t Index) {
    GET_FUNC_ADDR(ListView_GetControls)
    return (TControl)MySyscall(pListView_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetComponents)
TComponent
ListView_GetComponents(TListView AObj, int32_t AIndex) {
    GET_FUNC_ADDR(ListView_GetComponents)
    return (TComponent)MySyscall(pListView_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_GetAnchorSide)
TAnchorSide
ListView_GetAnchorSide(TListView AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(ListView_GetAnchorSide)
    return (TAnchorSide)MySyscall(pListView_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListView_StaticClassType)
TClass
ListView_StaticClassType() {
    GET_FUNC_ADDR(ListView_StaticClassType)
    return (TClass)MySyscall(pListView_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TTreeView-------------------

DEFINE_FUNC_PTR(TreeView_Create)
TTreeView
TreeView_Create(TComponent AOwner) {
    GET_FUNC_ADDR(TreeView_Create)
    return (TTreeView)MySyscall(pTreeView_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_Free)
void
TreeView_Free(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_Free)
    MySyscall(pTreeView_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_AlphaSort)
BOOL
TreeView_AlphaSort(TTreeView AObj, BOOL ARecurse) {
    GET_FUNC_ADDR(TreeView_AlphaSort)
    return (BOOL)MySyscall(pTreeView_AlphaSort, 2, AObj, ARecurse ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_FullCollapse)
void
TreeView_FullCollapse(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_FullCollapse)
    MySyscall(pTreeView_FullCollapse, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_FullExpand)
void
TreeView_FullExpand(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_FullExpand)
    MySyscall(pTreeView_FullExpand, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetHitTestInfoAt)
THitTests
TreeView_GetHitTestInfoAt(TTreeView AObj, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(TreeView_GetHitTestInfoAt)
    return (THitTests)MySyscall(pTreeView_GetHitTestInfoAt, 3, AObj, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetNodeAt)
TTreeNode
TreeView_GetNodeAt(TTreeView AObj, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(TreeView_GetNodeAt)
    return (TTreeNode)MySyscall(pTreeView_GetNodeAt, 3, AObj, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_IsEditing)
BOOL
TreeView_IsEditing(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_IsEditing)
    return (BOOL)MySyscall(pTreeView_IsEditing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_LoadFromFile)
void
TreeView_LoadFromFile(TTreeView AObj, CChar char* FileName) {
    GET_FUNC_ADDR(TreeView_LoadFromFile)
    MySyscall(pTreeView_LoadFromFile, 2, AObj, FileName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_LoadFromStream)
void
TreeView_LoadFromStream(TTreeView AObj, TStream Stream) {
    GET_FUNC_ADDR(TreeView_LoadFromStream)
    MySyscall(pTreeView_LoadFromStream, 2, AObj, Stream ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SaveToFile)
void
TreeView_SaveToFile(TTreeView AObj, CChar char* FileName) {
    GET_FUNC_ADDR(TreeView_SaveToFile)
    MySyscall(pTreeView_SaveToFile, 2, AObj, FileName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SaveToStream)
void
TreeView_SaveToStream(TTreeView AObj, TStream Stream) {
    GET_FUNC_ADDR(TreeView_SaveToStream)
    MySyscall(pTreeView_SaveToStream, 2, AObj, Stream ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_ClearSelection)
void
TreeView_ClearSelection(TTreeView AObj, BOOL KeepPrimary) {
    GET_FUNC_ADDR(TreeView_ClearSelection)
    MySyscall(pTreeView_ClearSelection, 2, AObj, KeepPrimary ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_CustomSort)
BOOL
TreeView_CustomSort(TTreeView AObj, PFNTVCOMPARE SortProc, intptr_t Data, BOOL ARecurse) {
    GET_FUNC_ADDR(TreeView_CustomSort)
    return (BOOL)MySyscall(pTreeView_CustomSort, 4, AObj, SortProc, Data, ARecurse ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_CanFocus)
BOOL
TreeView_CanFocus(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_CanFocus)
    return (BOOL)MySyscall(pTreeView_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_ContainsControl)
BOOL
TreeView_ContainsControl(TTreeView AObj, TControl Control) {
    GET_FUNC_ADDR(TreeView_ContainsControl)
    return (BOOL)MySyscall(pTreeView_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_ControlAtPos)
TControl
TreeView_ControlAtPos(TTreeView AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(TreeView_ControlAtPos)
    return (TControl)MySyscall(pTreeView_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_DisableAlign)
void
TreeView_DisableAlign(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_DisableAlign)
    MySyscall(pTreeView_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_EnableAlign)
void
TreeView_EnableAlign(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_EnableAlign)
    MySyscall(pTreeView_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_FindChildControl)
TControl
TreeView_FindChildControl(TTreeView AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(TreeView_FindChildControl)
    return (TControl)MySyscall(pTreeView_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_FlipChildren)
void
TreeView_FlipChildren(TTreeView AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(TreeView_FlipChildren)
    MySyscall(pTreeView_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_Focused)
BOOL
TreeView_Focused(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_Focused)
    return (BOOL)MySyscall(pTreeView_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_HandleAllocated)
BOOL
TreeView_HandleAllocated(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_HandleAllocated)
    return (BOOL)MySyscall(pTreeView_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_InsertControl)
void
TreeView_InsertControl(TTreeView AObj, TControl AControl) {
    GET_FUNC_ADDR(TreeView_InsertControl)
    MySyscall(pTreeView_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_Invalidate)
void
TreeView_Invalidate(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_Invalidate)
    MySyscall(pTreeView_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_PaintTo)
void
TreeView_PaintTo(TTreeView AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(TreeView_PaintTo)
    MySyscall(pTreeView_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_RemoveControl)
void
TreeView_RemoveControl(TTreeView AObj, TControl AControl) {
    GET_FUNC_ADDR(TreeView_RemoveControl)
    MySyscall(pTreeView_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_Realign)
void
TreeView_Realign(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_Realign)
    MySyscall(pTreeView_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_Repaint)
void
TreeView_Repaint(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_Repaint)
    MySyscall(pTreeView_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_ScaleBy)
void
TreeView_ScaleBy(TTreeView AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(TreeView_ScaleBy)
    MySyscall(pTreeView_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_ScrollBy)
void
TreeView_ScrollBy(TTreeView AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(TreeView_ScrollBy)
    MySyscall(pTreeView_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetBounds)
void
TreeView_SetBounds(TTreeView AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(TreeView_SetBounds)
    MySyscall(pTreeView_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetFocus)
void
TreeView_SetFocus(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_SetFocus)
    MySyscall(pTreeView_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_Update)
void
TreeView_Update(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_Update)
    MySyscall(pTreeView_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_BringToFront)
void
TreeView_BringToFront(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_BringToFront)
    MySyscall(pTreeView_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_ClientToScreen)
TPoint
TreeView_ClientToScreen(TTreeView AObj, TPoint Point) {
    GET_FUNC_ADDR(TreeView_ClientToScreen)
    TPoint result;
    MySyscall(pTreeView_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(TreeView_ClientToParent)
TPoint
TreeView_ClientToParent(TTreeView AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(TreeView_ClientToParent)
    TPoint result;
    MySyscall(pTreeView_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(TreeView_Dragging)
BOOL
TreeView_Dragging(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_Dragging)
    return (BOOL)MySyscall(pTreeView_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_HasParent)
BOOL
TreeView_HasParent(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_HasParent)
    return (BOOL)MySyscall(pTreeView_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_Hide)
void
TreeView_Hide(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_Hide)
    MySyscall(pTreeView_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_Perform)
intptr_t
TreeView_Perform(TTreeView AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(TreeView_Perform)
    return (intptr_t)MySyscall(pTreeView_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_Refresh)
void
TreeView_Refresh(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_Refresh)
    MySyscall(pTreeView_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_ScreenToClient)
TPoint
TreeView_ScreenToClient(TTreeView AObj, TPoint Point) {
    GET_FUNC_ADDR(TreeView_ScreenToClient)
    TPoint result;
    MySyscall(pTreeView_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(TreeView_ParentToClient)
TPoint
TreeView_ParentToClient(TTreeView AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(TreeView_ParentToClient)
    TPoint result;
    MySyscall(pTreeView_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(TreeView_SendToBack)
void
TreeView_SendToBack(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_SendToBack)
    MySyscall(pTreeView_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_Show)
void
TreeView_Show(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_Show)
    MySyscall(pTreeView_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetTextBuf)
int32_t
TreeView_GetTextBuf(TTreeView AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(TreeView_GetTextBuf)
    return (int32_t)MySyscall(pTreeView_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetTextLen)
int32_t
TreeView_GetTextLen(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetTextLen)
    return (int32_t)MySyscall(pTreeView_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetTextBuf)
void
TreeView_SetTextBuf(TTreeView AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(TreeView_SetTextBuf)
    MySyscall(pTreeView_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_FindComponent)
TComponent
TreeView_FindComponent(TTreeView AObj, CChar char* AName) {
    GET_FUNC_ADDR(TreeView_FindComponent)
    return (TComponent)MySyscall(pTreeView_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetNamePath)
char*
TreeView_GetNamePath(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetNamePath)
    return (char*)MySyscall(pTreeView_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_Assign)
void
TreeView_Assign(TTreeView AObj, TObject Source) {
    GET_FUNC_ADDR(TreeView_Assign)
    MySyscall(pTreeView_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_ClassType)
TClass
TreeView_ClassType(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_ClassType)
    return (TClass)MySyscall(pTreeView_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_ClassName)
char*
TreeView_ClassName(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_ClassName)
    return (char*)MySyscall(pTreeView_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_InstanceSize)
int32_t
TreeView_InstanceSize(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_InstanceSize)
    return (int32_t)MySyscall(pTreeView_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_InheritsFrom)
BOOL
TreeView_InheritsFrom(TTreeView AObj, TClass AClass) {
    GET_FUNC_ADDR(TreeView_InheritsFrom)
    return (BOOL)MySyscall(pTreeView_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_Equals)
BOOL
TreeView_Equals(TTreeView AObj, TObject Obj) {
    GET_FUNC_ADDR(TreeView_Equals)
    return (BOOL)MySyscall(pTreeView_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetHashCode)
int32_t
TreeView_GetHashCode(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetHashCode)
    return (int32_t)MySyscall(pTreeView_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_ToString)
char*
TreeView_ToString(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_ToString)
    return (char*)MySyscall(pTreeView_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_AnchorToNeighbour)
void
TreeView_AnchorToNeighbour(TTreeView AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(TreeView_AnchorToNeighbour)
    MySyscall(pTreeView_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_AnchorParallel)
void
TreeView_AnchorParallel(TTreeView AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(TreeView_AnchorParallel)
    MySyscall(pTreeView_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_AnchorHorizontalCenterTo)
void
TreeView_AnchorHorizontalCenterTo(TTreeView AObj, TControl ASibling) {
    GET_FUNC_ADDR(TreeView_AnchorHorizontalCenterTo)
    MySyscall(pTreeView_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_AnchorVerticalCenterTo)
void
TreeView_AnchorVerticalCenterTo(TTreeView AObj, TControl ASibling) {
    GET_FUNC_ADDR(TreeView_AnchorVerticalCenterTo)
    MySyscall(pTreeView_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_AnchorSame)
void
TreeView_AnchorSame(TTreeView AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(TreeView_AnchorSame)
    MySyscall(pTreeView_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_AnchorAsAlign)
void
TreeView_AnchorAsAlign(TTreeView AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(TreeView_AnchorAsAlign)
    MySyscall(pTreeView_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_AnchorClient)
void
TreeView_AnchorClient(TTreeView AObj, int32_t ASpace) {
    GET_FUNC_ADDR(TreeView_AnchorClient)
    MySyscall(pTreeView_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_ScaleDesignToForm)
int32_t
TreeView_ScaleDesignToForm(TTreeView AObj, int32_t ASize) {
    GET_FUNC_ADDR(TreeView_ScaleDesignToForm)
    return (int32_t)MySyscall(pTreeView_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_ScaleFormToDesign)
int32_t
TreeView_ScaleFormToDesign(TTreeView AObj, int32_t ASize) {
    GET_FUNC_ADDR(TreeView_ScaleFormToDesign)
    return (int32_t)MySyscall(pTreeView_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_Scale96ToForm)
int32_t
TreeView_Scale96ToForm(TTreeView AObj, int32_t ASize) {
    GET_FUNC_ADDR(TreeView_Scale96ToForm)
    return (int32_t)MySyscall(pTreeView_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_ScaleFormTo96)
int32_t
TreeView_ScaleFormTo96(TTreeView AObj, int32_t ASize) {
    GET_FUNC_ADDR(TreeView_ScaleFormTo96)
    return (int32_t)MySyscall(pTreeView_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_Scale96ToFont)
int32_t
TreeView_Scale96ToFont(TTreeView AObj, int32_t ASize) {
    GET_FUNC_ADDR(TreeView_Scale96ToFont)
    return (int32_t)MySyscall(pTreeView_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_ScaleFontTo96)
int32_t
TreeView_ScaleFontTo96(TTreeView AObj, int32_t ASize) {
    GET_FUNC_ADDR(TreeView_ScaleFontTo96)
    return (int32_t)MySyscall(pTreeView_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_ScaleScreenToFont)
int32_t
TreeView_ScaleScreenToFont(TTreeView AObj, int32_t ASize) {
    GET_FUNC_ADDR(TreeView_ScaleScreenToFont)
    return (int32_t)MySyscall(pTreeView_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_ScaleFontToScreen)
int32_t
TreeView_ScaleFontToScreen(TTreeView AObj, int32_t ASize) {
    GET_FUNC_ADDR(TreeView_ScaleFontToScreen)
    return (int32_t)MySyscall(pTreeView_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_Scale96ToScreen)
int32_t
TreeView_Scale96ToScreen(TTreeView AObj, int32_t ASize) {
    GET_FUNC_ADDR(TreeView_Scale96ToScreen)
    return (int32_t)MySyscall(pTreeView_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_ScaleScreenTo96)
int32_t
TreeView_ScaleScreenTo96(TTreeView AObj, int32_t ASize) {
    GET_FUNC_ADDR(TreeView_ScaleScreenTo96)
    return (int32_t)MySyscall(pTreeView_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_AutoAdjustLayout)
void
TreeView_AutoAdjustLayout(TTreeView AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(TreeView_AutoAdjustLayout)
    MySyscall(pTreeView_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_FixDesignFontsPPI)
void
TreeView_FixDesignFontsPPI(TTreeView AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(TreeView_FixDesignFontsPPI)
    MySyscall(pTreeView_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_ScaleFontsPPI)
void
TreeView_ScaleFontsPPI(TTreeView AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(TreeView_ScaleFontsPPI)
    MySyscall(pTreeView_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetDefaultItemHeight)
int32_t
TreeView_GetDefaultItemHeight(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetDefaultItemHeight)
    return (int32_t)MySyscall(pTreeView_GetDefaultItemHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetDefaultItemHeight)
void
TreeView_SetDefaultItemHeight(TTreeView AObj, int32_t AValue) {
    GET_FUNC_ADDR(TreeView_SetDefaultItemHeight)
    MySyscall(pTreeView_SetDefaultItemHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetExpandSignColor)
TColor
TreeView_GetExpandSignColor(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetExpandSignColor)
    return (TColor)MySyscall(pTreeView_GetExpandSignColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetExpandSignColor)
void
TreeView_SetExpandSignColor(TTreeView AObj, TColor AValue) {
    GET_FUNC_ADDR(TreeView_SetExpandSignColor)
    MySyscall(pTreeView_SetExpandSignColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetExpandSignSize)
int32_t
TreeView_GetExpandSignSize(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetExpandSignSize)
    return (int32_t)MySyscall(pTreeView_GetExpandSignSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetExpandSignSize)
void
TreeView_SetExpandSignSize(TTreeView AObj, int32_t AValue) {
    GET_FUNC_ADDR(TreeView_SetExpandSignSize)
    MySyscall(pTreeView_SetExpandSignSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetExpandSignType)
TTreeViewExpandSignType
TreeView_GetExpandSignType(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetExpandSignType)
    return (TTreeViewExpandSignType)MySyscall(pTreeView_GetExpandSignType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetExpandSignType)
void
TreeView_SetExpandSignType(TTreeView AObj, TTreeViewExpandSignType AValue) {
    GET_FUNC_ADDR(TreeView_SetExpandSignType)
    MySyscall(pTreeView_SetExpandSignType, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetHotTrackColor)
TColor
TreeView_GetHotTrackColor(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetHotTrackColor)
    return (TColor)MySyscall(pTreeView_GetHotTrackColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetHotTrackColor)
void
TreeView_SetHotTrackColor(TTreeView AObj, TColor AValue) {
    GET_FUNC_ADDR(TreeView_SetHotTrackColor)
    MySyscall(pTreeView_SetHotTrackColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetImagesWidth)
int32_t
TreeView_GetImagesWidth(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetImagesWidth)
    return (int32_t)MySyscall(pTreeView_GetImagesWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetImagesWidth)
void
TreeView_SetImagesWidth(TTreeView AObj, int32_t AValue) {
    GET_FUNC_ADDR(TreeView_SetImagesWidth)
    MySyscall(pTreeView_SetImagesWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetOptions)
TTreeViewOptions
TreeView_GetOptions(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetOptions)
    return (TTreeViewOptions)MySyscall(pTreeView_GetOptions, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOptions)
void
TreeView_SetOptions(TTreeView AObj, TTreeViewOptions AValue) {
    GET_FUNC_ADDR(TreeView_SetOptions)
    MySyscall(pTreeView_SetOptions, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetScrollBars)
TScrollStyle
TreeView_GetScrollBars(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetScrollBars)
    return (TScrollStyle)MySyscall(pTreeView_GetScrollBars, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetScrollBars)
void
TreeView_SetScrollBars(TTreeView AObj, TScrollStyle AValue) {
    GET_FUNC_ADDR(TreeView_SetScrollBars)
    MySyscall(pTreeView_SetScrollBars, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetSelectionColor)
TColor
TreeView_GetSelectionColor(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetSelectionColor)
    return (TColor)MySyscall(pTreeView_GetSelectionColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetSelectionColor)
void
TreeView_SetSelectionColor(TTreeView AObj, TColor AValue) {
    GET_FUNC_ADDR(TreeView_SetSelectionColor)
    MySyscall(pTreeView_SetSelectionColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetSelectionFontColor)
TColor
TreeView_GetSelectionFontColor(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetSelectionFontColor)
    return (TColor)MySyscall(pTreeView_GetSelectionFontColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetSelectionFontColor)
void
TreeView_SetSelectionFontColor(TTreeView AObj, TColor AValue) {
    GET_FUNC_ADDR(TreeView_SetSelectionFontColor)
    MySyscall(pTreeView_SetSelectionFontColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetSelectionFontColorUsed)
BOOL
TreeView_GetSelectionFontColorUsed(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetSelectionFontColorUsed)
    return (BOOL)MySyscall(pTreeView_GetSelectionFontColorUsed, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetSelectionFontColorUsed)
void
TreeView_SetSelectionFontColorUsed(TTreeView AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeView_SetSelectionFontColorUsed)
    MySyscall(pTreeView_SetSelectionFontColorUsed, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetSeparatorColor)
TColor
TreeView_GetSeparatorColor(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetSeparatorColor)
    return (TColor)MySyscall(pTreeView_GetSeparatorColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetSeparatorColor)
void
TreeView_SetSeparatorColor(TTreeView AObj, TColor AValue) {
    GET_FUNC_ADDR(TreeView_SetSeparatorColor)
    MySyscall(pTreeView_SetSeparatorColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetStateImagesWidth)
int32_t
TreeView_GetStateImagesWidth(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetStateImagesWidth)
    return (int32_t)MySyscall(pTreeView_GetStateImagesWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetStateImagesWidth)
void
TreeView_SetStateImagesWidth(TTreeView AObj, int32_t AValue) {
    GET_FUNC_ADDR(TreeView_SetStateImagesWidth)
    MySyscall(pTreeView_SetStateImagesWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetToolTips)
BOOL
TreeView_GetToolTips(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetToolTips)
    return (BOOL)MySyscall(pTreeView_GetToolTips, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetToolTips)
void
TreeView_SetToolTips(TTreeView AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeView_SetToolTips)
    MySyscall(pTreeView_SetToolTips, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetTreeLineColor)
TColor
TreeView_GetTreeLineColor(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetTreeLineColor)
    return (TColor)MySyscall(pTreeView_GetTreeLineColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetTreeLineColor)
void
TreeView_SetTreeLineColor(TTreeView AObj, TColor AValue) {
    GET_FUNC_ADDR(TreeView_SetTreeLineColor)
    MySyscall(pTreeView_SetTreeLineColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetTreeLinePenStyle)
TPenStyle
TreeView_GetTreeLinePenStyle(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetTreeLinePenStyle)
    return (TPenStyle)MySyscall(pTreeView_GetTreeLinePenStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetTreeLinePenStyle)
void
TreeView_SetTreeLinePenStyle(TTreeView AObj, TPenStyle AValue) {
    GET_FUNC_ADDR(TreeView_SetTreeLinePenStyle)
    MySyscall(pTreeView_SetTreeLinePenStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetAlign)
TAlign
TreeView_GetAlign(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetAlign)
    return (TAlign)MySyscall(pTreeView_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetAlign)
void
TreeView_SetAlign(TTreeView AObj, TAlign AValue) {
    GET_FUNC_ADDR(TreeView_SetAlign)
    MySyscall(pTreeView_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetAnchors)
TAnchors
TreeView_GetAnchors(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetAnchors)
    return (TAnchors)MySyscall(pTreeView_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetAnchors)
void
TreeView_SetAnchors(TTreeView AObj, TAnchors AValue) {
    GET_FUNC_ADDR(TreeView_SetAnchors)
    MySyscall(pTreeView_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetAutoExpand)
BOOL
TreeView_GetAutoExpand(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetAutoExpand)
    return (BOOL)MySyscall(pTreeView_GetAutoExpand, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetAutoExpand)
void
TreeView_SetAutoExpand(TTreeView AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeView_SetAutoExpand)
    MySyscall(pTreeView_SetAutoExpand, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetBiDiMode)
TBiDiMode
TreeView_GetBiDiMode(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetBiDiMode)
    return (TBiDiMode)MySyscall(pTreeView_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetBiDiMode)
void
TreeView_SetBiDiMode(TTreeView AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(TreeView_SetBiDiMode)
    MySyscall(pTreeView_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetBorderStyle)
TBorderStyle
TreeView_GetBorderStyle(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetBorderStyle)
    return (TBorderStyle)MySyscall(pTreeView_GetBorderStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetBorderStyle)
void
TreeView_SetBorderStyle(TTreeView AObj, TBorderStyle AValue) {
    GET_FUNC_ADDR(TreeView_SetBorderStyle)
    MySyscall(pTreeView_SetBorderStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetBorderWidth)
int32_t
TreeView_GetBorderWidth(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetBorderWidth)
    return (int32_t)MySyscall(pTreeView_GetBorderWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetBorderWidth)
void
TreeView_SetBorderWidth(TTreeView AObj, int32_t AValue) {
    GET_FUNC_ADDR(TreeView_SetBorderWidth)
    MySyscall(pTreeView_SetBorderWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetColor)
TColor
TreeView_GetColor(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetColor)
    return (TColor)MySyscall(pTreeView_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetColor)
void
TreeView_SetColor(TTreeView AObj, TColor AValue) {
    GET_FUNC_ADDR(TreeView_SetColor)
    MySyscall(pTreeView_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetConstraints)
TSizeConstraints
TreeView_GetConstraints(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetConstraints)
    return (TSizeConstraints)MySyscall(pTreeView_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetConstraints)
void
TreeView_SetConstraints(TTreeView AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(TreeView_SetConstraints)
    MySyscall(pTreeView_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetDoubleBuffered)
BOOL
TreeView_GetDoubleBuffered(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetDoubleBuffered)
    return (BOOL)MySyscall(pTreeView_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetDoubleBuffered)
void
TreeView_SetDoubleBuffered(TTreeView AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeView_SetDoubleBuffered)
    MySyscall(pTreeView_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetDragKind)
TDragKind
TreeView_GetDragKind(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetDragKind)
    return (TDragKind)MySyscall(pTreeView_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetDragKind)
void
TreeView_SetDragKind(TTreeView AObj, TDragKind AValue) {
    GET_FUNC_ADDR(TreeView_SetDragKind)
    MySyscall(pTreeView_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetDragCursor)
TCursor
TreeView_GetDragCursor(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetDragCursor)
    return (TCursor)MySyscall(pTreeView_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetDragCursor)
void
TreeView_SetDragCursor(TTreeView AObj, TCursor AValue) {
    GET_FUNC_ADDR(TreeView_SetDragCursor)
    MySyscall(pTreeView_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetDragMode)
TDragMode
TreeView_GetDragMode(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetDragMode)
    return (TDragMode)MySyscall(pTreeView_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetDragMode)
void
TreeView_SetDragMode(TTreeView AObj, TDragMode AValue) {
    GET_FUNC_ADDR(TreeView_SetDragMode)
    MySyscall(pTreeView_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetEnabled)
BOOL
TreeView_GetEnabled(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetEnabled)
    return (BOOL)MySyscall(pTreeView_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetEnabled)
void
TreeView_SetEnabled(TTreeView AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeView_SetEnabled)
    MySyscall(pTreeView_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetFont)
TFont
TreeView_GetFont(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetFont)
    return (TFont)MySyscall(pTreeView_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetFont)
void
TreeView_SetFont(TTreeView AObj, TFont AValue) {
    GET_FUNC_ADDR(TreeView_SetFont)
    MySyscall(pTreeView_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetHideSelection)
BOOL
TreeView_GetHideSelection(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetHideSelection)
    return (BOOL)MySyscall(pTreeView_GetHideSelection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetHideSelection)
void
TreeView_SetHideSelection(TTreeView AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeView_SetHideSelection)
    MySyscall(pTreeView_SetHideSelection, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetHotTrack)
BOOL
TreeView_GetHotTrack(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetHotTrack)
    return (BOOL)MySyscall(pTreeView_GetHotTrack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetHotTrack)
void
TreeView_SetHotTrack(TTreeView AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeView_SetHotTrack)
    MySyscall(pTreeView_SetHotTrack, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetImages)
TImageList
TreeView_GetImages(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetImages)
    return (TImageList)MySyscall(pTreeView_GetImages, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetImages)
void
TreeView_SetImages(TTreeView AObj, TImageList AValue) {
    GET_FUNC_ADDR(TreeView_SetImages)
    MySyscall(pTreeView_SetImages, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetIndent)
int32_t
TreeView_GetIndent(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetIndent)
    return (int32_t)MySyscall(pTreeView_GetIndent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetIndent)
void
TreeView_SetIndent(TTreeView AObj, int32_t AValue) {
    GET_FUNC_ADDR(TreeView_SetIndent)
    MySyscall(pTreeView_SetIndent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetMultiSelect)
BOOL
TreeView_GetMultiSelect(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetMultiSelect)
    return (BOOL)MySyscall(pTreeView_GetMultiSelect, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetMultiSelect)
void
TreeView_SetMultiSelect(TTreeView AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeView_SetMultiSelect)
    MySyscall(pTreeView_SetMultiSelect, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetMultiSelectStyle)
TMultiSelectStyle
TreeView_GetMultiSelectStyle(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetMultiSelectStyle)
    return (TMultiSelectStyle)MySyscall(pTreeView_GetMultiSelectStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetMultiSelectStyle)
void
TreeView_SetMultiSelectStyle(TTreeView AObj, TMultiSelectStyle AValue) {
    GET_FUNC_ADDR(TreeView_SetMultiSelectStyle)
    MySyscall(pTreeView_SetMultiSelectStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetParentColor)
BOOL
TreeView_GetParentColor(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetParentColor)
    return (BOOL)MySyscall(pTreeView_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetParentColor)
void
TreeView_SetParentColor(TTreeView AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeView_SetParentColor)
    MySyscall(pTreeView_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetParentDoubleBuffered)
BOOL
TreeView_GetParentDoubleBuffered(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pTreeView_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetParentDoubleBuffered)
void
TreeView_SetParentDoubleBuffered(TTreeView AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeView_SetParentDoubleBuffered)
    MySyscall(pTreeView_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetParentFont)
BOOL
TreeView_GetParentFont(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetParentFont)
    return (BOOL)MySyscall(pTreeView_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetParentFont)
void
TreeView_SetParentFont(TTreeView AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeView_SetParentFont)
    MySyscall(pTreeView_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetParentShowHint)
BOOL
TreeView_GetParentShowHint(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetParentShowHint)
    return (BOOL)MySyscall(pTreeView_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetParentShowHint)
void
TreeView_SetParentShowHint(TTreeView AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeView_SetParentShowHint)
    MySyscall(pTreeView_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetPopupMenu)
TPopupMenu
TreeView_GetPopupMenu(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetPopupMenu)
    return (TPopupMenu)MySyscall(pTreeView_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetPopupMenu)
void
TreeView_SetPopupMenu(TTreeView AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(TreeView_SetPopupMenu)
    MySyscall(pTreeView_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetReadOnly)
BOOL
TreeView_GetReadOnly(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetReadOnly)
    return (BOOL)MySyscall(pTreeView_GetReadOnly, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetReadOnly)
void
TreeView_SetReadOnly(TTreeView AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeView_SetReadOnly)
    MySyscall(pTreeView_SetReadOnly, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetRightClickSelect)
BOOL
TreeView_GetRightClickSelect(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetRightClickSelect)
    return (BOOL)MySyscall(pTreeView_GetRightClickSelect, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetRightClickSelect)
void
TreeView_SetRightClickSelect(TTreeView AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeView_SetRightClickSelect)
    MySyscall(pTreeView_SetRightClickSelect, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetRowSelect)
BOOL
TreeView_GetRowSelect(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetRowSelect)
    return (BOOL)MySyscall(pTreeView_GetRowSelect, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetRowSelect)
void
TreeView_SetRowSelect(TTreeView AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeView_SetRowSelect)
    MySyscall(pTreeView_SetRowSelect, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetShowButtons)
BOOL
TreeView_GetShowButtons(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetShowButtons)
    return (BOOL)MySyscall(pTreeView_GetShowButtons, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetShowButtons)
void
TreeView_SetShowButtons(TTreeView AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeView_SetShowButtons)
    MySyscall(pTreeView_SetShowButtons, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetShowHint)
BOOL
TreeView_GetShowHint(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetShowHint)
    return (BOOL)MySyscall(pTreeView_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetShowHint)
void
TreeView_SetShowHint(TTreeView AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeView_SetShowHint)
    MySyscall(pTreeView_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetShowLines)
BOOL
TreeView_GetShowLines(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetShowLines)
    return (BOOL)MySyscall(pTreeView_GetShowLines, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetShowLines)
void
TreeView_SetShowLines(TTreeView AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeView_SetShowLines)
    MySyscall(pTreeView_SetShowLines, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetShowRoot)
BOOL
TreeView_GetShowRoot(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetShowRoot)
    return (BOOL)MySyscall(pTreeView_GetShowRoot, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetShowRoot)
void
TreeView_SetShowRoot(TTreeView AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeView_SetShowRoot)
    MySyscall(pTreeView_SetShowRoot, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetSortType)
TSortType
TreeView_GetSortType(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetSortType)
    return (TSortType)MySyscall(pTreeView_GetSortType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetSortType)
void
TreeView_SetSortType(TTreeView AObj, TSortType AValue) {
    GET_FUNC_ADDR(TreeView_SetSortType)
    MySyscall(pTreeView_SetSortType, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetStateImages)
TImageList
TreeView_GetStateImages(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetStateImages)
    return (TImageList)MySyscall(pTreeView_GetStateImages, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetStateImages)
void
TreeView_SetStateImages(TTreeView AObj, TImageList AValue) {
    GET_FUNC_ADDR(TreeView_SetStateImages)
    MySyscall(pTreeView_SetStateImages, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetTabOrder)
TTabOrder
TreeView_GetTabOrder(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetTabOrder)
    return (TTabOrder)MySyscall(pTreeView_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetTabOrder)
void
TreeView_SetTabOrder(TTreeView AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(TreeView_SetTabOrder)
    MySyscall(pTreeView_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetTabStop)
BOOL
TreeView_GetTabStop(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetTabStop)
    return (BOOL)MySyscall(pTreeView_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetTabStop)
void
TreeView_SetTabStop(TTreeView AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeView_SetTabStop)
    MySyscall(pTreeView_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetVisible)
BOOL
TreeView_GetVisible(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetVisible)
    return (BOOL)MySyscall(pTreeView_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetVisible)
void
TreeView_SetVisible(TTreeView AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeView_SetVisible)
    MySyscall(pTreeView_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnAddition)
void
TreeView_SetOnAddition(TTreeView AObj, TTVExpandedEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnAddition)
    MySyscall(pTreeView_SetOnAddition, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnAdvancedCustomDraw)
void
TreeView_SetOnAdvancedCustomDraw(TTreeView AObj, TTVAdvancedCustomDrawEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnAdvancedCustomDraw)
    MySyscall(pTreeView_SetOnAdvancedCustomDraw, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnAdvancedCustomDrawItem)
void
TreeView_SetOnAdvancedCustomDrawItem(TTreeView AObj, TTVAdvancedCustomDrawItemEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnAdvancedCustomDrawItem)
    MySyscall(pTreeView_SetOnAdvancedCustomDrawItem, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnChange)
void
TreeView_SetOnChange(TTreeView AObj, TTVChangedEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnChange)
    MySyscall(pTreeView_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnChanging)
void
TreeView_SetOnChanging(TTreeView AObj, TTVChangingEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnChanging)
    MySyscall(pTreeView_SetOnChanging, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnClick)
void
TreeView_SetOnClick(TTreeView AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnClick)
    MySyscall(pTreeView_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnCollapsed)
void
TreeView_SetOnCollapsed(TTreeView AObj, TTVExpandedEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnCollapsed)
    MySyscall(pTreeView_SetOnCollapsed, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnCollapsing)
void
TreeView_SetOnCollapsing(TTreeView AObj, TTVCollapsingEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnCollapsing)
    MySyscall(pTreeView_SetOnCollapsing, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnCompare)
void
TreeView_SetOnCompare(TTreeView AObj, TTVCompareEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnCompare)
    MySyscall(pTreeView_SetOnCompare, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnContextPopup)
void
TreeView_SetOnContextPopup(TTreeView AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnContextPopup)
    MySyscall(pTreeView_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnCustomDraw)
void
TreeView_SetOnCustomDraw(TTreeView AObj, TTVCustomDrawEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnCustomDraw)
    MySyscall(pTreeView_SetOnCustomDraw, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnCustomDrawItem)
void
TreeView_SetOnCustomDrawItem(TTreeView AObj, TTVCustomDrawItemEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnCustomDrawItem)
    MySyscall(pTreeView_SetOnCustomDrawItem, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnDblClick)
void
TreeView_SetOnDblClick(TTreeView AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnDblClick)
    MySyscall(pTreeView_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnDeletion)
void
TreeView_SetOnDeletion(TTreeView AObj, TTVExpandedEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnDeletion)
    MySyscall(pTreeView_SetOnDeletion, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnDragDrop)
void
TreeView_SetOnDragDrop(TTreeView AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnDragDrop)
    MySyscall(pTreeView_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnDragOver)
void
TreeView_SetOnDragOver(TTreeView AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnDragOver)
    MySyscall(pTreeView_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnEdited)
void
TreeView_SetOnEdited(TTreeView AObj, TTVEditedEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnEdited)
    MySyscall(pTreeView_SetOnEdited, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnEditing)
void
TreeView_SetOnEditing(TTreeView AObj, TTVEditingEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnEditing)
    MySyscall(pTreeView_SetOnEditing, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnEndDrag)
void
TreeView_SetOnEndDrag(TTreeView AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnEndDrag)
    MySyscall(pTreeView_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnEnter)
void
TreeView_SetOnEnter(TTreeView AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnEnter)
    MySyscall(pTreeView_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnExit)
void
TreeView_SetOnExit(TTreeView AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnExit)
    MySyscall(pTreeView_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnExpanding)
void
TreeView_SetOnExpanding(TTreeView AObj, TTVExpandingEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnExpanding)
    MySyscall(pTreeView_SetOnExpanding, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnExpanded)
void
TreeView_SetOnExpanded(TTreeView AObj, TTVExpandedEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnExpanded)
    MySyscall(pTreeView_SetOnExpanded, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnGetSelectedIndex)
void
TreeView_SetOnGetSelectedIndex(TTreeView AObj, TTVExpandedEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnGetSelectedIndex)
    MySyscall(pTreeView_SetOnGetSelectedIndex, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnKeyDown)
void
TreeView_SetOnKeyDown(TTreeView AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnKeyDown)
    MySyscall(pTreeView_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnKeyPress)
void
TreeView_SetOnKeyPress(TTreeView AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnKeyPress)
    MySyscall(pTreeView_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnKeyUp)
void
TreeView_SetOnKeyUp(TTreeView AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnKeyUp)
    MySyscall(pTreeView_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnMouseDown)
void
TreeView_SetOnMouseDown(TTreeView AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnMouseDown)
    MySyscall(pTreeView_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnMouseEnter)
void
TreeView_SetOnMouseEnter(TTreeView AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnMouseEnter)
    MySyscall(pTreeView_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnMouseLeave)
void
TreeView_SetOnMouseLeave(TTreeView AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnMouseLeave)
    MySyscall(pTreeView_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnMouseMove)
void
TreeView_SetOnMouseMove(TTreeView AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnMouseMove)
    MySyscall(pTreeView_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetOnMouseUp)
void
TreeView_SetOnMouseUp(TTreeView AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(TreeView_SetOnMouseUp)
    MySyscall(pTreeView_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetItems)
TTreeNodes
TreeView_GetItems(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetItems)
    return (TTreeNodes)MySyscall(pTreeView_GetItems, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetItems)
void
TreeView_SetItems(TTreeView AObj, TTreeNodes AValue) {
    GET_FUNC_ADDR(TreeView_SetItems)
    MySyscall(pTreeView_SetItems, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetCanvas)
TCanvas
TreeView_GetCanvas(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetCanvas)
    return (TCanvas)MySyscall(pTreeView_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetDropTarget)
TTreeNode
TreeView_GetDropTarget(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetDropTarget)
    return (TTreeNode)MySyscall(pTreeView_GetDropTarget, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetDropTarget)
void
TreeView_SetDropTarget(TTreeView AObj, TTreeNode AValue) {
    GET_FUNC_ADDR(TreeView_SetDropTarget)
    MySyscall(pTreeView_SetDropTarget, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetSelected)
TTreeNode
TreeView_GetSelected(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetSelected)
    return (TTreeNode)MySyscall(pTreeView_GetSelected, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetSelected)
void
TreeView_SetSelected(TTreeView AObj, TTreeNode AValue) {
    GET_FUNC_ADDR(TreeView_SetSelected)
    MySyscall(pTreeView_SetSelected, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetTopItem)
TTreeNode
TreeView_GetTopItem(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetTopItem)
    return (TTreeNode)MySyscall(pTreeView_GetTopItem, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetTopItem)
void
TreeView_SetTopItem(TTreeView AObj, TTreeNode AValue) {
    GET_FUNC_ADDR(TreeView_SetTopItem)
    MySyscall(pTreeView_SetTopItem, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetSelectionCount)
uint32_t
TreeView_GetSelectionCount(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetSelectionCount)
    return (uint32_t)MySyscall(pTreeView_GetSelectionCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetDockClientCount)
int32_t
TreeView_GetDockClientCount(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetDockClientCount)
    return (int32_t)MySyscall(pTreeView_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetDockSite)
BOOL
TreeView_GetDockSite(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetDockSite)
    return (BOOL)MySyscall(pTreeView_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetDockSite)
void
TreeView_SetDockSite(TTreeView AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeView_SetDockSite)
    MySyscall(pTreeView_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetMouseInClient)
BOOL
TreeView_GetMouseInClient(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetMouseInClient)
    return (BOOL)MySyscall(pTreeView_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetVisibleDockClientCount)
int32_t
TreeView_GetVisibleDockClientCount(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pTreeView_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetBrush)
TBrush
TreeView_GetBrush(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetBrush)
    return (TBrush)MySyscall(pTreeView_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetControlCount)
int32_t
TreeView_GetControlCount(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetControlCount)
    return (int32_t)MySyscall(pTreeView_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetHandle)
HWND
TreeView_GetHandle(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetHandle)
    return (HWND)MySyscall(pTreeView_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetParentWindow)
HWND
TreeView_GetParentWindow(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetParentWindow)
    return (HWND)MySyscall(pTreeView_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetParentWindow)
void
TreeView_SetParentWindow(TTreeView AObj, HWND AValue) {
    GET_FUNC_ADDR(TreeView_SetParentWindow)
    MySyscall(pTreeView_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetShowing)
BOOL
TreeView_GetShowing(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetShowing)
    return (BOOL)MySyscall(pTreeView_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetUseDockManager)
BOOL
TreeView_GetUseDockManager(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetUseDockManager)
    return (BOOL)MySyscall(pTreeView_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetUseDockManager)
void
TreeView_SetUseDockManager(TTreeView AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeView_SetUseDockManager)
    MySyscall(pTreeView_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetAction)
TAction
TreeView_GetAction(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetAction)
    return (TAction)MySyscall(pTreeView_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetAction)
void
TreeView_SetAction(TTreeView AObj, TAction AValue) {
    GET_FUNC_ADDR(TreeView_SetAction)
    MySyscall(pTreeView_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetBoundsRect)
TRect
TreeView_GetBoundsRect(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetBoundsRect)
    TRect result;
    MySyscall(pTreeView_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(TreeView_SetBoundsRect)
void
TreeView_SetBoundsRect(TTreeView AObj, TRect AValue) {
    GET_FUNC_ADDR(TreeView_SetBoundsRect)
    MySyscall(pTreeView_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetClientHeight)
int32_t
TreeView_GetClientHeight(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetClientHeight)
    return (int32_t)MySyscall(pTreeView_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetClientHeight)
void
TreeView_SetClientHeight(TTreeView AObj, int32_t AValue) {
    GET_FUNC_ADDR(TreeView_SetClientHeight)
    MySyscall(pTreeView_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetClientOrigin)
TPoint
TreeView_GetClientOrigin(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetClientOrigin)
    TPoint result;
    MySyscall(pTreeView_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(TreeView_GetClientRect)
TRect
TreeView_GetClientRect(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetClientRect)
    TRect result;
    MySyscall(pTreeView_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(TreeView_GetClientWidth)
int32_t
TreeView_GetClientWidth(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetClientWidth)
    return (int32_t)MySyscall(pTreeView_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetClientWidth)
void
TreeView_SetClientWidth(TTreeView AObj, int32_t AValue) {
    GET_FUNC_ADDR(TreeView_SetClientWidth)
    MySyscall(pTreeView_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetControlState)
TControlState
TreeView_GetControlState(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetControlState)
    return (TControlState)MySyscall(pTreeView_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetControlState)
void
TreeView_SetControlState(TTreeView AObj, TControlState AValue) {
    GET_FUNC_ADDR(TreeView_SetControlState)
    MySyscall(pTreeView_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetControlStyle)
TControlStyle
TreeView_GetControlStyle(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetControlStyle)
    return (TControlStyle)MySyscall(pTreeView_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetControlStyle)
void
TreeView_SetControlStyle(TTreeView AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(TreeView_SetControlStyle)
    MySyscall(pTreeView_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetFloating)
BOOL
TreeView_GetFloating(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetFloating)
    return (BOOL)MySyscall(pTreeView_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetParent)
TWinControl
TreeView_GetParent(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetParent)
    return (TWinControl)MySyscall(pTreeView_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetParent)
void
TreeView_SetParent(TTreeView AObj, TWinControl AValue) {
    GET_FUNC_ADDR(TreeView_SetParent)
    MySyscall(pTreeView_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetLeft)
int32_t
TreeView_GetLeft(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetLeft)
    return (int32_t)MySyscall(pTreeView_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetLeft)
void
TreeView_SetLeft(TTreeView AObj, int32_t AValue) {
    GET_FUNC_ADDR(TreeView_SetLeft)
    MySyscall(pTreeView_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetTop)
int32_t
TreeView_GetTop(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetTop)
    return (int32_t)MySyscall(pTreeView_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetTop)
void
TreeView_SetTop(TTreeView AObj, int32_t AValue) {
    GET_FUNC_ADDR(TreeView_SetTop)
    MySyscall(pTreeView_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetWidth)
int32_t
TreeView_GetWidth(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetWidth)
    return (int32_t)MySyscall(pTreeView_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetWidth)
void
TreeView_SetWidth(TTreeView AObj, int32_t AValue) {
    GET_FUNC_ADDR(TreeView_SetWidth)
    MySyscall(pTreeView_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetHeight)
int32_t
TreeView_GetHeight(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetHeight)
    return (int32_t)MySyscall(pTreeView_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetHeight)
void
TreeView_SetHeight(TTreeView AObj, int32_t AValue) {
    GET_FUNC_ADDR(TreeView_SetHeight)
    MySyscall(pTreeView_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetCursor)
TCursor
TreeView_GetCursor(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetCursor)
    return (TCursor)MySyscall(pTreeView_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetCursor)
void
TreeView_SetCursor(TTreeView AObj, TCursor AValue) {
    GET_FUNC_ADDR(TreeView_SetCursor)
    MySyscall(pTreeView_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetHint)
char*
TreeView_GetHint(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetHint)
    return (char*)MySyscall(pTreeView_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetHint)
void
TreeView_SetHint(TTreeView AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TreeView_SetHint)
    MySyscall(pTreeView_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetComponentCount)
int32_t
TreeView_GetComponentCount(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetComponentCount)
    return (int32_t)MySyscall(pTreeView_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetComponentIndex)
int32_t
TreeView_GetComponentIndex(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetComponentIndex)
    return (int32_t)MySyscall(pTreeView_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetComponentIndex)
void
TreeView_SetComponentIndex(TTreeView AObj, int32_t AValue) {
    GET_FUNC_ADDR(TreeView_SetComponentIndex)
    MySyscall(pTreeView_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetOwner)
TComponent
TreeView_GetOwner(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetOwner)
    return (TComponent)MySyscall(pTreeView_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetName)
char*
TreeView_GetName(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetName)
    return (char*)MySyscall(pTreeView_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetName)
void
TreeView_SetName(TTreeView AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TreeView_SetName)
    MySyscall(pTreeView_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetTag)
intptr_t
TreeView_GetTag(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetTag)
    return (intptr_t)MySyscall(pTreeView_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetTag)
void
TreeView_SetTag(TTreeView AObj, intptr_t AValue) {
    GET_FUNC_ADDR(TreeView_SetTag)
    MySyscall(pTreeView_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetAnchorSideLeft)
TAnchorSide
TreeView_GetAnchorSideLeft(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pTreeView_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetAnchorSideLeft)
void
TreeView_SetAnchorSideLeft(TTreeView AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(TreeView_SetAnchorSideLeft)
    MySyscall(pTreeView_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetAnchorSideTop)
TAnchorSide
TreeView_GetAnchorSideTop(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pTreeView_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetAnchorSideTop)
void
TreeView_SetAnchorSideTop(TTreeView AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(TreeView_SetAnchorSideTop)
    MySyscall(pTreeView_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetAnchorSideRight)
TAnchorSide
TreeView_GetAnchorSideRight(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pTreeView_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetAnchorSideRight)
void
TreeView_SetAnchorSideRight(TTreeView AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(TreeView_SetAnchorSideRight)
    MySyscall(pTreeView_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetAnchorSideBottom)
TAnchorSide
TreeView_GetAnchorSideBottom(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pTreeView_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetAnchorSideBottom)
void
TreeView_SetAnchorSideBottom(TTreeView AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(TreeView_SetAnchorSideBottom)
    MySyscall(pTreeView_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetChildSizing)
TControlChildSizing
TreeView_GetChildSizing(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetChildSizing)
    return (TControlChildSizing)MySyscall(pTreeView_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetChildSizing)
void
TreeView_SetChildSizing(TTreeView AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(TreeView_SetChildSizing)
    MySyscall(pTreeView_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetBorderSpacing)
TControlBorderSpacing
TreeView_GetBorderSpacing(TTreeView AObj) {
    GET_FUNC_ADDR(TreeView_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pTreeView_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_SetBorderSpacing)
void
TreeView_SetBorderSpacing(TTreeView AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(TreeView_SetBorderSpacing)
    MySyscall(pTreeView_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetSelections)
TTreeNode
TreeView_GetSelections(TTreeView AObj, int32_t Index) {
    GET_FUNC_ADDR(TreeView_GetSelections)
    return (TTreeNode)MySyscall(pTreeView_GetSelections, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetDockClients)
TControl
TreeView_GetDockClients(TTreeView AObj, int32_t Index) {
    GET_FUNC_ADDR(TreeView_GetDockClients)
    return (TControl)MySyscall(pTreeView_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetControls)
TControl
TreeView_GetControls(TTreeView AObj, int32_t Index) {
    GET_FUNC_ADDR(TreeView_GetControls)
    return (TControl)MySyscall(pTreeView_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetComponents)
TComponent
TreeView_GetComponents(TTreeView AObj, int32_t AIndex) {
    GET_FUNC_ADDR(TreeView_GetComponents)
    return (TComponent)MySyscall(pTreeView_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_GetAnchorSide)
TAnchorSide
TreeView_GetAnchorSide(TTreeView AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(TreeView_GetAnchorSide)
    return (TAnchorSide)MySyscall(pTreeView_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeView_StaticClassType)
TClass
TreeView_StaticClassType() {
    GET_FUNC_ADDR(TreeView_StaticClassType)
    return (TClass)MySyscall(pTreeView_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TStatusBar-------------------

DEFINE_FUNC_PTR(StatusBar_Create)
TStatusBar
StatusBar_Create(TComponent AOwner) {
    GET_FUNC_ADDR(StatusBar_Create)
    return (TStatusBar)MySyscall(pStatusBar_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_Free)
void
StatusBar_Free(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_Free)
    MySyscall(pStatusBar_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_FlipChildren)
void
StatusBar_FlipChildren(TStatusBar AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(StatusBar_FlipChildren)
    MySyscall(pStatusBar_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetBounds)
void
StatusBar_SetBounds(TStatusBar AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(StatusBar_SetBounds)
    MySyscall(pStatusBar_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_CanFocus)
BOOL
StatusBar_CanFocus(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_CanFocus)
    return (BOOL)MySyscall(pStatusBar_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_ContainsControl)
BOOL
StatusBar_ContainsControl(TStatusBar AObj, TControl Control) {
    GET_FUNC_ADDR(StatusBar_ContainsControl)
    return (BOOL)MySyscall(pStatusBar_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_ControlAtPos)
TControl
StatusBar_ControlAtPos(TStatusBar AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(StatusBar_ControlAtPos)
    return (TControl)MySyscall(pStatusBar_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_DisableAlign)
void
StatusBar_DisableAlign(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_DisableAlign)
    MySyscall(pStatusBar_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_EnableAlign)
void
StatusBar_EnableAlign(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_EnableAlign)
    MySyscall(pStatusBar_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_FindChildControl)
TControl
StatusBar_FindChildControl(TStatusBar AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(StatusBar_FindChildControl)
    return (TControl)MySyscall(pStatusBar_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_Focused)
BOOL
StatusBar_Focused(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_Focused)
    return (BOOL)MySyscall(pStatusBar_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_HandleAllocated)
BOOL
StatusBar_HandleAllocated(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_HandleAllocated)
    return (BOOL)MySyscall(pStatusBar_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_InsertControl)
void
StatusBar_InsertControl(TStatusBar AObj, TControl AControl) {
    GET_FUNC_ADDR(StatusBar_InsertControl)
    MySyscall(pStatusBar_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_Invalidate)
void
StatusBar_Invalidate(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_Invalidate)
    MySyscall(pStatusBar_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_PaintTo)
void
StatusBar_PaintTo(TStatusBar AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(StatusBar_PaintTo)
    MySyscall(pStatusBar_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_RemoveControl)
void
StatusBar_RemoveControl(TStatusBar AObj, TControl AControl) {
    GET_FUNC_ADDR(StatusBar_RemoveControl)
    MySyscall(pStatusBar_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_Realign)
void
StatusBar_Realign(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_Realign)
    MySyscall(pStatusBar_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_Repaint)
void
StatusBar_Repaint(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_Repaint)
    MySyscall(pStatusBar_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_ScaleBy)
void
StatusBar_ScaleBy(TStatusBar AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(StatusBar_ScaleBy)
    MySyscall(pStatusBar_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_ScrollBy)
void
StatusBar_ScrollBy(TStatusBar AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(StatusBar_ScrollBy)
    MySyscall(pStatusBar_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetFocus)
void
StatusBar_SetFocus(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_SetFocus)
    MySyscall(pStatusBar_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_Update)
void
StatusBar_Update(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_Update)
    MySyscall(pStatusBar_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_BringToFront)
void
StatusBar_BringToFront(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_BringToFront)
    MySyscall(pStatusBar_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_ClientToScreen)
TPoint
StatusBar_ClientToScreen(TStatusBar AObj, TPoint Point) {
    GET_FUNC_ADDR(StatusBar_ClientToScreen)
    TPoint result;
    MySyscall(pStatusBar_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StatusBar_ClientToParent)
TPoint
StatusBar_ClientToParent(TStatusBar AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(StatusBar_ClientToParent)
    TPoint result;
    MySyscall(pStatusBar_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StatusBar_Dragging)
BOOL
StatusBar_Dragging(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_Dragging)
    return (BOOL)MySyscall(pStatusBar_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_HasParent)
BOOL
StatusBar_HasParent(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_HasParent)
    return (BOOL)MySyscall(pStatusBar_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_Hide)
void
StatusBar_Hide(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_Hide)
    MySyscall(pStatusBar_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_Perform)
intptr_t
StatusBar_Perform(TStatusBar AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(StatusBar_Perform)
    return (intptr_t)MySyscall(pStatusBar_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_Refresh)
void
StatusBar_Refresh(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_Refresh)
    MySyscall(pStatusBar_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_ScreenToClient)
TPoint
StatusBar_ScreenToClient(TStatusBar AObj, TPoint Point) {
    GET_FUNC_ADDR(StatusBar_ScreenToClient)
    TPoint result;
    MySyscall(pStatusBar_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StatusBar_ParentToClient)
TPoint
StatusBar_ParentToClient(TStatusBar AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(StatusBar_ParentToClient)
    TPoint result;
    MySyscall(pStatusBar_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StatusBar_SendToBack)
void
StatusBar_SendToBack(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_SendToBack)
    MySyscall(pStatusBar_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_Show)
void
StatusBar_Show(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_Show)
    MySyscall(pStatusBar_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetTextBuf)
int32_t
StatusBar_GetTextBuf(TStatusBar AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(StatusBar_GetTextBuf)
    return (int32_t)MySyscall(pStatusBar_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetTextLen)
int32_t
StatusBar_GetTextLen(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetTextLen)
    return (int32_t)MySyscall(pStatusBar_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetTextBuf)
void
StatusBar_SetTextBuf(TStatusBar AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(StatusBar_SetTextBuf)
    MySyscall(pStatusBar_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_FindComponent)
TComponent
StatusBar_FindComponent(TStatusBar AObj, CChar char* AName) {
    GET_FUNC_ADDR(StatusBar_FindComponent)
    return (TComponent)MySyscall(pStatusBar_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetNamePath)
char*
StatusBar_GetNamePath(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetNamePath)
    return (char*)MySyscall(pStatusBar_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_Assign)
void
StatusBar_Assign(TStatusBar AObj, TObject Source) {
    GET_FUNC_ADDR(StatusBar_Assign)
    MySyscall(pStatusBar_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_ClassType)
TClass
StatusBar_ClassType(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_ClassType)
    return (TClass)MySyscall(pStatusBar_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_ClassName)
char*
StatusBar_ClassName(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_ClassName)
    return (char*)MySyscall(pStatusBar_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_InstanceSize)
int32_t
StatusBar_InstanceSize(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_InstanceSize)
    return (int32_t)MySyscall(pStatusBar_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_InheritsFrom)
BOOL
StatusBar_InheritsFrom(TStatusBar AObj, TClass AClass) {
    GET_FUNC_ADDR(StatusBar_InheritsFrom)
    return (BOOL)MySyscall(pStatusBar_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_Equals)
BOOL
StatusBar_Equals(TStatusBar AObj, TObject Obj) {
    GET_FUNC_ADDR(StatusBar_Equals)
    return (BOOL)MySyscall(pStatusBar_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetHashCode)
int32_t
StatusBar_GetHashCode(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetHashCode)
    return (int32_t)MySyscall(pStatusBar_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_ToString)
char*
StatusBar_ToString(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_ToString)
    return (char*)MySyscall(pStatusBar_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_AnchorToNeighbour)
void
StatusBar_AnchorToNeighbour(TStatusBar AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(StatusBar_AnchorToNeighbour)
    MySyscall(pStatusBar_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_AnchorParallel)
void
StatusBar_AnchorParallel(TStatusBar AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(StatusBar_AnchorParallel)
    MySyscall(pStatusBar_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_AnchorHorizontalCenterTo)
void
StatusBar_AnchorHorizontalCenterTo(TStatusBar AObj, TControl ASibling) {
    GET_FUNC_ADDR(StatusBar_AnchorHorizontalCenterTo)
    MySyscall(pStatusBar_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_AnchorVerticalCenterTo)
void
StatusBar_AnchorVerticalCenterTo(TStatusBar AObj, TControl ASibling) {
    GET_FUNC_ADDR(StatusBar_AnchorVerticalCenterTo)
    MySyscall(pStatusBar_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_AnchorSame)
void
StatusBar_AnchorSame(TStatusBar AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(StatusBar_AnchorSame)
    MySyscall(pStatusBar_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_AnchorAsAlign)
void
StatusBar_AnchorAsAlign(TStatusBar AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(StatusBar_AnchorAsAlign)
    MySyscall(pStatusBar_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_AnchorClient)
void
StatusBar_AnchorClient(TStatusBar AObj, int32_t ASpace) {
    GET_FUNC_ADDR(StatusBar_AnchorClient)
    MySyscall(pStatusBar_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_ScaleDesignToForm)
int32_t
StatusBar_ScaleDesignToForm(TStatusBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(StatusBar_ScaleDesignToForm)
    return (int32_t)MySyscall(pStatusBar_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_ScaleFormToDesign)
int32_t
StatusBar_ScaleFormToDesign(TStatusBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(StatusBar_ScaleFormToDesign)
    return (int32_t)MySyscall(pStatusBar_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_Scale96ToForm)
int32_t
StatusBar_Scale96ToForm(TStatusBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(StatusBar_Scale96ToForm)
    return (int32_t)MySyscall(pStatusBar_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_ScaleFormTo96)
int32_t
StatusBar_ScaleFormTo96(TStatusBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(StatusBar_ScaleFormTo96)
    return (int32_t)MySyscall(pStatusBar_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_Scale96ToFont)
int32_t
StatusBar_Scale96ToFont(TStatusBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(StatusBar_Scale96ToFont)
    return (int32_t)MySyscall(pStatusBar_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_ScaleFontTo96)
int32_t
StatusBar_ScaleFontTo96(TStatusBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(StatusBar_ScaleFontTo96)
    return (int32_t)MySyscall(pStatusBar_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_ScaleScreenToFont)
int32_t
StatusBar_ScaleScreenToFont(TStatusBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(StatusBar_ScaleScreenToFont)
    return (int32_t)MySyscall(pStatusBar_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_ScaleFontToScreen)
int32_t
StatusBar_ScaleFontToScreen(TStatusBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(StatusBar_ScaleFontToScreen)
    return (int32_t)MySyscall(pStatusBar_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_Scale96ToScreen)
int32_t
StatusBar_Scale96ToScreen(TStatusBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(StatusBar_Scale96ToScreen)
    return (int32_t)MySyscall(pStatusBar_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_ScaleScreenTo96)
int32_t
StatusBar_ScaleScreenTo96(TStatusBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(StatusBar_ScaleScreenTo96)
    return (int32_t)MySyscall(pStatusBar_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_AutoAdjustLayout)
void
StatusBar_AutoAdjustLayout(TStatusBar AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(StatusBar_AutoAdjustLayout)
    MySyscall(pStatusBar_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_FixDesignFontsPPI)
void
StatusBar_FixDesignFontsPPI(TStatusBar AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(StatusBar_FixDesignFontsPPI)
    MySyscall(pStatusBar_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_ScaleFontsPPI)
void
StatusBar_ScaleFontsPPI(TStatusBar AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(StatusBar_ScaleFontsPPI)
    MySyscall(pStatusBar_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetAction)
TAction
StatusBar_GetAction(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetAction)
    return (TAction)MySyscall(pStatusBar_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetAction)
void
StatusBar_SetAction(TStatusBar AObj, TAction AValue) {
    GET_FUNC_ADDR(StatusBar_SetAction)
    MySyscall(pStatusBar_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetAutoHint)
BOOL
StatusBar_GetAutoHint(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetAutoHint)
    return (BOOL)MySyscall(pStatusBar_GetAutoHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetAutoHint)
void
StatusBar_SetAutoHint(TStatusBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(StatusBar_SetAutoHint)
    MySyscall(pStatusBar_SetAutoHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetAlign)
TAlign
StatusBar_GetAlign(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetAlign)
    return (TAlign)MySyscall(pStatusBar_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetAlign)
void
StatusBar_SetAlign(TStatusBar AObj, TAlign AValue) {
    GET_FUNC_ADDR(StatusBar_SetAlign)
    MySyscall(pStatusBar_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetAnchors)
TAnchors
StatusBar_GetAnchors(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetAnchors)
    return (TAnchors)MySyscall(pStatusBar_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetAnchors)
void
StatusBar_SetAnchors(TStatusBar AObj, TAnchors AValue) {
    GET_FUNC_ADDR(StatusBar_SetAnchors)
    MySyscall(pStatusBar_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetBiDiMode)
TBiDiMode
StatusBar_GetBiDiMode(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetBiDiMode)
    return (TBiDiMode)MySyscall(pStatusBar_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetBiDiMode)
void
StatusBar_SetBiDiMode(TStatusBar AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(StatusBar_SetBiDiMode)
    MySyscall(pStatusBar_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetBorderWidth)
int32_t
StatusBar_GetBorderWidth(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetBorderWidth)
    return (int32_t)MySyscall(pStatusBar_GetBorderWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetBorderWidth)
void
StatusBar_SetBorderWidth(TStatusBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(StatusBar_SetBorderWidth)
    MySyscall(pStatusBar_SetBorderWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetColor)
TColor
StatusBar_GetColor(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetColor)
    return (TColor)MySyscall(pStatusBar_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetColor)
void
StatusBar_SetColor(TStatusBar AObj, TColor AValue) {
    GET_FUNC_ADDR(StatusBar_SetColor)
    MySyscall(pStatusBar_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetDoubleBuffered)
BOOL
StatusBar_GetDoubleBuffered(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetDoubleBuffered)
    return (BOOL)MySyscall(pStatusBar_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetDoubleBuffered)
void
StatusBar_SetDoubleBuffered(TStatusBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(StatusBar_SetDoubleBuffered)
    MySyscall(pStatusBar_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetDragCursor)
TCursor
StatusBar_GetDragCursor(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetDragCursor)
    return (TCursor)MySyscall(pStatusBar_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetDragCursor)
void
StatusBar_SetDragCursor(TStatusBar AObj, TCursor AValue) {
    GET_FUNC_ADDR(StatusBar_SetDragCursor)
    MySyscall(pStatusBar_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetDragKind)
TDragKind
StatusBar_GetDragKind(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetDragKind)
    return (TDragKind)MySyscall(pStatusBar_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetDragKind)
void
StatusBar_SetDragKind(TStatusBar AObj, TDragKind AValue) {
    GET_FUNC_ADDR(StatusBar_SetDragKind)
    MySyscall(pStatusBar_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetDragMode)
TDragMode
StatusBar_GetDragMode(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetDragMode)
    return (TDragMode)MySyscall(pStatusBar_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetDragMode)
void
StatusBar_SetDragMode(TStatusBar AObj, TDragMode AValue) {
    GET_FUNC_ADDR(StatusBar_SetDragMode)
    MySyscall(pStatusBar_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetEnabled)
BOOL
StatusBar_GetEnabled(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetEnabled)
    return (BOOL)MySyscall(pStatusBar_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetEnabled)
void
StatusBar_SetEnabled(TStatusBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(StatusBar_SetEnabled)
    MySyscall(pStatusBar_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetFont)
TFont
StatusBar_GetFont(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetFont)
    return (TFont)MySyscall(pStatusBar_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetFont)
void
StatusBar_SetFont(TStatusBar AObj, TFont AValue) {
    GET_FUNC_ADDR(StatusBar_SetFont)
    MySyscall(pStatusBar_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetConstraints)
TSizeConstraints
StatusBar_GetConstraints(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetConstraints)
    return (TSizeConstraints)MySyscall(pStatusBar_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetConstraints)
void
StatusBar_SetConstraints(TStatusBar AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(StatusBar_SetConstraints)
    MySyscall(pStatusBar_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetPanels)
TStatusPanels
StatusBar_GetPanels(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetPanels)
    return (TStatusPanels)MySyscall(pStatusBar_GetPanels, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetPanels)
void
StatusBar_SetPanels(TStatusBar AObj, TStatusPanels AValue) {
    GET_FUNC_ADDR(StatusBar_SetPanels)
    MySyscall(pStatusBar_SetPanels, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetParentColor)
BOOL
StatusBar_GetParentColor(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetParentColor)
    return (BOOL)MySyscall(pStatusBar_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetParentColor)
void
StatusBar_SetParentColor(TStatusBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(StatusBar_SetParentColor)
    MySyscall(pStatusBar_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetParentDoubleBuffered)
BOOL
StatusBar_GetParentDoubleBuffered(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pStatusBar_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetParentDoubleBuffered)
void
StatusBar_SetParentDoubleBuffered(TStatusBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(StatusBar_SetParentDoubleBuffered)
    MySyscall(pStatusBar_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetParentFont)
BOOL
StatusBar_GetParentFont(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetParentFont)
    return (BOOL)MySyscall(pStatusBar_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetParentFont)
void
StatusBar_SetParentFont(TStatusBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(StatusBar_SetParentFont)
    MySyscall(pStatusBar_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetParentShowHint)
BOOL
StatusBar_GetParentShowHint(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetParentShowHint)
    return (BOOL)MySyscall(pStatusBar_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetParentShowHint)
void
StatusBar_SetParentShowHint(TStatusBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(StatusBar_SetParentShowHint)
    MySyscall(pStatusBar_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetPopupMenu)
TPopupMenu
StatusBar_GetPopupMenu(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetPopupMenu)
    return (TPopupMenu)MySyscall(pStatusBar_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetPopupMenu)
void
StatusBar_SetPopupMenu(TStatusBar AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(StatusBar_SetPopupMenu)
    MySyscall(pStatusBar_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetShowHint)
BOOL
StatusBar_GetShowHint(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetShowHint)
    return (BOOL)MySyscall(pStatusBar_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetShowHint)
void
StatusBar_SetShowHint(TStatusBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(StatusBar_SetShowHint)
    MySyscall(pStatusBar_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetSimplePanel)
BOOL
StatusBar_GetSimplePanel(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetSimplePanel)
    return (BOOL)MySyscall(pStatusBar_GetSimplePanel, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetSimplePanel)
void
StatusBar_SetSimplePanel(TStatusBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(StatusBar_SetSimplePanel)
    MySyscall(pStatusBar_SetSimplePanel, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetSimpleText)
char*
StatusBar_GetSimpleText(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetSimpleText)
    return (char*)MySyscall(pStatusBar_GetSimpleText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetSimpleText)
void
StatusBar_SetSimpleText(TStatusBar AObj, CChar char* AValue) {
    GET_FUNC_ADDR(StatusBar_SetSimpleText)
    MySyscall(pStatusBar_SetSimpleText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetSizeGrip)
BOOL
StatusBar_GetSizeGrip(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetSizeGrip)
    return (BOOL)MySyscall(pStatusBar_GetSizeGrip, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetSizeGrip)
void
StatusBar_SetSizeGrip(TStatusBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(StatusBar_SetSizeGrip)
    MySyscall(pStatusBar_SetSizeGrip, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetUseSystemFont)
BOOL
StatusBar_GetUseSystemFont(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetUseSystemFont)
    return (BOOL)MySyscall(pStatusBar_GetUseSystemFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetUseSystemFont)
void
StatusBar_SetUseSystemFont(TStatusBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(StatusBar_SetUseSystemFont)
    MySyscall(pStatusBar_SetUseSystemFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetVisible)
BOOL
StatusBar_GetVisible(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetVisible)
    return (BOOL)MySyscall(pStatusBar_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetVisible)
void
StatusBar_SetVisible(TStatusBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(StatusBar_SetVisible)
    MySyscall(pStatusBar_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetOnClick)
void
StatusBar_SetOnClick(TStatusBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(StatusBar_SetOnClick)
    MySyscall(pStatusBar_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetOnContextPopup)
void
StatusBar_SetOnContextPopup(TStatusBar AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(StatusBar_SetOnContextPopup)
    MySyscall(pStatusBar_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetOnDblClick)
void
StatusBar_SetOnDblClick(TStatusBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(StatusBar_SetOnDblClick)
    MySyscall(pStatusBar_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetOnDragDrop)
void
StatusBar_SetOnDragDrop(TStatusBar AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(StatusBar_SetOnDragDrop)
    MySyscall(pStatusBar_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetOnDragOver)
void
StatusBar_SetOnDragOver(TStatusBar AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(StatusBar_SetOnDragOver)
    MySyscall(pStatusBar_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetOnEndDock)
void
StatusBar_SetOnEndDock(TStatusBar AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(StatusBar_SetOnEndDock)
    MySyscall(pStatusBar_SetOnEndDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetOnEndDrag)
void
StatusBar_SetOnEndDrag(TStatusBar AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(StatusBar_SetOnEndDrag)
    MySyscall(pStatusBar_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetOnHint)
void
StatusBar_SetOnHint(TStatusBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(StatusBar_SetOnHint)
    MySyscall(pStatusBar_SetOnHint, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetOnMouseDown)
void
StatusBar_SetOnMouseDown(TStatusBar AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(StatusBar_SetOnMouseDown)
    MySyscall(pStatusBar_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetOnMouseEnter)
void
StatusBar_SetOnMouseEnter(TStatusBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(StatusBar_SetOnMouseEnter)
    MySyscall(pStatusBar_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetOnMouseLeave)
void
StatusBar_SetOnMouseLeave(TStatusBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(StatusBar_SetOnMouseLeave)
    MySyscall(pStatusBar_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetOnMouseMove)
void
StatusBar_SetOnMouseMove(TStatusBar AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(StatusBar_SetOnMouseMove)
    MySyscall(pStatusBar_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetOnMouseUp)
void
StatusBar_SetOnMouseUp(TStatusBar AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(StatusBar_SetOnMouseUp)
    MySyscall(pStatusBar_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetOnResize)
void
StatusBar_SetOnResize(TStatusBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(StatusBar_SetOnResize)
    MySyscall(pStatusBar_SetOnResize, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetOnStartDock)
void
StatusBar_SetOnStartDock(TStatusBar AObj, TStartDockEvent AEventData) {
    GET_FUNC_ADDR(StatusBar_SetOnStartDock)
    MySyscall(pStatusBar_SetOnStartDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetCanvas)
TCanvas
StatusBar_GetCanvas(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetCanvas)
    return (TCanvas)MySyscall(pStatusBar_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetDockClientCount)
int32_t
StatusBar_GetDockClientCount(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetDockClientCount)
    return (int32_t)MySyscall(pStatusBar_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetDockSite)
BOOL
StatusBar_GetDockSite(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetDockSite)
    return (BOOL)MySyscall(pStatusBar_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetDockSite)
void
StatusBar_SetDockSite(TStatusBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(StatusBar_SetDockSite)
    MySyscall(pStatusBar_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetMouseInClient)
BOOL
StatusBar_GetMouseInClient(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetMouseInClient)
    return (BOOL)MySyscall(pStatusBar_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetVisibleDockClientCount)
int32_t
StatusBar_GetVisibleDockClientCount(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pStatusBar_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetBrush)
TBrush
StatusBar_GetBrush(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetBrush)
    return (TBrush)MySyscall(pStatusBar_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetControlCount)
int32_t
StatusBar_GetControlCount(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetControlCount)
    return (int32_t)MySyscall(pStatusBar_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetHandle)
HWND
StatusBar_GetHandle(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetHandle)
    return (HWND)MySyscall(pStatusBar_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetParentWindow)
HWND
StatusBar_GetParentWindow(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetParentWindow)
    return (HWND)MySyscall(pStatusBar_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetParentWindow)
void
StatusBar_SetParentWindow(TStatusBar AObj, HWND AValue) {
    GET_FUNC_ADDR(StatusBar_SetParentWindow)
    MySyscall(pStatusBar_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetShowing)
BOOL
StatusBar_GetShowing(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetShowing)
    return (BOOL)MySyscall(pStatusBar_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetTabOrder)
TTabOrder
StatusBar_GetTabOrder(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetTabOrder)
    return (TTabOrder)MySyscall(pStatusBar_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetTabOrder)
void
StatusBar_SetTabOrder(TStatusBar AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(StatusBar_SetTabOrder)
    MySyscall(pStatusBar_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetTabStop)
BOOL
StatusBar_GetTabStop(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetTabStop)
    return (BOOL)MySyscall(pStatusBar_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetTabStop)
void
StatusBar_SetTabStop(TStatusBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(StatusBar_SetTabStop)
    MySyscall(pStatusBar_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetUseDockManager)
BOOL
StatusBar_GetUseDockManager(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetUseDockManager)
    return (BOOL)MySyscall(pStatusBar_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetUseDockManager)
void
StatusBar_SetUseDockManager(TStatusBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(StatusBar_SetUseDockManager)
    MySyscall(pStatusBar_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetBoundsRect)
TRect
StatusBar_GetBoundsRect(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetBoundsRect)
    TRect result;
    MySyscall(pStatusBar_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StatusBar_SetBoundsRect)
void
StatusBar_SetBoundsRect(TStatusBar AObj, TRect AValue) {
    GET_FUNC_ADDR(StatusBar_SetBoundsRect)
    MySyscall(pStatusBar_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetClientHeight)
int32_t
StatusBar_GetClientHeight(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetClientHeight)
    return (int32_t)MySyscall(pStatusBar_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetClientHeight)
void
StatusBar_SetClientHeight(TStatusBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(StatusBar_SetClientHeight)
    MySyscall(pStatusBar_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetClientOrigin)
TPoint
StatusBar_GetClientOrigin(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetClientOrigin)
    TPoint result;
    MySyscall(pStatusBar_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StatusBar_GetClientRect)
TRect
StatusBar_GetClientRect(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetClientRect)
    TRect result;
    MySyscall(pStatusBar_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StatusBar_GetClientWidth)
int32_t
StatusBar_GetClientWidth(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetClientWidth)
    return (int32_t)MySyscall(pStatusBar_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetClientWidth)
void
StatusBar_SetClientWidth(TStatusBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(StatusBar_SetClientWidth)
    MySyscall(pStatusBar_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetControlState)
TControlState
StatusBar_GetControlState(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetControlState)
    return (TControlState)MySyscall(pStatusBar_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetControlState)
void
StatusBar_SetControlState(TStatusBar AObj, TControlState AValue) {
    GET_FUNC_ADDR(StatusBar_SetControlState)
    MySyscall(pStatusBar_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetControlStyle)
TControlStyle
StatusBar_GetControlStyle(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetControlStyle)
    return (TControlStyle)MySyscall(pStatusBar_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetControlStyle)
void
StatusBar_SetControlStyle(TStatusBar AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(StatusBar_SetControlStyle)
    MySyscall(pStatusBar_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetFloating)
BOOL
StatusBar_GetFloating(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetFloating)
    return (BOOL)MySyscall(pStatusBar_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetParent)
TWinControl
StatusBar_GetParent(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetParent)
    return (TWinControl)MySyscall(pStatusBar_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetParent)
void
StatusBar_SetParent(TStatusBar AObj, TWinControl AValue) {
    GET_FUNC_ADDR(StatusBar_SetParent)
    MySyscall(pStatusBar_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetLeft)
int32_t
StatusBar_GetLeft(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetLeft)
    return (int32_t)MySyscall(pStatusBar_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetLeft)
void
StatusBar_SetLeft(TStatusBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(StatusBar_SetLeft)
    MySyscall(pStatusBar_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetTop)
int32_t
StatusBar_GetTop(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetTop)
    return (int32_t)MySyscall(pStatusBar_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetTop)
void
StatusBar_SetTop(TStatusBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(StatusBar_SetTop)
    MySyscall(pStatusBar_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetWidth)
int32_t
StatusBar_GetWidth(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetWidth)
    return (int32_t)MySyscall(pStatusBar_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetWidth)
void
StatusBar_SetWidth(TStatusBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(StatusBar_SetWidth)
    MySyscall(pStatusBar_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetHeight)
int32_t
StatusBar_GetHeight(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetHeight)
    return (int32_t)MySyscall(pStatusBar_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetHeight)
void
StatusBar_SetHeight(TStatusBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(StatusBar_SetHeight)
    MySyscall(pStatusBar_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetCursor)
TCursor
StatusBar_GetCursor(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetCursor)
    return (TCursor)MySyscall(pStatusBar_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetCursor)
void
StatusBar_SetCursor(TStatusBar AObj, TCursor AValue) {
    GET_FUNC_ADDR(StatusBar_SetCursor)
    MySyscall(pStatusBar_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetHint)
char*
StatusBar_GetHint(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetHint)
    return (char*)MySyscall(pStatusBar_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetHint)
void
StatusBar_SetHint(TStatusBar AObj, CChar char* AValue) {
    GET_FUNC_ADDR(StatusBar_SetHint)
    MySyscall(pStatusBar_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetComponentCount)
int32_t
StatusBar_GetComponentCount(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetComponentCount)
    return (int32_t)MySyscall(pStatusBar_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetComponentIndex)
int32_t
StatusBar_GetComponentIndex(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetComponentIndex)
    return (int32_t)MySyscall(pStatusBar_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetComponentIndex)
void
StatusBar_SetComponentIndex(TStatusBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(StatusBar_SetComponentIndex)
    MySyscall(pStatusBar_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetOwner)
TComponent
StatusBar_GetOwner(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetOwner)
    return (TComponent)MySyscall(pStatusBar_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetName)
char*
StatusBar_GetName(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetName)
    return (char*)MySyscall(pStatusBar_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetName)
void
StatusBar_SetName(TStatusBar AObj, CChar char* AValue) {
    GET_FUNC_ADDR(StatusBar_SetName)
    MySyscall(pStatusBar_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetTag)
intptr_t
StatusBar_GetTag(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetTag)
    return (intptr_t)MySyscall(pStatusBar_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetTag)
void
StatusBar_SetTag(TStatusBar AObj, intptr_t AValue) {
    GET_FUNC_ADDR(StatusBar_SetTag)
    MySyscall(pStatusBar_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetAnchorSideLeft)
TAnchorSide
StatusBar_GetAnchorSideLeft(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pStatusBar_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetAnchorSideLeft)
void
StatusBar_SetAnchorSideLeft(TStatusBar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(StatusBar_SetAnchorSideLeft)
    MySyscall(pStatusBar_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetAnchorSideTop)
TAnchorSide
StatusBar_GetAnchorSideTop(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pStatusBar_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetAnchorSideTop)
void
StatusBar_SetAnchorSideTop(TStatusBar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(StatusBar_SetAnchorSideTop)
    MySyscall(pStatusBar_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetAnchorSideRight)
TAnchorSide
StatusBar_GetAnchorSideRight(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pStatusBar_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetAnchorSideRight)
void
StatusBar_SetAnchorSideRight(TStatusBar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(StatusBar_SetAnchorSideRight)
    MySyscall(pStatusBar_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetAnchorSideBottom)
TAnchorSide
StatusBar_GetAnchorSideBottom(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pStatusBar_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetAnchorSideBottom)
void
StatusBar_SetAnchorSideBottom(TStatusBar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(StatusBar_SetAnchorSideBottom)
    MySyscall(pStatusBar_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetChildSizing)
TControlChildSizing
StatusBar_GetChildSizing(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetChildSizing)
    return (TControlChildSizing)MySyscall(pStatusBar_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetChildSizing)
void
StatusBar_SetChildSizing(TStatusBar AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(StatusBar_SetChildSizing)
    MySyscall(pStatusBar_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetBorderSpacing)
TControlBorderSpacing
StatusBar_GetBorderSpacing(TStatusBar AObj) {
    GET_FUNC_ADDR(StatusBar_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pStatusBar_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_SetBorderSpacing)
void
StatusBar_SetBorderSpacing(TStatusBar AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(StatusBar_SetBorderSpacing)
    MySyscall(pStatusBar_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetDockClients)
TControl
StatusBar_GetDockClients(TStatusBar AObj, int32_t Index) {
    GET_FUNC_ADDR(StatusBar_GetDockClients)
    return (TControl)MySyscall(pStatusBar_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetControls)
TControl
StatusBar_GetControls(TStatusBar AObj, int32_t Index) {
    GET_FUNC_ADDR(StatusBar_GetControls)
    return (TControl)MySyscall(pStatusBar_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetComponents)
TComponent
StatusBar_GetComponents(TStatusBar AObj, int32_t AIndex) {
    GET_FUNC_ADDR(StatusBar_GetComponents)
    return (TComponent)MySyscall(pStatusBar_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_GetAnchorSide)
TAnchorSide
StatusBar_GetAnchorSide(TStatusBar AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(StatusBar_GetAnchorSide)
    return (TAnchorSide)MySyscall(pStatusBar_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusBar_StaticClassType)
TClass
StatusBar_StaticClassType() {
    GET_FUNC_ADDR(StatusBar_StaticClassType)
    return (TClass)MySyscall(pStatusBar_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TToolBar-------------------

DEFINE_FUNC_PTR(ToolBar_Create)
TToolBar
ToolBar_Create(TComponent AOwner) {
    GET_FUNC_ADDR(ToolBar_Create)
    return (TToolBar)MySyscall(pToolBar_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_Free)
void
ToolBar_Free(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_Free)
    MySyscall(pToolBar_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_FlipChildren)
void
ToolBar_FlipChildren(TToolBar AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(ToolBar_FlipChildren)
    MySyscall(pToolBar_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_CanFocus)
BOOL
ToolBar_CanFocus(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_CanFocus)
    return (BOOL)MySyscall(pToolBar_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_ContainsControl)
BOOL
ToolBar_ContainsControl(TToolBar AObj, TControl Control) {
    GET_FUNC_ADDR(ToolBar_ContainsControl)
    return (BOOL)MySyscall(pToolBar_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_ControlAtPos)
TControl
ToolBar_ControlAtPos(TToolBar AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(ToolBar_ControlAtPos)
    return (TControl)MySyscall(pToolBar_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_DisableAlign)
void
ToolBar_DisableAlign(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_DisableAlign)
    MySyscall(pToolBar_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_EnableAlign)
void
ToolBar_EnableAlign(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_EnableAlign)
    MySyscall(pToolBar_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_FindChildControl)
TControl
ToolBar_FindChildControl(TToolBar AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(ToolBar_FindChildControl)
    return (TControl)MySyscall(pToolBar_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_Focused)
BOOL
ToolBar_Focused(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_Focused)
    return (BOOL)MySyscall(pToolBar_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_HandleAllocated)
BOOL
ToolBar_HandleAllocated(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_HandleAllocated)
    return (BOOL)MySyscall(pToolBar_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_InsertControl)
void
ToolBar_InsertControl(TToolBar AObj, TControl AControl) {
    GET_FUNC_ADDR(ToolBar_InsertControl)
    MySyscall(pToolBar_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_Invalidate)
void
ToolBar_Invalidate(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_Invalidate)
    MySyscall(pToolBar_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_PaintTo)
void
ToolBar_PaintTo(TToolBar AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(ToolBar_PaintTo)
    MySyscall(pToolBar_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_RemoveControl)
void
ToolBar_RemoveControl(TToolBar AObj, TControl AControl) {
    GET_FUNC_ADDR(ToolBar_RemoveControl)
    MySyscall(pToolBar_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_Realign)
void
ToolBar_Realign(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_Realign)
    MySyscall(pToolBar_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_Repaint)
void
ToolBar_Repaint(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_Repaint)
    MySyscall(pToolBar_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_ScaleBy)
void
ToolBar_ScaleBy(TToolBar AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(ToolBar_ScaleBy)
    MySyscall(pToolBar_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_ScrollBy)
void
ToolBar_ScrollBy(TToolBar AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(ToolBar_ScrollBy)
    MySyscall(pToolBar_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetBounds)
void
ToolBar_SetBounds(TToolBar AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(ToolBar_SetBounds)
    MySyscall(pToolBar_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetFocus)
void
ToolBar_SetFocus(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_SetFocus)
    MySyscall(pToolBar_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_Update)
void
ToolBar_Update(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_Update)
    MySyscall(pToolBar_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_BringToFront)
void
ToolBar_BringToFront(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_BringToFront)
    MySyscall(pToolBar_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_ClientToScreen)
TPoint
ToolBar_ClientToScreen(TToolBar AObj, TPoint Point) {
    GET_FUNC_ADDR(ToolBar_ClientToScreen)
    TPoint result;
    MySyscall(pToolBar_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ToolBar_ClientToParent)
TPoint
ToolBar_ClientToParent(TToolBar AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ToolBar_ClientToParent)
    TPoint result;
    MySyscall(pToolBar_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ToolBar_Dragging)
BOOL
ToolBar_Dragging(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_Dragging)
    return (BOOL)MySyscall(pToolBar_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_HasParent)
BOOL
ToolBar_HasParent(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_HasParent)
    return (BOOL)MySyscall(pToolBar_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_Hide)
void
ToolBar_Hide(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_Hide)
    MySyscall(pToolBar_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_Perform)
intptr_t
ToolBar_Perform(TToolBar AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(ToolBar_Perform)
    return (intptr_t)MySyscall(pToolBar_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_Refresh)
void
ToolBar_Refresh(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_Refresh)
    MySyscall(pToolBar_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_ScreenToClient)
TPoint
ToolBar_ScreenToClient(TToolBar AObj, TPoint Point) {
    GET_FUNC_ADDR(ToolBar_ScreenToClient)
    TPoint result;
    MySyscall(pToolBar_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ToolBar_ParentToClient)
TPoint
ToolBar_ParentToClient(TToolBar AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ToolBar_ParentToClient)
    TPoint result;
    MySyscall(pToolBar_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ToolBar_SendToBack)
void
ToolBar_SendToBack(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_SendToBack)
    MySyscall(pToolBar_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_Show)
void
ToolBar_Show(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_Show)
    MySyscall(pToolBar_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetTextBuf)
int32_t
ToolBar_GetTextBuf(TToolBar AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(ToolBar_GetTextBuf)
    return (int32_t)MySyscall(pToolBar_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetTextLen)
int32_t
ToolBar_GetTextLen(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetTextLen)
    return (int32_t)MySyscall(pToolBar_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetTextBuf)
void
ToolBar_SetTextBuf(TToolBar AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(ToolBar_SetTextBuf)
    MySyscall(pToolBar_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_FindComponent)
TComponent
ToolBar_FindComponent(TToolBar AObj, CChar char* AName) {
    GET_FUNC_ADDR(ToolBar_FindComponent)
    return (TComponent)MySyscall(pToolBar_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetNamePath)
char*
ToolBar_GetNamePath(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetNamePath)
    return (char*)MySyscall(pToolBar_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_Assign)
void
ToolBar_Assign(TToolBar AObj, TObject Source) {
    GET_FUNC_ADDR(ToolBar_Assign)
    MySyscall(pToolBar_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_ClassType)
TClass
ToolBar_ClassType(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_ClassType)
    return (TClass)MySyscall(pToolBar_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_ClassName)
char*
ToolBar_ClassName(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_ClassName)
    return (char*)MySyscall(pToolBar_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_InstanceSize)
int32_t
ToolBar_InstanceSize(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_InstanceSize)
    return (int32_t)MySyscall(pToolBar_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_InheritsFrom)
BOOL
ToolBar_InheritsFrom(TToolBar AObj, TClass AClass) {
    GET_FUNC_ADDR(ToolBar_InheritsFrom)
    return (BOOL)MySyscall(pToolBar_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_Equals)
BOOL
ToolBar_Equals(TToolBar AObj, TObject Obj) {
    GET_FUNC_ADDR(ToolBar_Equals)
    return (BOOL)MySyscall(pToolBar_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetHashCode)
int32_t
ToolBar_GetHashCode(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetHashCode)
    return (int32_t)MySyscall(pToolBar_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_ToString)
char*
ToolBar_ToString(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_ToString)
    return (char*)MySyscall(pToolBar_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_AnchorToNeighbour)
void
ToolBar_AnchorToNeighbour(TToolBar AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ToolBar_AnchorToNeighbour)
    MySyscall(pToolBar_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_AnchorParallel)
void
ToolBar_AnchorParallel(TToolBar AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ToolBar_AnchorParallel)
    MySyscall(pToolBar_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_AnchorHorizontalCenterTo)
void
ToolBar_AnchorHorizontalCenterTo(TToolBar AObj, TControl ASibling) {
    GET_FUNC_ADDR(ToolBar_AnchorHorizontalCenterTo)
    MySyscall(pToolBar_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_AnchorVerticalCenterTo)
void
ToolBar_AnchorVerticalCenterTo(TToolBar AObj, TControl ASibling) {
    GET_FUNC_ADDR(ToolBar_AnchorVerticalCenterTo)
    MySyscall(pToolBar_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_AnchorSame)
void
ToolBar_AnchorSame(TToolBar AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(ToolBar_AnchorSame)
    MySyscall(pToolBar_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_AnchorAsAlign)
void
ToolBar_AnchorAsAlign(TToolBar AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(ToolBar_AnchorAsAlign)
    MySyscall(pToolBar_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_AnchorClient)
void
ToolBar_AnchorClient(TToolBar AObj, int32_t ASpace) {
    GET_FUNC_ADDR(ToolBar_AnchorClient)
    MySyscall(pToolBar_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_ScaleDesignToForm)
int32_t
ToolBar_ScaleDesignToForm(TToolBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToolBar_ScaleDesignToForm)
    return (int32_t)MySyscall(pToolBar_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_ScaleFormToDesign)
int32_t
ToolBar_ScaleFormToDesign(TToolBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToolBar_ScaleFormToDesign)
    return (int32_t)MySyscall(pToolBar_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_Scale96ToForm)
int32_t
ToolBar_Scale96ToForm(TToolBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToolBar_Scale96ToForm)
    return (int32_t)MySyscall(pToolBar_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_ScaleFormTo96)
int32_t
ToolBar_ScaleFormTo96(TToolBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToolBar_ScaleFormTo96)
    return (int32_t)MySyscall(pToolBar_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_Scale96ToFont)
int32_t
ToolBar_Scale96ToFont(TToolBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToolBar_Scale96ToFont)
    return (int32_t)MySyscall(pToolBar_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_ScaleFontTo96)
int32_t
ToolBar_ScaleFontTo96(TToolBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToolBar_ScaleFontTo96)
    return (int32_t)MySyscall(pToolBar_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_ScaleScreenToFont)
int32_t
ToolBar_ScaleScreenToFont(TToolBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToolBar_ScaleScreenToFont)
    return (int32_t)MySyscall(pToolBar_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_ScaleFontToScreen)
int32_t
ToolBar_ScaleFontToScreen(TToolBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToolBar_ScaleFontToScreen)
    return (int32_t)MySyscall(pToolBar_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_Scale96ToScreen)
int32_t
ToolBar_Scale96ToScreen(TToolBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToolBar_Scale96ToScreen)
    return (int32_t)MySyscall(pToolBar_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_ScaleScreenTo96)
int32_t
ToolBar_ScaleScreenTo96(TToolBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToolBar_ScaleScreenTo96)
    return (int32_t)MySyscall(pToolBar_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_AutoAdjustLayout)
void
ToolBar_AutoAdjustLayout(TToolBar AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(ToolBar_AutoAdjustLayout)
    MySyscall(pToolBar_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_FixDesignFontsPPI)
void
ToolBar_FixDesignFontsPPI(TToolBar AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(ToolBar_FixDesignFontsPPI)
    MySyscall(pToolBar_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_ScaleFontsPPI)
void
ToolBar_ScaleFontsPPI(TToolBar AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(ToolBar_ScaleFontsPPI)
    MySyscall(pToolBar_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetButtonCount)
int32_t
ToolBar_GetButtonCount(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetButtonCount)
    return (int32_t)MySyscall(pToolBar_GetButtonCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetCanvas)
TCanvas
ToolBar_GetCanvas(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetCanvas)
    return (TCanvas)MySyscall(pToolBar_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetRowCount)
int32_t
ToolBar_GetRowCount(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetRowCount)
    return (int32_t)MySyscall(pToolBar_GetRowCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetAlign)
TAlign
ToolBar_GetAlign(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetAlign)
    return (TAlign)MySyscall(pToolBar_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetAlign)
void
ToolBar_SetAlign(TToolBar AObj, TAlign AValue) {
    GET_FUNC_ADDR(ToolBar_SetAlign)
    MySyscall(pToolBar_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetAnchors)
TAnchors
ToolBar_GetAnchors(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetAnchors)
    return (TAnchors)MySyscall(pToolBar_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetAnchors)
void
ToolBar_SetAnchors(TToolBar AObj, TAnchors AValue) {
    GET_FUNC_ADDR(ToolBar_SetAnchors)
    MySyscall(pToolBar_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetAutoSize)
BOOL
ToolBar_GetAutoSize(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetAutoSize)
    return (BOOL)MySyscall(pToolBar_GetAutoSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetAutoSize)
void
ToolBar_SetAutoSize(TToolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolBar_SetAutoSize)
    MySyscall(pToolBar_SetAutoSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetBorderWidth)
int32_t
ToolBar_GetBorderWidth(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetBorderWidth)
    return (int32_t)MySyscall(pToolBar_GetBorderWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetBorderWidth)
void
ToolBar_SetBorderWidth(TToolBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToolBar_SetBorderWidth)
    MySyscall(pToolBar_SetBorderWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetButtonHeight)
int32_t
ToolBar_GetButtonHeight(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetButtonHeight)
    return (int32_t)MySyscall(pToolBar_GetButtonHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetButtonHeight)
void
ToolBar_SetButtonHeight(TToolBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToolBar_SetButtonHeight)
    MySyscall(pToolBar_SetButtonHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetButtonWidth)
int32_t
ToolBar_GetButtonWidth(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetButtonWidth)
    return (int32_t)MySyscall(pToolBar_GetButtonWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetButtonWidth)
void
ToolBar_SetButtonWidth(TToolBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToolBar_SetButtonWidth)
    MySyscall(pToolBar_SetButtonWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetCaption)
char*
ToolBar_GetCaption(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetCaption)
    return (char*)MySyscall(pToolBar_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetCaption)
void
ToolBar_SetCaption(TToolBar AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ToolBar_SetCaption)
    MySyscall(pToolBar_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetColor)
TColor
ToolBar_GetColor(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetColor)
    return (TColor)MySyscall(pToolBar_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetColor)
void
ToolBar_SetColor(TToolBar AObj, TColor AValue) {
    GET_FUNC_ADDR(ToolBar_SetColor)
    MySyscall(pToolBar_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetConstraints)
TSizeConstraints
ToolBar_GetConstraints(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetConstraints)
    return (TSizeConstraints)MySyscall(pToolBar_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetConstraints)
void
ToolBar_SetConstraints(TToolBar AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(ToolBar_SetConstraints)
    MySyscall(pToolBar_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetDoubleBuffered)
BOOL
ToolBar_GetDoubleBuffered(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetDoubleBuffered)
    return (BOOL)MySyscall(pToolBar_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetDoubleBuffered)
void
ToolBar_SetDoubleBuffered(TToolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolBar_SetDoubleBuffered)
    MySyscall(pToolBar_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetDockSite)
BOOL
ToolBar_GetDockSite(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetDockSite)
    return (BOOL)MySyscall(pToolBar_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetDockSite)
void
ToolBar_SetDockSite(TToolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolBar_SetDockSite)
    MySyscall(pToolBar_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetDragCursor)
TCursor
ToolBar_GetDragCursor(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetDragCursor)
    return (TCursor)MySyscall(pToolBar_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetDragCursor)
void
ToolBar_SetDragCursor(TToolBar AObj, TCursor AValue) {
    GET_FUNC_ADDR(ToolBar_SetDragCursor)
    MySyscall(pToolBar_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetDragKind)
TDragKind
ToolBar_GetDragKind(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetDragKind)
    return (TDragKind)MySyscall(pToolBar_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetDragKind)
void
ToolBar_SetDragKind(TToolBar AObj, TDragKind AValue) {
    GET_FUNC_ADDR(ToolBar_SetDragKind)
    MySyscall(pToolBar_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetDragMode)
TDragMode
ToolBar_GetDragMode(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetDragMode)
    return (TDragMode)MySyscall(pToolBar_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetDragMode)
void
ToolBar_SetDragMode(TToolBar AObj, TDragMode AValue) {
    GET_FUNC_ADDR(ToolBar_SetDragMode)
    MySyscall(pToolBar_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetEdgeBorders)
TEdgeBorders
ToolBar_GetEdgeBorders(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetEdgeBorders)
    return (TEdgeBorders)MySyscall(pToolBar_GetEdgeBorders, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetEdgeBorders)
void
ToolBar_SetEdgeBorders(TToolBar AObj, TEdgeBorders AValue) {
    GET_FUNC_ADDR(ToolBar_SetEdgeBorders)
    MySyscall(pToolBar_SetEdgeBorders, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetEdgeInner)
TEdgeStyle
ToolBar_GetEdgeInner(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetEdgeInner)
    return (TEdgeStyle)MySyscall(pToolBar_GetEdgeInner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetEdgeInner)
void
ToolBar_SetEdgeInner(TToolBar AObj, TEdgeStyle AValue) {
    GET_FUNC_ADDR(ToolBar_SetEdgeInner)
    MySyscall(pToolBar_SetEdgeInner, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetEdgeOuter)
TEdgeStyle
ToolBar_GetEdgeOuter(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetEdgeOuter)
    return (TEdgeStyle)MySyscall(pToolBar_GetEdgeOuter, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetEdgeOuter)
void
ToolBar_SetEdgeOuter(TToolBar AObj, TEdgeStyle AValue) {
    GET_FUNC_ADDR(ToolBar_SetEdgeOuter)
    MySyscall(pToolBar_SetEdgeOuter, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetEnabled)
BOOL
ToolBar_GetEnabled(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetEnabled)
    return (BOOL)MySyscall(pToolBar_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetEnabled)
void
ToolBar_SetEnabled(TToolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolBar_SetEnabled)
    MySyscall(pToolBar_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetFlat)
BOOL
ToolBar_GetFlat(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetFlat)
    return (BOOL)MySyscall(pToolBar_GetFlat, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetFlat)
void
ToolBar_SetFlat(TToolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolBar_SetFlat)
    MySyscall(pToolBar_SetFlat, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetFont)
TFont
ToolBar_GetFont(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetFont)
    return (TFont)MySyscall(pToolBar_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetFont)
void
ToolBar_SetFont(TToolBar AObj, TFont AValue) {
    GET_FUNC_ADDR(ToolBar_SetFont)
    MySyscall(pToolBar_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetHeight)
int32_t
ToolBar_GetHeight(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetHeight)
    return (int32_t)MySyscall(pToolBar_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetHeight)
void
ToolBar_SetHeight(TToolBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToolBar_SetHeight)
    MySyscall(pToolBar_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetHotImages)
TImageList
ToolBar_GetHotImages(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetHotImages)
    return (TImageList)MySyscall(pToolBar_GetHotImages, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetHotImages)
void
ToolBar_SetHotImages(TToolBar AObj, TImageList AValue) {
    GET_FUNC_ADDR(ToolBar_SetHotImages)
    MySyscall(pToolBar_SetHotImages, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetImages)
TImageList
ToolBar_GetImages(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetImages)
    return (TImageList)MySyscall(pToolBar_GetImages, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetImages)
void
ToolBar_SetImages(TToolBar AObj, TImageList AValue) {
    GET_FUNC_ADDR(ToolBar_SetImages)
    MySyscall(pToolBar_SetImages, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetIndent)
int32_t
ToolBar_GetIndent(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetIndent)
    return (int32_t)MySyscall(pToolBar_GetIndent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetIndent)
void
ToolBar_SetIndent(TToolBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToolBar_SetIndent)
    MySyscall(pToolBar_SetIndent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetList)
BOOL
ToolBar_GetList(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetList)
    return (BOOL)MySyscall(pToolBar_GetList, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetList)
void
ToolBar_SetList(TToolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolBar_SetList)
    MySyscall(pToolBar_SetList, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetParentColor)
BOOL
ToolBar_GetParentColor(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetParentColor)
    return (BOOL)MySyscall(pToolBar_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetParentColor)
void
ToolBar_SetParentColor(TToolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolBar_SetParentColor)
    MySyscall(pToolBar_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetParentDoubleBuffered)
BOOL
ToolBar_GetParentDoubleBuffered(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pToolBar_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetParentDoubleBuffered)
void
ToolBar_SetParentDoubleBuffered(TToolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolBar_SetParentDoubleBuffered)
    MySyscall(pToolBar_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetParentFont)
BOOL
ToolBar_GetParentFont(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetParentFont)
    return (BOOL)MySyscall(pToolBar_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetParentFont)
void
ToolBar_SetParentFont(TToolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolBar_SetParentFont)
    MySyscall(pToolBar_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetParentShowHint)
BOOL
ToolBar_GetParentShowHint(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetParentShowHint)
    return (BOOL)MySyscall(pToolBar_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetParentShowHint)
void
ToolBar_SetParentShowHint(TToolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolBar_SetParentShowHint)
    MySyscall(pToolBar_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetPopupMenu)
TPopupMenu
ToolBar_GetPopupMenu(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetPopupMenu)
    return (TPopupMenu)MySyscall(pToolBar_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetPopupMenu)
void
ToolBar_SetPopupMenu(TToolBar AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(ToolBar_SetPopupMenu)
    MySyscall(pToolBar_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetShowCaptions)
BOOL
ToolBar_GetShowCaptions(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetShowCaptions)
    return (BOOL)MySyscall(pToolBar_GetShowCaptions, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetShowCaptions)
void
ToolBar_SetShowCaptions(TToolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolBar_SetShowCaptions)
    MySyscall(pToolBar_SetShowCaptions, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetShowHint)
BOOL
ToolBar_GetShowHint(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetShowHint)
    return (BOOL)MySyscall(pToolBar_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetShowHint)
void
ToolBar_SetShowHint(TToolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolBar_SetShowHint)
    MySyscall(pToolBar_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetTabOrder)
TTabOrder
ToolBar_GetTabOrder(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetTabOrder)
    return (TTabOrder)MySyscall(pToolBar_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetTabOrder)
void
ToolBar_SetTabOrder(TToolBar AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(ToolBar_SetTabOrder)
    MySyscall(pToolBar_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetTabStop)
BOOL
ToolBar_GetTabStop(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetTabStop)
    return (BOOL)MySyscall(pToolBar_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetTabStop)
void
ToolBar_SetTabStop(TToolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolBar_SetTabStop)
    MySyscall(pToolBar_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetTransparent)
BOOL
ToolBar_GetTransparent(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetTransparent)
    return (BOOL)MySyscall(pToolBar_GetTransparent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetTransparent)
void
ToolBar_SetTransparent(TToolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolBar_SetTransparent)
    MySyscall(pToolBar_SetTransparent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetVisible)
BOOL
ToolBar_GetVisible(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetVisible)
    return (BOOL)MySyscall(pToolBar_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetVisible)
void
ToolBar_SetVisible(TToolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolBar_SetVisible)
    MySyscall(pToolBar_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetWrapable)
BOOL
ToolBar_GetWrapable(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetWrapable)
    return (BOOL)MySyscall(pToolBar_GetWrapable, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetWrapable)
void
ToolBar_SetWrapable(TToolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolBar_SetWrapable)
    MySyscall(pToolBar_SetWrapable, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetOnClick)
void
ToolBar_SetOnClick(TToolBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ToolBar_SetOnClick)
    MySyscall(pToolBar_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetOnContextPopup)
void
ToolBar_SetOnContextPopup(TToolBar AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(ToolBar_SetOnContextPopup)
    MySyscall(pToolBar_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetOnDblClick)
void
ToolBar_SetOnDblClick(TToolBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ToolBar_SetOnDblClick)
    MySyscall(pToolBar_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetOnDockDrop)
void
ToolBar_SetOnDockDrop(TToolBar AObj, TDockDropEvent AEventData) {
    GET_FUNC_ADDR(ToolBar_SetOnDockDrop)
    MySyscall(pToolBar_SetOnDockDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetOnDragDrop)
void
ToolBar_SetOnDragDrop(TToolBar AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(ToolBar_SetOnDragDrop)
    MySyscall(pToolBar_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetOnDragOver)
void
ToolBar_SetOnDragOver(TToolBar AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(ToolBar_SetOnDragOver)
    MySyscall(pToolBar_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetOnEndDrag)
void
ToolBar_SetOnEndDrag(TToolBar AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(ToolBar_SetOnEndDrag)
    MySyscall(pToolBar_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetOnEnter)
void
ToolBar_SetOnEnter(TToolBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ToolBar_SetOnEnter)
    MySyscall(pToolBar_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetOnExit)
void
ToolBar_SetOnExit(TToolBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ToolBar_SetOnExit)
    MySyscall(pToolBar_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetOnMouseDown)
void
ToolBar_SetOnMouseDown(TToolBar AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(ToolBar_SetOnMouseDown)
    MySyscall(pToolBar_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetOnMouseEnter)
void
ToolBar_SetOnMouseEnter(TToolBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ToolBar_SetOnMouseEnter)
    MySyscall(pToolBar_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetOnMouseLeave)
void
ToolBar_SetOnMouseLeave(TToolBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ToolBar_SetOnMouseLeave)
    MySyscall(pToolBar_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetOnMouseMove)
void
ToolBar_SetOnMouseMove(TToolBar AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(ToolBar_SetOnMouseMove)
    MySyscall(pToolBar_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetOnMouseUp)
void
ToolBar_SetOnMouseUp(TToolBar AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(ToolBar_SetOnMouseUp)
    MySyscall(pToolBar_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetOnResize)
void
ToolBar_SetOnResize(TToolBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ToolBar_SetOnResize)
    MySyscall(pToolBar_SetOnResize, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetOnUnDock)
void
ToolBar_SetOnUnDock(TToolBar AObj, TUnDockEvent AEventData) {
    GET_FUNC_ADDR(ToolBar_SetOnUnDock)
    MySyscall(pToolBar_SetOnUnDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetDockClientCount)
int32_t
ToolBar_GetDockClientCount(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetDockClientCount)
    return (int32_t)MySyscall(pToolBar_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetMouseInClient)
BOOL
ToolBar_GetMouseInClient(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetMouseInClient)
    return (BOOL)MySyscall(pToolBar_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetVisibleDockClientCount)
int32_t
ToolBar_GetVisibleDockClientCount(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pToolBar_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetBrush)
TBrush
ToolBar_GetBrush(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetBrush)
    return (TBrush)MySyscall(pToolBar_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetControlCount)
int32_t
ToolBar_GetControlCount(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetControlCount)
    return (int32_t)MySyscall(pToolBar_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetHandle)
HWND
ToolBar_GetHandle(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetHandle)
    return (HWND)MySyscall(pToolBar_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetParentWindow)
HWND
ToolBar_GetParentWindow(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetParentWindow)
    return (HWND)MySyscall(pToolBar_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetParentWindow)
void
ToolBar_SetParentWindow(TToolBar AObj, HWND AValue) {
    GET_FUNC_ADDR(ToolBar_SetParentWindow)
    MySyscall(pToolBar_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetShowing)
BOOL
ToolBar_GetShowing(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetShowing)
    return (BOOL)MySyscall(pToolBar_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetUseDockManager)
BOOL
ToolBar_GetUseDockManager(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetUseDockManager)
    return (BOOL)MySyscall(pToolBar_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetUseDockManager)
void
ToolBar_SetUseDockManager(TToolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolBar_SetUseDockManager)
    MySyscall(pToolBar_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetAction)
TAction
ToolBar_GetAction(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetAction)
    return (TAction)MySyscall(pToolBar_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetAction)
void
ToolBar_SetAction(TToolBar AObj, TAction AValue) {
    GET_FUNC_ADDR(ToolBar_SetAction)
    MySyscall(pToolBar_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetBiDiMode)
TBiDiMode
ToolBar_GetBiDiMode(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetBiDiMode)
    return (TBiDiMode)MySyscall(pToolBar_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetBiDiMode)
void
ToolBar_SetBiDiMode(TToolBar AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(ToolBar_SetBiDiMode)
    MySyscall(pToolBar_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetBoundsRect)
TRect
ToolBar_GetBoundsRect(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetBoundsRect)
    TRect result;
    MySyscall(pToolBar_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ToolBar_SetBoundsRect)
void
ToolBar_SetBoundsRect(TToolBar AObj, TRect AValue) {
    GET_FUNC_ADDR(ToolBar_SetBoundsRect)
    MySyscall(pToolBar_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetClientHeight)
int32_t
ToolBar_GetClientHeight(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetClientHeight)
    return (int32_t)MySyscall(pToolBar_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetClientHeight)
void
ToolBar_SetClientHeight(TToolBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToolBar_SetClientHeight)
    MySyscall(pToolBar_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetClientOrigin)
TPoint
ToolBar_GetClientOrigin(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetClientOrigin)
    TPoint result;
    MySyscall(pToolBar_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ToolBar_GetClientRect)
TRect
ToolBar_GetClientRect(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetClientRect)
    TRect result;
    MySyscall(pToolBar_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ToolBar_GetClientWidth)
int32_t
ToolBar_GetClientWidth(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetClientWidth)
    return (int32_t)MySyscall(pToolBar_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetClientWidth)
void
ToolBar_SetClientWidth(TToolBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToolBar_SetClientWidth)
    MySyscall(pToolBar_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetControlState)
TControlState
ToolBar_GetControlState(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetControlState)
    return (TControlState)MySyscall(pToolBar_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetControlState)
void
ToolBar_SetControlState(TToolBar AObj, TControlState AValue) {
    GET_FUNC_ADDR(ToolBar_SetControlState)
    MySyscall(pToolBar_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetControlStyle)
TControlStyle
ToolBar_GetControlStyle(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetControlStyle)
    return (TControlStyle)MySyscall(pToolBar_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetControlStyle)
void
ToolBar_SetControlStyle(TToolBar AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(ToolBar_SetControlStyle)
    MySyscall(pToolBar_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetFloating)
BOOL
ToolBar_GetFloating(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetFloating)
    return (BOOL)MySyscall(pToolBar_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetParent)
TWinControl
ToolBar_GetParent(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetParent)
    return (TWinControl)MySyscall(pToolBar_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetParent)
void
ToolBar_SetParent(TToolBar AObj, TWinControl AValue) {
    GET_FUNC_ADDR(ToolBar_SetParent)
    MySyscall(pToolBar_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetLeft)
int32_t
ToolBar_GetLeft(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetLeft)
    return (int32_t)MySyscall(pToolBar_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetLeft)
void
ToolBar_SetLeft(TToolBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToolBar_SetLeft)
    MySyscall(pToolBar_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetTop)
int32_t
ToolBar_GetTop(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetTop)
    return (int32_t)MySyscall(pToolBar_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetTop)
void
ToolBar_SetTop(TToolBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToolBar_SetTop)
    MySyscall(pToolBar_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetWidth)
int32_t
ToolBar_GetWidth(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetWidth)
    return (int32_t)MySyscall(pToolBar_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetWidth)
void
ToolBar_SetWidth(TToolBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToolBar_SetWidth)
    MySyscall(pToolBar_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetCursor)
TCursor
ToolBar_GetCursor(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetCursor)
    return (TCursor)MySyscall(pToolBar_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetCursor)
void
ToolBar_SetCursor(TToolBar AObj, TCursor AValue) {
    GET_FUNC_ADDR(ToolBar_SetCursor)
    MySyscall(pToolBar_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetHint)
char*
ToolBar_GetHint(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetHint)
    return (char*)MySyscall(pToolBar_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetHint)
void
ToolBar_SetHint(TToolBar AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ToolBar_SetHint)
    MySyscall(pToolBar_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetComponentCount)
int32_t
ToolBar_GetComponentCount(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetComponentCount)
    return (int32_t)MySyscall(pToolBar_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetComponentIndex)
int32_t
ToolBar_GetComponentIndex(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetComponentIndex)
    return (int32_t)MySyscall(pToolBar_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetComponentIndex)
void
ToolBar_SetComponentIndex(TToolBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToolBar_SetComponentIndex)
    MySyscall(pToolBar_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetOwner)
TComponent
ToolBar_GetOwner(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetOwner)
    return (TComponent)MySyscall(pToolBar_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetName)
char*
ToolBar_GetName(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetName)
    return (char*)MySyscall(pToolBar_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetName)
void
ToolBar_SetName(TToolBar AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ToolBar_SetName)
    MySyscall(pToolBar_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetTag)
intptr_t
ToolBar_GetTag(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetTag)
    return (intptr_t)MySyscall(pToolBar_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetTag)
void
ToolBar_SetTag(TToolBar AObj, intptr_t AValue) {
    GET_FUNC_ADDR(ToolBar_SetTag)
    MySyscall(pToolBar_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetAnchorSideLeft)
TAnchorSide
ToolBar_GetAnchorSideLeft(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pToolBar_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetAnchorSideLeft)
void
ToolBar_SetAnchorSideLeft(TToolBar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ToolBar_SetAnchorSideLeft)
    MySyscall(pToolBar_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetAnchorSideTop)
TAnchorSide
ToolBar_GetAnchorSideTop(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pToolBar_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetAnchorSideTop)
void
ToolBar_SetAnchorSideTop(TToolBar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ToolBar_SetAnchorSideTop)
    MySyscall(pToolBar_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetAnchorSideRight)
TAnchorSide
ToolBar_GetAnchorSideRight(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pToolBar_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetAnchorSideRight)
void
ToolBar_SetAnchorSideRight(TToolBar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ToolBar_SetAnchorSideRight)
    MySyscall(pToolBar_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetAnchorSideBottom)
TAnchorSide
ToolBar_GetAnchorSideBottom(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pToolBar_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetAnchorSideBottom)
void
ToolBar_SetAnchorSideBottom(TToolBar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ToolBar_SetAnchorSideBottom)
    MySyscall(pToolBar_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetChildSizing)
TControlChildSizing
ToolBar_GetChildSizing(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetChildSizing)
    return (TControlChildSizing)MySyscall(pToolBar_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetChildSizing)
void
ToolBar_SetChildSizing(TToolBar AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(ToolBar_SetChildSizing)
    MySyscall(pToolBar_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetBorderSpacing)
TControlBorderSpacing
ToolBar_GetBorderSpacing(TToolBar AObj) {
    GET_FUNC_ADDR(ToolBar_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pToolBar_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_SetBorderSpacing)
void
ToolBar_SetBorderSpacing(TToolBar AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(ToolBar_SetBorderSpacing)
    MySyscall(pToolBar_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetButtons)
TToolButton
ToolBar_GetButtons(TToolBar AObj, int32_t Index) {
    GET_FUNC_ADDR(ToolBar_GetButtons)
    return (TToolButton)MySyscall(pToolBar_GetButtons, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetDockClients)
TControl
ToolBar_GetDockClients(TToolBar AObj, int32_t Index) {
    GET_FUNC_ADDR(ToolBar_GetDockClients)
    return (TControl)MySyscall(pToolBar_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetControls)
TControl
ToolBar_GetControls(TToolBar AObj, int32_t Index) {
    GET_FUNC_ADDR(ToolBar_GetControls)
    return (TControl)MySyscall(pToolBar_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetComponents)
TComponent
ToolBar_GetComponents(TToolBar AObj, int32_t AIndex) {
    GET_FUNC_ADDR(ToolBar_GetComponents)
    return (TComponent)MySyscall(pToolBar_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_GetAnchorSide)
TAnchorSide
ToolBar_GetAnchorSide(TToolBar AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(ToolBar_GetAnchorSide)
    return (TAnchorSide)MySyscall(pToolBar_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolBar_StaticClassType)
TClass
ToolBar_StaticClassType() {
    GET_FUNC_ADDR(ToolBar_StaticClassType)
    return (TClass)MySyscall(pToolBar_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TBitBtn-------------------

DEFINE_FUNC_PTR(BitBtn_Create)
TBitBtn
BitBtn_Create(TComponent AOwner) {
    GET_FUNC_ADDR(BitBtn_Create)
    return (TBitBtn)MySyscall(pBitBtn_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_Free)
void
BitBtn_Free(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_Free)
    MySyscall(pBitBtn_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_Click)
void
BitBtn_Click(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_Click)
    MySyscall(pBitBtn_Click, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_CanFocus)
BOOL
BitBtn_CanFocus(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_CanFocus)
    return (BOOL)MySyscall(pBitBtn_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_ContainsControl)
BOOL
BitBtn_ContainsControl(TBitBtn AObj, TControl Control) {
    GET_FUNC_ADDR(BitBtn_ContainsControl)
    return (BOOL)MySyscall(pBitBtn_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_ControlAtPos)
TControl
BitBtn_ControlAtPos(TBitBtn AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(BitBtn_ControlAtPos)
    return (TControl)MySyscall(pBitBtn_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_DisableAlign)
void
BitBtn_DisableAlign(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_DisableAlign)
    MySyscall(pBitBtn_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_EnableAlign)
void
BitBtn_EnableAlign(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_EnableAlign)
    MySyscall(pBitBtn_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_FindChildControl)
TControl
BitBtn_FindChildControl(TBitBtn AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(BitBtn_FindChildControl)
    return (TControl)MySyscall(pBitBtn_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_FlipChildren)
void
BitBtn_FlipChildren(TBitBtn AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(BitBtn_FlipChildren)
    MySyscall(pBitBtn_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_Focused)
BOOL
BitBtn_Focused(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_Focused)
    return (BOOL)MySyscall(pBitBtn_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_HandleAllocated)
BOOL
BitBtn_HandleAllocated(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_HandleAllocated)
    return (BOOL)MySyscall(pBitBtn_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_InsertControl)
void
BitBtn_InsertControl(TBitBtn AObj, TControl AControl) {
    GET_FUNC_ADDR(BitBtn_InsertControl)
    MySyscall(pBitBtn_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_Invalidate)
void
BitBtn_Invalidate(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_Invalidate)
    MySyscall(pBitBtn_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_PaintTo)
void
BitBtn_PaintTo(TBitBtn AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(BitBtn_PaintTo)
    MySyscall(pBitBtn_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_RemoveControl)
void
BitBtn_RemoveControl(TBitBtn AObj, TControl AControl) {
    GET_FUNC_ADDR(BitBtn_RemoveControl)
    MySyscall(pBitBtn_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_Realign)
void
BitBtn_Realign(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_Realign)
    MySyscall(pBitBtn_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_Repaint)
void
BitBtn_Repaint(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_Repaint)
    MySyscall(pBitBtn_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_ScaleBy)
void
BitBtn_ScaleBy(TBitBtn AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(BitBtn_ScaleBy)
    MySyscall(pBitBtn_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_ScrollBy)
void
BitBtn_ScrollBy(TBitBtn AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(BitBtn_ScrollBy)
    MySyscall(pBitBtn_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetBounds)
void
BitBtn_SetBounds(TBitBtn AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(BitBtn_SetBounds)
    MySyscall(pBitBtn_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetFocus)
void
BitBtn_SetFocus(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_SetFocus)
    MySyscall(pBitBtn_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_Update)
void
BitBtn_Update(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_Update)
    MySyscall(pBitBtn_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_BringToFront)
void
BitBtn_BringToFront(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_BringToFront)
    MySyscall(pBitBtn_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_ClientToScreen)
TPoint
BitBtn_ClientToScreen(TBitBtn AObj, TPoint Point) {
    GET_FUNC_ADDR(BitBtn_ClientToScreen)
    TPoint result;
    MySyscall(pBitBtn_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(BitBtn_ClientToParent)
TPoint
BitBtn_ClientToParent(TBitBtn AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(BitBtn_ClientToParent)
    TPoint result;
    MySyscall(pBitBtn_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(BitBtn_Dragging)
BOOL
BitBtn_Dragging(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_Dragging)
    return (BOOL)MySyscall(pBitBtn_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_HasParent)
BOOL
BitBtn_HasParent(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_HasParent)
    return (BOOL)MySyscall(pBitBtn_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_Hide)
void
BitBtn_Hide(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_Hide)
    MySyscall(pBitBtn_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_Perform)
intptr_t
BitBtn_Perform(TBitBtn AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(BitBtn_Perform)
    return (intptr_t)MySyscall(pBitBtn_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_Refresh)
void
BitBtn_Refresh(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_Refresh)
    MySyscall(pBitBtn_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_ScreenToClient)
TPoint
BitBtn_ScreenToClient(TBitBtn AObj, TPoint Point) {
    GET_FUNC_ADDR(BitBtn_ScreenToClient)
    TPoint result;
    MySyscall(pBitBtn_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(BitBtn_ParentToClient)
TPoint
BitBtn_ParentToClient(TBitBtn AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(BitBtn_ParentToClient)
    TPoint result;
    MySyscall(pBitBtn_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(BitBtn_SendToBack)
void
BitBtn_SendToBack(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_SendToBack)
    MySyscall(pBitBtn_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_Show)
void
BitBtn_Show(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_Show)
    MySyscall(pBitBtn_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetTextBuf)
int32_t
BitBtn_GetTextBuf(TBitBtn AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(BitBtn_GetTextBuf)
    return (int32_t)MySyscall(pBitBtn_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetTextLen)
int32_t
BitBtn_GetTextLen(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetTextLen)
    return (int32_t)MySyscall(pBitBtn_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetTextBuf)
void
BitBtn_SetTextBuf(TBitBtn AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(BitBtn_SetTextBuf)
    MySyscall(pBitBtn_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_FindComponent)
TComponent
BitBtn_FindComponent(TBitBtn AObj, CChar char* AName) {
    GET_FUNC_ADDR(BitBtn_FindComponent)
    return (TComponent)MySyscall(pBitBtn_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetNamePath)
char*
BitBtn_GetNamePath(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetNamePath)
    return (char*)MySyscall(pBitBtn_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_Assign)
void
BitBtn_Assign(TBitBtn AObj, TObject Source) {
    GET_FUNC_ADDR(BitBtn_Assign)
    MySyscall(pBitBtn_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_ClassType)
TClass
BitBtn_ClassType(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_ClassType)
    return (TClass)MySyscall(pBitBtn_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_ClassName)
char*
BitBtn_ClassName(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_ClassName)
    return (char*)MySyscall(pBitBtn_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_InstanceSize)
int32_t
BitBtn_InstanceSize(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_InstanceSize)
    return (int32_t)MySyscall(pBitBtn_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_InheritsFrom)
BOOL
BitBtn_InheritsFrom(TBitBtn AObj, TClass AClass) {
    GET_FUNC_ADDR(BitBtn_InheritsFrom)
    return (BOOL)MySyscall(pBitBtn_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_Equals)
BOOL
BitBtn_Equals(TBitBtn AObj, TObject Obj) {
    GET_FUNC_ADDR(BitBtn_Equals)
    return (BOOL)MySyscall(pBitBtn_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetHashCode)
int32_t
BitBtn_GetHashCode(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetHashCode)
    return (int32_t)MySyscall(pBitBtn_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_ToString)
char*
BitBtn_ToString(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_ToString)
    return (char*)MySyscall(pBitBtn_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_AnchorToNeighbour)
void
BitBtn_AnchorToNeighbour(TBitBtn AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(BitBtn_AnchorToNeighbour)
    MySyscall(pBitBtn_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_AnchorParallel)
void
BitBtn_AnchorParallel(TBitBtn AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(BitBtn_AnchorParallel)
    MySyscall(pBitBtn_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_AnchorHorizontalCenterTo)
void
BitBtn_AnchorHorizontalCenterTo(TBitBtn AObj, TControl ASibling) {
    GET_FUNC_ADDR(BitBtn_AnchorHorizontalCenterTo)
    MySyscall(pBitBtn_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_AnchorVerticalCenterTo)
void
BitBtn_AnchorVerticalCenterTo(TBitBtn AObj, TControl ASibling) {
    GET_FUNC_ADDR(BitBtn_AnchorVerticalCenterTo)
    MySyscall(pBitBtn_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_AnchorSame)
void
BitBtn_AnchorSame(TBitBtn AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(BitBtn_AnchorSame)
    MySyscall(pBitBtn_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_AnchorAsAlign)
void
BitBtn_AnchorAsAlign(TBitBtn AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(BitBtn_AnchorAsAlign)
    MySyscall(pBitBtn_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_AnchorClient)
void
BitBtn_AnchorClient(TBitBtn AObj, int32_t ASpace) {
    GET_FUNC_ADDR(BitBtn_AnchorClient)
    MySyscall(pBitBtn_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_ScaleDesignToForm)
int32_t
BitBtn_ScaleDesignToForm(TBitBtn AObj, int32_t ASize) {
    GET_FUNC_ADDR(BitBtn_ScaleDesignToForm)
    return (int32_t)MySyscall(pBitBtn_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_ScaleFormToDesign)
int32_t
BitBtn_ScaleFormToDesign(TBitBtn AObj, int32_t ASize) {
    GET_FUNC_ADDR(BitBtn_ScaleFormToDesign)
    return (int32_t)MySyscall(pBitBtn_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_Scale96ToForm)
int32_t
BitBtn_Scale96ToForm(TBitBtn AObj, int32_t ASize) {
    GET_FUNC_ADDR(BitBtn_Scale96ToForm)
    return (int32_t)MySyscall(pBitBtn_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_ScaleFormTo96)
int32_t
BitBtn_ScaleFormTo96(TBitBtn AObj, int32_t ASize) {
    GET_FUNC_ADDR(BitBtn_ScaleFormTo96)
    return (int32_t)MySyscall(pBitBtn_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_Scale96ToFont)
int32_t
BitBtn_Scale96ToFont(TBitBtn AObj, int32_t ASize) {
    GET_FUNC_ADDR(BitBtn_Scale96ToFont)
    return (int32_t)MySyscall(pBitBtn_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_ScaleFontTo96)
int32_t
BitBtn_ScaleFontTo96(TBitBtn AObj, int32_t ASize) {
    GET_FUNC_ADDR(BitBtn_ScaleFontTo96)
    return (int32_t)MySyscall(pBitBtn_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_ScaleScreenToFont)
int32_t
BitBtn_ScaleScreenToFont(TBitBtn AObj, int32_t ASize) {
    GET_FUNC_ADDR(BitBtn_ScaleScreenToFont)
    return (int32_t)MySyscall(pBitBtn_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_ScaleFontToScreen)
int32_t
BitBtn_ScaleFontToScreen(TBitBtn AObj, int32_t ASize) {
    GET_FUNC_ADDR(BitBtn_ScaleFontToScreen)
    return (int32_t)MySyscall(pBitBtn_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_Scale96ToScreen)
int32_t
BitBtn_Scale96ToScreen(TBitBtn AObj, int32_t ASize) {
    GET_FUNC_ADDR(BitBtn_Scale96ToScreen)
    return (int32_t)MySyscall(pBitBtn_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_ScaleScreenTo96)
int32_t
BitBtn_ScaleScreenTo96(TBitBtn AObj, int32_t ASize) {
    GET_FUNC_ADDR(BitBtn_ScaleScreenTo96)
    return (int32_t)MySyscall(pBitBtn_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_AutoAdjustLayout)
void
BitBtn_AutoAdjustLayout(TBitBtn AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(BitBtn_AutoAdjustLayout)
    MySyscall(pBitBtn_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_FixDesignFontsPPI)
void
BitBtn_FixDesignFontsPPI(TBitBtn AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(BitBtn_FixDesignFontsPPI)
    MySyscall(pBitBtn_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_ScaleFontsPPI)
void
BitBtn_ScaleFontsPPI(TBitBtn AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(BitBtn_ScaleFontsPPI)
    MySyscall(pBitBtn_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetDefaultCaption)
BOOL
BitBtn_GetDefaultCaption(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetDefaultCaption)
    return (BOOL)MySyscall(pBitBtn_GetDefaultCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetDefaultCaption)
void
BitBtn_SetDefaultCaption(TBitBtn AObj, BOOL AValue) {
    GET_FUNC_ADDR(BitBtn_SetDefaultCaption)
    MySyscall(pBitBtn_SetDefaultCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetGlyphShowMode)
TGlyphShowMode
BitBtn_GetGlyphShowMode(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetGlyphShowMode)
    return (TGlyphShowMode)MySyscall(pBitBtn_GetGlyphShowMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetGlyphShowMode)
void
BitBtn_SetGlyphShowMode(TBitBtn AObj, TGlyphShowMode AValue) {
    GET_FUNC_ADDR(BitBtn_SetGlyphShowMode)
    MySyscall(pBitBtn_SetGlyphShowMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetImageIndex)
int32_t
BitBtn_GetImageIndex(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetImageIndex)
    return (int32_t)MySyscall(pBitBtn_GetImageIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetImageIndex)
void
BitBtn_SetImageIndex(TBitBtn AObj, int32_t AValue) {
    GET_FUNC_ADDR(BitBtn_SetImageIndex)
    MySyscall(pBitBtn_SetImageIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetImages)
TImageList
BitBtn_GetImages(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetImages)
    return (TImageList)MySyscall(pBitBtn_GetImages, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetImages)
void
BitBtn_SetImages(TBitBtn AObj, TImageList AValue) {
    GET_FUNC_ADDR(BitBtn_SetImages)
    MySyscall(pBitBtn_SetImages, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetImageWidth)
int32_t
BitBtn_GetImageWidth(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetImageWidth)
    return (int32_t)MySyscall(pBitBtn_GetImageWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetImageWidth)
void
BitBtn_SetImageWidth(TBitBtn AObj, int32_t AValue) {
    GET_FUNC_ADDR(BitBtn_SetImageWidth)
    MySyscall(pBitBtn_SetImageWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetAction)
TAction
BitBtn_GetAction(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetAction)
    return (TAction)MySyscall(pBitBtn_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetAction)
void
BitBtn_SetAction(TBitBtn AObj, TAction AValue) {
    GET_FUNC_ADDR(BitBtn_SetAction)
    MySyscall(pBitBtn_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetAlign)
TAlign
BitBtn_GetAlign(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetAlign)
    return (TAlign)MySyscall(pBitBtn_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetAlign)
void
BitBtn_SetAlign(TBitBtn AObj, TAlign AValue) {
    GET_FUNC_ADDR(BitBtn_SetAlign)
    MySyscall(pBitBtn_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetAnchors)
TAnchors
BitBtn_GetAnchors(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetAnchors)
    return (TAnchors)MySyscall(pBitBtn_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetAnchors)
void
BitBtn_SetAnchors(TBitBtn AObj, TAnchors AValue) {
    GET_FUNC_ADDR(BitBtn_SetAnchors)
    MySyscall(pBitBtn_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetBiDiMode)
TBiDiMode
BitBtn_GetBiDiMode(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetBiDiMode)
    return (TBiDiMode)MySyscall(pBitBtn_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetBiDiMode)
void
BitBtn_SetBiDiMode(TBitBtn AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(BitBtn_SetBiDiMode)
    MySyscall(pBitBtn_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetCancel)
BOOL
BitBtn_GetCancel(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetCancel)
    return (BOOL)MySyscall(pBitBtn_GetCancel, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetCancel)
void
BitBtn_SetCancel(TBitBtn AObj, BOOL AValue) {
    GET_FUNC_ADDR(BitBtn_SetCancel)
    MySyscall(pBitBtn_SetCancel, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetCaption)
char*
BitBtn_GetCaption(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetCaption)
    return (char*)MySyscall(pBitBtn_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetCaption)
void
BitBtn_SetCaption(TBitBtn AObj, CChar char* AValue) {
    GET_FUNC_ADDR(BitBtn_SetCaption)
    MySyscall(pBitBtn_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetConstraints)
TSizeConstraints
BitBtn_GetConstraints(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetConstraints)
    return (TSizeConstraints)MySyscall(pBitBtn_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetConstraints)
void
BitBtn_SetConstraints(TBitBtn AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(BitBtn_SetConstraints)
    MySyscall(pBitBtn_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetDefault)
BOOL
BitBtn_GetDefault(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetDefault)
    return (BOOL)MySyscall(pBitBtn_GetDefault, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetDefault)
void
BitBtn_SetDefault(TBitBtn AObj, BOOL AValue) {
    GET_FUNC_ADDR(BitBtn_SetDefault)
    MySyscall(pBitBtn_SetDefault, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetDoubleBuffered)
BOOL
BitBtn_GetDoubleBuffered(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetDoubleBuffered)
    return (BOOL)MySyscall(pBitBtn_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetDoubleBuffered)
void
BitBtn_SetDoubleBuffered(TBitBtn AObj, BOOL AValue) {
    GET_FUNC_ADDR(BitBtn_SetDoubleBuffered)
    MySyscall(pBitBtn_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetEnabled)
BOOL
BitBtn_GetEnabled(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetEnabled)
    return (BOOL)MySyscall(pBitBtn_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetEnabled)
void
BitBtn_SetEnabled(TBitBtn AObj, BOOL AValue) {
    GET_FUNC_ADDR(BitBtn_SetEnabled)
    MySyscall(pBitBtn_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetFont)
TFont
BitBtn_GetFont(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetFont)
    return (TFont)MySyscall(pBitBtn_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetFont)
void
BitBtn_SetFont(TBitBtn AObj, TFont AValue) {
    GET_FUNC_ADDR(BitBtn_SetFont)
    MySyscall(pBitBtn_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetGlyph)
TBitmap
BitBtn_GetGlyph(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetGlyph)
    return (TBitmap)MySyscall(pBitBtn_GetGlyph, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetGlyph)
void
BitBtn_SetGlyph(TBitBtn AObj, TBitmap AValue) {
    GET_FUNC_ADDR(BitBtn_SetGlyph)
    MySyscall(pBitBtn_SetGlyph, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetKind)
TBitBtnKind
BitBtn_GetKind(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetKind)
    return (TBitBtnKind)MySyscall(pBitBtn_GetKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetKind)
void
BitBtn_SetKind(TBitBtn AObj, TBitBtnKind AValue) {
    GET_FUNC_ADDR(BitBtn_SetKind)
    MySyscall(pBitBtn_SetKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetLayout)
TButtonLayout
BitBtn_GetLayout(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetLayout)
    return (TButtonLayout)MySyscall(pBitBtn_GetLayout, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetLayout)
void
BitBtn_SetLayout(TBitBtn AObj, TButtonLayout AValue) {
    GET_FUNC_ADDR(BitBtn_SetLayout)
    MySyscall(pBitBtn_SetLayout, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetModalResult)
TModalResult
BitBtn_GetModalResult(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetModalResult)
    return (TModalResult)MySyscall(pBitBtn_GetModalResult, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetModalResult)
void
BitBtn_SetModalResult(TBitBtn AObj, TModalResult AValue) {
    GET_FUNC_ADDR(BitBtn_SetModalResult)
    MySyscall(pBitBtn_SetModalResult, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetNumGlyphs)
TNumGlyphs
BitBtn_GetNumGlyphs(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetNumGlyphs)
    return (TNumGlyphs)MySyscall(pBitBtn_GetNumGlyphs, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetNumGlyphs)
void
BitBtn_SetNumGlyphs(TBitBtn AObj, TNumGlyphs AValue) {
    GET_FUNC_ADDR(BitBtn_SetNumGlyphs)
    MySyscall(pBitBtn_SetNumGlyphs, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetParentDoubleBuffered)
BOOL
BitBtn_GetParentDoubleBuffered(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pBitBtn_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetParentDoubleBuffered)
void
BitBtn_SetParentDoubleBuffered(TBitBtn AObj, BOOL AValue) {
    GET_FUNC_ADDR(BitBtn_SetParentDoubleBuffered)
    MySyscall(pBitBtn_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetParentFont)
BOOL
BitBtn_GetParentFont(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetParentFont)
    return (BOOL)MySyscall(pBitBtn_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetParentFont)
void
BitBtn_SetParentFont(TBitBtn AObj, BOOL AValue) {
    GET_FUNC_ADDR(BitBtn_SetParentFont)
    MySyscall(pBitBtn_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetParentShowHint)
BOOL
BitBtn_GetParentShowHint(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetParentShowHint)
    return (BOOL)MySyscall(pBitBtn_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetParentShowHint)
void
BitBtn_SetParentShowHint(TBitBtn AObj, BOOL AValue) {
    GET_FUNC_ADDR(BitBtn_SetParentShowHint)
    MySyscall(pBitBtn_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetPopupMenu)
TPopupMenu
BitBtn_GetPopupMenu(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetPopupMenu)
    return (TPopupMenu)MySyscall(pBitBtn_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetPopupMenu)
void
BitBtn_SetPopupMenu(TBitBtn AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(BitBtn_SetPopupMenu)
    MySyscall(pBitBtn_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetShowHint)
BOOL
BitBtn_GetShowHint(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetShowHint)
    return (BOOL)MySyscall(pBitBtn_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetShowHint)
void
BitBtn_SetShowHint(TBitBtn AObj, BOOL AValue) {
    GET_FUNC_ADDR(BitBtn_SetShowHint)
    MySyscall(pBitBtn_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetSpacing)
int32_t
BitBtn_GetSpacing(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetSpacing)
    return (int32_t)MySyscall(pBitBtn_GetSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetSpacing)
void
BitBtn_SetSpacing(TBitBtn AObj, int32_t AValue) {
    GET_FUNC_ADDR(BitBtn_SetSpacing)
    MySyscall(pBitBtn_SetSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetTabOrder)
TTabOrder
BitBtn_GetTabOrder(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetTabOrder)
    return (TTabOrder)MySyscall(pBitBtn_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetTabOrder)
void
BitBtn_SetTabOrder(TBitBtn AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(BitBtn_SetTabOrder)
    MySyscall(pBitBtn_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetTabStop)
BOOL
BitBtn_GetTabStop(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetTabStop)
    return (BOOL)MySyscall(pBitBtn_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetTabStop)
void
BitBtn_SetTabStop(TBitBtn AObj, BOOL AValue) {
    GET_FUNC_ADDR(BitBtn_SetTabStop)
    MySyscall(pBitBtn_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetVisible)
BOOL
BitBtn_GetVisible(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetVisible)
    return (BOOL)MySyscall(pBitBtn_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetVisible)
void
BitBtn_SetVisible(TBitBtn AObj, BOOL AValue) {
    GET_FUNC_ADDR(BitBtn_SetVisible)
    MySyscall(pBitBtn_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetOnClick)
void
BitBtn_SetOnClick(TBitBtn AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(BitBtn_SetOnClick)
    MySyscall(pBitBtn_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetOnContextPopup)
void
BitBtn_SetOnContextPopup(TBitBtn AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(BitBtn_SetOnContextPopup)
    MySyscall(pBitBtn_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetOnDragDrop)
void
BitBtn_SetOnDragDrop(TBitBtn AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(BitBtn_SetOnDragDrop)
    MySyscall(pBitBtn_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetOnDragOver)
void
BitBtn_SetOnDragOver(TBitBtn AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(BitBtn_SetOnDragOver)
    MySyscall(pBitBtn_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetOnEndDrag)
void
BitBtn_SetOnEndDrag(TBitBtn AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(BitBtn_SetOnEndDrag)
    MySyscall(pBitBtn_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetOnEnter)
void
BitBtn_SetOnEnter(TBitBtn AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(BitBtn_SetOnEnter)
    MySyscall(pBitBtn_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetOnExit)
void
BitBtn_SetOnExit(TBitBtn AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(BitBtn_SetOnExit)
    MySyscall(pBitBtn_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetOnKeyDown)
void
BitBtn_SetOnKeyDown(TBitBtn AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(BitBtn_SetOnKeyDown)
    MySyscall(pBitBtn_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetOnKeyPress)
void
BitBtn_SetOnKeyPress(TBitBtn AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(BitBtn_SetOnKeyPress)
    MySyscall(pBitBtn_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetOnKeyUp)
void
BitBtn_SetOnKeyUp(TBitBtn AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(BitBtn_SetOnKeyUp)
    MySyscall(pBitBtn_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetOnMouseDown)
void
BitBtn_SetOnMouseDown(TBitBtn AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(BitBtn_SetOnMouseDown)
    MySyscall(pBitBtn_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetOnMouseEnter)
void
BitBtn_SetOnMouseEnter(TBitBtn AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(BitBtn_SetOnMouseEnter)
    MySyscall(pBitBtn_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetOnMouseLeave)
void
BitBtn_SetOnMouseLeave(TBitBtn AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(BitBtn_SetOnMouseLeave)
    MySyscall(pBitBtn_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetOnMouseMove)
void
BitBtn_SetOnMouseMove(TBitBtn AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(BitBtn_SetOnMouseMove)
    MySyscall(pBitBtn_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetOnMouseUp)
void
BitBtn_SetOnMouseUp(TBitBtn AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(BitBtn_SetOnMouseUp)
    MySyscall(pBitBtn_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetDockClientCount)
int32_t
BitBtn_GetDockClientCount(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetDockClientCount)
    return (int32_t)MySyscall(pBitBtn_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetDockSite)
BOOL
BitBtn_GetDockSite(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetDockSite)
    return (BOOL)MySyscall(pBitBtn_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetDockSite)
void
BitBtn_SetDockSite(TBitBtn AObj, BOOL AValue) {
    GET_FUNC_ADDR(BitBtn_SetDockSite)
    MySyscall(pBitBtn_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetMouseInClient)
BOOL
BitBtn_GetMouseInClient(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetMouseInClient)
    return (BOOL)MySyscall(pBitBtn_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetVisibleDockClientCount)
int32_t
BitBtn_GetVisibleDockClientCount(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pBitBtn_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetBrush)
TBrush
BitBtn_GetBrush(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetBrush)
    return (TBrush)MySyscall(pBitBtn_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetControlCount)
int32_t
BitBtn_GetControlCount(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetControlCount)
    return (int32_t)MySyscall(pBitBtn_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetHandle)
HWND
BitBtn_GetHandle(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetHandle)
    return (HWND)MySyscall(pBitBtn_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetParentWindow)
HWND
BitBtn_GetParentWindow(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetParentWindow)
    return (HWND)MySyscall(pBitBtn_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetParentWindow)
void
BitBtn_SetParentWindow(TBitBtn AObj, HWND AValue) {
    GET_FUNC_ADDR(BitBtn_SetParentWindow)
    MySyscall(pBitBtn_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetShowing)
BOOL
BitBtn_GetShowing(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetShowing)
    return (BOOL)MySyscall(pBitBtn_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetUseDockManager)
BOOL
BitBtn_GetUseDockManager(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetUseDockManager)
    return (BOOL)MySyscall(pBitBtn_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetUseDockManager)
void
BitBtn_SetUseDockManager(TBitBtn AObj, BOOL AValue) {
    GET_FUNC_ADDR(BitBtn_SetUseDockManager)
    MySyscall(pBitBtn_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetBoundsRect)
TRect
BitBtn_GetBoundsRect(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetBoundsRect)
    TRect result;
    MySyscall(pBitBtn_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(BitBtn_SetBoundsRect)
void
BitBtn_SetBoundsRect(TBitBtn AObj, TRect AValue) {
    GET_FUNC_ADDR(BitBtn_SetBoundsRect)
    MySyscall(pBitBtn_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetClientHeight)
int32_t
BitBtn_GetClientHeight(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetClientHeight)
    return (int32_t)MySyscall(pBitBtn_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetClientHeight)
void
BitBtn_SetClientHeight(TBitBtn AObj, int32_t AValue) {
    GET_FUNC_ADDR(BitBtn_SetClientHeight)
    MySyscall(pBitBtn_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetClientOrigin)
TPoint
BitBtn_GetClientOrigin(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetClientOrigin)
    TPoint result;
    MySyscall(pBitBtn_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(BitBtn_GetClientRect)
TRect
BitBtn_GetClientRect(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetClientRect)
    TRect result;
    MySyscall(pBitBtn_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(BitBtn_GetClientWidth)
int32_t
BitBtn_GetClientWidth(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetClientWidth)
    return (int32_t)MySyscall(pBitBtn_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetClientWidth)
void
BitBtn_SetClientWidth(TBitBtn AObj, int32_t AValue) {
    GET_FUNC_ADDR(BitBtn_SetClientWidth)
    MySyscall(pBitBtn_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetControlState)
TControlState
BitBtn_GetControlState(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetControlState)
    return (TControlState)MySyscall(pBitBtn_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetControlState)
void
BitBtn_SetControlState(TBitBtn AObj, TControlState AValue) {
    GET_FUNC_ADDR(BitBtn_SetControlState)
    MySyscall(pBitBtn_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetControlStyle)
TControlStyle
BitBtn_GetControlStyle(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetControlStyle)
    return (TControlStyle)MySyscall(pBitBtn_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetControlStyle)
void
BitBtn_SetControlStyle(TBitBtn AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(BitBtn_SetControlStyle)
    MySyscall(pBitBtn_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetFloating)
BOOL
BitBtn_GetFloating(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetFloating)
    return (BOOL)MySyscall(pBitBtn_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetParent)
TWinControl
BitBtn_GetParent(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetParent)
    return (TWinControl)MySyscall(pBitBtn_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetParent)
void
BitBtn_SetParent(TBitBtn AObj, TWinControl AValue) {
    GET_FUNC_ADDR(BitBtn_SetParent)
    MySyscall(pBitBtn_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetLeft)
int32_t
BitBtn_GetLeft(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetLeft)
    return (int32_t)MySyscall(pBitBtn_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetLeft)
void
BitBtn_SetLeft(TBitBtn AObj, int32_t AValue) {
    GET_FUNC_ADDR(BitBtn_SetLeft)
    MySyscall(pBitBtn_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetTop)
int32_t
BitBtn_GetTop(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetTop)
    return (int32_t)MySyscall(pBitBtn_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetTop)
void
BitBtn_SetTop(TBitBtn AObj, int32_t AValue) {
    GET_FUNC_ADDR(BitBtn_SetTop)
    MySyscall(pBitBtn_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetWidth)
int32_t
BitBtn_GetWidth(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetWidth)
    return (int32_t)MySyscall(pBitBtn_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetWidth)
void
BitBtn_SetWidth(TBitBtn AObj, int32_t AValue) {
    GET_FUNC_ADDR(BitBtn_SetWidth)
    MySyscall(pBitBtn_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetHeight)
int32_t
BitBtn_GetHeight(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetHeight)
    return (int32_t)MySyscall(pBitBtn_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetHeight)
void
BitBtn_SetHeight(TBitBtn AObj, int32_t AValue) {
    GET_FUNC_ADDR(BitBtn_SetHeight)
    MySyscall(pBitBtn_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetCursor)
TCursor
BitBtn_GetCursor(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetCursor)
    return (TCursor)MySyscall(pBitBtn_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetCursor)
void
BitBtn_SetCursor(TBitBtn AObj, TCursor AValue) {
    GET_FUNC_ADDR(BitBtn_SetCursor)
    MySyscall(pBitBtn_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetHint)
char*
BitBtn_GetHint(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetHint)
    return (char*)MySyscall(pBitBtn_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetHint)
void
BitBtn_SetHint(TBitBtn AObj, CChar char* AValue) {
    GET_FUNC_ADDR(BitBtn_SetHint)
    MySyscall(pBitBtn_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetComponentCount)
int32_t
BitBtn_GetComponentCount(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetComponentCount)
    return (int32_t)MySyscall(pBitBtn_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetComponentIndex)
int32_t
BitBtn_GetComponentIndex(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetComponentIndex)
    return (int32_t)MySyscall(pBitBtn_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetComponentIndex)
void
BitBtn_SetComponentIndex(TBitBtn AObj, int32_t AValue) {
    GET_FUNC_ADDR(BitBtn_SetComponentIndex)
    MySyscall(pBitBtn_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetOwner)
TComponent
BitBtn_GetOwner(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetOwner)
    return (TComponent)MySyscall(pBitBtn_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetName)
char*
BitBtn_GetName(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetName)
    return (char*)MySyscall(pBitBtn_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetName)
void
BitBtn_SetName(TBitBtn AObj, CChar char* AValue) {
    GET_FUNC_ADDR(BitBtn_SetName)
    MySyscall(pBitBtn_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetTag)
intptr_t
BitBtn_GetTag(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetTag)
    return (intptr_t)MySyscall(pBitBtn_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetTag)
void
BitBtn_SetTag(TBitBtn AObj, intptr_t AValue) {
    GET_FUNC_ADDR(BitBtn_SetTag)
    MySyscall(pBitBtn_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetAnchorSideLeft)
TAnchorSide
BitBtn_GetAnchorSideLeft(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pBitBtn_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetAnchorSideLeft)
void
BitBtn_SetAnchorSideLeft(TBitBtn AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(BitBtn_SetAnchorSideLeft)
    MySyscall(pBitBtn_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetAnchorSideTop)
TAnchorSide
BitBtn_GetAnchorSideTop(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pBitBtn_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetAnchorSideTop)
void
BitBtn_SetAnchorSideTop(TBitBtn AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(BitBtn_SetAnchorSideTop)
    MySyscall(pBitBtn_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetAnchorSideRight)
TAnchorSide
BitBtn_GetAnchorSideRight(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pBitBtn_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetAnchorSideRight)
void
BitBtn_SetAnchorSideRight(TBitBtn AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(BitBtn_SetAnchorSideRight)
    MySyscall(pBitBtn_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetAnchorSideBottom)
TAnchorSide
BitBtn_GetAnchorSideBottom(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pBitBtn_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetAnchorSideBottom)
void
BitBtn_SetAnchorSideBottom(TBitBtn AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(BitBtn_SetAnchorSideBottom)
    MySyscall(pBitBtn_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetChildSizing)
TControlChildSizing
BitBtn_GetChildSizing(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetChildSizing)
    return (TControlChildSizing)MySyscall(pBitBtn_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetChildSizing)
void
BitBtn_SetChildSizing(TBitBtn AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(BitBtn_SetChildSizing)
    MySyscall(pBitBtn_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetBorderSpacing)
TControlBorderSpacing
BitBtn_GetBorderSpacing(TBitBtn AObj) {
    GET_FUNC_ADDR(BitBtn_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pBitBtn_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_SetBorderSpacing)
void
BitBtn_SetBorderSpacing(TBitBtn AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(BitBtn_SetBorderSpacing)
    MySyscall(pBitBtn_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetDockClients)
TControl
BitBtn_GetDockClients(TBitBtn AObj, int32_t Index) {
    GET_FUNC_ADDR(BitBtn_GetDockClients)
    return (TControl)MySyscall(pBitBtn_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetControls)
TControl
BitBtn_GetControls(TBitBtn AObj, int32_t Index) {
    GET_FUNC_ADDR(BitBtn_GetControls)
    return (TControl)MySyscall(pBitBtn_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetComponents)
TComponent
BitBtn_GetComponents(TBitBtn AObj, int32_t AIndex) {
    GET_FUNC_ADDR(BitBtn_GetComponents)
    return (TComponent)MySyscall(pBitBtn_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_GetAnchorSide)
TAnchorSide
BitBtn_GetAnchorSide(TBitBtn AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(BitBtn_GetAnchorSide)
    return (TAnchorSide)MySyscall(pBitBtn_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BitBtn_StaticClassType)
TClass
BitBtn_StaticClassType() {
    GET_FUNC_ADDR(BitBtn_StaticClassType)
    return (TClass)MySyscall(pBitBtn_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TIcon-------------------

DEFINE_FUNC_PTR(Icon_Create)
TIcon
Icon_Create() {
    GET_FUNC_ADDR(Icon_Create)
    return (TIcon)MySyscall(pIcon_Create, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_Free)
void
Icon_Free(TIcon AObj) {
    GET_FUNC_ADDR(Icon_Free)
    MySyscall(pIcon_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_Assign)
void
Icon_Assign(TIcon AObj, TObject Source) {
    GET_FUNC_ADDR(Icon_Assign)
    MySyscall(pIcon_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_HandleAllocated)
BOOL
Icon_HandleAllocated(TIcon AObj) {
    GET_FUNC_ADDR(Icon_HandleAllocated)
    return (BOOL)MySyscall(pIcon_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_LoadFromStream)
void
Icon_LoadFromStream(TIcon AObj, TStream Stream) {
    GET_FUNC_ADDR(Icon_LoadFromStream)
    MySyscall(pIcon_LoadFromStream, 2, AObj, Stream ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_SaveToStream)
void
Icon_SaveToStream(TIcon AObj, TStream Stream) {
    GET_FUNC_ADDR(Icon_SaveToStream)
    MySyscall(pIcon_SaveToStream, 2, AObj, Stream ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_SetSize)
void
Icon_SetSize(TIcon AObj, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(Icon_SetSize)
    MySyscall(pIcon_SetSize, 3, AObj, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_LoadFromResourceName)
void
Icon_LoadFromResourceName(TIcon AObj, uintptr_t Instance, CChar char* ResName) {
    GET_FUNC_ADDR(Icon_LoadFromResourceName)
    MySyscall(pIcon_LoadFromResourceName, 3, AObj, Instance, ResName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_LoadFromResourceID)
void
Icon_LoadFromResourceID(TIcon AObj, uintptr_t Instance, int32_t ResID) {
    GET_FUNC_ADDR(Icon_LoadFromResourceID)
    MySyscall(pIcon_LoadFromResourceID, 3, AObj, Instance, ResID ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_Equals)
BOOL
Icon_Equals(TIcon AObj, TObject Obj) {
    GET_FUNC_ADDR(Icon_Equals)
    return (BOOL)MySyscall(pIcon_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_LoadFromFile)
void
Icon_LoadFromFile(TIcon AObj, CChar char* Filename) {
    GET_FUNC_ADDR(Icon_LoadFromFile)
    MySyscall(pIcon_LoadFromFile, 2, AObj, Filename ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_SaveToFile)
void
Icon_SaveToFile(TIcon AObj, CChar char* Filename) {
    GET_FUNC_ADDR(Icon_SaveToFile)
    MySyscall(pIcon_SaveToFile, 2, AObj, Filename ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_GetNamePath)
char*
Icon_GetNamePath(TIcon AObj) {
    GET_FUNC_ADDR(Icon_GetNamePath)
    return (char*)MySyscall(pIcon_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_ClassType)
TClass
Icon_ClassType(TIcon AObj) {
    GET_FUNC_ADDR(Icon_ClassType)
    return (TClass)MySyscall(pIcon_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_ClassName)
char*
Icon_ClassName(TIcon AObj) {
    GET_FUNC_ADDR(Icon_ClassName)
    return (char*)MySyscall(pIcon_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_InstanceSize)
int32_t
Icon_InstanceSize(TIcon AObj) {
    GET_FUNC_ADDR(Icon_InstanceSize)
    return (int32_t)MySyscall(pIcon_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_InheritsFrom)
BOOL
Icon_InheritsFrom(TIcon AObj, TClass AClass) {
    GET_FUNC_ADDR(Icon_InheritsFrom)
    return (BOOL)MySyscall(pIcon_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_GetHashCode)
int32_t
Icon_GetHashCode(TIcon AObj) {
    GET_FUNC_ADDR(Icon_GetHashCode)
    return (int32_t)MySyscall(pIcon_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_ToString)
char*
Icon_ToString(TIcon AObj) {
    GET_FUNC_ADDR(Icon_ToString)
    return (char*)MySyscall(pIcon_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_GetHandle)
HICON
Icon_GetHandle(TIcon AObj) {
    GET_FUNC_ADDR(Icon_GetHandle)
    return (HICON)MySyscall(pIcon_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_SetHandle)
void
Icon_SetHandle(TIcon AObj, HICON AValue) {
    GET_FUNC_ADDR(Icon_SetHandle)
    MySyscall(pIcon_SetHandle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_GetEmpty)
BOOL
Icon_GetEmpty(TIcon AObj) {
    GET_FUNC_ADDR(Icon_GetEmpty)
    return (BOOL)MySyscall(pIcon_GetEmpty, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_GetHeight)
int32_t
Icon_GetHeight(TIcon AObj) {
    GET_FUNC_ADDR(Icon_GetHeight)
    return (int32_t)MySyscall(pIcon_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_SetHeight)
void
Icon_SetHeight(TIcon AObj, int32_t AValue) {
    GET_FUNC_ADDR(Icon_SetHeight)
    MySyscall(pIcon_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_GetModified)
BOOL
Icon_GetModified(TIcon AObj) {
    GET_FUNC_ADDR(Icon_GetModified)
    return (BOOL)MySyscall(pIcon_GetModified, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_SetModified)
void
Icon_SetModified(TIcon AObj, BOOL AValue) {
    GET_FUNC_ADDR(Icon_SetModified)
    MySyscall(pIcon_SetModified, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_GetPalette)
HPALETTE
Icon_GetPalette(TIcon AObj) {
    GET_FUNC_ADDR(Icon_GetPalette)
    return (HPALETTE)MySyscall(pIcon_GetPalette, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_SetPalette)
void
Icon_SetPalette(TIcon AObj, HPALETTE AValue) {
    GET_FUNC_ADDR(Icon_SetPalette)
    MySyscall(pIcon_SetPalette, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_GetPaletteModified)
BOOL
Icon_GetPaletteModified(TIcon AObj) {
    GET_FUNC_ADDR(Icon_GetPaletteModified)
    return (BOOL)MySyscall(pIcon_GetPaletteModified, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_SetPaletteModified)
void
Icon_SetPaletteModified(TIcon AObj, BOOL AValue) {
    GET_FUNC_ADDR(Icon_SetPaletteModified)
    MySyscall(pIcon_SetPaletteModified, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_GetTransparent)
BOOL
Icon_GetTransparent(TIcon AObj) {
    GET_FUNC_ADDR(Icon_GetTransparent)
    return (BOOL)MySyscall(pIcon_GetTransparent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_SetTransparent)
void
Icon_SetTransparent(TIcon AObj, BOOL AValue) {
    GET_FUNC_ADDR(Icon_SetTransparent)
    MySyscall(pIcon_SetTransparent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_GetWidth)
int32_t
Icon_GetWidth(TIcon AObj) {
    GET_FUNC_ADDR(Icon_GetWidth)
    return (int32_t)MySyscall(pIcon_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_SetWidth)
void
Icon_SetWidth(TIcon AObj, int32_t AValue) {
    GET_FUNC_ADDR(Icon_SetWidth)
    MySyscall(pIcon_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_SetOnChange)
void
Icon_SetOnChange(TIcon AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Icon_SetOnChange)
    MySyscall(pIcon_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Icon_StaticClassType)
TClass
Icon_StaticClassType() {
    GET_FUNC_ADDR(Icon_StaticClassType)
    return (TClass)MySyscall(pIcon_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TBitmap-------------------

DEFINE_FUNC_PTR(Bitmap_Create)
TBitmap
Bitmap_Create() {
    GET_FUNC_ADDR(Bitmap_Create)
    return (TBitmap)MySyscall(pBitmap_Create, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_Free)
void
Bitmap_Free(TBitmap AObj) {
    GET_FUNC_ADDR(Bitmap_Free)
    MySyscall(pBitmap_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_LoadFromDevice)
void
Bitmap_LoadFromDevice(TBitmap AObj, HDC ADc) {
    GET_FUNC_ADDR(Bitmap_LoadFromDevice)
    MySyscall(pBitmap_LoadFromDevice, 2, AObj, ADc ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_EndUpdate)
void
Bitmap_EndUpdate(TBitmap AObj, BOOL AStreamIsValid) {
    GET_FUNC_ADDR(Bitmap_EndUpdate)
    MySyscall(pBitmap_EndUpdate, 2, AObj, AStreamIsValid ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_BeginUpdate)
void
Bitmap_BeginUpdate(TBitmap AObj, BOOL ACanvasOnly) {
    GET_FUNC_ADDR(Bitmap_BeginUpdate)
    MySyscall(pBitmap_BeginUpdate, 2, AObj, ACanvasOnly ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_Clear)
void
Bitmap_Clear(TBitmap AObj) {
    GET_FUNC_ADDR(Bitmap_Clear)
    MySyscall(pBitmap_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_Assign)
void
Bitmap_Assign(TBitmap AObj, TObject Source) {
    GET_FUNC_ADDR(Bitmap_Assign)
    MySyscall(pBitmap_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_FreeImage)
void
Bitmap_FreeImage(TBitmap AObj) {
    GET_FUNC_ADDR(Bitmap_FreeImage)
    MySyscall(pBitmap_FreeImage, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_HandleAllocated)
BOOL
Bitmap_HandleAllocated(TBitmap AObj) {
    GET_FUNC_ADDR(Bitmap_HandleAllocated)
    return (BOOL)MySyscall(pBitmap_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_LoadFromStream)
void
Bitmap_LoadFromStream(TBitmap AObj, TStream Stream) {
    GET_FUNC_ADDR(Bitmap_LoadFromStream)
    MySyscall(pBitmap_LoadFromStream, 2, AObj, Stream ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_SaveToStream)
void
Bitmap_SaveToStream(TBitmap AObj, TStream Stream) {
    GET_FUNC_ADDR(Bitmap_SaveToStream)
    MySyscall(pBitmap_SaveToStream, 2, AObj, Stream ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_SetSize)
void
Bitmap_SetSize(TBitmap AObj, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(Bitmap_SetSize)
    MySyscall(pBitmap_SetSize, 3, AObj, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_LoadFromResourceName)
void
Bitmap_LoadFromResourceName(TBitmap AObj, uintptr_t Instance, CChar char* ResName) {
    GET_FUNC_ADDR(Bitmap_LoadFromResourceName)
    MySyscall(pBitmap_LoadFromResourceName, 3, AObj, Instance, ResName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_LoadFromResourceID)
void
Bitmap_LoadFromResourceID(TBitmap AObj, uintptr_t Instance, int32_t ResID) {
    GET_FUNC_ADDR(Bitmap_LoadFromResourceID)
    MySyscall(pBitmap_LoadFromResourceID, 3, AObj, Instance, ResID ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_Equals)
BOOL
Bitmap_Equals(TBitmap AObj, TObject Obj) {
    GET_FUNC_ADDR(Bitmap_Equals)
    return (BOOL)MySyscall(pBitmap_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_LoadFromFile)
void
Bitmap_LoadFromFile(TBitmap AObj, CChar char* Filename) {
    GET_FUNC_ADDR(Bitmap_LoadFromFile)
    MySyscall(pBitmap_LoadFromFile, 2, AObj, Filename ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_SaveToFile)
void
Bitmap_SaveToFile(TBitmap AObj, CChar char* Filename) {
    GET_FUNC_ADDR(Bitmap_SaveToFile)
    MySyscall(pBitmap_SaveToFile, 2, AObj, Filename ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_GetNamePath)
char*
Bitmap_GetNamePath(TBitmap AObj) {
    GET_FUNC_ADDR(Bitmap_GetNamePath)
    return (char*)MySyscall(pBitmap_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_ClassType)
TClass
Bitmap_ClassType(TBitmap AObj) {
    GET_FUNC_ADDR(Bitmap_ClassType)
    return (TClass)MySyscall(pBitmap_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_ClassName)
char*
Bitmap_ClassName(TBitmap AObj) {
    GET_FUNC_ADDR(Bitmap_ClassName)
    return (char*)MySyscall(pBitmap_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_InstanceSize)
int32_t
Bitmap_InstanceSize(TBitmap AObj) {
    GET_FUNC_ADDR(Bitmap_InstanceSize)
    return (int32_t)MySyscall(pBitmap_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_InheritsFrom)
BOOL
Bitmap_InheritsFrom(TBitmap AObj, TClass AClass) {
    GET_FUNC_ADDR(Bitmap_InheritsFrom)
    return (BOOL)MySyscall(pBitmap_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_GetHashCode)
int32_t
Bitmap_GetHashCode(TBitmap AObj) {
    GET_FUNC_ADDR(Bitmap_GetHashCode)
    return (int32_t)MySyscall(pBitmap_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_ToString)
char*
Bitmap_ToString(TBitmap AObj) {
    GET_FUNC_ADDR(Bitmap_ToString)
    return (char*)MySyscall(pBitmap_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_GetCanvas)
TCanvas
Bitmap_GetCanvas(TBitmap AObj) {
    GET_FUNC_ADDR(Bitmap_GetCanvas)
    return (TCanvas)MySyscall(pBitmap_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_GetHandle)
HBITMAP
Bitmap_GetHandle(TBitmap AObj) {
    GET_FUNC_ADDR(Bitmap_GetHandle)
    return (HBITMAP)MySyscall(pBitmap_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_SetHandle)
void
Bitmap_SetHandle(TBitmap AObj, HBITMAP AValue) {
    GET_FUNC_ADDR(Bitmap_SetHandle)
    MySyscall(pBitmap_SetHandle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_GetHandleType)
TBitmapHandleType
Bitmap_GetHandleType(TBitmap AObj) {
    GET_FUNC_ADDR(Bitmap_GetHandleType)
    return (TBitmapHandleType)MySyscall(pBitmap_GetHandleType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_SetHandleType)
void
Bitmap_SetHandleType(TBitmap AObj, TBitmapHandleType AValue) {
    GET_FUNC_ADDR(Bitmap_SetHandleType)
    MySyscall(pBitmap_SetHandleType, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_GetMaskHandle)
HBITMAP
Bitmap_GetMaskHandle(TBitmap AObj) {
    GET_FUNC_ADDR(Bitmap_GetMaskHandle)
    return (HBITMAP)MySyscall(pBitmap_GetMaskHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_SetMaskHandle)
void
Bitmap_SetMaskHandle(TBitmap AObj, HBITMAP AValue) {
    GET_FUNC_ADDR(Bitmap_SetMaskHandle)
    MySyscall(pBitmap_SetMaskHandle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_GetPixelFormat)
TPixelFormat
Bitmap_GetPixelFormat(TBitmap AObj) {
    GET_FUNC_ADDR(Bitmap_GetPixelFormat)
    return (TPixelFormat)MySyscall(pBitmap_GetPixelFormat, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_SetPixelFormat)
void
Bitmap_SetPixelFormat(TBitmap AObj, TPixelFormat AValue) {
    GET_FUNC_ADDR(Bitmap_SetPixelFormat)
    MySyscall(pBitmap_SetPixelFormat, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_GetTransparentMode)
TTransparentMode
Bitmap_GetTransparentMode(TBitmap AObj) {
    GET_FUNC_ADDR(Bitmap_GetTransparentMode)
    return (TTransparentMode)MySyscall(pBitmap_GetTransparentMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_SetTransparentMode)
void
Bitmap_SetTransparentMode(TBitmap AObj, TTransparentMode AValue) {
    GET_FUNC_ADDR(Bitmap_SetTransparentMode)
    MySyscall(pBitmap_SetTransparentMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_GetEmpty)
BOOL
Bitmap_GetEmpty(TBitmap AObj) {
    GET_FUNC_ADDR(Bitmap_GetEmpty)
    return (BOOL)MySyscall(pBitmap_GetEmpty, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_GetHeight)
int32_t
Bitmap_GetHeight(TBitmap AObj) {
    GET_FUNC_ADDR(Bitmap_GetHeight)
    return (int32_t)MySyscall(pBitmap_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_SetHeight)
void
Bitmap_SetHeight(TBitmap AObj, int32_t AValue) {
    GET_FUNC_ADDR(Bitmap_SetHeight)
    MySyscall(pBitmap_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_GetModified)
BOOL
Bitmap_GetModified(TBitmap AObj) {
    GET_FUNC_ADDR(Bitmap_GetModified)
    return (BOOL)MySyscall(pBitmap_GetModified, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_SetModified)
void
Bitmap_SetModified(TBitmap AObj, BOOL AValue) {
    GET_FUNC_ADDR(Bitmap_SetModified)
    MySyscall(pBitmap_SetModified, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_GetPalette)
HPALETTE
Bitmap_GetPalette(TBitmap AObj) {
    GET_FUNC_ADDR(Bitmap_GetPalette)
    return (HPALETTE)MySyscall(pBitmap_GetPalette, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_SetPalette)
void
Bitmap_SetPalette(TBitmap AObj, HPALETTE AValue) {
    GET_FUNC_ADDR(Bitmap_SetPalette)
    MySyscall(pBitmap_SetPalette, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_GetPaletteModified)
BOOL
Bitmap_GetPaletteModified(TBitmap AObj) {
    GET_FUNC_ADDR(Bitmap_GetPaletteModified)
    return (BOOL)MySyscall(pBitmap_GetPaletteModified, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_SetPaletteModified)
void
Bitmap_SetPaletteModified(TBitmap AObj, BOOL AValue) {
    GET_FUNC_ADDR(Bitmap_SetPaletteModified)
    MySyscall(pBitmap_SetPaletteModified, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_GetTransparent)
BOOL
Bitmap_GetTransparent(TBitmap AObj) {
    GET_FUNC_ADDR(Bitmap_GetTransparent)
    return (BOOL)MySyscall(pBitmap_GetTransparent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_SetTransparent)
void
Bitmap_SetTransparent(TBitmap AObj, BOOL AValue) {
    GET_FUNC_ADDR(Bitmap_SetTransparent)
    MySyscall(pBitmap_SetTransparent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_GetWidth)
int32_t
Bitmap_GetWidth(TBitmap AObj) {
    GET_FUNC_ADDR(Bitmap_GetWidth)
    return (int32_t)MySyscall(pBitmap_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_SetWidth)
void
Bitmap_SetWidth(TBitmap AObj, int32_t AValue) {
    GET_FUNC_ADDR(Bitmap_SetWidth)
    MySyscall(pBitmap_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_SetOnChange)
void
Bitmap_SetOnChange(TBitmap AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Bitmap_SetOnChange)
    MySyscall(pBitmap_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_GetScanLine)
void*
Bitmap_GetScanLine(TBitmap AObj, int32_t Row) {
    GET_FUNC_ADDR(Bitmap_GetScanLine)
    return (void*)MySyscall(pBitmap_GetScanLine, 2, AObj, Row ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bitmap_StaticClassType)
TClass
Bitmap_StaticClassType() {
    GET_FUNC_ADDR(Bitmap_StaticClassType)
    return (TClass)MySyscall(pBitmap_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TMemo-------------------

DEFINE_FUNC_PTR(Memo_Create)
TMemo
Memo_Create(TComponent AOwner) {
    GET_FUNC_ADDR(Memo_Create)
    return (TMemo)MySyscall(pMemo_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_Free)
void
Memo_Free(TMemo AObj) {
    GET_FUNC_ADDR(Memo_Free)
    MySyscall(pMemo_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_Append)
void
Memo_Append(TMemo AObj, CChar char* Value) {
    GET_FUNC_ADDR(Memo_Append)
    MySyscall(pMemo_Append, 2, AObj, Value ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_Clear)
void
Memo_Clear(TMemo AObj) {
    GET_FUNC_ADDR(Memo_Clear)
    MySyscall(pMemo_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_ClearSelection)
void
Memo_ClearSelection(TMemo AObj) {
    GET_FUNC_ADDR(Memo_ClearSelection)
    MySyscall(pMemo_ClearSelection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_CopyToClipboard)
void
Memo_CopyToClipboard(TMemo AObj) {
    GET_FUNC_ADDR(Memo_CopyToClipboard)
    MySyscall(pMemo_CopyToClipboard, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_CutToClipboard)
void
Memo_CutToClipboard(TMemo AObj) {
    GET_FUNC_ADDR(Memo_CutToClipboard)
    MySyscall(pMemo_CutToClipboard, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_PasteFromClipboard)
void
Memo_PasteFromClipboard(TMemo AObj) {
    GET_FUNC_ADDR(Memo_PasteFromClipboard)
    MySyscall(pMemo_PasteFromClipboard, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_Undo)
void
Memo_Undo(TMemo AObj) {
    GET_FUNC_ADDR(Memo_Undo)
    MySyscall(pMemo_Undo, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SelectAll)
void
Memo_SelectAll(TMemo AObj) {
    GET_FUNC_ADDR(Memo_SelectAll)
    MySyscall(pMemo_SelectAll, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_CanFocus)
BOOL
Memo_CanFocus(TMemo AObj) {
    GET_FUNC_ADDR(Memo_CanFocus)
    return (BOOL)MySyscall(pMemo_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_ContainsControl)
BOOL
Memo_ContainsControl(TMemo AObj, TControl Control) {
    GET_FUNC_ADDR(Memo_ContainsControl)
    return (BOOL)MySyscall(pMemo_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_ControlAtPos)
TControl
Memo_ControlAtPos(TMemo AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(Memo_ControlAtPos)
    return (TControl)MySyscall(pMemo_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_DisableAlign)
void
Memo_DisableAlign(TMemo AObj) {
    GET_FUNC_ADDR(Memo_DisableAlign)
    MySyscall(pMemo_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_EnableAlign)
void
Memo_EnableAlign(TMemo AObj) {
    GET_FUNC_ADDR(Memo_EnableAlign)
    MySyscall(pMemo_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_FindChildControl)
TControl
Memo_FindChildControl(TMemo AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(Memo_FindChildControl)
    return (TControl)MySyscall(pMemo_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_FlipChildren)
void
Memo_FlipChildren(TMemo AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(Memo_FlipChildren)
    MySyscall(pMemo_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_Focused)
BOOL
Memo_Focused(TMemo AObj) {
    GET_FUNC_ADDR(Memo_Focused)
    return (BOOL)MySyscall(pMemo_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_HandleAllocated)
BOOL
Memo_HandleAllocated(TMemo AObj) {
    GET_FUNC_ADDR(Memo_HandleAllocated)
    return (BOOL)MySyscall(pMemo_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_InsertControl)
void
Memo_InsertControl(TMemo AObj, TControl AControl) {
    GET_FUNC_ADDR(Memo_InsertControl)
    MySyscall(pMemo_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_Invalidate)
void
Memo_Invalidate(TMemo AObj) {
    GET_FUNC_ADDR(Memo_Invalidate)
    MySyscall(pMemo_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_PaintTo)
void
Memo_PaintTo(TMemo AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(Memo_PaintTo)
    MySyscall(pMemo_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_RemoveControl)
void
Memo_RemoveControl(TMemo AObj, TControl AControl) {
    GET_FUNC_ADDR(Memo_RemoveControl)
    MySyscall(pMemo_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_Realign)
void
Memo_Realign(TMemo AObj) {
    GET_FUNC_ADDR(Memo_Realign)
    MySyscall(pMemo_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_Repaint)
void
Memo_Repaint(TMemo AObj) {
    GET_FUNC_ADDR(Memo_Repaint)
    MySyscall(pMemo_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_ScaleBy)
void
Memo_ScaleBy(TMemo AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(Memo_ScaleBy)
    MySyscall(pMemo_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_ScrollBy)
void
Memo_ScrollBy(TMemo AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(Memo_ScrollBy)
    MySyscall(pMemo_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetBounds)
void
Memo_SetBounds(TMemo AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(Memo_SetBounds)
    MySyscall(pMemo_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetFocus)
void
Memo_SetFocus(TMemo AObj) {
    GET_FUNC_ADDR(Memo_SetFocus)
    MySyscall(pMemo_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_Update)
void
Memo_Update(TMemo AObj) {
    GET_FUNC_ADDR(Memo_Update)
    MySyscall(pMemo_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_BringToFront)
void
Memo_BringToFront(TMemo AObj) {
    GET_FUNC_ADDR(Memo_BringToFront)
    MySyscall(pMemo_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_ClientToScreen)
TPoint
Memo_ClientToScreen(TMemo AObj, TPoint Point) {
    GET_FUNC_ADDR(Memo_ClientToScreen)
    TPoint result;
    MySyscall(pMemo_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Memo_ClientToParent)
TPoint
Memo_ClientToParent(TMemo AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Memo_ClientToParent)
    TPoint result;
    MySyscall(pMemo_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Memo_Dragging)
BOOL
Memo_Dragging(TMemo AObj) {
    GET_FUNC_ADDR(Memo_Dragging)
    return (BOOL)MySyscall(pMemo_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_HasParent)
BOOL
Memo_HasParent(TMemo AObj) {
    GET_FUNC_ADDR(Memo_HasParent)
    return (BOOL)MySyscall(pMemo_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_Hide)
void
Memo_Hide(TMemo AObj) {
    GET_FUNC_ADDR(Memo_Hide)
    MySyscall(pMemo_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_Perform)
intptr_t
Memo_Perform(TMemo AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(Memo_Perform)
    return (intptr_t)MySyscall(pMemo_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_Refresh)
void
Memo_Refresh(TMemo AObj) {
    GET_FUNC_ADDR(Memo_Refresh)
    MySyscall(pMemo_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_ScreenToClient)
TPoint
Memo_ScreenToClient(TMemo AObj, TPoint Point) {
    GET_FUNC_ADDR(Memo_ScreenToClient)
    TPoint result;
    MySyscall(pMemo_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Memo_ParentToClient)
TPoint
Memo_ParentToClient(TMemo AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Memo_ParentToClient)
    TPoint result;
    MySyscall(pMemo_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Memo_SendToBack)
void
Memo_SendToBack(TMemo AObj) {
    GET_FUNC_ADDR(Memo_SendToBack)
    MySyscall(pMemo_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_Show)
void
Memo_Show(TMemo AObj) {
    GET_FUNC_ADDR(Memo_Show)
    MySyscall(pMemo_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetTextBuf)
int32_t
Memo_GetTextBuf(TMemo AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(Memo_GetTextBuf)
    return (int32_t)MySyscall(pMemo_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetTextLen)
int32_t
Memo_GetTextLen(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetTextLen)
    return (int32_t)MySyscall(pMemo_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetTextBuf)
void
Memo_SetTextBuf(TMemo AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(Memo_SetTextBuf)
    MySyscall(pMemo_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_FindComponent)
TComponent
Memo_FindComponent(TMemo AObj, CChar char* AName) {
    GET_FUNC_ADDR(Memo_FindComponent)
    return (TComponent)MySyscall(pMemo_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetNamePath)
char*
Memo_GetNamePath(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetNamePath)
    return (char*)MySyscall(pMemo_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_Assign)
void
Memo_Assign(TMemo AObj, TObject Source) {
    GET_FUNC_ADDR(Memo_Assign)
    MySyscall(pMemo_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_ClassType)
TClass
Memo_ClassType(TMemo AObj) {
    GET_FUNC_ADDR(Memo_ClassType)
    return (TClass)MySyscall(pMemo_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_ClassName)
char*
Memo_ClassName(TMemo AObj) {
    GET_FUNC_ADDR(Memo_ClassName)
    return (char*)MySyscall(pMemo_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_InstanceSize)
int32_t
Memo_InstanceSize(TMemo AObj) {
    GET_FUNC_ADDR(Memo_InstanceSize)
    return (int32_t)MySyscall(pMemo_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_InheritsFrom)
BOOL
Memo_InheritsFrom(TMemo AObj, TClass AClass) {
    GET_FUNC_ADDR(Memo_InheritsFrom)
    return (BOOL)MySyscall(pMemo_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_Equals)
BOOL
Memo_Equals(TMemo AObj, TObject Obj) {
    GET_FUNC_ADDR(Memo_Equals)
    return (BOOL)MySyscall(pMemo_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetHashCode)
int32_t
Memo_GetHashCode(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetHashCode)
    return (int32_t)MySyscall(pMemo_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_ToString)
char*
Memo_ToString(TMemo AObj) {
    GET_FUNC_ADDR(Memo_ToString)
    return (char*)MySyscall(pMemo_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_AnchorToNeighbour)
void
Memo_AnchorToNeighbour(TMemo AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Memo_AnchorToNeighbour)
    MySyscall(pMemo_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_AnchorParallel)
void
Memo_AnchorParallel(TMemo AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Memo_AnchorParallel)
    MySyscall(pMemo_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_AnchorHorizontalCenterTo)
void
Memo_AnchorHorizontalCenterTo(TMemo AObj, TControl ASibling) {
    GET_FUNC_ADDR(Memo_AnchorHorizontalCenterTo)
    MySyscall(pMemo_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_AnchorVerticalCenterTo)
void
Memo_AnchorVerticalCenterTo(TMemo AObj, TControl ASibling) {
    GET_FUNC_ADDR(Memo_AnchorVerticalCenterTo)
    MySyscall(pMemo_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_AnchorSame)
void
Memo_AnchorSame(TMemo AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(Memo_AnchorSame)
    MySyscall(pMemo_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_AnchorAsAlign)
void
Memo_AnchorAsAlign(TMemo AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(Memo_AnchorAsAlign)
    MySyscall(pMemo_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_AnchorClient)
void
Memo_AnchorClient(TMemo AObj, int32_t ASpace) {
    GET_FUNC_ADDR(Memo_AnchorClient)
    MySyscall(pMemo_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_ScaleDesignToForm)
int32_t
Memo_ScaleDesignToForm(TMemo AObj, int32_t ASize) {
    GET_FUNC_ADDR(Memo_ScaleDesignToForm)
    return (int32_t)MySyscall(pMemo_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_ScaleFormToDesign)
int32_t
Memo_ScaleFormToDesign(TMemo AObj, int32_t ASize) {
    GET_FUNC_ADDR(Memo_ScaleFormToDesign)
    return (int32_t)MySyscall(pMemo_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_Scale96ToForm)
int32_t
Memo_Scale96ToForm(TMemo AObj, int32_t ASize) {
    GET_FUNC_ADDR(Memo_Scale96ToForm)
    return (int32_t)MySyscall(pMemo_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_ScaleFormTo96)
int32_t
Memo_ScaleFormTo96(TMemo AObj, int32_t ASize) {
    GET_FUNC_ADDR(Memo_ScaleFormTo96)
    return (int32_t)MySyscall(pMemo_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_Scale96ToFont)
int32_t
Memo_Scale96ToFont(TMemo AObj, int32_t ASize) {
    GET_FUNC_ADDR(Memo_Scale96ToFont)
    return (int32_t)MySyscall(pMemo_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_ScaleFontTo96)
int32_t
Memo_ScaleFontTo96(TMemo AObj, int32_t ASize) {
    GET_FUNC_ADDR(Memo_ScaleFontTo96)
    return (int32_t)MySyscall(pMemo_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_ScaleScreenToFont)
int32_t
Memo_ScaleScreenToFont(TMemo AObj, int32_t ASize) {
    GET_FUNC_ADDR(Memo_ScaleScreenToFont)
    return (int32_t)MySyscall(pMemo_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_ScaleFontToScreen)
int32_t
Memo_ScaleFontToScreen(TMemo AObj, int32_t ASize) {
    GET_FUNC_ADDR(Memo_ScaleFontToScreen)
    return (int32_t)MySyscall(pMemo_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_Scale96ToScreen)
int32_t
Memo_Scale96ToScreen(TMemo AObj, int32_t ASize) {
    GET_FUNC_ADDR(Memo_Scale96ToScreen)
    return (int32_t)MySyscall(pMemo_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_ScaleScreenTo96)
int32_t
Memo_ScaleScreenTo96(TMemo AObj, int32_t ASize) {
    GET_FUNC_ADDR(Memo_ScaleScreenTo96)
    return (int32_t)MySyscall(pMemo_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_AutoAdjustLayout)
void
Memo_AutoAdjustLayout(TMemo AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(Memo_AutoAdjustLayout)
    MySyscall(pMemo_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_FixDesignFontsPPI)
void
Memo_FixDesignFontsPPI(TMemo AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(Memo_FixDesignFontsPPI)
    MySyscall(pMemo_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_ScaleFontsPPI)
void
Memo_ScaleFontsPPI(TMemo AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(Memo_ScaleFontsPPI)
    MySyscall(pMemo_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetAlign)
TAlign
Memo_GetAlign(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetAlign)
    return (TAlign)MySyscall(pMemo_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetAlign)
void
Memo_SetAlign(TMemo AObj, TAlign AValue) {
    GET_FUNC_ADDR(Memo_SetAlign)
    MySyscall(pMemo_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetAlignment)
TAlignment
Memo_GetAlignment(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetAlignment)
    return (TAlignment)MySyscall(pMemo_GetAlignment, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetAlignment)
void
Memo_SetAlignment(TMemo AObj, TAlignment AValue) {
    GET_FUNC_ADDR(Memo_SetAlignment)
    MySyscall(pMemo_SetAlignment, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetAnchors)
TAnchors
Memo_GetAnchors(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetAnchors)
    return (TAnchors)MySyscall(pMemo_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetAnchors)
void
Memo_SetAnchors(TMemo AObj, TAnchors AValue) {
    GET_FUNC_ADDR(Memo_SetAnchors)
    MySyscall(pMemo_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetBiDiMode)
TBiDiMode
Memo_GetBiDiMode(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetBiDiMode)
    return (TBiDiMode)MySyscall(pMemo_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetBiDiMode)
void
Memo_SetBiDiMode(TMemo AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(Memo_SetBiDiMode)
    MySyscall(pMemo_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetBorderStyle)
TBorderStyle
Memo_GetBorderStyle(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetBorderStyle)
    return (TBorderStyle)MySyscall(pMemo_GetBorderStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetBorderStyle)
void
Memo_SetBorderStyle(TMemo AObj, TBorderStyle AValue) {
    GET_FUNC_ADDR(Memo_SetBorderStyle)
    MySyscall(pMemo_SetBorderStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetCharCase)
TEditCharCase
Memo_GetCharCase(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetCharCase)
    return (TEditCharCase)MySyscall(pMemo_GetCharCase, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetCharCase)
void
Memo_SetCharCase(TMemo AObj, TEditCharCase AValue) {
    GET_FUNC_ADDR(Memo_SetCharCase)
    MySyscall(pMemo_SetCharCase, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetColor)
TColor
Memo_GetColor(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetColor)
    return (TColor)MySyscall(pMemo_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetColor)
void
Memo_SetColor(TMemo AObj, TColor AValue) {
    GET_FUNC_ADDR(Memo_SetColor)
    MySyscall(pMemo_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetConstraints)
TSizeConstraints
Memo_GetConstraints(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetConstraints)
    return (TSizeConstraints)MySyscall(pMemo_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetConstraints)
void
Memo_SetConstraints(TMemo AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(Memo_SetConstraints)
    MySyscall(pMemo_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetDoubleBuffered)
BOOL
Memo_GetDoubleBuffered(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetDoubleBuffered)
    return (BOOL)MySyscall(pMemo_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetDoubleBuffered)
void
Memo_SetDoubleBuffered(TMemo AObj, BOOL AValue) {
    GET_FUNC_ADDR(Memo_SetDoubleBuffered)
    MySyscall(pMemo_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetDragCursor)
TCursor
Memo_GetDragCursor(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetDragCursor)
    return (TCursor)MySyscall(pMemo_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetDragCursor)
void
Memo_SetDragCursor(TMemo AObj, TCursor AValue) {
    GET_FUNC_ADDR(Memo_SetDragCursor)
    MySyscall(pMemo_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetDragKind)
TDragKind
Memo_GetDragKind(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetDragKind)
    return (TDragKind)MySyscall(pMemo_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetDragKind)
void
Memo_SetDragKind(TMemo AObj, TDragKind AValue) {
    GET_FUNC_ADDR(Memo_SetDragKind)
    MySyscall(pMemo_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetDragMode)
TDragMode
Memo_GetDragMode(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetDragMode)
    return (TDragMode)MySyscall(pMemo_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetDragMode)
void
Memo_SetDragMode(TMemo AObj, TDragMode AValue) {
    GET_FUNC_ADDR(Memo_SetDragMode)
    MySyscall(pMemo_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetEnabled)
BOOL
Memo_GetEnabled(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetEnabled)
    return (BOOL)MySyscall(pMemo_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetEnabled)
void
Memo_SetEnabled(TMemo AObj, BOOL AValue) {
    GET_FUNC_ADDR(Memo_SetEnabled)
    MySyscall(pMemo_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetFont)
TFont
Memo_GetFont(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetFont)
    return (TFont)MySyscall(pMemo_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetFont)
void
Memo_SetFont(TMemo AObj, TFont AValue) {
    GET_FUNC_ADDR(Memo_SetFont)
    MySyscall(pMemo_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetHideSelection)
BOOL
Memo_GetHideSelection(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetHideSelection)
    return (BOOL)MySyscall(pMemo_GetHideSelection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetHideSelection)
void
Memo_SetHideSelection(TMemo AObj, BOOL AValue) {
    GET_FUNC_ADDR(Memo_SetHideSelection)
    MySyscall(pMemo_SetHideSelection, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetLines)
TStrings
Memo_GetLines(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetLines)
    return (TStrings)MySyscall(pMemo_GetLines, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetLines)
void
Memo_SetLines(TMemo AObj, TStrings AValue) {
    GET_FUNC_ADDR(Memo_SetLines)
    MySyscall(pMemo_SetLines, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetMaxLength)
int32_t
Memo_GetMaxLength(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetMaxLength)
    return (int32_t)MySyscall(pMemo_GetMaxLength, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetMaxLength)
void
Memo_SetMaxLength(TMemo AObj, int32_t AValue) {
    GET_FUNC_ADDR(Memo_SetMaxLength)
    MySyscall(pMemo_SetMaxLength, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetParentColor)
BOOL
Memo_GetParentColor(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetParentColor)
    return (BOOL)MySyscall(pMemo_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetParentColor)
void
Memo_SetParentColor(TMemo AObj, BOOL AValue) {
    GET_FUNC_ADDR(Memo_SetParentColor)
    MySyscall(pMemo_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetParentDoubleBuffered)
BOOL
Memo_GetParentDoubleBuffered(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pMemo_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetParentDoubleBuffered)
void
Memo_SetParentDoubleBuffered(TMemo AObj, BOOL AValue) {
    GET_FUNC_ADDR(Memo_SetParentDoubleBuffered)
    MySyscall(pMemo_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetParentFont)
BOOL
Memo_GetParentFont(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetParentFont)
    return (BOOL)MySyscall(pMemo_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetParentFont)
void
Memo_SetParentFont(TMemo AObj, BOOL AValue) {
    GET_FUNC_ADDR(Memo_SetParentFont)
    MySyscall(pMemo_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetParentShowHint)
BOOL
Memo_GetParentShowHint(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetParentShowHint)
    return (BOOL)MySyscall(pMemo_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetParentShowHint)
void
Memo_SetParentShowHint(TMemo AObj, BOOL AValue) {
    GET_FUNC_ADDR(Memo_SetParentShowHint)
    MySyscall(pMemo_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetPopupMenu)
TPopupMenu
Memo_GetPopupMenu(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetPopupMenu)
    return (TPopupMenu)MySyscall(pMemo_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetPopupMenu)
void
Memo_SetPopupMenu(TMemo AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(Memo_SetPopupMenu)
    MySyscall(pMemo_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetReadOnly)
BOOL
Memo_GetReadOnly(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetReadOnly)
    return (BOOL)MySyscall(pMemo_GetReadOnly, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetReadOnly)
void
Memo_SetReadOnly(TMemo AObj, BOOL AValue) {
    GET_FUNC_ADDR(Memo_SetReadOnly)
    MySyscall(pMemo_SetReadOnly, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetScrollBars)
TScrollStyle
Memo_GetScrollBars(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetScrollBars)
    return (TScrollStyle)MySyscall(pMemo_GetScrollBars, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetScrollBars)
void
Memo_SetScrollBars(TMemo AObj, TScrollStyle AValue) {
    GET_FUNC_ADDR(Memo_SetScrollBars)
    MySyscall(pMemo_SetScrollBars, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetShowHint)
BOOL
Memo_GetShowHint(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetShowHint)
    return (BOOL)MySyscall(pMemo_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetShowHint)
void
Memo_SetShowHint(TMemo AObj, BOOL AValue) {
    GET_FUNC_ADDR(Memo_SetShowHint)
    MySyscall(pMemo_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetTabOrder)
TTabOrder
Memo_GetTabOrder(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetTabOrder)
    return (TTabOrder)MySyscall(pMemo_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetTabOrder)
void
Memo_SetTabOrder(TMemo AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(Memo_SetTabOrder)
    MySyscall(pMemo_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetTabStop)
BOOL
Memo_GetTabStop(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetTabStop)
    return (BOOL)MySyscall(pMemo_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetTabStop)
void
Memo_SetTabStop(TMemo AObj, BOOL AValue) {
    GET_FUNC_ADDR(Memo_SetTabStop)
    MySyscall(pMemo_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetVisible)
BOOL
Memo_GetVisible(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetVisible)
    return (BOOL)MySyscall(pMemo_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetVisible)
void
Memo_SetVisible(TMemo AObj, BOOL AValue) {
    GET_FUNC_ADDR(Memo_SetVisible)
    MySyscall(pMemo_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetWantReturns)
BOOL
Memo_GetWantReturns(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetWantReturns)
    return (BOOL)MySyscall(pMemo_GetWantReturns, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetWantReturns)
void
Memo_SetWantReturns(TMemo AObj, BOOL AValue) {
    GET_FUNC_ADDR(Memo_SetWantReturns)
    MySyscall(pMemo_SetWantReturns, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetWantTabs)
BOOL
Memo_GetWantTabs(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetWantTabs)
    return (BOOL)MySyscall(pMemo_GetWantTabs, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetWantTabs)
void
Memo_SetWantTabs(TMemo AObj, BOOL AValue) {
    GET_FUNC_ADDR(Memo_SetWantTabs)
    MySyscall(pMemo_SetWantTabs, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetWordWrap)
BOOL
Memo_GetWordWrap(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetWordWrap)
    return (BOOL)MySyscall(pMemo_GetWordWrap, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetWordWrap)
void
Memo_SetWordWrap(TMemo AObj, BOOL AValue) {
    GET_FUNC_ADDR(Memo_SetWordWrap)
    MySyscall(pMemo_SetWordWrap, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetOnChange)
void
Memo_SetOnChange(TMemo AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Memo_SetOnChange)
    MySyscall(pMemo_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetOnClick)
void
Memo_SetOnClick(TMemo AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Memo_SetOnClick)
    MySyscall(pMemo_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetOnContextPopup)
void
Memo_SetOnContextPopup(TMemo AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(Memo_SetOnContextPopup)
    MySyscall(pMemo_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetOnDblClick)
void
Memo_SetOnDblClick(TMemo AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Memo_SetOnDblClick)
    MySyscall(pMemo_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetOnDragDrop)
void
Memo_SetOnDragDrop(TMemo AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(Memo_SetOnDragDrop)
    MySyscall(pMemo_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetOnDragOver)
void
Memo_SetOnDragOver(TMemo AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(Memo_SetOnDragOver)
    MySyscall(pMemo_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetOnEndDrag)
void
Memo_SetOnEndDrag(TMemo AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(Memo_SetOnEndDrag)
    MySyscall(pMemo_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetOnEnter)
void
Memo_SetOnEnter(TMemo AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Memo_SetOnEnter)
    MySyscall(pMemo_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetOnExit)
void
Memo_SetOnExit(TMemo AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Memo_SetOnExit)
    MySyscall(pMemo_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetOnKeyDown)
void
Memo_SetOnKeyDown(TMemo AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(Memo_SetOnKeyDown)
    MySyscall(pMemo_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetOnKeyPress)
void
Memo_SetOnKeyPress(TMemo AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(Memo_SetOnKeyPress)
    MySyscall(pMemo_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetOnKeyUp)
void
Memo_SetOnKeyUp(TMemo AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(Memo_SetOnKeyUp)
    MySyscall(pMemo_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetOnMouseDown)
void
Memo_SetOnMouseDown(TMemo AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(Memo_SetOnMouseDown)
    MySyscall(pMemo_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetOnMouseEnter)
void
Memo_SetOnMouseEnter(TMemo AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Memo_SetOnMouseEnter)
    MySyscall(pMemo_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetOnMouseLeave)
void
Memo_SetOnMouseLeave(TMemo AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Memo_SetOnMouseLeave)
    MySyscall(pMemo_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetOnMouseMove)
void
Memo_SetOnMouseMove(TMemo AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(Memo_SetOnMouseMove)
    MySyscall(pMemo_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetOnMouseUp)
void
Memo_SetOnMouseUp(TMemo AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(Memo_SetOnMouseUp)
    MySyscall(pMemo_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetCaretPos)
TPoint
Memo_GetCaretPos(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetCaretPos)
    TPoint result;
    MySyscall(pMemo_GetCaretPos, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Memo_SetCaretPos)
void
Memo_SetCaretPos(TMemo AObj, TPoint AValue) {
    GET_FUNC_ADDR(Memo_SetCaretPos)
    MySyscall(pMemo_SetCaretPos, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetCanUndo)
BOOL
Memo_GetCanUndo(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetCanUndo)
    return (BOOL)MySyscall(pMemo_GetCanUndo, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetModified)
BOOL
Memo_GetModified(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetModified)
    return (BOOL)MySyscall(pMemo_GetModified, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetModified)
void
Memo_SetModified(TMemo AObj, BOOL AValue) {
    GET_FUNC_ADDR(Memo_SetModified)
    MySyscall(pMemo_SetModified, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetSelLength)
int32_t
Memo_GetSelLength(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetSelLength)
    return (int32_t)MySyscall(pMemo_GetSelLength, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetSelLength)
void
Memo_SetSelLength(TMemo AObj, int32_t AValue) {
    GET_FUNC_ADDR(Memo_SetSelLength)
    MySyscall(pMemo_SetSelLength, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetSelStart)
int32_t
Memo_GetSelStart(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetSelStart)
    return (int32_t)MySyscall(pMemo_GetSelStart, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetSelStart)
void
Memo_SetSelStart(TMemo AObj, int32_t AValue) {
    GET_FUNC_ADDR(Memo_SetSelStart)
    MySyscall(pMemo_SetSelStart, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetSelText)
char*
Memo_GetSelText(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetSelText)
    return (char*)MySyscall(pMemo_GetSelText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetSelText)
void
Memo_SetSelText(TMemo AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Memo_SetSelText)
    MySyscall(pMemo_SetSelText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetText)
char*
Memo_GetText(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetText)
    return (char*)MySyscall(pMemo_GetText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetText)
void
Memo_SetText(TMemo AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Memo_SetText)
    MySyscall(pMemo_SetText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetTextHint)
char*
Memo_GetTextHint(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetTextHint)
    return (char*)MySyscall(pMemo_GetTextHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetTextHint)
void
Memo_SetTextHint(TMemo AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Memo_SetTextHint)
    MySyscall(pMemo_SetTextHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetDockClientCount)
int32_t
Memo_GetDockClientCount(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetDockClientCount)
    return (int32_t)MySyscall(pMemo_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetDockSite)
BOOL
Memo_GetDockSite(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetDockSite)
    return (BOOL)MySyscall(pMemo_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetDockSite)
void
Memo_SetDockSite(TMemo AObj, BOOL AValue) {
    GET_FUNC_ADDR(Memo_SetDockSite)
    MySyscall(pMemo_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetMouseInClient)
BOOL
Memo_GetMouseInClient(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetMouseInClient)
    return (BOOL)MySyscall(pMemo_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetVisibleDockClientCount)
int32_t
Memo_GetVisibleDockClientCount(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pMemo_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetBrush)
TBrush
Memo_GetBrush(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetBrush)
    return (TBrush)MySyscall(pMemo_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetControlCount)
int32_t
Memo_GetControlCount(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetControlCount)
    return (int32_t)MySyscall(pMemo_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetHandle)
HWND
Memo_GetHandle(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetHandle)
    return (HWND)MySyscall(pMemo_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetParentWindow)
HWND
Memo_GetParentWindow(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetParentWindow)
    return (HWND)MySyscall(pMemo_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetParentWindow)
void
Memo_SetParentWindow(TMemo AObj, HWND AValue) {
    GET_FUNC_ADDR(Memo_SetParentWindow)
    MySyscall(pMemo_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetShowing)
BOOL
Memo_GetShowing(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetShowing)
    return (BOOL)MySyscall(pMemo_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetUseDockManager)
BOOL
Memo_GetUseDockManager(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetUseDockManager)
    return (BOOL)MySyscall(pMemo_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetUseDockManager)
void
Memo_SetUseDockManager(TMemo AObj, BOOL AValue) {
    GET_FUNC_ADDR(Memo_SetUseDockManager)
    MySyscall(pMemo_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetAction)
TAction
Memo_GetAction(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetAction)
    return (TAction)MySyscall(pMemo_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetAction)
void
Memo_SetAction(TMemo AObj, TAction AValue) {
    GET_FUNC_ADDR(Memo_SetAction)
    MySyscall(pMemo_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetBoundsRect)
TRect
Memo_GetBoundsRect(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetBoundsRect)
    TRect result;
    MySyscall(pMemo_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Memo_SetBoundsRect)
void
Memo_SetBoundsRect(TMemo AObj, TRect AValue) {
    GET_FUNC_ADDR(Memo_SetBoundsRect)
    MySyscall(pMemo_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetClientHeight)
int32_t
Memo_GetClientHeight(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetClientHeight)
    return (int32_t)MySyscall(pMemo_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetClientHeight)
void
Memo_SetClientHeight(TMemo AObj, int32_t AValue) {
    GET_FUNC_ADDR(Memo_SetClientHeight)
    MySyscall(pMemo_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetClientOrigin)
TPoint
Memo_GetClientOrigin(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetClientOrigin)
    TPoint result;
    MySyscall(pMemo_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Memo_GetClientRect)
TRect
Memo_GetClientRect(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetClientRect)
    TRect result;
    MySyscall(pMemo_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Memo_GetClientWidth)
int32_t
Memo_GetClientWidth(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetClientWidth)
    return (int32_t)MySyscall(pMemo_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetClientWidth)
void
Memo_SetClientWidth(TMemo AObj, int32_t AValue) {
    GET_FUNC_ADDR(Memo_SetClientWidth)
    MySyscall(pMemo_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetControlState)
TControlState
Memo_GetControlState(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetControlState)
    return (TControlState)MySyscall(pMemo_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetControlState)
void
Memo_SetControlState(TMemo AObj, TControlState AValue) {
    GET_FUNC_ADDR(Memo_SetControlState)
    MySyscall(pMemo_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetControlStyle)
TControlStyle
Memo_GetControlStyle(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetControlStyle)
    return (TControlStyle)MySyscall(pMemo_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetControlStyle)
void
Memo_SetControlStyle(TMemo AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(Memo_SetControlStyle)
    MySyscall(pMemo_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetFloating)
BOOL
Memo_GetFloating(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetFloating)
    return (BOOL)MySyscall(pMemo_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetParent)
TWinControl
Memo_GetParent(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetParent)
    return (TWinControl)MySyscall(pMemo_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetParent)
void
Memo_SetParent(TMemo AObj, TWinControl AValue) {
    GET_FUNC_ADDR(Memo_SetParent)
    MySyscall(pMemo_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetLeft)
int32_t
Memo_GetLeft(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetLeft)
    return (int32_t)MySyscall(pMemo_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetLeft)
void
Memo_SetLeft(TMemo AObj, int32_t AValue) {
    GET_FUNC_ADDR(Memo_SetLeft)
    MySyscall(pMemo_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetTop)
int32_t
Memo_GetTop(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetTop)
    return (int32_t)MySyscall(pMemo_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetTop)
void
Memo_SetTop(TMemo AObj, int32_t AValue) {
    GET_FUNC_ADDR(Memo_SetTop)
    MySyscall(pMemo_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetWidth)
int32_t
Memo_GetWidth(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetWidth)
    return (int32_t)MySyscall(pMemo_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetWidth)
void
Memo_SetWidth(TMemo AObj, int32_t AValue) {
    GET_FUNC_ADDR(Memo_SetWidth)
    MySyscall(pMemo_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetHeight)
int32_t
Memo_GetHeight(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetHeight)
    return (int32_t)MySyscall(pMemo_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetHeight)
void
Memo_SetHeight(TMemo AObj, int32_t AValue) {
    GET_FUNC_ADDR(Memo_SetHeight)
    MySyscall(pMemo_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetCursor)
TCursor
Memo_GetCursor(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetCursor)
    return (TCursor)MySyscall(pMemo_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetCursor)
void
Memo_SetCursor(TMemo AObj, TCursor AValue) {
    GET_FUNC_ADDR(Memo_SetCursor)
    MySyscall(pMemo_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetHint)
char*
Memo_GetHint(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetHint)
    return (char*)MySyscall(pMemo_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetHint)
void
Memo_SetHint(TMemo AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Memo_SetHint)
    MySyscall(pMemo_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetComponentCount)
int32_t
Memo_GetComponentCount(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetComponentCount)
    return (int32_t)MySyscall(pMemo_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetComponentIndex)
int32_t
Memo_GetComponentIndex(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetComponentIndex)
    return (int32_t)MySyscall(pMemo_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetComponentIndex)
void
Memo_SetComponentIndex(TMemo AObj, int32_t AValue) {
    GET_FUNC_ADDR(Memo_SetComponentIndex)
    MySyscall(pMemo_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetOwner)
TComponent
Memo_GetOwner(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetOwner)
    return (TComponent)MySyscall(pMemo_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetName)
char*
Memo_GetName(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetName)
    return (char*)MySyscall(pMemo_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetName)
void
Memo_SetName(TMemo AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Memo_SetName)
    MySyscall(pMemo_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetTag)
intptr_t
Memo_GetTag(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetTag)
    return (intptr_t)MySyscall(pMemo_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetTag)
void
Memo_SetTag(TMemo AObj, intptr_t AValue) {
    GET_FUNC_ADDR(Memo_SetTag)
    MySyscall(pMemo_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetAnchorSideLeft)
TAnchorSide
Memo_GetAnchorSideLeft(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pMemo_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetAnchorSideLeft)
void
Memo_SetAnchorSideLeft(TMemo AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Memo_SetAnchorSideLeft)
    MySyscall(pMemo_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetAnchorSideTop)
TAnchorSide
Memo_GetAnchorSideTop(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pMemo_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetAnchorSideTop)
void
Memo_SetAnchorSideTop(TMemo AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Memo_SetAnchorSideTop)
    MySyscall(pMemo_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetAnchorSideRight)
TAnchorSide
Memo_GetAnchorSideRight(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pMemo_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetAnchorSideRight)
void
Memo_SetAnchorSideRight(TMemo AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Memo_SetAnchorSideRight)
    MySyscall(pMemo_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetAnchorSideBottom)
TAnchorSide
Memo_GetAnchorSideBottom(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pMemo_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetAnchorSideBottom)
void
Memo_SetAnchorSideBottom(TMemo AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Memo_SetAnchorSideBottom)
    MySyscall(pMemo_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetChildSizing)
TControlChildSizing
Memo_GetChildSizing(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetChildSizing)
    return (TControlChildSizing)MySyscall(pMemo_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetChildSizing)
void
Memo_SetChildSizing(TMemo AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(Memo_SetChildSizing)
    MySyscall(pMemo_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetBorderSpacing)
TControlBorderSpacing
Memo_GetBorderSpacing(TMemo AObj) {
    GET_FUNC_ADDR(Memo_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pMemo_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_SetBorderSpacing)
void
Memo_SetBorderSpacing(TMemo AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(Memo_SetBorderSpacing)
    MySyscall(pMemo_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetDockClients)
TControl
Memo_GetDockClients(TMemo AObj, int32_t Index) {
    GET_FUNC_ADDR(Memo_GetDockClients)
    return (TControl)MySyscall(pMemo_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetControls)
TControl
Memo_GetControls(TMemo AObj, int32_t Index) {
    GET_FUNC_ADDR(Memo_GetControls)
    return (TControl)MySyscall(pMemo_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetComponents)
TComponent
Memo_GetComponents(TMemo AObj, int32_t AIndex) {
    GET_FUNC_ADDR(Memo_GetComponents)
    return (TComponent)MySyscall(pMemo_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_GetAnchorSide)
TAnchorSide
Memo_GetAnchorSide(TMemo AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(Memo_GetAnchorSide)
    return (TAnchorSide)MySyscall(pMemo_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Memo_StaticClassType)
TClass
Memo_StaticClassType() {
    GET_FUNC_ADDR(Memo_StaticClassType)
    return (TClass)MySyscall(pMemo_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TMemoryStream-------------------

DEFINE_FUNC_PTR(MemoryStream_Create)
TMemoryStream
MemoryStream_Create() {
    GET_FUNC_ADDR(MemoryStream_Create)
    return (TMemoryStream)MySyscall(pMemoryStream_Create, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MemoryStream_Free)
void
MemoryStream_Free(TMemoryStream AObj) {
    GET_FUNC_ADDR(MemoryStream_Free)
    MySyscall(pMemoryStream_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MemoryStream_Clear)
void
MemoryStream_Clear(TMemoryStream AObj) {
    GET_FUNC_ADDR(MemoryStream_Clear)
    MySyscall(pMemoryStream_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MemoryStream_LoadFromStream)
void
MemoryStream_LoadFromStream(TMemoryStream AObj, TStream Stream) {
    GET_FUNC_ADDR(MemoryStream_LoadFromStream)
    MySyscall(pMemoryStream_LoadFromStream, 2, AObj, Stream ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MemoryStream_LoadFromFile)
void
MemoryStream_LoadFromFile(TMemoryStream AObj, CChar char* FileName) {
    GET_FUNC_ADDR(MemoryStream_LoadFromFile)
    MySyscall(pMemoryStream_LoadFromFile, 2, AObj, FileName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MemoryStream_Seek)
int64_t
MemoryStream_Seek(TMemoryStream AObj, int64_t Offset, TSeekOrigin Origin) {
    GET_FUNC_ADDR(MemoryStream_Seek)
    int64_t result;
    MySyscall(pMemoryStream_Seek, 4, AObj, &Offset, Origin, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MemoryStream_SaveToStream)
void
MemoryStream_SaveToStream(TMemoryStream AObj, TStream Stream) {
    GET_FUNC_ADDR(MemoryStream_SaveToStream)
    MySyscall(pMemoryStream_SaveToStream, 2, AObj, Stream ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MemoryStream_SaveToFile)
void
MemoryStream_SaveToFile(TMemoryStream AObj, CChar char* FileName) {
    GET_FUNC_ADDR(MemoryStream_SaveToFile)
    MySyscall(pMemoryStream_SaveToFile, 2, AObj, FileName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MemoryStream_CopyFrom)
int64_t
MemoryStream_CopyFrom(TMemoryStream AObj, TStream Source, int64_t Count) {
    GET_FUNC_ADDR(MemoryStream_CopyFrom)
    int64_t result;
    MySyscall(pMemoryStream_CopyFrom, 4, AObj, Source, &Count, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MemoryStream_ClassType)
TClass
MemoryStream_ClassType(TMemoryStream AObj) {
    GET_FUNC_ADDR(MemoryStream_ClassType)
    return (TClass)MySyscall(pMemoryStream_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MemoryStream_ClassName)
char*
MemoryStream_ClassName(TMemoryStream AObj) {
    GET_FUNC_ADDR(MemoryStream_ClassName)
    return (char*)MySyscall(pMemoryStream_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MemoryStream_InstanceSize)
int32_t
MemoryStream_InstanceSize(TMemoryStream AObj) {
    GET_FUNC_ADDR(MemoryStream_InstanceSize)
    return (int32_t)MySyscall(pMemoryStream_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MemoryStream_InheritsFrom)
BOOL
MemoryStream_InheritsFrom(TMemoryStream AObj, TClass AClass) {
    GET_FUNC_ADDR(MemoryStream_InheritsFrom)
    return (BOOL)MySyscall(pMemoryStream_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MemoryStream_Equals)
BOOL
MemoryStream_Equals(TMemoryStream AObj, TObject Obj) {
    GET_FUNC_ADDR(MemoryStream_Equals)
    return (BOOL)MySyscall(pMemoryStream_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MemoryStream_GetHashCode)
int32_t
MemoryStream_GetHashCode(TMemoryStream AObj) {
    GET_FUNC_ADDR(MemoryStream_GetHashCode)
    return (int32_t)MySyscall(pMemoryStream_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MemoryStream_ToString)
char*
MemoryStream_ToString(TMemoryStream AObj) {
    GET_FUNC_ADDR(MemoryStream_ToString)
    return (char*)MySyscall(pMemoryStream_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MemoryStream_GetMemory)
void*
MemoryStream_GetMemory(TMemoryStream AObj) {
    GET_FUNC_ADDR(MemoryStream_GetMemory)
    return (void*)MySyscall(pMemoryStream_GetMemory, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MemoryStream_GetPosition)
int64_t
MemoryStream_GetPosition(TMemoryStream AObj) {
    GET_FUNC_ADDR(MemoryStream_GetPosition)
    int64_t result;
    MySyscall(pMemoryStream_GetPosition, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MemoryStream_SetPosition)
void
MemoryStream_SetPosition(TMemoryStream AObj, int64_t AValue) {
    GET_FUNC_ADDR(MemoryStream_SetPosition)
    MySyscall(pMemoryStream_SetPosition, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MemoryStream_GetSize)
int64_t
MemoryStream_GetSize(TMemoryStream AObj) {
    GET_FUNC_ADDR(MemoryStream_GetSize)
    int64_t result;
    MySyscall(pMemoryStream_GetSize, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MemoryStream_SetSize)
void
MemoryStream_SetSize(TMemoryStream AObj, int64_t AValue) {
    GET_FUNC_ADDR(MemoryStream_SetSize)
    MySyscall(pMemoryStream_SetSize, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MemoryStream_StaticClassType)
TClass
MemoryStream_StaticClassType() {
    GET_FUNC_ADDR(MemoryStream_StaticClassType)
    return (TClass)MySyscall(pMemoryStream_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MemoryStream_Write)
int32_t
MemoryStream_Write(TMemoryStream AObj, void* Buffer, int32_t Count) {
    GET_FUNC_ADDR(MemoryStream_Write)
    return (int32_t)MySyscall(pMemoryStream_Write, 3, AObj, Buffer, Count ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MemoryStream_Read)
int32_t
MemoryStream_Read(TMemoryStream AObj, void* Buffer, int32_t Count) {
    GET_FUNC_ADDR(MemoryStream_Read)
    return (int32_t)MySyscall(pMemoryStream_Read, 3, AObj, Buffer, Count ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TFont-------------------

DEFINE_FUNC_PTR(Font_Create)
TFont
Font_Create() {
    GET_FUNC_ADDR(Font_Create)
    return (TFont)MySyscall(pFont_Create, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_Free)
void
Font_Free(TFont AObj) {
    GET_FUNC_ADDR(Font_Free)
    MySyscall(pFont_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_Assign)
void
Font_Assign(TFont AObj, TObject Source) {
    GET_FUNC_ADDR(Font_Assign)
    MySyscall(pFont_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_HandleAllocated)
BOOL
Font_HandleAllocated(TFont AObj) {
    GET_FUNC_ADDR(Font_HandleAllocated)
    return (BOOL)MySyscall(pFont_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_GetNamePath)
char*
Font_GetNamePath(TFont AObj) {
    GET_FUNC_ADDR(Font_GetNamePath)
    return (char*)MySyscall(pFont_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_ClassType)
TClass
Font_ClassType(TFont AObj) {
    GET_FUNC_ADDR(Font_ClassType)
    return (TClass)MySyscall(pFont_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_ClassName)
char*
Font_ClassName(TFont AObj) {
    GET_FUNC_ADDR(Font_ClassName)
    return (char*)MySyscall(pFont_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_InstanceSize)
int32_t
Font_InstanceSize(TFont AObj) {
    GET_FUNC_ADDR(Font_InstanceSize)
    return (int32_t)MySyscall(pFont_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_InheritsFrom)
BOOL
Font_InheritsFrom(TFont AObj, TClass AClass) {
    GET_FUNC_ADDR(Font_InheritsFrom)
    return (BOOL)MySyscall(pFont_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_Equals)
BOOL
Font_Equals(TFont AObj, TObject Obj) {
    GET_FUNC_ADDR(Font_Equals)
    return (BOOL)MySyscall(pFont_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_GetHashCode)
int32_t
Font_GetHashCode(TFont AObj) {
    GET_FUNC_ADDR(Font_GetHashCode)
    return (int32_t)MySyscall(pFont_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_ToString)
char*
Font_ToString(TFont AObj) {
    GET_FUNC_ADDR(Font_ToString)
    return (char*)MySyscall(pFont_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_GetHandle)
HFONT
Font_GetHandle(TFont AObj) {
    GET_FUNC_ADDR(Font_GetHandle)
    return (HFONT)MySyscall(pFont_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_SetHandle)
void
Font_SetHandle(TFont AObj, HFONT AValue) {
    GET_FUNC_ADDR(Font_SetHandle)
    MySyscall(pFont_SetHandle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_GetPixelsPerInch)
int32_t
Font_GetPixelsPerInch(TFont AObj) {
    GET_FUNC_ADDR(Font_GetPixelsPerInch)
    return (int32_t)MySyscall(pFont_GetPixelsPerInch, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_SetPixelsPerInch)
void
Font_SetPixelsPerInch(TFont AObj, int32_t AValue) {
    GET_FUNC_ADDR(Font_SetPixelsPerInch)
    MySyscall(pFont_SetPixelsPerInch, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_GetCharset)
TFontCharset
Font_GetCharset(TFont AObj) {
    GET_FUNC_ADDR(Font_GetCharset)
    return (TFontCharset)MySyscall(pFont_GetCharset, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_SetCharset)
void
Font_SetCharset(TFont AObj, TFontCharset AValue) {
    GET_FUNC_ADDR(Font_SetCharset)
    MySyscall(pFont_SetCharset, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_GetColor)
TColor
Font_GetColor(TFont AObj) {
    GET_FUNC_ADDR(Font_GetColor)
    return (TColor)MySyscall(pFont_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_SetColor)
void
Font_SetColor(TFont AObj, TColor AValue) {
    GET_FUNC_ADDR(Font_SetColor)
    MySyscall(pFont_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_GetHeight)
int32_t
Font_GetHeight(TFont AObj) {
    GET_FUNC_ADDR(Font_GetHeight)
    return (int32_t)MySyscall(pFont_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_SetHeight)
void
Font_SetHeight(TFont AObj, int32_t AValue) {
    GET_FUNC_ADDR(Font_SetHeight)
    MySyscall(pFont_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_GetName)
char*
Font_GetName(TFont AObj) {
    GET_FUNC_ADDR(Font_GetName)
    return (char*)MySyscall(pFont_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_SetName)
void
Font_SetName(TFont AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Font_SetName)
    MySyscall(pFont_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_GetOrientation)
int32_t
Font_GetOrientation(TFont AObj) {
    GET_FUNC_ADDR(Font_GetOrientation)
    return (int32_t)MySyscall(pFont_GetOrientation, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_SetOrientation)
void
Font_SetOrientation(TFont AObj, int32_t AValue) {
    GET_FUNC_ADDR(Font_SetOrientation)
    MySyscall(pFont_SetOrientation, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_GetPitch)
TFontPitch
Font_GetPitch(TFont AObj) {
    GET_FUNC_ADDR(Font_GetPitch)
    return (TFontPitch)MySyscall(pFont_GetPitch, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_SetPitch)
void
Font_SetPitch(TFont AObj, TFontPitch AValue) {
    GET_FUNC_ADDR(Font_SetPitch)
    MySyscall(pFont_SetPitch, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_GetSize)
int32_t
Font_GetSize(TFont AObj) {
    GET_FUNC_ADDR(Font_GetSize)
    return (int32_t)MySyscall(pFont_GetSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_SetSize)
void
Font_SetSize(TFont AObj, int32_t AValue) {
    GET_FUNC_ADDR(Font_SetSize)
    MySyscall(pFont_SetSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_GetStyle)
TFontStyles
Font_GetStyle(TFont AObj) {
    GET_FUNC_ADDR(Font_GetStyle)
    return (TFontStyles)MySyscall(pFont_GetStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_SetStyle)
void
Font_SetStyle(TFont AObj, TFontStyles AValue) {
    GET_FUNC_ADDR(Font_SetStyle)
    MySyscall(pFont_SetStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_GetQuality)
TFontQuality
Font_GetQuality(TFont AObj) {
    GET_FUNC_ADDR(Font_GetQuality)
    return (TFontQuality)MySyscall(pFont_GetQuality, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_SetQuality)
void
Font_SetQuality(TFont AObj, TFontQuality AValue) {
    GET_FUNC_ADDR(Font_SetQuality)
    MySyscall(pFont_SetQuality, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_SetOnChange)
void
Font_SetOnChange(TFont AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Font_SetOnChange)
    MySyscall(pFont_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Font_StaticClassType)
TClass
Font_StaticClassType() {
    GET_FUNC_ADDR(Font_StaticClassType)
    return (TClass)MySyscall(pFont_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TPopupMenu-------------------

DEFINE_FUNC_PTR(PopupMenu_Create)
TPopupMenu
PopupMenu_Create(TComponent AOwner) {
    GET_FUNC_ADDR(PopupMenu_Create)
    return (TPopupMenu)MySyscall(pPopupMenu_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_Free)
void
PopupMenu_Free(TPopupMenu AObj) {
    GET_FUNC_ADDR(PopupMenu_Free)
    MySyscall(pPopupMenu_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_CloseMenu)
void
PopupMenu_CloseMenu(TPopupMenu AObj) {
    GET_FUNC_ADDR(PopupMenu_CloseMenu)
    MySyscall(pPopupMenu_CloseMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_Popup)
void
PopupMenu_Popup(TPopupMenu AObj, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(PopupMenu_Popup)
    MySyscall(pPopupMenu_Popup, 3, AObj, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_FindComponent)
TComponent
PopupMenu_FindComponent(TPopupMenu AObj, CChar char* AName) {
    GET_FUNC_ADDR(PopupMenu_FindComponent)
    return (TComponent)MySyscall(pPopupMenu_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_GetNamePath)
char*
PopupMenu_GetNamePath(TPopupMenu AObj) {
    GET_FUNC_ADDR(PopupMenu_GetNamePath)
    return (char*)MySyscall(pPopupMenu_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_HasParent)
BOOL
PopupMenu_HasParent(TPopupMenu AObj) {
    GET_FUNC_ADDR(PopupMenu_HasParent)
    return (BOOL)MySyscall(pPopupMenu_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_Assign)
void
PopupMenu_Assign(TPopupMenu AObj, TObject Source) {
    GET_FUNC_ADDR(PopupMenu_Assign)
    MySyscall(pPopupMenu_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_ClassType)
TClass
PopupMenu_ClassType(TPopupMenu AObj) {
    GET_FUNC_ADDR(PopupMenu_ClassType)
    return (TClass)MySyscall(pPopupMenu_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_ClassName)
char*
PopupMenu_ClassName(TPopupMenu AObj) {
    GET_FUNC_ADDR(PopupMenu_ClassName)
    return (char*)MySyscall(pPopupMenu_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_InstanceSize)
int32_t
PopupMenu_InstanceSize(TPopupMenu AObj) {
    GET_FUNC_ADDR(PopupMenu_InstanceSize)
    return (int32_t)MySyscall(pPopupMenu_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_InheritsFrom)
BOOL
PopupMenu_InheritsFrom(TPopupMenu AObj, TClass AClass) {
    GET_FUNC_ADDR(PopupMenu_InheritsFrom)
    return (BOOL)MySyscall(pPopupMenu_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_Equals)
BOOL
PopupMenu_Equals(TPopupMenu AObj, TObject Obj) {
    GET_FUNC_ADDR(PopupMenu_Equals)
    return (BOOL)MySyscall(pPopupMenu_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_GetHashCode)
int32_t
PopupMenu_GetHashCode(TPopupMenu AObj) {
    GET_FUNC_ADDR(PopupMenu_GetHashCode)
    return (int32_t)MySyscall(pPopupMenu_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_ToString)
char*
PopupMenu_ToString(TPopupMenu AObj) {
    GET_FUNC_ADDR(PopupMenu_ToString)
    return (char*)MySyscall(pPopupMenu_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_GetImagesWidth)
int32_t
PopupMenu_GetImagesWidth(TPopupMenu AObj) {
    GET_FUNC_ADDR(PopupMenu_GetImagesWidth)
    return (int32_t)MySyscall(pPopupMenu_GetImagesWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_SetImagesWidth)
void
PopupMenu_SetImagesWidth(TPopupMenu AObj, int32_t AValue) {
    GET_FUNC_ADDR(PopupMenu_SetImagesWidth)
    MySyscall(pPopupMenu_SetImagesWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_SetOnDrawItem)
void
PopupMenu_SetOnDrawItem(TPopupMenu AObj, TMenuDrawItemEvent AEventData) {
    GET_FUNC_ADDR(PopupMenu_SetOnDrawItem)
    MySyscall(pPopupMenu_SetOnDrawItem, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_SetOnMeasureItem)
void
PopupMenu_SetOnMeasureItem(TPopupMenu AObj, TMenuMeasureItemEvent AEventData) {
    GET_FUNC_ADDR(PopupMenu_SetOnMeasureItem)
    MySyscall(pPopupMenu_SetOnMeasureItem, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_GetPopupComponent)
TComponent
PopupMenu_GetPopupComponent(TPopupMenu AObj) {
    GET_FUNC_ADDR(PopupMenu_GetPopupComponent)
    return (TComponent)MySyscall(pPopupMenu_GetPopupComponent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_SetPopupComponent)
void
PopupMenu_SetPopupComponent(TPopupMenu AObj, TComponent AValue) {
    GET_FUNC_ADDR(PopupMenu_SetPopupComponent)
    MySyscall(pPopupMenu_SetPopupComponent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_GetPopupPoint)
TPoint
PopupMenu_GetPopupPoint(TPopupMenu AObj) {
    GET_FUNC_ADDR(PopupMenu_GetPopupPoint)
    TPoint result;
    MySyscall(pPopupMenu_GetPopupPoint, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(PopupMenu_GetAlignment)
TPopupAlignment
PopupMenu_GetAlignment(TPopupMenu AObj) {
    GET_FUNC_ADDR(PopupMenu_GetAlignment)
    return (TPopupAlignment)MySyscall(pPopupMenu_GetAlignment, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_SetAlignment)
void
PopupMenu_SetAlignment(TPopupMenu AObj, TPopupAlignment AValue) {
    GET_FUNC_ADDR(PopupMenu_SetAlignment)
    MySyscall(pPopupMenu_SetAlignment, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_GetBiDiMode)
TBiDiMode
PopupMenu_GetBiDiMode(TPopupMenu AObj) {
    GET_FUNC_ADDR(PopupMenu_GetBiDiMode)
    return (TBiDiMode)MySyscall(pPopupMenu_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_SetBiDiMode)
void
PopupMenu_SetBiDiMode(TPopupMenu AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(PopupMenu_SetBiDiMode)
    MySyscall(pPopupMenu_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_GetImages)
TImageList
PopupMenu_GetImages(TPopupMenu AObj) {
    GET_FUNC_ADDR(PopupMenu_GetImages)
    return (TImageList)MySyscall(pPopupMenu_GetImages, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_SetImages)
void
PopupMenu_SetImages(TPopupMenu AObj, TImageList AValue) {
    GET_FUNC_ADDR(PopupMenu_SetImages)
    MySyscall(pPopupMenu_SetImages, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_GetOwnerDraw)
BOOL
PopupMenu_GetOwnerDraw(TPopupMenu AObj) {
    GET_FUNC_ADDR(PopupMenu_GetOwnerDraw)
    return (BOOL)MySyscall(pPopupMenu_GetOwnerDraw, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_SetOwnerDraw)
void
PopupMenu_SetOwnerDraw(TPopupMenu AObj, BOOL AValue) {
    GET_FUNC_ADDR(PopupMenu_SetOwnerDraw)
    MySyscall(pPopupMenu_SetOwnerDraw, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_SetOnPopup)
void
PopupMenu_SetOnPopup(TPopupMenu AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(PopupMenu_SetOnPopup)
    MySyscall(pPopupMenu_SetOnPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_GetHandle)
HMENU
PopupMenu_GetHandle(TPopupMenu AObj) {
    GET_FUNC_ADDR(PopupMenu_GetHandle)
    return (HMENU)MySyscall(pPopupMenu_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_GetItems)
TMenuItem
PopupMenu_GetItems(TPopupMenu AObj) {
    GET_FUNC_ADDR(PopupMenu_GetItems)
    return (TMenuItem)MySyscall(pPopupMenu_GetItems, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_GetComponentCount)
int32_t
PopupMenu_GetComponentCount(TPopupMenu AObj) {
    GET_FUNC_ADDR(PopupMenu_GetComponentCount)
    return (int32_t)MySyscall(pPopupMenu_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_GetComponentIndex)
int32_t
PopupMenu_GetComponentIndex(TPopupMenu AObj) {
    GET_FUNC_ADDR(PopupMenu_GetComponentIndex)
    return (int32_t)MySyscall(pPopupMenu_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_SetComponentIndex)
void
PopupMenu_SetComponentIndex(TPopupMenu AObj, int32_t AValue) {
    GET_FUNC_ADDR(PopupMenu_SetComponentIndex)
    MySyscall(pPopupMenu_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_GetOwner)
TComponent
PopupMenu_GetOwner(TPopupMenu AObj) {
    GET_FUNC_ADDR(PopupMenu_GetOwner)
    return (TComponent)MySyscall(pPopupMenu_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_GetName)
char*
PopupMenu_GetName(TPopupMenu AObj) {
    GET_FUNC_ADDR(PopupMenu_GetName)
    return (char*)MySyscall(pPopupMenu_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_SetName)
void
PopupMenu_SetName(TPopupMenu AObj, CChar char* AValue) {
    GET_FUNC_ADDR(PopupMenu_SetName)
    MySyscall(pPopupMenu_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_GetTag)
intptr_t
PopupMenu_GetTag(TPopupMenu AObj) {
    GET_FUNC_ADDR(PopupMenu_GetTag)
    return (intptr_t)MySyscall(pPopupMenu_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_SetTag)
void
PopupMenu_SetTag(TPopupMenu AObj, intptr_t AValue) {
    GET_FUNC_ADDR(PopupMenu_SetTag)
    MySyscall(pPopupMenu_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_GetComponents)
TComponent
PopupMenu_GetComponents(TPopupMenu AObj, int32_t AIndex) {
    GET_FUNC_ADDR(PopupMenu_GetComponents)
    return (TComponent)MySyscall(pPopupMenu_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PopupMenu_StaticClassType)
TClass
PopupMenu_StaticClassType() {
    GET_FUNC_ADDR(PopupMenu_StaticClassType)
    return (TClass)MySyscall(pPopupMenu_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TStringList-------------------

DEFINE_FUNC_PTR(StringList_Create)
TStringList
StringList_Create() {
    GET_FUNC_ADDR(StringList_Create)
    return (TStringList)MySyscall(pStringList_Create, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_Free)
void
StringList_Free(TStringList AObj) {
    GET_FUNC_ADDR(StringList_Free)
    MySyscall(pStringList_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_Add)
int32_t
StringList_Add(TStringList AObj, CChar char* S) {
    GET_FUNC_ADDR(StringList_Add)
    return (int32_t)MySyscall(pStringList_Add, 2, AObj, S ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_AddObject)
int32_t
StringList_AddObject(TStringList AObj, CChar char* S, TObject AObject) {
    GET_FUNC_ADDR(StringList_AddObject)
    return (int32_t)MySyscall(pStringList_AddObject, 3, AObj, S, AObject ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_Assign)
void
StringList_Assign(TStringList AObj, TObject Source) {
    GET_FUNC_ADDR(StringList_Assign)
    MySyscall(pStringList_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_Clear)
void
StringList_Clear(TStringList AObj) {
    GET_FUNC_ADDR(StringList_Clear)
    MySyscall(pStringList_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_Delete)
void
StringList_Delete(TStringList AObj, int32_t Index) {
    GET_FUNC_ADDR(StringList_Delete)
    MySyscall(pStringList_Delete, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_Exchange)
void
StringList_Exchange(TStringList AObj, int32_t Index1, int32_t Index2) {
    GET_FUNC_ADDR(StringList_Exchange)
    MySyscall(pStringList_Exchange, 3, AObj, Index1, Index2 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_IndexOf)
int32_t
StringList_IndexOf(TStringList AObj, CChar char* S) {
    GET_FUNC_ADDR(StringList_IndexOf)
    return (int32_t)MySyscall(pStringList_IndexOf, 2, AObj, S ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_Insert)
void
StringList_Insert(TStringList AObj, int32_t Index, CChar char* S) {
    GET_FUNC_ADDR(StringList_Insert)
    MySyscall(pStringList_Insert, 3, AObj, Index, S ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_InsertObject)
void
StringList_InsertObject(TStringList AObj, int32_t Index, CChar char* S, TObject AObject) {
    GET_FUNC_ADDR(StringList_InsertObject)
    MySyscall(pStringList_InsertObject, 4, AObj, Index, S, AObject ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_Append)
void
StringList_Append(TStringList AObj, CChar char* S) {
    GET_FUNC_ADDR(StringList_Append)
    MySyscall(pStringList_Append, 2, AObj, S ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_BeginUpdate)
void
StringList_BeginUpdate(TStringList AObj) {
    GET_FUNC_ADDR(StringList_BeginUpdate)
    MySyscall(pStringList_BeginUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_EndUpdate)
void
StringList_EndUpdate(TStringList AObj) {
    GET_FUNC_ADDR(StringList_EndUpdate)
    MySyscall(pStringList_EndUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_Equals)
BOOL
StringList_Equals(TStringList AObj, TStrings Strings) {
    GET_FUNC_ADDR(StringList_Equals)
    return (BOOL)MySyscall(pStringList_Equals, 2, AObj, Strings ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_IndexOfName)
int32_t
StringList_IndexOfName(TStringList AObj, CChar char* Name) {
    GET_FUNC_ADDR(StringList_IndexOfName)
    return (int32_t)MySyscall(pStringList_IndexOfName, 2, AObj, Name ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_IndexOfObject)
int32_t
StringList_IndexOfObject(TStringList AObj, TObject AObject) {
    GET_FUNC_ADDR(StringList_IndexOfObject)
    return (int32_t)MySyscall(pStringList_IndexOfObject, 2, AObj, AObject ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_LoadFromFile)
void
StringList_LoadFromFile(TStringList AObj, CChar char* FileName) {
    GET_FUNC_ADDR(StringList_LoadFromFile)
    MySyscall(pStringList_LoadFromFile, 2, AObj, FileName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_LoadFromStream)
void
StringList_LoadFromStream(TStringList AObj, TStream Stream) {
    GET_FUNC_ADDR(StringList_LoadFromStream)
    MySyscall(pStringList_LoadFromStream, 2, AObj, Stream ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_Move)
void
StringList_Move(TStringList AObj, int32_t CurIndex, int32_t NewIndex) {
    GET_FUNC_ADDR(StringList_Move)
    MySyscall(pStringList_Move, 3, AObj, CurIndex, NewIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_SaveToFile)
void
StringList_SaveToFile(TStringList AObj, CChar char* FileName) {
    GET_FUNC_ADDR(StringList_SaveToFile)
    MySyscall(pStringList_SaveToFile, 2, AObj, FileName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_SaveToStream)
void
StringList_SaveToStream(TStringList AObj, TStream Stream) {
    GET_FUNC_ADDR(StringList_SaveToStream)
    MySyscall(pStringList_SaveToStream, 2, AObj, Stream ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_GetNamePath)
char*
StringList_GetNamePath(TStringList AObj) {
    GET_FUNC_ADDR(StringList_GetNamePath)
    return (char*)MySyscall(pStringList_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_ClassType)
TClass
StringList_ClassType(TStringList AObj) {
    GET_FUNC_ADDR(StringList_ClassType)
    return (TClass)MySyscall(pStringList_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_ClassName)
char*
StringList_ClassName(TStringList AObj) {
    GET_FUNC_ADDR(StringList_ClassName)
    return (char*)MySyscall(pStringList_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_InstanceSize)
int32_t
StringList_InstanceSize(TStringList AObj) {
    GET_FUNC_ADDR(StringList_InstanceSize)
    return (int32_t)MySyscall(pStringList_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_InheritsFrom)
BOOL
StringList_InheritsFrom(TStringList AObj, TClass AClass) {
    GET_FUNC_ADDR(StringList_InheritsFrom)
    return (BOOL)MySyscall(pStringList_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_GetHashCode)
int32_t
StringList_GetHashCode(TStringList AObj) {
    GET_FUNC_ADDR(StringList_GetHashCode)
    return (int32_t)MySyscall(pStringList_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_ToString)
char*
StringList_ToString(TStringList AObj) {
    GET_FUNC_ADDR(StringList_ToString)
    return (char*)MySyscall(pStringList_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_GetSorted)
BOOL
StringList_GetSorted(TStringList AObj) {
    GET_FUNC_ADDR(StringList_GetSorted)
    return (BOOL)MySyscall(pStringList_GetSorted, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_SetSorted)
void
StringList_SetSorted(TStringList AObj, BOOL AValue) {
    GET_FUNC_ADDR(StringList_SetSorted)
    MySyscall(pStringList_SetSorted, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_SetOnChange)
void
StringList_SetOnChange(TStringList AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(StringList_SetOnChange)
    MySyscall(pStringList_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_SetOnChanging)
void
StringList_SetOnChanging(TStringList AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(StringList_SetOnChanging)
    MySyscall(pStringList_SetOnChanging, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_GetCapacity)
int32_t
StringList_GetCapacity(TStringList AObj) {
    GET_FUNC_ADDR(StringList_GetCapacity)
    return (int32_t)MySyscall(pStringList_GetCapacity, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_SetCapacity)
void
StringList_SetCapacity(TStringList AObj, int32_t AValue) {
    GET_FUNC_ADDR(StringList_SetCapacity)
    MySyscall(pStringList_SetCapacity, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_GetCommaText)
char*
StringList_GetCommaText(TStringList AObj) {
    GET_FUNC_ADDR(StringList_GetCommaText)
    return (char*)MySyscall(pStringList_GetCommaText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_SetCommaText)
void
StringList_SetCommaText(TStringList AObj, CChar char* AValue) {
    GET_FUNC_ADDR(StringList_SetCommaText)
    MySyscall(pStringList_SetCommaText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_GetCount)
int32_t
StringList_GetCount(TStringList AObj) {
    GET_FUNC_ADDR(StringList_GetCount)
    return (int32_t)MySyscall(pStringList_GetCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_GetDelimiter)
Char
StringList_GetDelimiter(TStringList AObj) {
    GET_FUNC_ADDR(StringList_GetDelimiter)
    return (Char)MySyscall(pStringList_GetDelimiter, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_SetDelimiter)
void
StringList_SetDelimiter(TStringList AObj, Char AValue) {
    GET_FUNC_ADDR(StringList_SetDelimiter)
    MySyscall(pStringList_SetDelimiter, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_GetNameValueSeparator)
Char
StringList_GetNameValueSeparator(TStringList AObj) {
    GET_FUNC_ADDR(StringList_GetNameValueSeparator)
    return (Char)MySyscall(pStringList_GetNameValueSeparator, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_SetNameValueSeparator)
void
StringList_SetNameValueSeparator(TStringList AObj, Char AValue) {
    GET_FUNC_ADDR(StringList_SetNameValueSeparator)
    MySyscall(pStringList_SetNameValueSeparator, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_GetText)
char*
StringList_GetText(TStringList AObj) {
    GET_FUNC_ADDR(StringList_GetText)
    return (char*)MySyscall(pStringList_GetText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_SetText)
void
StringList_SetText(TStringList AObj, CChar char* AValue) {
    GET_FUNC_ADDR(StringList_SetText)
    MySyscall(pStringList_SetText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_GetObjects)
TObject
StringList_GetObjects(TStringList AObj, int32_t Index) {
    GET_FUNC_ADDR(StringList_GetObjects)
    return (TObject)MySyscall(pStringList_GetObjects, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_SetObjects)
void
StringList_SetObjects(TStringList AObj, int32_t Index, TObject AValue) {
    GET_FUNC_ADDR(StringList_SetObjects)
    MySyscall(pStringList_SetObjects, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_GetValues)
char*
StringList_GetValues(TStringList AObj, CChar char* Name) {
    GET_FUNC_ADDR(StringList_GetValues)
    return (char*)MySyscall(pStringList_GetValues, 2, AObj, Name ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_SetValues)
void
StringList_SetValues(TStringList AObj, CChar char* Name, CChar char* AValue) {
    GET_FUNC_ADDR(StringList_SetValues)
    MySyscall(pStringList_SetValues, 3, AObj, Name, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_GetValueFromIndex)
char*
StringList_GetValueFromIndex(TStringList AObj, int32_t Index) {
    GET_FUNC_ADDR(StringList_GetValueFromIndex)
    return (char*)MySyscall(pStringList_GetValueFromIndex, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_SetValueFromIndex)
void
StringList_SetValueFromIndex(TStringList AObj, int32_t Index, CChar char* AValue) {
    GET_FUNC_ADDR(StringList_SetValueFromIndex)
    MySyscall(pStringList_SetValueFromIndex, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_GetStrings)
char*
StringList_GetStrings(TStringList AObj, int32_t Index) {
    GET_FUNC_ADDR(StringList_GetStrings)
    return (char*)MySyscall(pStringList_GetStrings, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_SetStrings)
void
StringList_SetStrings(TStringList AObj, int32_t Index, CChar char* AValue) {
    GET_FUNC_ADDR(StringList_SetStrings)
    MySyscall(pStringList_SetStrings, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringList_StaticClassType)
TClass
StringList_StaticClassType() {
    GET_FUNC_ADDR(StringList_StaticClassType)
    return (TClass)MySyscall(pStringList_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TBrush-------------------

DEFINE_FUNC_PTR(Brush_Create)
TBrush
Brush_Create() {
    GET_FUNC_ADDR(Brush_Create)
    return (TBrush)MySyscall(pBrush_Create, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Brush_Free)
void
Brush_Free(TBrush AObj) {
    GET_FUNC_ADDR(Brush_Free)
    MySyscall(pBrush_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Brush_Assign)
void
Brush_Assign(TBrush AObj, TObject Source) {
    GET_FUNC_ADDR(Brush_Assign)
    MySyscall(pBrush_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Brush_GetNamePath)
char*
Brush_GetNamePath(TBrush AObj) {
    GET_FUNC_ADDR(Brush_GetNamePath)
    return (char*)MySyscall(pBrush_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Brush_ClassType)
TClass
Brush_ClassType(TBrush AObj) {
    GET_FUNC_ADDR(Brush_ClassType)
    return (TClass)MySyscall(pBrush_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Brush_ClassName)
char*
Brush_ClassName(TBrush AObj) {
    GET_FUNC_ADDR(Brush_ClassName)
    return (char*)MySyscall(pBrush_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Brush_InstanceSize)
int32_t
Brush_InstanceSize(TBrush AObj) {
    GET_FUNC_ADDR(Brush_InstanceSize)
    return (int32_t)MySyscall(pBrush_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Brush_InheritsFrom)
BOOL
Brush_InheritsFrom(TBrush AObj, TClass AClass) {
    GET_FUNC_ADDR(Brush_InheritsFrom)
    return (BOOL)MySyscall(pBrush_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Brush_Equals)
BOOL
Brush_Equals(TBrush AObj, TObject Obj) {
    GET_FUNC_ADDR(Brush_Equals)
    return (BOOL)MySyscall(pBrush_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Brush_GetHashCode)
int32_t
Brush_GetHashCode(TBrush AObj) {
    GET_FUNC_ADDR(Brush_GetHashCode)
    return (int32_t)MySyscall(pBrush_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Brush_ToString)
char*
Brush_ToString(TBrush AObj) {
    GET_FUNC_ADDR(Brush_ToString)
    return (char*)MySyscall(pBrush_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Brush_GetBitmap)
TBitmap
Brush_GetBitmap(TBrush AObj) {
    GET_FUNC_ADDR(Brush_GetBitmap)
    return (TBitmap)MySyscall(pBrush_GetBitmap, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Brush_SetBitmap)
void
Brush_SetBitmap(TBrush AObj, TBitmap AValue) {
    GET_FUNC_ADDR(Brush_SetBitmap)
    MySyscall(pBrush_SetBitmap, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Brush_GetHandle)
HBRUSH
Brush_GetHandle(TBrush AObj) {
    GET_FUNC_ADDR(Brush_GetHandle)
    return (HBRUSH)MySyscall(pBrush_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Brush_SetHandle)
void
Brush_SetHandle(TBrush AObj, HBRUSH AValue) {
    GET_FUNC_ADDR(Brush_SetHandle)
    MySyscall(pBrush_SetHandle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Brush_GetColor)
TColor
Brush_GetColor(TBrush AObj) {
    GET_FUNC_ADDR(Brush_GetColor)
    return (TColor)MySyscall(pBrush_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Brush_SetColor)
void
Brush_SetColor(TBrush AObj, TColor AValue) {
    GET_FUNC_ADDR(Brush_SetColor)
    MySyscall(pBrush_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Brush_GetStyle)
TBrushStyle
Brush_GetStyle(TBrush AObj) {
    GET_FUNC_ADDR(Brush_GetStyle)
    return (TBrushStyle)MySyscall(pBrush_GetStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Brush_SetStyle)
void
Brush_SetStyle(TBrush AObj, TBrushStyle AValue) {
    GET_FUNC_ADDR(Brush_SetStyle)
    MySyscall(pBrush_SetStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Brush_SetOnChange)
void
Brush_SetOnChange(TBrush AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Brush_SetOnChange)
    MySyscall(pBrush_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Brush_StaticClassType)
TClass
Brush_StaticClassType() {
    GET_FUNC_ADDR(Brush_StaticClassType)
    return (TClass)MySyscall(pBrush_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TPen-------------------

DEFINE_FUNC_PTR(Pen_Create)
TPen
Pen_Create() {
    GET_FUNC_ADDR(Pen_Create)
    return (TPen)MySyscall(pPen_Create, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Pen_Free)
void
Pen_Free(TPen AObj) {
    GET_FUNC_ADDR(Pen_Free)
    MySyscall(pPen_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Pen_Assign)
void
Pen_Assign(TPen AObj, TObject Source) {
    GET_FUNC_ADDR(Pen_Assign)
    MySyscall(pPen_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Pen_GetNamePath)
char*
Pen_GetNamePath(TPen AObj) {
    GET_FUNC_ADDR(Pen_GetNamePath)
    return (char*)MySyscall(pPen_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Pen_ClassType)
TClass
Pen_ClassType(TPen AObj) {
    GET_FUNC_ADDR(Pen_ClassType)
    return (TClass)MySyscall(pPen_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Pen_ClassName)
char*
Pen_ClassName(TPen AObj) {
    GET_FUNC_ADDR(Pen_ClassName)
    return (char*)MySyscall(pPen_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Pen_InstanceSize)
int32_t
Pen_InstanceSize(TPen AObj) {
    GET_FUNC_ADDR(Pen_InstanceSize)
    return (int32_t)MySyscall(pPen_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Pen_InheritsFrom)
BOOL
Pen_InheritsFrom(TPen AObj, TClass AClass) {
    GET_FUNC_ADDR(Pen_InheritsFrom)
    return (BOOL)MySyscall(pPen_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Pen_Equals)
BOOL
Pen_Equals(TPen AObj, TObject Obj) {
    GET_FUNC_ADDR(Pen_Equals)
    return (BOOL)MySyscall(pPen_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Pen_GetHashCode)
int32_t
Pen_GetHashCode(TPen AObj) {
    GET_FUNC_ADDR(Pen_GetHashCode)
    return (int32_t)MySyscall(pPen_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Pen_ToString)
char*
Pen_ToString(TPen AObj) {
    GET_FUNC_ADDR(Pen_ToString)
    return (char*)MySyscall(pPen_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Pen_GetHandle)
HPEN
Pen_GetHandle(TPen AObj) {
    GET_FUNC_ADDR(Pen_GetHandle)
    return (HPEN)MySyscall(pPen_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Pen_SetHandle)
void
Pen_SetHandle(TPen AObj, HPEN AValue) {
    GET_FUNC_ADDR(Pen_SetHandle)
    MySyscall(pPen_SetHandle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Pen_GetColor)
TColor
Pen_GetColor(TPen AObj) {
    GET_FUNC_ADDR(Pen_GetColor)
    return (TColor)MySyscall(pPen_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Pen_SetColor)
void
Pen_SetColor(TPen AObj, TColor AValue) {
    GET_FUNC_ADDR(Pen_SetColor)
    MySyscall(pPen_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Pen_GetMode)
TPenMode
Pen_GetMode(TPen AObj) {
    GET_FUNC_ADDR(Pen_GetMode)
    return (TPenMode)MySyscall(pPen_GetMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Pen_SetMode)
void
Pen_SetMode(TPen AObj, TPenMode AValue) {
    GET_FUNC_ADDR(Pen_SetMode)
    MySyscall(pPen_SetMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Pen_GetStyle)
TPenStyle
Pen_GetStyle(TPen AObj) {
    GET_FUNC_ADDR(Pen_GetStyle)
    return (TPenStyle)MySyscall(pPen_GetStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Pen_SetStyle)
void
Pen_SetStyle(TPen AObj, TPenStyle AValue) {
    GET_FUNC_ADDR(Pen_SetStyle)
    MySyscall(pPen_SetStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Pen_GetWidth)
int32_t
Pen_GetWidth(TPen AObj) {
    GET_FUNC_ADDR(Pen_GetWidth)
    return (int32_t)MySyscall(pPen_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Pen_SetWidth)
void
Pen_SetWidth(TPen AObj, int32_t AValue) {
    GET_FUNC_ADDR(Pen_SetWidth)
    MySyscall(pPen_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Pen_SetOnChange)
void
Pen_SetOnChange(TPen AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Pen_SetOnChange)
    MySyscall(pPen_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Pen_StaticClassType)
TClass
Pen_StaticClassType() {
    GET_FUNC_ADDR(Pen_StaticClassType)
    return (TClass)MySyscall(pPen_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TMenuItem-------------------

DEFINE_FUNC_PTR(MenuItem_Create)
TMenuItem
MenuItem_Create(TComponent AOwner) {
    GET_FUNC_ADDR(MenuItem_Create)
    return (TMenuItem)MySyscall(pMenuItem_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_Free)
void
MenuItem_Free(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_Free)
    MySyscall(pMenuItem_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_Insert)
void
MenuItem_Insert(TMenuItem AObj, int32_t Index, TMenuItem Item) {
    GET_FUNC_ADDR(MenuItem_Insert)
    MySyscall(pMenuItem_Insert, 3, AObj, Index, Item ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_Delete)
void
MenuItem_Delete(TMenuItem AObj, int32_t Index) {
    GET_FUNC_ADDR(MenuItem_Delete)
    MySyscall(pMenuItem_Delete, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_Clear)
void
MenuItem_Clear(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_Clear)
    MySyscall(pMenuItem_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_Click)
void
MenuItem_Click(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_Click)
    MySyscall(pMenuItem_Click, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_IndexOf)
int32_t
MenuItem_IndexOf(TMenuItem AObj, TMenuItem Item) {
    GET_FUNC_ADDR(MenuItem_IndexOf)
    return (int32_t)MySyscall(pMenuItem_IndexOf, 2, AObj, Item ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_HasParent)
BOOL
MenuItem_HasParent(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_HasParent)
    return (BOOL)MySyscall(pMenuItem_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_Add)
void
MenuItem_Add(TMenuItem AObj, TMenuItem Item) {
    GET_FUNC_ADDR(MenuItem_Add)
    MySyscall(pMenuItem_Add, 2, AObj, Item ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_FindComponent)
TComponent
MenuItem_FindComponent(TMenuItem AObj, CChar char* AName) {
    GET_FUNC_ADDR(MenuItem_FindComponent)
    return (TComponent)MySyscall(pMenuItem_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetNamePath)
char*
MenuItem_GetNamePath(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_GetNamePath)
    return (char*)MySyscall(pMenuItem_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_Assign)
void
MenuItem_Assign(TMenuItem AObj, TObject Source) {
    GET_FUNC_ADDR(MenuItem_Assign)
    MySyscall(pMenuItem_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_ClassType)
TClass
MenuItem_ClassType(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_ClassType)
    return (TClass)MySyscall(pMenuItem_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_ClassName)
char*
MenuItem_ClassName(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_ClassName)
    return (char*)MySyscall(pMenuItem_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_InstanceSize)
int32_t
MenuItem_InstanceSize(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_InstanceSize)
    return (int32_t)MySyscall(pMenuItem_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_InheritsFrom)
BOOL
MenuItem_InheritsFrom(TMenuItem AObj, TClass AClass) {
    GET_FUNC_ADDR(MenuItem_InheritsFrom)
    return (BOOL)MySyscall(pMenuItem_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_Equals)
BOOL
MenuItem_Equals(TMenuItem AObj, TObject Obj) {
    GET_FUNC_ADDR(MenuItem_Equals)
    return (BOOL)MySyscall(pMenuItem_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetHashCode)
int32_t
MenuItem_GetHashCode(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_GetHashCode)
    return (int32_t)MySyscall(pMenuItem_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_ToString)
char*
MenuItem_ToString(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_ToString)
    return (char*)MySyscall(pMenuItem_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetHandle)
HMENU
MenuItem_GetHandle(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_GetHandle)
    return (HMENU)MySyscall(pMenuItem_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetCount)
int32_t
MenuItem_GetCount(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_GetCount)
    return (int32_t)MySyscall(pMenuItem_GetCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetParent)
TMenuItem
MenuItem_GetParent(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_GetParent)
    return (TMenuItem)MySyscall(pMenuItem_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetAction)
TAction
MenuItem_GetAction(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_GetAction)
    return (TAction)MySyscall(pMenuItem_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_SetAction)
void
MenuItem_SetAction(TMenuItem AObj, TAction AValue) {
    GET_FUNC_ADDR(MenuItem_SetAction)
    MySyscall(pMenuItem_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetAutoCheck)
BOOL
MenuItem_GetAutoCheck(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_GetAutoCheck)
    return (BOOL)MySyscall(pMenuItem_GetAutoCheck, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_SetAutoCheck)
void
MenuItem_SetAutoCheck(TMenuItem AObj, BOOL AValue) {
    GET_FUNC_ADDR(MenuItem_SetAutoCheck)
    MySyscall(pMenuItem_SetAutoCheck, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetBitmap)
TBitmap
MenuItem_GetBitmap(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_GetBitmap)
    return (TBitmap)MySyscall(pMenuItem_GetBitmap, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_SetBitmap)
void
MenuItem_SetBitmap(TMenuItem AObj, TBitmap AValue) {
    GET_FUNC_ADDR(MenuItem_SetBitmap)
    MySyscall(pMenuItem_SetBitmap, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetCaption)
char*
MenuItem_GetCaption(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_GetCaption)
    return (char*)MySyscall(pMenuItem_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_SetCaption)
void
MenuItem_SetCaption(TMenuItem AObj, CChar char* AValue) {
    GET_FUNC_ADDR(MenuItem_SetCaption)
    MySyscall(pMenuItem_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetChecked)
BOOL
MenuItem_GetChecked(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_GetChecked)
    return (BOOL)MySyscall(pMenuItem_GetChecked, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_SetChecked)
void
MenuItem_SetChecked(TMenuItem AObj, BOOL AValue) {
    GET_FUNC_ADDR(MenuItem_SetChecked)
    MySyscall(pMenuItem_SetChecked, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetDefault)
BOOL
MenuItem_GetDefault(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_GetDefault)
    return (BOOL)MySyscall(pMenuItem_GetDefault, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_SetDefault)
void
MenuItem_SetDefault(TMenuItem AObj, BOOL AValue) {
    GET_FUNC_ADDR(MenuItem_SetDefault)
    MySyscall(pMenuItem_SetDefault, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetEnabled)
BOOL
MenuItem_GetEnabled(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_GetEnabled)
    return (BOOL)MySyscall(pMenuItem_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_SetEnabled)
void
MenuItem_SetEnabled(TMenuItem AObj, BOOL AValue) {
    GET_FUNC_ADDR(MenuItem_SetEnabled)
    MySyscall(pMenuItem_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetGroupIndex)
int8_t
MenuItem_GetGroupIndex(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_GetGroupIndex)
    return (int8_t)MySyscall(pMenuItem_GetGroupIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_SetGroupIndex)
void
MenuItem_SetGroupIndex(TMenuItem AObj, int8_t AValue) {
    GET_FUNC_ADDR(MenuItem_SetGroupIndex)
    MySyscall(pMenuItem_SetGroupIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetHint)
char*
MenuItem_GetHint(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_GetHint)
    return (char*)MySyscall(pMenuItem_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_SetHint)
void
MenuItem_SetHint(TMenuItem AObj, CChar char* AValue) {
    GET_FUNC_ADDR(MenuItem_SetHint)
    MySyscall(pMenuItem_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetImageIndex)
int32_t
MenuItem_GetImageIndex(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_GetImageIndex)
    return (int32_t)MySyscall(pMenuItem_GetImageIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_SetImageIndex)
void
MenuItem_SetImageIndex(TMenuItem AObj, int32_t AValue) {
    GET_FUNC_ADDR(MenuItem_SetImageIndex)
    MySyscall(pMenuItem_SetImageIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetRadioItem)
BOOL
MenuItem_GetRadioItem(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_GetRadioItem)
    return (BOOL)MySyscall(pMenuItem_GetRadioItem, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_SetRadioItem)
void
MenuItem_SetRadioItem(TMenuItem AObj, BOOL AValue) {
    GET_FUNC_ADDR(MenuItem_SetRadioItem)
    MySyscall(pMenuItem_SetRadioItem, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetShortCut)
TShortCut
MenuItem_GetShortCut(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_GetShortCut)
    return (TShortCut)MySyscall(pMenuItem_GetShortCut, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_SetShortCut)
void
MenuItem_SetShortCut(TMenuItem AObj, TShortCut AValue) {
    GET_FUNC_ADDR(MenuItem_SetShortCut)
    MySyscall(pMenuItem_SetShortCut, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetVisible)
BOOL
MenuItem_GetVisible(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_GetVisible)
    return (BOOL)MySyscall(pMenuItem_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_SetVisible)
void
MenuItem_SetVisible(TMenuItem AObj, BOOL AValue) {
    GET_FUNC_ADDR(MenuItem_SetVisible)
    MySyscall(pMenuItem_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_SetOnClick)
void
MenuItem_SetOnClick(TMenuItem AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(MenuItem_SetOnClick)
    MySyscall(pMenuItem_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_SetOnMeasureItem)
void
MenuItem_SetOnMeasureItem(TMenuItem AObj, TMenuMeasureItemEvent AEventData) {
    GET_FUNC_ADDR(MenuItem_SetOnMeasureItem)
    MySyscall(pMenuItem_SetOnMeasureItem, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetComponentCount)
int32_t
MenuItem_GetComponentCount(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_GetComponentCount)
    return (int32_t)MySyscall(pMenuItem_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetComponentIndex)
int32_t
MenuItem_GetComponentIndex(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_GetComponentIndex)
    return (int32_t)MySyscall(pMenuItem_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_SetComponentIndex)
void
MenuItem_SetComponentIndex(TMenuItem AObj, int32_t AValue) {
    GET_FUNC_ADDR(MenuItem_SetComponentIndex)
    MySyscall(pMenuItem_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetOwner)
TComponent
MenuItem_GetOwner(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_GetOwner)
    return (TComponent)MySyscall(pMenuItem_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetName)
char*
MenuItem_GetName(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_GetName)
    return (char*)MySyscall(pMenuItem_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_SetName)
void
MenuItem_SetName(TMenuItem AObj, CChar char* AValue) {
    GET_FUNC_ADDR(MenuItem_SetName)
    MySyscall(pMenuItem_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetTag)
intptr_t
MenuItem_GetTag(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_GetTag)
    return (intptr_t)MySyscall(pMenuItem_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_SetTag)
void
MenuItem_SetTag(TMenuItem AObj, intptr_t AValue) {
    GET_FUNC_ADDR(MenuItem_SetTag)
    MySyscall(pMenuItem_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetItems)
TMenuItem
MenuItem_GetItems(TMenuItem AObj, int32_t Index) {
    GET_FUNC_ADDR(MenuItem_GetItems)
    return (TMenuItem)MySyscall(pMenuItem_GetItems, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetComponents)
TComponent
MenuItem_GetComponents(TMenuItem AObj, int32_t AIndex) {
    GET_FUNC_ADDR(MenuItem_GetComponents)
    return (TComponent)MySyscall(pMenuItem_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_StaticClassType)
TClass
MenuItem_StaticClassType() {
    GET_FUNC_ADDR(MenuItem_StaticClassType)
    return (TClass)MySyscall(pMenuItem_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_GetShortCutText)
char*
MenuItem_GetShortCutText(TMenuItem AObj) {
    GET_FUNC_ADDR(MenuItem_GetShortCutText)
    return (char*)MySyscall(pMenuItem_GetShortCutText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MenuItem_SetShortCutText)
void
MenuItem_SetShortCutText(TMenuItem AObj, CChar char* Value) {
    GET_FUNC_ADDR(MenuItem_SetShortCutText)
    MySyscall(pMenuItem_SetShortCutText, 2, AObj, Value ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TPicture-------------------

DEFINE_FUNC_PTR(Picture_Create)
TPicture
Picture_Create() {
    GET_FUNC_ADDR(Picture_Create)
    return (TPicture)MySyscall(pPicture_Create, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Picture_Free)
void
Picture_Free(TPicture AObj) {
    GET_FUNC_ADDR(Picture_Free)
    MySyscall(pPicture_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Picture_LoadFromFile)
void
Picture_LoadFromFile(TPicture AObj, CChar char* Filename) {
    GET_FUNC_ADDR(Picture_LoadFromFile)
    MySyscall(pPicture_LoadFromFile, 2, AObj, Filename ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Picture_SaveToFile)
void
Picture_SaveToFile(TPicture AObj, CChar char* Filename) {
    GET_FUNC_ADDR(Picture_SaveToFile)
    MySyscall(pPicture_SaveToFile, 2, AObj, Filename ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Picture_LoadFromStream)
void
Picture_LoadFromStream(TPicture AObj, TStream Stream) {
    GET_FUNC_ADDR(Picture_LoadFromStream)
    MySyscall(pPicture_LoadFromStream, 2, AObj, Stream ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Picture_SaveToStream)
void
Picture_SaveToStream(TPicture AObj, TStream Stream) {
    GET_FUNC_ADDR(Picture_SaveToStream)
    MySyscall(pPicture_SaveToStream, 2, AObj, Stream ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Picture_Assign)
void
Picture_Assign(TPicture AObj, TObject Source) {
    GET_FUNC_ADDR(Picture_Assign)
    MySyscall(pPicture_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Picture_GetNamePath)
char*
Picture_GetNamePath(TPicture AObj) {
    GET_FUNC_ADDR(Picture_GetNamePath)
    return (char*)MySyscall(pPicture_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Picture_ClassType)
TClass
Picture_ClassType(TPicture AObj) {
    GET_FUNC_ADDR(Picture_ClassType)
    return (TClass)MySyscall(pPicture_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Picture_ClassName)
char*
Picture_ClassName(TPicture AObj) {
    GET_FUNC_ADDR(Picture_ClassName)
    return (char*)MySyscall(pPicture_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Picture_InstanceSize)
int32_t
Picture_InstanceSize(TPicture AObj) {
    GET_FUNC_ADDR(Picture_InstanceSize)
    return (int32_t)MySyscall(pPicture_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Picture_InheritsFrom)
BOOL
Picture_InheritsFrom(TPicture AObj, TClass AClass) {
    GET_FUNC_ADDR(Picture_InheritsFrom)
    return (BOOL)MySyscall(pPicture_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Picture_Equals)
BOOL
Picture_Equals(TPicture AObj, TObject Obj) {
    GET_FUNC_ADDR(Picture_Equals)
    return (BOOL)MySyscall(pPicture_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Picture_GetHashCode)
int32_t
Picture_GetHashCode(TPicture AObj) {
    GET_FUNC_ADDR(Picture_GetHashCode)
    return (int32_t)MySyscall(pPicture_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Picture_ToString)
char*
Picture_ToString(TPicture AObj) {
    GET_FUNC_ADDR(Picture_ToString)
    return (char*)MySyscall(pPicture_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Picture_GetBitmap)
TBitmap
Picture_GetBitmap(TPicture AObj) {
    GET_FUNC_ADDR(Picture_GetBitmap)
    return (TBitmap)MySyscall(pPicture_GetBitmap, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Picture_SetBitmap)
void
Picture_SetBitmap(TPicture AObj, TBitmap AValue) {
    GET_FUNC_ADDR(Picture_SetBitmap)
    MySyscall(pPicture_SetBitmap, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Picture_GetGraphic)
TGraphic
Picture_GetGraphic(TPicture AObj) {
    GET_FUNC_ADDR(Picture_GetGraphic)
    return (TGraphic)MySyscall(pPicture_GetGraphic, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Picture_SetGraphic)
void
Picture_SetGraphic(TPicture AObj, TGraphic AValue) {
    GET_FUNC_ADDR(Picture_SetGraphic)
    MySyscall(pPicture_SetGraphic, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Picture_GetHeight)
int32_t
Picture_GetHeight(TPicture AObj) {
    GET_FUNC_ADDR(Picture_GetHeight)
    return (int32_t)MySyscall(pPicture_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Picture_GetIcon)
TIcon
Picture_GetIcon(TPicture AObj) {
    GET_FUNC_ADDR(Picture_GetIcon)
    return (TIcon)MySyscall(pPicture_GetIcon, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Picture_SetIcon)
void
Picture_SetIcon(TPicture AObj, TIcon AValue) {
    GET_FUNC_ADDR(Picture_SetIcon)
    MySyscall(pPicture_SetIcon, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Picture_GetWidth)
int32_t
Picture_GetWidth(TPicture AObj) {
    GET_FUNC_ADDR(Picture_GetWidth)
    return (int32_t)MySyscall(pPicture_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Picture_SetOnChange)
void
Picture_SetOnChange(TPicture AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Picture_SetOnChange)
    MySyscall(pPicture_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Picture_StaticClassType)
TClass
Picture_StaticClassType() {
    GET_FUNC_ADDR(Picture_StaticClassType)
    return (TClass)MySyscall(pPicture_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TListColumns-------------------

DEFINE_FUNC_PTR(ListColumns_Create)
TListColumns
ListColumns_Create(TListView AOwner) {
    GET_FUNC_ADDR(ListColumns_Create)
    return (TListColumns)MySyscall(pListColumns_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumns_Free)
void
ListColumns_Free(TListColumns AObj) {
    GET_FUNC_ADDR(ListColumns_Free)
    MySyscall(pListColumns_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumns_Add)
TListColumn
ListColumns_Add(TListColumns AObj) {
    GET_FUNC_ADDR(ListColumns_Add)
    return (TListColumn)MySyscall(pListColumns_Add, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumns_Owner)
TListView
ListColumns_Owner(TListColumns AObj) {
    GET_FUNC_ADDR(ListColumns_Owner)
    return (TListView)MySyscall(pListColumns_Owner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumns_Assign)
void
ListColumns_Assign(TListColumns AObj, TObject Source) {
    GET_FUNC_ADDR(ListColumns_Assign)
    MySyscall(pListColumns_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumns_BeginUpdate)
void
ListColumns_BeginUpdate(TListColumns AObj) {
    GET_FUNC_ADDR(ListColumns_BeginUpdate)
    MySyscall(pListColumns_BeginUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumns_Clear)
void
ListColumns_Clear(TListColumns AObj) {
    GET_FUNC_ADDR(ListColumns_Clear)
    MySyscall(pListColumns_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumns_Delete)
void
ListColumns_Delete(TListColumns AObj, int32_t Index) {
    GET_FUNC_ADDR(ListColumns_Delete)
    MySyscall(pListColumns_Delete, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumns_EndUpdate)
void
ListColumns_EndUpdate(TListColumns AObj) {
    GET_FUNC_ADDR(ListColumns_EndUpdate)
    MySyscall(pListColumns_EndUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumns_FindItemID)
TCollectionItem
ListColumns_FindItemID(TListColumns AObj, int32_t ID) {
    GET_FUNC_ADDR(ListColumns_FindItemID)
    return (TCollectionItem)MySyscall(pListColumns_FindItemID, 2, AObj, ID ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumns_GetNamePath)
char*
ListColumns_GetNamePath(TListColumns AObj) {
    GET_FUNC_ADDR(ListColumns_GetNamePath)
    return (char*)MySyscall(pListColumns_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumns_Insert)
TCollectionItem
ListColumns_Insert(TListColumns AObj, int32_t Index) {
    GET_FUNC_ADDR(ListColumns_Insert)
    return (TCollectionItem)MySyscall(pListColumns_Insert, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumns_ClassType)
TClass
ListColumns_ClassType(TListColumns AObj) {
    GET_FUNC_ADDR(ListColumns_ClassType)
    return (TClass)MySyscall(pListColumns_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumns_ClassName)
char*
ListColumns_ClassName(TListColumns AObj) {
    GET_FUNC_ADDR(ListColumns_ClassName)
    return (char*)MySyscall(pListColumns_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumns_InstanceSize)
int32_t
ListColumns_InstanceSize(TListColumns AObj) {
    GET_FUNC_ADDR(ListColumns_InstanceSize)
    return (int32_t)MySyscall(pListColumns_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumns_InheritsFrom)
BOOL
ListColumns_InheritsFrom(TListColumns AObj, TClass AClass) {
    GET_FUNC_ADDR(ListColumns_InheritsFrom)
    return (BOOL)MySyscall(pListColumns_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumns_Equals)
BOOL
ListColumns_Equals(TListColumns AObj, TObject Obj) {
    GET_FUNC_ADDR(ListColumns_Equals)
    return (BOOL)MySyscall(pListColumns_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumns_GetHashCode)
int32_t
ListColumns_GetHashCode(TListColumns AObj) {
    GET_FUNC_ADDR(ListColumns_GetHashCode)
    return (int32_t)MySyscall(pListColumns_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumns_ToString)
char*
ListColumns_ToString(TListColumns AObj) {
    GET_FUNC_ADDR(ListColumns_ToString)
    return (char*)MySyscall(pListColumns_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumns_GetCount)
int32_t
ListColumns_GetCount(TListColumns AObj) {
    GET_FUNC_ADDR(ListColumns_GetCount)
    return (int32_t)MySyscall(pListColumns_GetCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumns_GetItems)
TListColumn
ListColumns_GetItems(TListColumns AObj, int32_t Index) {
    GET_FUNC_ADDR(ListColumns_GetItems)
    return (TListColumn)MySyscall(pListColumns_GetItems, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumns_SetItems)
void
ListColumns_SetItems(TListColumns AObj, int32_t Index, TListColumn AValue) {
    GET_FUNC_ADDR(ListColumns_SetItems)
    MySyscall(pListColumns_SetItems, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumns_StaticClassType)
TClass
ListColumns_StaticClassType() {
    GET_FUNC_ADDR(ListColumns_StaticClassType)
    return (TClass)MySyscall(pListColumns_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TListItems-------------------

DEFINE_FUNC_PTR(ListItems_Create)
TListItems
ListItems_Create(TListView AOwner) {
    GET_FUNC_ADDR(ListItems_Create)
    return (TListItems)MySyscall(pListItems_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItems_Free)
void
ListItems_Free(TListItems AObj) {
    GET_FUNC_ADDR(ListItems_Free)
    MySyscall(pListItems_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItems_Add)
TListItem
ListItems_Add(TListItems AObj) {
    GET_FUNC_ADDR(ListItems_Add)
    return (TListItem)MySyscall(pListItems_Add, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItems_Assign)
void
ListItems_Assign(TListItems AObj, TObject Source) {
    GET_FUNC_ADDR(ListItems_Assign)
    MySyscall(pListItems_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItems_BeginUpdate)
void
ListItems_BeginUpdate(TListItems AObj) {
    GET_FUNC_ADDR(ListItems_BeginUpdate)
    MySyscall(pListItems_BeginUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItems_Clear)
void
ListItems_Clear(TListItems AObj) {
    GET_FUNC_ADDR(ListItems_Clear)
    MySyscall(pListItems_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItems_Delete)
void
ListItems_Delete(TListItems AObj, int32_t Index) {
    GET_FUNC_ADDR(ListItems_Delete)
    MySyscall(pListItems_Delete, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItems_EndUpdate)
void
ListItems_EndUpdate(TListItems AObj) {
    GET_FUNC_ADDR(ListItems_EndUpdate)
    MySyscall(pListItems_EndUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItems_IndexOf)
int32_t
ListItems_IndexOf(TListItems AObj, TListItem Value) {
    GET_FUNC_ADDR(ListItems_IndexOf)
    return (int32_t)MySyscall(pListItems_IndexOf, 2, AObj, Value ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItems_Insert)
TListItem
ListItems_Insert(TListItems AObj, int32_t Index) {
    GET_FUNC_ADDR(ListItems_Insert)
    return (TListItem)MySyscall(pListItems_Insert, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItems_GetNamePath)
char*
ListItems_GetNamePath(TListItems AObj) {
    GET_FUNC_ADDR(ListItems_GetNamePath)
    return (char*)MySyscall(pListItems_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItems_ClassType)
TClass
ListItems_ClassType(TListItems AObj) {
    GET_FUNC_ADDR(ListItems_ClassType)
    return (TClass)MySyscall(pListItems_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItems_ClassName)
char*
ListItems_ClassName(TListItems AObj) {
    GET_FUNC_ADDR(ListItems_ClassName)
    return (char*)MySyscall(pListItems_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItems_InstanceSize)
int32_t
ListItems_InstanceSize(TListItems AObj) {
    GET_FUNC_ADDR(ListItems_InstanceSize)
    return (int32_t)MySyscall(pListItems_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItems_InheritsFrom)
BOOL
ListItems_InheritsFrom(TListItems AObj, TClass AClass) {
    GET_FUNC_ADDR(ListItems_InheritsFrom)
    return (BOOL)MySyscall(pListItems_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItems_Equals)
BOOL
ListItems_Equals(TListItems AObj, TObject Obj) {
    GET_FUNC_ADDR(ListItems_Equals)
    return (BOOL)MySyscall(pListItems_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItems_GetHashCode)
int32_t
ListItems_GetHashCode(TListItems AObj) {
    GET_FUNC_ADDR(ListItems_GetHashCode)
    return (int32_t)MySyscall(pListItems_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItems_ToString)
char*
ListItems_ToString(TListItems AObj) {
    GET_FUNC_ADDR(ListItems_ToString)
    return (char*)MySyscall(pListItems_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItems_GetCount)
int32_t
ListItems_GetCount(TListItems AObj) {
    GET_FUNC_ADDR(ListItems_GetCount)
    return (int32_t)MySyscall(pListItems_GetCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItems_SetCount)
void
ListItems_SetCount(TListItems AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListItems_SetCount)
    MySyscall(pListItems_SetCount, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItems_GetOwner)
TListView
ListItems_GetOwner(TListItems AObj) {
    GET_FUNC_ADDR(ListItems_GetOwner)
    return (TListView)MySyscall(pListItems_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItems_GetItem)
TListItem
ListItems_GetItem(TListItems AObj, int32_t Index) {
    GET_FUNC_ADDR(ListItems_GetItem)
    return (TListItem)MySyscall(pListItems_GetItem, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItems_SetItem)
void
ListItems_SetItem(TListItems AObj, int32_t Index, TListItem AValue) {
    GET_FUNC_ADDR(ListItems_SetItem)
    MySyscall(pListItems_SetItem, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItems_StaticClassType)
TClass
ListItems_StaticClassType() {
    GET_FUNC_ADDR(ListItems_StaticClassType)
    return (TClass)MySyscall(pListItems_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TTreeNodes-------------------

DEFINE_FUNC_PTR(TreeNodes_Create)
TTreeNodes
TreeNodes_Create(TTreeView AOwner) {
    GET_FUNC_ADDR(TreeNodes_Create)
    return (TTreeNodes)MySyscall(pTreeNodes_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_Free)
void
TreeNodes_Free(TTreeNodes AObj) {
    GET_FUNC_ADDR(TreeNodes_Free)
    MySyscall(pTreeNodes_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_AddChildFirst)
TTreeNode
TreeNodes_AddChildFirst(TTreeNodes AObj, TTreeNode Parent, CChar char* S) {
    GET_FUNC_ADDR(TreeNodes_AddChildFirst)
    return (TTreeNode)MySyscall(pTreeNodes_AddChildFirst, 3, AObj, Parent, S ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_AddChild)
TTreeNode
TreeNodes_AddChild(TTreeNodes AObj, TTreeNode Parent, CChar char* S) {
    GET_FUNC_ADDR(TreeNodes_AddChild)
    return (TTreeNode)MySyscall(pTreeNodes_AddChild, 3, AObj, Parent, S ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_AddChildObjectFirst)
TTreeNode
TreeNodes_AddChildObjectFirst(TTreeNodes AObj, TTreeNode Parent, CChar char* S, void* Ptr) {
    GET_FUNC_ADDR(TreeNodes_AddChildObjectFirst)
    return (TTreeNode)MySyscall(pTreeNodes_AddChildObjectFirst, 4, AObj, Parent, S, Ptr ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_AddChildObject)
TTreeNode
TreeNodes_AddChildObject(TTreeNodes AObj, TTreeNode Parent, CChar char* S, void* Ptr) {
    GET_FUNC_ADDR(TreeNodes_AddChildObject)
    return (TTreeNode)MySyscall(pTreeNodes_AddChildObject, 4, AObj, Parent, S, Ptr ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_AddObjectFirst)
TTreeNode
TreeNodes_AddObjectFirst(TTreeNodes AObj, TTreeNode Sibling, CChar char* S, void* Ptr) {
    GET_FUNC_ADDR(TreeNodes_AddObjectFirst)
    return (TTreeNode)MySyscall(pTreeNodes_AddObjectFirst, 4, AObj, Sibling, S, Ptr ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_AddObject)
TTreeNode
TreeNodes_AddObject(TTreeNodes AObj, TTreeNode Sibling, CChar char* S, void* Ptr) {
    GET_FUNC_ADDR(TreeNodes_AddObject)
    return (TTreeNode)MySyscall(pTreeNodes_AddObject, 4, AObj, Sibling, S, Ptr ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_AddNode)
TTreeNode
TreeNodes_AddNode(TTreeNodes AObj, TTreeNode Node, TTreeNode Relative, CChar char* S, void* Ptr, TNodeAttachMode Method) {
    GET_FUNC_ADDR(TreeNodes_AddNode)
    return (TTreeNode)MySyscall(pTreeNodes_AddNode, 6, AObj, Node, Relative, S, Ptr, Method ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_AddFirst)
TTreeNode
TreeNodes_AddFirst(TTreeNodes AObj, TTreeNode Sibling, CChar char* S) {
    GET_FUNC_ADDR(TreeNodes_AddFirst)
    return (TTreeNode)MySyscall(pTreeNodes_AddFirst, 3, AObj, Sibling, S ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_Add)
TTreeNode
TreeNodes_Add(TTreeNodes AObj, TTreeNode Sibling, CChar char* S) {
    GET_FUNC_ADDR(TreeNodes_Add)
    return (TTreeNode)MySyscall(pTreeNodes_Add, 3, AObj, Sibling, S ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_Assign)
void
TreeNodes_Assign(TTreeNodes AObj, TObject Source) {
    GET_FUNC_ADDR(TreeNodes_Assign)
    MySyscall(pTreeNodes_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_BeginUpdate)
void
TreeNodes_BeginUpdate(TTreeNodes AObj) {
    GET_FUNC_ADDR(TreeNodes_BeginUpdate)
    MySyscall(pTreeNodes_BeginUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_Clear)
void
TreeNodes_Clear(TTreeNodes AObj) {
    GET_FUNC_ADDR(TreeNodes_Clear)
    MySyscall(pTreeNodes_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_Delete)
void
TreeNodes_Delete(TTreeNodes AObj, TTreeNode Node) {
    GET_FUNC_ADDR(TreeNodes_Delete)
    MySyscall(pTreeNodes_Delete, 2, AObj, Node ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_EndUpdate)
void
TreeNodes_EndUpdate(TTreeNodes AObj) {
    GET_FUNC_ADDR(TreeNodes_EndUpdate)
    MySyscall(pTreeNodes_EndUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_GetFirstNode)
TTreeNode
TreeNodes_GetFirstNode(TTreeNodes AObj) {
    GET_FUNC_ADDR(TreeNodes_GetFirstNode)
    return (TTreeNode)MySyscall(pTreeNodes_GetFirstNode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_Insert)
TTreeNode
TreeNodes_Insert(TTreeNodes AObj, TTreeNode Sibling, CChar char* S) {
    GET_FUNC_ADDR(TreeNodes_Insert)
    return (TTreeNode)MySyscall(pTreeNodes_Insert, 3, AObj, Sibling, S ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_InsertObject)
TTreeNode
TreeNodes_InsertObject(TTreeNodes AObj, TTreeNode Sibling, CChar char* S, void* Ptr) {
    GET_FUNC_ADDR(TreeNodes_InsertObject)
    return (TTreeNode)MySyscall(pTreeNodes_InsertObject, 4, AObj, Sibling, S, Ptr ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_CustomSort)
BOOL
TreeNodes_CustomSort(TTreeNodes AObj, PFNTVCOMPARE SortProc, intptr_t Data, BOOL ARecurse) {
    GET_FUNC_ADDR(TreeNodes_CustomSort)
    return (BOOL)MySyscall(pTreeNodes_CustomSort, 4, AObj, SortProc, Data, ARecurse ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_GetNamePath)
char*
TreeNodes_GetNamePath(TTreeNodes AObj) {
    GET_FUNC_ADDR(TreeNodes_GetNamePath)
    return (char*)MySyscall(pTreeNodes_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_ClassType)
TClass
TreeNodes_ClassType(TTreeNodes AObj) {
    GET_FUNC_ADDR(TreeNodes_ClassType)
    return (TClass)MySyscall(pTreeNodes_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_ClassName)
char*
TreeNodes_ClassName(TTreeNodes AObj) {
    GET_FUNC_ADDR(TreeNodes_ClassName)
    return (char*)MySyscall(pTreeNodes_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_InstanceSize)
int32_t
TreeNodes_InstanceSize(TTreeNodes AObj) {
    GET_FUNC_ADDR(TreeNodes_InstanceSize)
    return (int32_t)MySyscall(pTreeNodes_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_InheritsFrom)
BOOL
TreeNodes_InheritsFrom(TTreeNodes AObj, TClass AClass) {
    GET_FUNC_ADDR(TreeNodes_InheritsFrom)
    return (BOOL)MySyscall(pTreeNodes_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_Equals)
BOOL
TreeNodes_Equals(TTreeNodes AObj, TObject Obj) {
    GET_FUNC_ADDR(TreeNodes_Equals)
    return (BOOL)MySyscall(pTreeNodes_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_GetHashCode)
int32_t
TreeNodes_GetHashCode(TTreeNodes AObj) {
    GET_FUNC_ADDR(TreeNodes_GetHashCode)
    return (int32_t)MySyscall(pTreeNodes_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_ToString)
char*
TreeNodes_ToString(TTreeNodes AObj) {
    GET_FUNC_ADDR(TreeNodes_ToString)
    return (char*)MySyscall(pTreeNodes_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_GetCount)
int32_t
TreeNodes_GetCount(TTreeNodes AObj) {
    GET_FUNC_ADDR(TreeNodes_GetCount)
    return (int32_t)MySyscall(pTreeNodes_GetCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_GetOwner)
TTreeView
TreeNodes_GetOwner(TTreeNodes AObj) {
    GET_FUNC_ADDR(TreeNodes_GetOwner)
    return (TTreeView)MySyscall(pTreeNodes_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_GetItem)
TTreeNode
TreeNodes_GetItem(TTreeNodes AObj, int32_t Index) {
    GET_FUNC_ADDR(TreeNodes_GetItem)
    return (TTreeNode)MySyscall(pTreeNodes_GetItem, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNodes_StaticClassType)
TClass
TreeNodes_StaticClassType() {
    GET_FUNC_ADDR(TreeNodes_StaticClassType)
    return (TClass)MySyscall(pTreeNodes_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TListItem-------------------

DEFINE_FUNC_PTR(ListItem_Create)
TListItem
ListItem_Create(TListItems AOwner) {
    GET_FUNC_ADDR(ListItem_Create)
    return (TListItem)MySyscall(pListItem_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_Free)
void
ListItem_Free(TListItem AObj) {
    GET_FUNC_ADDR(ListItem_Free)
    MySyscall(pListItem_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_DisplayRectSubItem)
TRect
ListItem_DisplayRectSubItem(TListItem AObj, int32_t subItem, TDisplayCode Code) {
    GET_FUNC_ADDR(ListItem_DisplayRectSubItem)
    TRect result;
    MySyscall(pListItem_DisplayRectSubItem, 4, AObj, subItem, Code, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ListItem_Assign)
void
ListItem_Assign(TListItem AObj, TObject Source) {
    GET_FUNC_ADDR(ListItem_Assign)
    MySyscall(pListItem_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_Delete)
void
ListItem_Delete(TListItem AObj) {
    GET_FUNC_ADDR(ListItem_Delete)
    MySyscall(pListItem_Delete, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_DisplayRect)
TRect
ListItem_DisplayRect(TListItem AObj, TDisplayCode Code) {
    GET_FUNC_ADDR(ListItem_DisplayRect)
    TRect result;
    MySyscall(pListItem_DisplayRect, 3, AObj, Code, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ListItem_EditCaption)
BOOL
ListItem_EditCaption(TListItem AObj) {
    GET_FUNC_ADDR(ListItem_EditCaption)
    return (BOOL)MySyscall(pListItem_EditCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_MakeVisible)
void
ListItem_MakeVisible(TListItem AObj, BOOL PartialOK) {
    GET_FUNC_ADDR(ListItem_MakeVisible)
    MySyscall(pListItem_MakeVisible, 2, AObj, PartialOK ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_GetNamePath)
char*
ListItem_GetNamePath(TListItem AObj) {
    GET_FUNC_ADDR(ListItem_GetNamePath)
    return (char*)MySyscall(pListItem_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_ClassType)
TClass
ListItem_ClassType(TListItem AObj) {
    GET_FUNC_ADDR(ListItem_ClassType)
    return (TClass)MySyscall(pListItem_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_ClassName)
char*
ListItem_ClassName(TListItem AObj) {
    GET_FUNC_ADDR(ListItem_ClassName)
    return (char*)MySyscall(pListItem_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_InstanceSize)
int32_t
ListItem_InstanceSize(TListItem AObj) {
    GET_FUNC_ADDR(ListItem_InstanceSize)
    return (int32_t)MySyscall(pListItem_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_InheritsFrom)
BOOL
ListItem_InheritsFrom(TListItem AObj, TClass AClass) {
    GET_FUNC_ADDR(ListItem_InheritsFrom)
    return (BOOL)MySyscall(pListItem_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_Equals)
BOOL
ListItem_Equals(TListItem AObj, TObject Obj) {
    GET_FUNC_ADDR(ListItem_Equals)
    return (BOOL)MySyscall(pListItem_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_GetHashCode)
int32_t
ListItem_GetHashCode(TListItem AObj) {
    GET_FUNC_ADDR(ListItem_GetHashCode)
    return (int32_t)MySyscall(pListItem_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_ToString)
char*
ListItem_ToString(TListItem AObj) {
    GET_FUNC_ADDR(ListItem_ToString)
    return (char*)MySyscall(pListItem_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_GetDropTarget)
BOOL
ListItem_GetDropTarget(TListItem AObj) {
    GET_FUNC_ADDR(ListItem_GetDropTarget)
    return (BOOL)MySyscall(pListItem_GetDropTarget, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_SetDropTarget)
void
ListItem_SetDropTarget(TListItem AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListItem_SetDropTarget)
    MySyscall(pListItem_SetDropTarget, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_GetCaption)
char*
ListItem_GetCaption(TListItem AObj) {
    GET_FUNC_ADDR(ListItem_GetCaption)
    return (char*)MySyscall(pListItem_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_SetCaption)
void
ListItem_SetCaption(TListItem AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ListItem_SetCaption)
    MySyscall(pListItem_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_GetChecked)
BOOL
ListItem_GetChecked(TListItem AObj) {
    GET_FUNC_ADDR(ListItem_GetChecked)
    return (BOOL)MySyscall(pListItem_GetChecked, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_SetChecked)
void
ListItem_SetChecked(TListItem AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListItem_SetChecked)
    MySyscall(pListItem_SetChecked, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_GetCut)
BOOL
ListItem_GetCut(TListItem AObj) {
    GET_FUNC_ADDR(ListItem_GetCut)
    return (BOOL)MySyscall(pListItem_GetCut, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_SetCut)
void
ListItem_SetCut(TListItem AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListItem_SetCut)
    MySyscall(pListItem_SetCut, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_GetData)
void*
ListItem_GetData(TListItem AObj) {
    GET_FUNC_ADDR(ListItem_GetData)
    return (void*)MySyscall(pListItem_GetData, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_SetData)
void
ListItem_SetData(TListItem AObj, void* AValue) {
    GET_FUNC_ADDR(ListItem_SetData)
    MySyscall(pListItem_SetData, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_GetFocused)
BOOL
ListItem_GetFocused(TListItem AObj) {
    GET_FUNC_ADDR(ListItem_GetFocused)
    return (BOOL)MySyscall(pListItem_GetFocused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_SetFocused)
void
ListItem_SetFocused(TListItem AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListItem_SetFocused)
    MySyscall(pListItem_SetFocused, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_GetImageIndex)
int32_t
ListItem_GetImageIndex(TListItem AObj) {
    GET_FUNC_ADDR(ListItem_GetImageIndex)
    return (int32_t)MySyscall(pListItem_GetImageIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_SetImageIndex)
void
ListItem_SetImageIndex(TListItem AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListItem_SetImageIndex)
    MySyscall(pListItem_SetImageIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_GetIndex)
int32_t
ListItem_GetIndex(TListItem AObj) {
    GET_FUNC_ADDR(ListItem_GetIndex)
    return (int32_t)MySyscall(pListItem_GetIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_GetLeft)
int32_t
ListItem_GetLeft(TListItem AObj) {
    GET_FUNC_ADDR(ListItem_GetLeft)
    return (int32_t)MySyscall(pListItem_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_SetLeft)
void
ListItem_SetLeft(TListItem AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListItem_SetLeft)
    MySyscall(pListItem_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_GetListView)
TListView
ListItem_GetListView(TListItem AObj) {
    GET_FUNC_ADDR(ListItem_GetListView)
    return (TListView)MySyscall(pListItem_GetListView, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_GetOwner)
TListItems
ListItem_GetOwner(TListItem AObj) {
    GET_FUNC_ADDR(ListItem_GetOwner)
    return (TListItems)MySyscall(pListItem_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_GetPosition)
TPoint
ListItem_GetPosition(TListItem AObj) {
    GET_FUNC_ADDR(ListItem_GetPosition)
    TPoint result;
    MySyscall(pListItem_GetPosition, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ListItem_SetPosition)
void
ListItem_SetPosition(TListItem AObj, TPoint AValue) {
    GET_FUNC_ADDR(ListItem_SetPosition)
    MySyscall(pListItem_SetPosition, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_GetSelected)
BOOL
ListItem_GetSelected(TListItem AObj) {
    GET_FUNC_ADDR(ListItem_GetSelected)
    return (BOOL)MySyscall(pListItem_GetSelected, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_SetSelected)
void
ListItem_SetSelected(TListItem AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListItem_SetSelected)
    MySyscall(pListItem_SetSelected, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_GetStateIndex)
int32_t
ListItem_GetStateIndex(TListItem AObj) {
    GET_FUNC_ADDR(ListItem_GetStateIndex)
    return (int32_t)MySyscall(pListItem_GetStateIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_SetStateIndex)
void
ListItem_SetStateIndex(TListItem AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListItem_SetStateIndex)
    MySyscall(pListItem_SetStateIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_GetSubItems)
TStrings
ListItem_GetSubItems(TListItem AObj) {
    GET_FUNC_ADDR(ListItem_GetSubItems)
    return (TStrings)MySyscall(pListItem_GetSubItems, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_SetSubItems)
void
ListItem_SetSubItems(TListItem AObj, TStrings AValue) {
    GET_FUNC_ADDR(ListItem_SetSubItems)
    MySyscall(pListItem_SetSubItems, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_GetTop)
int32_t
ListItem_GetTop(TListItem AObj) {
    GET_FUNC_ADDR(ListItem_GetTop)
    return (int32_t)MySyscall(pListItem_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_SetTop)
void
ListItem_SetTop(TListItem AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListItem_SetTop)
    MySyscall(pListItem_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_GetSubItemImages)
int32_t
ListItem_GetSubItemImages(TListItem AObj, int32_t Index) {
    GET_FUNC_ADDR(ListItem_GetSubItemImages)
    return (int32_t)MySyscall(pListItem_GetSubItemImages, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_SetSubItemImages)
void
ListItem_SetSubItemImages(TListItem AObj, int32_t Index, int32_t AValue) {
    GET_FUNC_ADDR(ListItem_SetSubItemImages)
    MySyscall(pListItem_SetSubItemImages, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListItem_StaticClassType)
TClass
ListItem_StaticClassType() {
    GET_FUNC_ADDR(ListItem_StaticClassType)
    return (TClass)MySyscall(pListItem_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TTreeNode-------------------

DEFINE_FUNC_PTR(TreeNode_Create)
TTreeNode
TreeNode_Create(TTreeNodes AOwner) {
    GET_FUNC_ADDR(TreeNode_Create)
    return (TTreeNode)MySyscall(pTreeNode_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_Free)
void
TreeNode_Free(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_Free)
    MySyscall(pTreeNode_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_Bottom)
int32_t
TreeNode_Bottom(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_Bottom)
    return (int32_t)MySyscall(pTreeNode_Bottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_BottomExpanded)
int32_t
TreeNode_BottomExpanded(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_BottomExpanded)
    return (int32_t)MySyscall(pTreeNode_BottomExpanded, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_DefaultTreeViewSort)
int32_t
TreeNode_DefaultTreeViewSort(TTreeNode AObj, TTreeNode Node1, TTreeNode Node2) {
    GET_FUNC_ADDR(TreeNode_DefaultTreeViewSort)
    return (int32_t)MySyscall(pTreeNode_DefaultTreeViewSort, 3, AObj, Node1, Node2 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_DisplayExpandSignLeft)
int32_t
TreeNode_DisplayExpandSignLeft(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_DisplayExpandSignLeft)
    return (int32_t)MySyscall(pTreeNode_DisplayExpandSignLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_DisplayExpandSignRect)
TRect
TreeNode_DisplayExpandSignRect(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_DisplayExpandSignRect)
    TRect result;
    MySyscall(pTreeNode_DisplayExpandSignRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(TreeNode_DisplayExpandSignRight)
int32_t
TreeNode_DisplayExpandSignRight(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_DisplayExpandSignRight)
    return (int32_t)MySyscall(pTreeNode_DisplayExpandSignRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_DisplayIconLeft)
int32_t
TreeNode_DisplayIconLeft(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_DisplayIconLeft)
    return (int32_t)MySyscall(pTreeNode_DisplayIconLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_DisplayRect)
TRect
TreeNode_DisplayRect(TTreeNode AObj, BOOL TextOnly) {
    GET_FUNC_ADDR(TreeNode_DisplayRect)
    TRect result;
    MySyscall(pTreeNode_DisplayRect, 3, AObj, TextOnly, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(TreeNode_DisplayStateIconLeft)
int32_t
TreeNode_DisplayStateIconLeft(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_DisplayStateIconLeft)
    return (int32_t)MySyscall(pTreeNode_DisplayStateIconLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_DisplayTextLeft)
int32_t
TreeNode_DisplayTextLeft(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_DisplayTextLeft)
    return (int32_t)MySyscall(pTreeNode_DisplayTextLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_DisplayTextRight)
int32_t
TreeNode_DisplayTextRight(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_DisplayTextRight)
    return (int32_t)MySyscall(pTreeNode_DisplayTextRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_EditText)
BOOL
TreeNode_EditText(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_EditText)
    return (BOOL)MySyscall(pTreeNode_EditText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_FindNode)
TTreeNode
TreeNode_FindNode(TTreeNode AObj, CChar char* NodeText) {
    GET_FUNC_ADDR(TreeNode_FindNode)
    return (TTreeNode)MySyscall(pTreeNode_FindNode, 2, AObj, NodeText ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetFirstChild)
TTreeNode
TreeNode_GetFirstChild(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetFirstChild)
    return (TTreeNode)MySyscall(pTreeNode_GetFirstChild, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetFirstVisibleChild)
TTreeNode
TreeNode_GetFirstVisibleChild(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetFirstVisibleChild)
    return (TTreeNode)MySyscall(pTreeNode_GetFirstVisibleChild, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetLastChild)
TTreeNode
TreeNode_GetLastChild(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetLastChild)
    return (TTreeNode)MySyscall(pTreeNode_GetLastChild, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetLastSibling)
TTreeNode
TreeNode_GetLastSibling(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetLastSibling)
    return (TTreeNode)MySyscall(pTreeNode_GetLastSibling, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetLastSubChild)
TTreeNode
TreeNode_GetLastSubChild(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetLastSubChild)
    return (TTreeNode)MySyscall(pTreeNode_GetLastSubChild, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetLastVisibleChild)
TTreeNode
TreeNode_GetLastVisibleChild(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetLastVisibleChild)
    return (TTreeNode)MySyscall(pTreeNode_GetLastVisibleChild, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetNext)
TTreeNode
TreeNode_GetNext(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetNext)
    return (TTreeNode)MySyscall(pTreeNode_GetNext, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetNextChild)
TTreeNode
TreeNode_GetNextChild(TTreeNode AObj, TTreeNode AValue) {
    GET_FUNC_ADDR(TreeNode_GetNextChild)
    return (TTreeNode)MySyscall(pTreeNode_GetNextChild, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetNextExpanded)
TTreeNode
TreeNode_GetNextExpanded(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetNextExpanded)
    return (TTreeNode)MySyscall(pTreeNode_GetNextExpanded, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetNextMultiSelected)
TTreeNode
TreeNode_GetNextMultiSelected(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetNextMultiSelected)
    return (TTreeNode)MySyscall(pTreeNode_GetNextMultiSelected, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetNextSibling)
TTreeNode
TreeNode_GetNextSibling(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetNextSibling)
    return (TTreeNode)MySyscall(pTreeNode_GetNextSibling, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetNextSkipChildren)
TTreeNode
TreeNode_GetNextSkipChildren(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetNextSkipChildren)
    return (TTreeNode)MySyscall(pTreeNode_GetNextSkipChildren, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetNextVisible)
TTreeNode
TreeNode_GetNextVisible(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetNextVisible)
    return (TTreeNode)MySyscall(pTreeNode_GetNextVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetNextVisibleSibling)
TTreeNode
TreeNode_GetNextVisibleSibling(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetNextVisibleSibling)
    return (TTreeNode)MySyscall(pTreeNode_GetNextVisibleSibling, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetParentNodeOfAbsoluteLevel)
TTreeNode
TreeNode_GetParentNodeOfAbsoluteLevel(TTreeNode AObj, int32_t TheAbsoluteLevel) {
    GET_FUNC_ADDR(TreeNode_GetParentNodeOfAbsoluteLevel)
    return (TTreeNode)MySyscall(pTreeNode_GetParentNodeOfAbsoluteLevel, 2, AObj, TheAbsoluteLevel ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetPrev)
TTreeNode
TreeNode_GetPrev(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetPrev)
    return (TTreeNode)MySyscall(pTreeNode_GetPrev, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetPrevChild)
TTreeNode
TreeNode_GetPrevChild(TTreeNode AObj, TTreeNode AValue) {
    GET_FUNC_ADDR(TreeNode_GetPrevChild)
    return (TTreeNode)MySyscall(pTreeNode_GetPrevChild, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetPrevExpanded)
TTreeNode
TreeNode_GetPrevExpanded(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetPrevExpanded)
    return (TTreeNode)MySyscall(pTreeNode_GetPrevExpanded, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetPrevMultiSelected)
TTreeNode
TreeNode_GetPrevMultiSelected(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetPrevMultiSelected)
    return (TTreeNode)MySyscall(pTreeNode_GetPrevMultiSelected, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetPrevSibling)
TTreeNode
TreeNode_GetPrevSibling(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetPrevSibling)
    return (TTreeNode)MySyscall(pTreeNode_GetPrevSibling, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetPrevVisible)
TTreeNode
TreeNode_GetPrevVisible(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetPrevVisible)
    return (TTreeNode)MySyscall(pTreeNode_GetPrevVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetPrevVisibleSibling)
TTreeNode
TreeNode_GetPrevVisibleSibling(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetPrevVisibleSibling)
    return (TTreeNode)MySyscall(pTreeNode_GetPrevVisibleSibling, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetTextPath)
char*
TreeNode_GetTextPath(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetTextPath)
    return (char*)MySyscall(pTreeNode_GetTextPath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_HasAsParent)
BOOL
TreeNode_HasAsParent(TTreeNode AObj, TTreeNode AValue) {
    GET_FUNC_ADDR(TreeNode_HasAsParent)
    return (BOOL)MySyscall(pTreeNode_HasAsParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_IndexOf)
int32_t
TreeNode_IndexOf(TTreeNode AObj, TTreeNode AValue) {
    GET_FUNC_ADDR(TreeNode_IndexOf)
    return (int32_t)MySyscall(pTreeNode_IndexOf, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_IndexOfText)
int32_t
TreeNode_IndexOfText(TTreeNode AObj, CChar char* NodeText) {
    GET_FUNC_ADDR(TreeNode_IndexOfText)
    return (int32_t)MySyscall(pTreeNode_IndexOfText, 2, AObj, NodeText ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_Assign)
void
TreeNode_Assign(TTreeNode AObj, TObject Source) {
    GET_FUNC_ADDR(TreeNode_Assign)
    MySyscall(pTreeNode_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_Collapse)
void
TreeNode_Collapse(TTreeNode AObj, BOOL Recurse) {
    GET_FUNC_ADDR(TreeNode_Collapse)
    MySyscall(pTreeNode_Collapse, 2, AObj, Recurse ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_ConsistencyCheck)
void
TreeNode_ConsistencyCheck(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_ConsistencyCheck)
    MySyscall(pTreeNode_ConsistencyCheck, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_Delete)
void
TreeNode_Delete(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_Delete)
    MySyscall(pTreeNode_Delete, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_DeleteChildren)
void
TreeNode_DeleteChildren(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_DeleteChildren)
    MySyscall(pTreeNode_DeleteChildren, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_EndEdit)
void
TreeNode_EndEdit(TTreeNode AObj, BOOL Cancel) {
    GET_FUNC_ADDR(TreeNode_EndEdit)
    MySyscall(pTreeNode_EndEdit, 2, AObj, Cancel ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_Expand)
void
TreeNode_Expand(TTreeNode AObj, BOOL Recurse) {
    GET_FUNC_ADDR(TreeNode_Expand)
    MySyscall(pTreeNode_Expand, 2, AObj, Recurse ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_ExpandParents)
void
TreeNode_ExpandParents(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_ExpandParents)
    MySyscall(pTreeNode_ExpandParents, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_FreeAllNodeData)
void
TreeNode_FreeAllNodeData(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_FreeAllNodeData)
    MySyscall(pTreeNode_FreeAllNodeData, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_MakeVisible)
void
TreeNode_MakeVisible(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_MakeVisible)
    MySyscall(pTreeNode_MakeVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_MoveTo)
void
TreeNode_MoveTo(TTreeNode AObj, TTreeNode Destination, TNodeAttachMode Mode) {
    GET_FUNC_ADDR(TreeNode_MoveTo)
    MySyscall(pTreeNode_MoveTo, 3, AObj, Destination, Mode ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_MultiSelectGroup)
void
TreeNode_MultiSelectGroup(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_MultiSelectGroup)
    MySyscall(pTreeNode_MultiSelectGroup, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_Update)
void
TreeNode_Update(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_Update)
    MySyscall(pTreeNode_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_WriteDebugReport)
void
TreeNode_WriteDebugReport(TTreeNode AObj, CChar char* Prefix, BOOL Recurse) {
    GET_FUNC_ADDR(TreeNode_WriteDebugReport)
    MySyscall(pTreeNode_WriteDebugReport, 3, AObj, Prefix, Recurse ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_CustomSort)
BOOL
TreeNode_CustomSort(TTreeNode AObj, PFNTVCOMPARE SortProc, intptr_t Data, BOOL ARecurse) {
    GET_FUNC_ADDR(TreeNode_CustomSort)
    return (BOOL)MySyscall(pTreeNode_CustomSort, 4, AObj, SortProc, Data, ARecurse ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetNamePath)
char*
TreeNode_GetNamePath(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetNamePath)
    return (char*)MySyscall(pTreeNode_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_ClassType)
TClass
TreeNode_ClassType(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_ClassType)
    return (TClass)MySyscall(pTreeNode_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_ClassName)
char*
TreeNode_ClassName(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_ClassName)
    return (char*)MySyscall(pTreeNode_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_InstanceSize)
int32_t
TreeNode_InstanceSize(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_InstanceSize)
    return (int32_t)MySyscall(pTreeNode_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_InheritsFrom)
BOOL
TreeNode_InheritsFrom(TTreeNode AObj, TClass AClass) {
    GET_FUNC_ADDR(TreeNode_InheritsFrom)
    return (BOOL)MySyscall(pTreeNode_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_Equals)
BOOL
TreeNode_Equals(TTreeNode AObj, TObject Obj) {
    GET_FUNC_ADDR(TreeNode_Equals)
    return (BOOL)MySyscall(pTreeNode_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetHashCode)
int32_t
TreeNode_GetHashCode(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetHashCode)
    return (int32_t)MySyscall(pTreeNode_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_ToString)
char*
TreeNode_ToString(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_ToString)
    return (char*)MySyscall(pTreeNode_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetAbsoluteIndex)
int32_t
TreeNode_GetAbsoluteIndex(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetAbsoluteIndex)
    return (int32_t)MySyscall(pTreeNode_GetAbsoluteIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetCount)
int32_t
TreeNode_GetCount(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetCount)
    return (int32_t)MySyscall(pTreeNode_GetCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetCut)
BOOL
TreeNode_GetCut(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetCut)
    return (BOOL)MySyscall(pTreeNode_GetCut, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_SetCut)
void
TreeNode_SetCut(TTreeNode AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeNode_SetCut)
    MySyscall(pTreeNode_SetCut, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetData)
void*
TreeNode_GetData(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetData)
    return (void*)MySyscall(pTreeNode_GetData, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_SetData)
void
TreeNode_SetData(TTreeNode AObj, void* AValue) {
    GET_FUNC_ADDR(TreeNode_SetData)
    MySyscall(pTreeNode_SetData, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetDeleting)
BOOL
TreeNode_GetDeleting(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetDeleting)
    return (BOOL)MySyscall(pTreeNode_GetDeleting, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetDropTarget)
BOOL
TreeNode_GetDropTarget(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetDropTarget)
    return (BOOL)MySyscall(pTreeNode_GetDropTarget, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_SetDropTarget)
void
TreeNode_SetDropTarget(TTreeNode AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeNode_SetDropTarget)
    MySyscall(pTreeNode_SetDropTarget, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetExpanded)
BOOL
TreeNode_GetExpanded(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetExpanded)
    return (BOOL)MySyscall(pTreeNode_GetExpanded, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_SetExpanded)
void
TreeNode_SetExpanded(TTreeNode AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeNode_SetExpanded)
    MySyscall(pTreeNode_SetExpanded, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetFocused)
BOOL
TreeNode_GetFocused(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetFocused)
    return (BOOL)MySyscall(pTreeNode_GetFocused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_SetFocused)
void
TreeNode_SetFocused(TTreeNode AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeNode_SetFocused)
    MySyscall(pTreeNode_SetFocused, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetHandle)
uintptr_t
TreeNode_GetHandle(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetHandle)
    return (uintptr_t)MySyscall(pTreeNode_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetHasChildren)
BOOL
TreeNode_GetHasChildren(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetHasChildren)
    return (BOOL)MySyscall(pTreeNode_GetHasChildren, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_SetHasChildren)
void
TreeNode_SetHasChildren(TTreeNode AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeNode_SetHasChildren)
    MySyscall(pTreeNode_SetHasChildren, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetHeight)
int32_t
TreeNode_GetHeight(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetHeight)
    return (int32_t)MySyscall(pTreeNode_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_SetHeight)
void
TreeNode_SetHeight(TTreeNode AObj, int32_t AValue) {
    GET_FUNC_ADDR(TreeNode_SetHeight)
    MySyscall(pTreeNode_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetImageIndex)
int32_t
TreeNode_GetImageIndex(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetImageIndex)
    return (int32_t)MySyscall(pTreeNode_GetImageIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_SetImageIndex)
void
TreeNode_SetImageIndex(TTreeNode AObj, int32_t AValue) {
    GET_FUNC_ADDR(TreeNode_SetImageIndex)
    MySyscall(pTreeNode_SetImageIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetIndex)
int32_t
TreeNode_GetIndex(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetIndex)
    return (int32_t)MySyscall(pTreeNode_GetIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_SetIndex)
void
TreeNode_SetIndex(TTreeNode AObj, int32_t AValue) {
    GET_FUNC_ADDR(TreeNode_SetIndex)
    MySyscall(pTreeNode_SetIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetIsFullHeightVisible)
BOOL
TreeNode_GetIsFullHeightVisible(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetIsFullHeightVisible)
    return (BOOL)MySyscall(pTreeNode_GetIsFullHeightVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetIsVisible)
BOOL
TreeNode_GetIsVisible(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetIsVisible)
    return (BOOL)MySyscall(pTreeNode_GetIsVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetLevel)
int32_t
TreeNode_GetLevel(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetLevel)
    return (int32_t)MySyscall(pTreeNode_GetLevel, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetMultiSelected)
BOOL
TreeNode_GetMultiSelected(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetMultiSelected)
    return (BOOL)MySyscall(pTreeNode_GetMultiSelected, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_SetMultiSelected)
void
TreeNode_SetMultiSelected(TTreeNode AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeNode_SetMultiSelected)
    MySyscall(pTreeNode_SetMultiSelected, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetOverlayIndex)
int32_t
TreeNode_GetOverlayIndex(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetOverlayIndex)
    return (int32_t)MySyscall(pTreeNode_GetOverlayIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_SetOverlayIndex)
void
TreeNode_SetOverlayIndex(TTreeNode AObj, int32_t AValue) {
    GET_FUNC_ADDR(TreeNode_SetOverlayIndex)
    MySyscall(pTreeNode_SetOverlayIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetOwner)
TTreeNodes
TreeNode_GetOwner(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetOwner)
    return (TTreeNodes)MySyscall(pTreeNode_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetParent)
TTreeNode
TreeNode_GetParent(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetParent)
    return (TTreeNode)MySyscall(pTreeNode_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetSelected)
BOOL
TreeNode_GetSelected(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetSelected)
    return (BOOL)MySyscall(pTreeNode_GetSelected, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_SetSelected)
void
TreeNode_SetSelected(TTreeNode AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeNode_SetSelected)
    MySyscall(pTreeNode_SetSelected, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetSelectedIndex)
int32_t
TreeNode_GetSelectedIndex(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetSelectedIndex)
    return (int32_t)MySyscall(pTreeNode_GetSelectedIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_SetSelectedIndex)
void
TreeNode_SetSelectedIndex(TTreeNode AObj, int32_t AValue) {
    GET_FUNC_ADDR(TreeNode_SetSelectedIndex)
    MySyscall(pTreeNode_SetSelectedIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetStateIndex)
int32_t
TreeNode_GetStateIndex(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetStateIndex)
    return (int32_t)MySyscall(pTreeNode_GetStateIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_SetStateIndex)
void
TreeNode_SetStateIndex(TTreeNode AObj, int32_t AValue) {
    GET_FUNC_ADDR(TreeNode_SetStateIndex)
    MySyscall(pTreeNode_SetStateIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetSubTreeCount)
int32_t
TreeNode_GetSubTreeCount(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetSubTreeCount)
    return (int32_t)MySyscall(pTreeNode_GetSubTreeCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetText)
char*
TreeNode_GetText(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetText)
    return (char*)MySyscall(pTreeNode_GetText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_SetText)
void
TreeNode_SetText(TTreeNode AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TreeNode_SetText)
    MySyscall(pTreeNode_SetText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetTop)
int32_t
TreeNode_GetTop(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetTop)
    return (int32_t)MySyscall(pTreeNode_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetTreeNodes)
TTreeNodes
TreeNode_GetTreeNodes(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetTreeNodes)
    return (TTreeNodes)MySyscall(pTreeNode_GetTreeNodes, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetTreeView)
TTreeView
TreeNode_GetTreeView(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetTreeView)
    return (TTreeView)MySyscall(pTreeNode_GetTreeView, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetVisible)
BOOL
TreeNode_GetVisible(TTreeNode AObj) {
    GET_FUNC_ADDR(TreeNode_GetVisible)
    return (BOOL)MySyscall(pTreeNode_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_SetVisible)
void
TreeNode_SetVisible(TTreeNode AObj, BOOL AValue) {
    GET_FUNC_ADDR(TreeNode_SetVisible)
    MySyscall(pTreeNode_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetItems)
TTreeNode
TreeNode_GetItems(TTreeNode AObj, int32_t ItemIndex) {
    GET_FUNC_ADDR(TreeNode_GetItems)
    return (TTreeNode)MySyscall(pTreeNode_GetItems, 2, AObj, ItemIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_SetItems)
void
TreeNode_SetItems(TTreeNode AObj, int32_t ItemIndex, TTreeNode AValue) {
    GET_FUNC_ADDR(TreeNode_SetItems)
    MySyscall(pTreeNode_SetItems, 3, AObj, ItemIndex, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_GetItem)
TTreeNode
TreeNode_GetItem(TTreeNode AObj, int32_t Index) {
    GET_FUNC_ADDR(TreeNode_GetItem)
    return (TTreeNode)MySyscall(pTreeNode_GetItem, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_SetItem)
void
TreeNode_SetItem(TTreeNode AObj, int32_t Index, TTreeNode AValue) {
    GET_FUNC_ADDR(TreeNode_SetItem)
    MySyscall(pTreeNode_SetItem, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TreeNode_StaticClassType)
TClass
TreeNode_StaticClassType() {
    GET_FUNC_ADDR(TreeNode_StaticClassType)
    return (TClass)MySyscall(pTreeNode_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TPageControl-------------------

DEFINE_FUNC_PTR(PageControl_Create)
TPageControl
PageControl_Create(TComponent AOwner) {
    GET_FUNC_ADDR(PageControl_Create)
    return (TPageControl)MySyscall(pPageControl_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_Free)
void
PageControl_Free(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_Free)
    MySyscall(pPageControl_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SelectNextPage)
void
PageControl_SelectNextPage(TPageControl AObj, BOOL GoForward, BOOL CheckTabVisible) {
    GET_FUNC_ADDR(PageControl_SelectNextPage)
    MySyscall(pPageControl_SelectNextPage, 3, AObj, GoForward, CheckTabVisible ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_TabRect)
TRect
PageControl_TabRect(TPageControl AObj, int32_t Index) {
    GET_FUNC_ADDR(PageControl_TabRect)
    TRect result;
    MySyscall(pPageControl_TabRect, 3, AObj, Index, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(PageControl_CanFocus)
BOOL
PageControl_CanFocus(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_CanFocus)
    return (BOOL)MySyscall(pPageControl_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_ContainsControl)
BOOL
PageControl_ContainsControl(TPageControl AObj, TControl Control) {
    GET_FUNC_ADDR(PageControl_ContainsControl)
    return (BOOL)MySyscall(pPageControl_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_ControlAtPos)
TControl
PageControl_ControlAtPos(TPageControl AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(PageControl_ControlAtPos)
    return (TControl)MySyscall(pPageControl_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_DisableAlign)
void
PageControl_DisableAlign(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_DisableAlign)
    MySyscall(pPageControl_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_EnableAlign)
void
PageControl_EnableAlign(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_EnableAlign)
    MySyscall(pPageControl_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_FindChildControl)
TControl
PageControl_FindChildControl(TPageControl AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(PageControl_FindChildControl)
    return (TControl)MySyscall(pPageControl_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_FlipChildren)
void
PageControl_FlipChildren(TPageControl AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(PageControl_FlipChildren)
    MySyscall(pPageControl_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_Focused)
BOOL
PageControl_Focused(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_Focused)
    return (BOOL)MySyscall(pPageControl_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_HandleAllocated)
BOOL
PageControl_HandleAllocated(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_HandleAllocated)
    return (BOOL)MySyscall(pPageControl_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_InsertControl)
void
PageControl_InsertControl(TPageControl AObj, TControl AControl) {
    GET_FUNC_ADDR(PageControl_InsertControl)
    MySyscall(pPageControl_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_Invalidate)
void
PageControl_Invalidate(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_Invalidate)
    MySyscall(pPageControl_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_PaintTo)
void
PageControl_PaintTo(TPageControl AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(PageControl_PaintTo)
    MySyscall(pPageControl_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_RemoveControl)
void
PageControl_RemoveControl(TPageControl AObj, TControl AControl) {
    GET_FUNC_ADDR(PageControl_RemoveControl)
    MySyscall(pPageControl_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_Realign)
void
PageControl_Realign(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_Realign)
    MySyscall(pPageControl_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_Repaint)
void
PageControl_Repaint(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_Repaint)
    MySyscall(pPageControl_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_ScaleBy)
void
PageControl_ScaleBy(TPageControl AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(PageControl_ScaleBy)
    MySyscall(pPageControl_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_ScrollBy)
void
PageControl_ScrollBy(TPageControl AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(PageControl_ScrollBy)
    MySyscall(pPageControl_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetBounds)
void
PageControl_SetBounds(TPageControl AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(PageControl_SetBounds)
    MySyscall(pPageControl_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetFocus)
void
PageControl_SetFocus(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_SetFocus)
    MySyscall(pPageControl_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_Update)
void
PageControl_Update(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_Update)
    MySyscall(pPageControl_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_BringToFront)
void
PageControl_BringToFront(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_BringToFront)
    MySyscall(pPageControl_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_ClientToScreen)
TPoint
PageControl_ClientToScreen(TPageControl AObj, TPoint Point) {
    GET_FUNC_ADDR(PageControl_ClientToScreen)
    TPoint result;
    MySyscall(pPageControl_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(PageControl_ClientToParent)
TPoint
PageControl_ClientToParent(TPageControl AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(PageControl_ClientToParent)
    TPoint result;
    MySyscall(pPageControl_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(PageControl_Dragging)
BOOL
PageControl_Dragging(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_Dragging)
    return (BOOL)MySyscall(pPageControl_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_HasParent)
BOOL
PageControl_HasParent(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_HasParent)
    return (BOOL)MySyscall(pPageControl_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_Hide)
void
PageControl_Hide(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_Hide)
    MySyscall(pPageControl_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_Perform)
intptr_t
PageControl_Perform(TPageControl AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(PageControl_Perform)
    return (intptr_t)MySyscall(pPageControl_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_Refresh)
void
PageControl_Refresh(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_Refresh)
    MySyscall(pPageControl_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_ScreenToClient)
TPoint
PageControl_ScreenToClient(TPageControl AObj, TPoint Point) {
    GET_FUNC_ADDR(PageControl_ScreenToClient)
    TPoint result;
    MySyscall(pPageControl_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(PageControl_ParentToClient)
TPoint
PageControl_ParentToClient(TPageControl AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(PageControl_ParentToClient)
    TPoint result;
    MySyscall(pPageControl_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(PageControl_SendToBack)
void
PageControl_SendToBack(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_SendToBack)
    MySyscall(pPageControl_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_Show)
void
PageControl_Show(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_Show)
    MySyscall(pPageControl_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetTextBuf)
int32_t
PageControl_GetTextBuf(TPageControl AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(PageControl_GetTextBuf)
    return (int32_t)MySyscall(pPageControl_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetTextLen)
int32_t
PageControl_GetTextLen(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetTextLen)
    return (int32_t)MySyscall(pPageControl_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetTextBuf)
void
PageControl_SetTextBuf(TPageControl AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(PageControl_SetTextBuf)
    MySyscall(pPageControl_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_FindComponent)
TComponent
PageControl_FindComponent(TPageControl AObj, CChar char* AName) {
    GET_FUNC_ADDR(PageControl_FindComponent)
    return (TComponent)MySyscall(pPageControl_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetNamePath)
char*
PageControl_GetNamePath(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetNamePath)
    return (char*)MySyscall(pPageControl_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_Assign)
void
PageControl_Assign(TPageControl AObj, TObject Source) {
    GET_FUNC_ADDR(PageControl_Assign)
    MySyscall(pPageControl_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_ClassType)
TClass
PageControl_ClassType(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_ClassType)
    return (TClass)MySyscall(pPageControl_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_ClassName)
char*
PageControl_ClassName(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_ClassName)
    return (char*)MySyscall(pPageControl_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_InstanceSize)
int32_t
PageControl_InstanceSize(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_InstanceSize)
    return (int32_t)MySyscall(pPageControl_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_InheritsFrom)
BOOL
PageControl_InheritsFrom(TPageControl AObj, TClass AClass) {
    GET_FUNC_ADDR(PageControl_InheritsFrom)
    return (BOOL)MySyscall(pPageControl_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_Equals)
BOOL
PageControl_Equals(TPageControl AObj, TObject Obj) {
    GET_FUNC_ADDR(PageControl_Equals)
    return (BOOL)MySyscall(pPageControl_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetHashCode)
int32_t
PageControl_GetHashCode(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetHashCode)
    return (int32_t)MySyscall(pPageControl_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_ToString)
char*
PageControl_ToString(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_ToString)
    return (char*)MySyscall(pPageControl_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_AnchorToNeighbour)
void
PageControl_AnchorToNeighbour(TPageControl AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(PageControl_AnchorToNeighbour)
    MySyscall(pPageControl_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_AnchorParallel)
void
PageControl_AnchorParallel(TPageControl AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(PageControl_AnchorParallel)
    MySyscall(pPageControl_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_AnchorHorizontalCenterTo)
void
PageControl_AnchorHorizontalCenterTo(TPageControl AObj, TControl ASibling) {
    GET_FUNC_ADDR(PageControl_AnchorHorizontalCenterTo)
    MySyscall(pPageControl_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_AnchorVerticalCenterTo)
void
PageControl_AnchorVerticalCenterTo(TPageControl AObj, TControl ASibling) {
    GET_FUNC_ADDR(PageControl_AnchorVerticalCenterTo)
    MySyscall(pPageControl_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_AnchorSame)
void
PageControl_AnchorSame(TPageControl AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(PageControl_AnchorSame)
    MySyscall(pPageControl_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_AnchorAsAlign)
void
PageControl_AnchorAsAlign(TPageControl AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(PageControl_AnchorAsAlign)
    MySyscall(pPageControl_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_AnchorClient)
void
PageControl_AnchorClient(TPageControl AObj, int32_t ASpace) {
    GET_FUNC_ADDR(PageControl_AnchorClient)
    MySyscall(pPageControl_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_ScaleDesignToForm)
int32_t
PageControl_ScaleDesignToForm(TPageControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(PageControl_ScaleDesignToForm)
    return (int32_t)MySyscall(pPageControl_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_ScaleFormToDesign)
int32_t
PageControl_ScaleFormToDesign(TPageControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(PageControl_ScaleFormToDesign)
    return (int32_t)MySyscall(pPageControl_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_Scale96ToForm)
int32_t
PageControl_Scale96ToForm(TPageControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(PageControl_Scale96ToForm)
    return (int32_t)MySyscall(pPageControl_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_ScaleFormTo96)
int32_t
PageControl_ScaleFormTo96(TPageControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(PageControl_ScaleFormTo96)
    return (int32_t)MySyscall(pPageControl_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_Scale96ToFont)
int32_t
PageControl_Scale96ToFont(TPageControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(PageControl_Scale96ToFont)
    return (int32_t)MySyscall(pPageControl_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_ScaleFontTo96)
int32_t
PageControl_ScaleFontTo96(TPageControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(PageControl_ScaleFontTo96)
    return (int32_t)MySyscall(pPageControl_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_ScaleScreenToFont)
int32_t
PageControl_ScaleScreenToFont(TPageControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(PageControl_ScaleScreenToFont)
    return (int32_t)MySyscall(pPageControl_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_ScaleFontToScreen)
int32_t
PageControl_ScaleFontToScreen(TPageControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(PageControl_ScaleFontToScreen)
    return (int32_t)MySyscall(pPageControl_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_Scale96ToScreen)
int32_t
PageControl_Scale96ToScreen(TPageControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(PageControl_Scale96ToScreen)
    return (int32_t)MySyscall(pPageControl_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_ScaleScreenTo96)
int32_t
PageControl_ScaleScreenTo96(TPageControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(PageControl_ScaleScreenTo96)
    return (int32_t)MySyscall(pPageControl_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_AutoAdjustLayout)
void
PageControl_AutoAdjustLayout(TPageControl AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(PageControl_AutoAdjustLayout)
    MySyscall(pPageControl_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_FixDesignFontsPPI)
void
PageControl_FixDesignFontsPPI(TPageControl AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(PageControl_FixDesignFontsPPI)
    MySyscall(pPageControl_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_ScaleFontsPPI)
void
PageControl_ScaleFontsPPI(TPageControl AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(PageControl_ScaleFontsPPI)
    MySyscall(pPageControl_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetOptions)
TCTabControlOptions
PageControl_GetOptions(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetOptions)
    return (TCTabControlOptions)MySyscall(pPageControl_GetOptions, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetOptions)
void
PageControl_SetOptions(TPageControl AObj, TCTabControlOptions AValue) {
    GET_FUNC_ADDR(PageControl_SetOptions)
    MySyscall(pPageControl_SetOptions, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetActivePageIndex)
int32_t
PageControl_GetActivePageIndex(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetActivePageIndex)
    return (int32_t)MySyscall(pPageControl_GetActivePageIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetActivePageIndex)
void
PageControl_SetActivePageIndex(TPageControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(PageControl_SetActivePageIndex)
    MySyscall(pPageControl_SetActivePageIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetPageCount)
int32_t
PageControl_GetPageCount(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetPageCount)
    return (int32_t)MySyscall(pPageControl_GetPageCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetActivePage)
TTabSheet
PageControl_GetActivePage(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetActivePage)
    return (TTabSheet)MySyscall(pPageControl_GetActivePage, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetActivePage)
void
PageControl_SetActivePage(TPageControl AObj, TTabSheet AValue) {
    GET_FUNC_ADDR(PageControl_SetActivePage)
    MySyscall(pPageControl_SetActivePage, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetAlign)
TAlign
PageControl_GetAlign(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetAlign)
    return (TAlign)MySyscall(pPageControl_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetAlign)
void
PageControl_SetAlign(TPageControl AObj, TAlign AValue) {
    GET_FUNC_ADDR(PageControl_SetAlign)
    MySyscall(pPageControl_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetAnchors)
TAnchors
PageControl_GetAnchors(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetAnchors)
    return (TAnchors)MySyscall(pPageControl_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetAnchors)
void
PageControl_SetAnchors(TPageControl AObj, TAnchors AValue) {
    GET_FUNC_ADDR(PageControl_SetAnchors)
    MySyscall(pPageControl_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetBiDiMode)
TBiDiMode
PageControl_GetBiDiMode(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetBiDiMode)
    return (TBiDiMode)MySyscall(pPageControl_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetBiDiMode)
void
PageControl_SetBiDiMode(TPageControl AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(PageControl_SetBiDiMode)
    MySyscall(pPageControl_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetConstraints)
TSizeConstraints
PageControl_GetConstraints(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetConstraints)
    return (TSizeConstraints)MySyscall(pPageControl_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetConstraints)
void
PageControl_SetConstraints(TPageControl AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(PageControl_SetConstraints)
    MySyscall(pPageControl_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetDockSite)
BOOL
PageControl_GetDockSite(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetDockSite)
    return (BOOL)MySyscall(pPageControl_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetDockSite)
void
PageControl_SetDockSite(TPageControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(PageControl_SetDockSite)
    MySyscall(pPageControl_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetDoubleBuffered)
BOOL
PageControl_GetDoubleBuffered(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetDoubleBuffered)
    return (BOOL)MySyscall(pPageControl_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetDoubleBuffered)
void
PageControl_SetDoubleBuffered(TPageControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(PageControl_SetDoubleBuffered)
    MySyscall(pPageControl_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetDragCursor)
TCursor
PageControl_GetDragCursor(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetDragCursor)
    return (TCursor)MySyscall(pPageControl_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetDragCursor)
void
PageControl_SetDragCursor(TPageControl AObj, TCursor AValue) {
    GET_FUNC_ADDR(PageControl_SetDragCursor)
    MySyscall(pPageControl_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetDragKind)
TDragKind
PageControl_GetDragKind(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetDragKind)
    return (TDragKind)MySyscall(pPageControl_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetDragKind)
void
PageControl_SetDragKind(TPageControl AObj, TDragKind AValue) {
    GET_FUNC_ADDR(PageControl_SetDragKind)
    MySyscall(pPageControl_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetDragMode)
TDragMode
PageControl_GetDragMode(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetDragMode)
    return (TDragMode)MySyscall(pPageControl_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetDragMode)
void
PageControl_SetDragMode(TPageControl AObj, TDragMode AValue) {
    GET_FUNC_ADDR(PageControl_SetDragMode)
    MySyscall(pPageControl_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetEnabled)
BOOL
PageControl_GetEnabled(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetEnabled)
    return (BOOL)MySyscall(pPageControl_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetEnabled)
void
PageControl_SetEnabled(TPageControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(PageControl_SetEnabled)
    MySyscall(pPageControl_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetFont)
TFont
PageControl_GetFont(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetFont)
    return (TFont)MySyscall(pPageControl_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetFont)
void
PageControl_SetFont(TPageControl AObj, TFont AValue) {
    GET_FUNC_ADDR(PageControl_SetFont)
    MySyscall(pPageControl_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetImages)
TImageList
PageControl_GetImages(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetImages)
    return (TImageList)MySyscall(pPageControl_GetImages, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetImages)
void
PageControl_SetImages(TPageControl AObj, TImageList AValue) {
    GET_FUNC_ADDR(PageControl_SetImages)
    MySyscall(pPageControl_SetImages, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetMultiLine)
BOOL
PageControl_GetMultiLine(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetMultiLine)
    return (BOOL)MySyscall(pPageControl_GetMultiLine, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetMultiLine)
void
PageControl_SetMultiLine(TPageControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(PageControl_SetMultiLine)
    MySyscall(pPageControl_SetMultiLine, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetParentDoubleBuffered)
BOOL
PageControl_GetParentDoubleBuffered(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pPageControl_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetParentDoubleBuffered)
void
PageControl_SetParentDoubleBuffered(TPageControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(PageControl_SetParentDoubleBuffered)
    MySyscall(pPageControl_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetParentFont)
BOOL
PageControl_GetParentFont(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetParentFont)
    return (BOOL)MySyscall(pPageControl_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetParentFont)
void
PageControl_SetParentFont(TPageControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(PageControl_SetParentFont)
    MySyscall(pPageControl_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetParentShowHint)
BOOL
PageControl_GetParentShowHint(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetParentShowHint)
    return (BOOL)MySyscall(pPageControl_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetParentShowHint)
void
PageControl_SetParentShowHint(TPageControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(PageControl_SetParentShowHint)
    MySyscall(pPageControl_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetPopupMenu)
TPopupMenu
PageControl_GetPopupMenu(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetPopupMenu)
    return (TPopupMenu)MySyscall(pPageControl_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetPopupMenu)
void
PageControl_SetPopupMenu(TPageControl AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(PageControl_SetPopupMenu)
    MySyscall(pPageControl_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetShowHint)
BOOL
PageControl_GetShowHint(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetShowHint)
    return (BOOL)MySyscall(pPageControl_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetShowHint)
void
PageControl_SetShowHint(TPageControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(PageControl_SetShowHint)
    MySyscall(pPageControl_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetTabHeight)
int16_t
PageControl_GetTabHeight(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetTabHeight)
    return (int16_t)MySyscall(pPageControl_GetTabHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetTabHeight)
void
PageControl_SetTabHeight(TPageControl AObj, int16_t AValue) {
    GET_FUNC_ADDR(PageControl_SetTabHeight)
    MySyscall(pPageControl_SetTabHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetTabIndex)
int32_t
PageControl_GetTabIndex(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetTabIndex)
    return (int32_t)MySyscall(pPageControl_GetTabIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetTabIndex)
void
PageControl_SetTabIndex(TPageControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(PageControl_SetTabIndex)
    MySyscall(pPageControl_SetTabIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetTabOrder)
TTabOrder
PageControl_GetTabOrder(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetTabOrder)
    return (TTabOrder)MySyscall(pPageControl_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetTabOrder)
void
PageControl_SetTabOrder(TPageControl AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(PageControl_SetTabOrder)
    MySyscall(pPageControl_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetTabPosition)
TTabPosition
PageControl_GetTabPosition(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetTabPosition)
    return (TTabPosition)MySyscall(pPageControl_GetTabPosition, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetTabPosition)
void
PageControl_SetTabPosition(TPageControl AObj, TTabPosition AValue) {
    GET_FUNC_ADDR(PageControl_SetTabPosition)
    MySyscall(pPageControl_SetTabPosition, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetTabStop)
BOOL
PageControl_GetTabStop(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetTabStop)
    return (BOOL)MySyscall(pPageControl_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetTabStop)
void
PageControl_SetTabStop(TPageControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(PageControl_SetTabStop)
    MySyscall(pPageControl_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetTabWidth)
int16_t
PageControl_GetTabWidth(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetTabWidth)
    return (int16_t)MySyscall(pPageControl_GetTabWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetTabWidth)
void
PageControl_SetTabWidth(TPageControl AObj, int16_t AValue) {
    GET_FUNC_ADDR(PageControl_SetTabWidth)
    MySyscall(pPageControl_SetTabWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetVisible)
BOOL
PageControl_GetVisible(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetVisible)
    return (BOOL)MySyscall(pPageControl_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetVisible)
void
PageControl_SetVisible(TPageControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(PageControl_SetVisible)
    MySyscall(pPageControl_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetOnChange)
void
PageControl_SetOnChange(TPageControl AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(PageControl_SetOnChange)
    MySyscall(pPageControl_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetOnChanging)
void
PageControl_SetOnChanging(TPageControl AObj, TTabChangingEvent AEventData) {
    GET_FUNC_ADDR(PageControl_SetOnChanging)
    MySyscall(pPageControl_SetOnChanging, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetOnContextPopup)
void
PageControl_SetOnContextPopup(TPageControl AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(PageControl_SetOnContextPopup)
    MySyscall(pPageControl_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetOnDockDrop)
void
PageControl_SetOnDockDrop(TPageControl AObj, TDockDropEvent AEventData) {
    GET_FUNC_ADDR(PageControl_SetOnDockDrop)
    MySyscall(pPageControl_SetOnDockDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetOnDragDrop)
void
PageControl_SetOnDragDrop(TPageControl AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(PageControl_SetOnDragDrop)
    MySyscall(pPageControl_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetOnDragOver)
void
PageControl_SetOnDragOver(TPageControl AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(PageControl_SetOnDragOver)
    MySyscall(pPageControl_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetOnEndDock)
void
PageControl_SetOnEndDock(TPageControl AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(PageControl_SetOnEndDock)
    MySyscall(pPageControl_SetOnEndDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetOnEndDrag)
void
PageControl_SetOnEndDrag(TPageControl AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(PageControl_SetOnEndDrag)
    MySyscall(pPageControl_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetOnEnter)
void
PageControl_SetOnEnter(TPageControl AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(PageControl_SetOnEnter)
    MySyscall(pPageControl_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetOnExit)
void
PageControl_SetOnExit(TPageControl AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(PageControl_SetOnExit)
    MySyscall(pPageControl_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetOnGetSiteInfo)
void
PageControl_SetOnGetSiteInfo(TPageControl AObj, TGetSiteInfoEvent AEventData) {
    GET_FUNC_ADDR(PageControl_SetOnGetSiteInfo)
    MySyscall(pPageControl_SetOnGetSiteInfo, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetOnMouseDown)
void
PageControl_SetOnMouseDown(TPageControl AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(PageControl_SetOnMouseDown)
    MySyscall(pPageControl_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetOnMouseEnter)
void
PageControl_SetOnMouseEnter(TPageControl AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(PageControl_SetOnMouseEnter)
    MySyscall(pPageControl_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetOnMouseLeave)
void
PageControl_SetOnMouseLeave(TPageControl AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(PageControl_SetOnMouseLeave)
    MySyscall(pPageControl_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetOnMouseMove)
void
PageControl_SetOnMouseMove(TPageControl AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(PageControl_SetOnMouseMove)
    MySyscall(pPageControl_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetOnMouseUp)
void
PageControl_SetOnMouseUp(TPageControl AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(PageControl_SetOnMouseUp)
    MySyscall(pPageControl_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetOnResize)
void
PageControl_SetOnResize(TPageControl AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(PageControl_SetOnResize)
    MySyscall(pPageControl_SetOnResize, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetOnStartDock)
void
PageControl_SetOnStartDock(TPageControl AObj, TStartDockEvent AEventData) {
    GET_FUNC_ADDR(PageControl_SetOnStartDock)
    MySyscall(pPageControl_SetOnStartDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetOnUnDock)
void
PageControl_SetOnUnDock(TPageControl AObj, TUnDockEvent AEventData) {
    GET_FUNC_ADDR(PageControl_SetOnUnDock)
    MySyscall(pPageControl_SetOnUnDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetDockClientCount)
int32_t
PageControl_GetDockClientCount(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetDockClientCount)
    return (int32_t)MySyscall(pPageControl_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetMouseInClient)
BOOL
PageControl_GetMouseInClient(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetMouseInClient)
    return (BOOL)MySyscall(pPageControl_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetVisibleDockClientCount)
int32_t
PageControl_GetVisibleDockClientCount(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pPageControl_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetBrush)
TBrush
PageControl_GetBrush(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetBrush)
    return (TBrush)MySyscall(pPageControl_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetControlCount)
int32_t
PageControl_GetControlCount(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetControlCount)
    return (int32_t)MySyscall(pPageControl_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetHandle)
HWND
PageControl_GetHandle(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetHandle)
    return (HWND)MySyscall(pPageControl_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetParentWindow)
HWND
PageControl_GetParentWindow(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetParentWindow)
    return (HWND)MySyscall(pPageControl_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetParentWindow)
void
PageControl_SetParentWindow(TPageControl AObj, HWND AValue) {
    GET_FUNC_ADDR(PageControl_SetParentWindow)
    MySyscall(pPageControl_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetShowing)
BOOL
PageControl_GetShowing(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetShowing)
    return (BOOL)MySyscall(pPageControl_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetUseDockManager)
BOOL
PageControl_GetUseDockManager(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetUseDockManager)
    return (BOOL)MySyscall(pPageControl_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetUseDockManager)
void
PageControl_SetUseDockManager(TPageControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(PageControl_SetUseDockManager)
    MySyscall(pPageControl_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetAction)
TAction
PageControl_GetAction(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetAction)
    return (TAction)MySyscall(pPageControl_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetAction)
void
PageControl_SetAction(TPageControl AObj, TAction AValue) {
    GET_FUNC_ADDR(PageControl_SetAction)
    MySyscall(pPageControl_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetBoundsRect)
TRect
PageControl_GetBoundsRect(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetBoundsRect)
    TRect result;
    MySyscall(pPageControl_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(PageControl_SetBoundsRect)
void
PageControl_SetBoundsRect(TPageControl AObj, TRect AValue) {
    GET_FUNC_ADDR(PageControl_SetBoundsRect)
    MySyscall(pPageControl_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetClientHeight)
int32_t
PageControl_GetClientHeight(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetClientHeight)
    return (int32_t)MySyscall(pPageControl_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetClientHeight)
void
PageControl_SetClientHeight(TPageControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(PageControl_SetClientHeight)
    MySyscall(pPageControl_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetClientOrigin)
TPoint
PageControl_GetClientOrigin(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetClientOrigin)
    TPoint result;
    MySyscall(pPageControl_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(PageControl_GetClientRect)
TRect
PageControl_GetClientRect(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetClientRect)
    TRect result;
    MySyscall(pPageControl_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(PageControl_GetClientWidth)
int32_t
PageControl_GetClientWidth(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetClientWidth)
    return (int32_t)MySyscall(pPageControl_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetClientWidth)
void
PageControl_SetClientWidth(TPageControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(PageControl_SetClientWidth)
    MySyscall(pPageControl_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetControlState)
TControlState
PageControl_GetControlState(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetControlState)
    return (TControlState)MySyscall(pPageControl_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetControlState)
void
PageControl_SetControlState(TPageControl AObj, TControlState AValue) {
    GET_FUNC_ADDR(PageControl_SetControlState)
    MySyscall(pPageControl_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetControlStyle)
TControlStyle
PageControl_GetControlStyle(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetControlStyle)
    return (TControlStyle)MySyscall(pPageControl_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetControlStyle)
void
PageControl_SetControlStyle(TPageControl AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(PageControl_SetControlStyle)
    MySyscall(pPageControl_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetFloating)
BOOL
PageControl_GetFloating(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetFloating)
    return (BOOL)MySyscall(pPageControl_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetParent)
TWinControl
PageControl_GetParent(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetParent)
    return (TWinControl)MySyscall(pPageControl_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetParent)
void
PageControl_SetParent(TPageControl AObj, TWinControl AValue) {
    GET_FUNC_ADDR(PageControl_SetParent)
    MySyscall(pPageControl_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetLeft)
int32_t
PageControl_GetLeft(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetLeft)
    return (int32_t)MySyscall(pPageControl_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetLeft)
void
PageControl_SetLeft(TPageControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(PageControl_SetLeft)
    MySyscall(pPageControl_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetTop)
int32_t
PageControl_GetTop(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetTop)
    return (int32_t)MySyscall(pPageControl_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetTop)
void
PageControl_SetTop(TPageControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(PageControl_SetTop)
    MySyscall(pPageControl_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetWidth)
int32_t
PageControl_GetWidth(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetWidth)
    return (int32_t)MySyscall(pPageControl_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetWidth)
void
PageControl_SetWidth(TPageControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(PageControl_SetWidth)
    MySyscall(pPageControl_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetHeight)
int32_t
PageControl_GetHeight(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetHeight)
    return (int32_t)MySyscall(pPageControl_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetHeight)
void
PageControl_SetHeight(TPageControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(PageControl_SetHeight)
    MySyscall(pPageControl_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetCursor)
TCursor
PageControl_GetCursor(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetCursor)
    return (TCursor)MySyscall(pPageControl_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetCursor)
void
PageControl_SetCursor(TPageControl AObj, TCursor AValue) {
    GET_FUNC_ADDR(PageControl_SetCursor)
    MySyscall(pPageControl_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetHint)
char*
PageControl_GetHint(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetHint)
    return (char*)MySyscall(pPageControl_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetHint)
void
PageControl_SetHint(TPageControl AObj, CChar char* AValue) {
    GET_FUNC_ADDR(PageControl_SetHint)
    MySyscall(pPageControl_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetComponentCount)
int32_t
PageControl_GetComponentCount(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetComponentCount)
    return (int32_t)MySyscall(pPageControl_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetComponentIndex)
int32_t
PageControl_GetComponentIndex(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetComponentIndex)
    return (int32_t)MySyscall(pPageControl_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetComponentIndex)
void
PageControl_SetComponentIndex(TPageControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(PageControl_SetComponentIndex)
    MySyscall(pPageControl_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetOwner)
TComponent
PageControl_GetOwner(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetOwner)
    return (TComponent)MySyscall(pPageControl_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetName)
char*
PageControl_GetName(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetName)
    return (char*)MySyscall(pPageControl_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetName)
void
PageControl_SetName(TPageControl AObj, CChar char* AValue) {
    GET_FUNC_ADDR(PageControl_SetName)
    MySyscall(pPageControl_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetTag)
intptr_t
PageControl_GetTag(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetTag)
    return (intptr_t)MySyscall(pPageControl_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetTag)
void
PageControl_SetTag(TPageControl AObj, intptr_t AValue) {
    GET_FUNC_ADDR(PageControl_SetTag)
    MySyscall(pPageControl_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetAnchorSideLeft)
TAnchorSide
PageControl_GetAnchorSideLeft(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pPageControl_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetAnchorSideLeft)
void
PageControl_SetAnchorSideLeft(TPageControl AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(PageControl_SetAnchorSideLeft)
    MySyscall(pPageControl_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetAnchorSideTop)
TAnchorSide
PageControl_GetAnchorSideTop(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pPageControl_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetAnchorSideTop)
void
PageControl_SetAnchorSideTop(TPageControl AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(PageControl_SetAnchorSideTop)
    MySyscall(pPageControl_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetAnchorSideRight)
TAnchorSide
PageControl_GetAnchorSideRight(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pPageControl_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetAnchorSideRight)
void
PageControl_SetAnchorSideRight(TPageControl AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(PageControl_SetAnchorSideRight)
    MySyscall(pPageControl_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetAnchorSideBottom)
TAnchorSide
PageControl_GetAnchorSideBottom(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pPageControl_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetAnchorSideBottom)
void
PageControl_SetAnchorSideBottom(TPageControl AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(PageControl_SetAnchorSideBottom)
    MySyscall(pPageControl_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetChildSizing)
TControlChildSizing
PageControl_GetChildSizing(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetChildSizing)
    return (TControlChildSizing)MySyscall(pPageControl_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetChildSizing)
void
PageControl_SetChildSizing(TPageControl AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(PageControl_SetChildSizing)
    MySyscall(pPageControl_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetBorderSpacing)
TControlBorderSpacing
PageControl_GetBorderSpacing(TPageControl AObj) {
    GET_FUNC_ADDR(PageControl_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pPageControl_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_SetBorderSpacing)
void
PageControl_SetBorderSpacing(TPageControl AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(PageControl_SetBorderSpacing)
    MySyscall(pPageControl_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetPages)
TTabSheet
PageControl_GetPages(TPageControl AObj, int32_t Index) {
    GET_FUNC_ADDR(PageControl_GetPages)
    return (TTabSheet)MySyscall(pPageControl_GetPages, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetDockClients)
TControl
PageControl_GetDockClients(TPageControl AObj, int32_t Index) {
    GET_FUNC_ADDR(PageControl_GetDockClients)
    return (TControl)MySyscall(pPageControl_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetControls)
TControl
PageControl_GetControls(TPageControl AObj, int32_t Index) {
    GET_FUNC_ADDR(PageControl_GetControls)
    return (TControl)MySyscall(pPageControl_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetComponents)
TComponent
PageControl_GetComponents(TPageControl AObj, int32_t AIndex) {
    GET_FUNC_ADDR(PageControl_GetComponents)
    return (TComponent)MySyscall(pPageControl_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_GetAnchorSide)
TAnchorSide
PageControl_GetAnchorSide(TPageControl AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(PageControl_GetAnchorSide)
    return (TAnchorSide)MySyscall(pPageControl_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageControl_StaticClassType)
TClass
PageControl_StaticClassType() {
    GET_FUNC_ADDR(PageControl_StaticClassType)
    return (TClass)MySyscall(pPageControl_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TTabSheet-------------------

DEFINE_FUNC_PTR(TabSheet_Create)
TTabSheet
TabSheet_Create(TComponent AOwner) {
    GET_FUNC_ADDR(TabSheet_Create)
    return (TTabSheet)MySyscall(pTabSheet_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_Free)
void
TabSheet_Free(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_Free)
    MySyscall(pTabSheet_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_CanFocus)
BOOL
TabSheet_CanFocus(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_CanFocus)
    return (BOOL)MySyscall(pTabSheet_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_ContainsControl)
BOOL
TabSheet_ContainsControl(TTabSheet AObj, TControl Control) {
    GET_FUNC_ADDR(TabSheet_ContainsControl)
    return (BOOL)MySyscall(pTabSheet_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_ControlAtPos)
TControl
TabSheet_ControlAtPos(TTabSheet AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(TabSheet_ControlAtPos)
    return (TControl)MySyscall(pTabSheet_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_DisableAlign)
void
TabSheet_DisableAlign(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_DisableAlign)
    MySyscall(pTabSheet_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_EnableAlign)
void
TabSheet_EnableAlign(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_EnableAlign)
    MySyscall(pTabSheet_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_FindChildControl)
TControl
TabSheet_FindChildControl(TTabSheet AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(TabSheet_FindChildControl)
    return (TControl)MySyscall(pTabSheet_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_FlipChildren)
void
TabSheet_FlipChildren(TTabSheet AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(TabSheet_FlipChildren)
    MySyscall(pTabSheet_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_Focused)
BOOL
TabSheet_Focused(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_Focused)
    return (BOOL)MySyscall(pTabSheet_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_HandleAllocated)
BOOL
TabSheet_HandleAllocated(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_HandleAllocated)
    return (BOOL)MySyscall(pTabSheet_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_InsertControl)
void
TabSheet_InsertControl(TTabSheet AObj, TControl AControl) {
    GET_FUNC_ADDR(TabSheet_InsertControl)
    MySyscall(pTabSheet_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_Invalidate)
void
TabSheet_Invalidate(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_Invalidate)
    MySyscall(pTabSheet_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_PaintTo)
void
TabSheet_PaintTo(TTabSheet AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(TabSheet_PaintTo)
    MySyscall(pTabSheet_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_RemoveControl)
void
TabSheet_RemoveControl(TTabSheet AObj, TControl AControl) {
    GET_FUNC_ADDR(TabSheet_RemoveControl)
    MySyscall(pTabSheet_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_Realign)
void
TabSheet_Realign(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_Realign)
    MySyscall(pTabSheet_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_Repaint)
void
TabSheet_Repaint(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_Repaint)
    MySyscall(pTabSheet_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_ScaleBy)
void
TabSheet_ScaleBy(TTabSheet AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(TabSheet_ScaleBy)
    MySyscall(pTabSheet_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_ScrollBy)
void
TabSheet_ScrollBy(TTabSheet AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(TabSheet_ScrollBy)
    MySyscall(pTabSheet_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetBounds)
void
TabSheet_SetBounds(TTabSheet AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(TabSheet_SetBounds)
    MySyscall(pTabSheet_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetFocus)
void
TabSheet_SetFocus(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_SetFocus)
    MySyscall(pTabSheet_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_Update)
void
TabSheet_Update(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_Update)
    MySyscall(pTabSheet_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_BringToFront)
void
TabSheet_BringToFront(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_BringToFront)
    MySyscall(pTabSheet_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_ClientToScreen)
TPoint
TabSheet_ClientToScreen(TTabSheet AObj, TPoint Point) {
    GET_FUNC_ADDR(TabSheet_ClientToScreen)
    TPoint result;
    MySyscall(pTabSheet_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(TabSheet_ClientToParent)
TPoint
TabSheet_ClientToParent(TTabSheet AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(TabSheet_ClientToParent)
    TPoint result;
    MySyscall(pTabSheet_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(TabSheet_Dragging)
BOOL
TabSheet_Dragging(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_Dragging)
    return (BOOL)MySyscall(pTabSheet_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_HasParent)
BOOL
TabSheet_HasParent(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_HasParent)
    return (BOOL)MySyscall(pTabSheet_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_Hide)
void
TabSheet_Hide(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_Hide)
    MySyscall(pTabSheet_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_Perform)
intptr_t
TabSheet_Perform(TTabSheet AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(TabSheet_Perform)
    return (intptr_t)MySyscall(pTabSheet_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_Refresh)
void
TabSheet_Refresh(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_Refresh)
    MySyscall(pTabSheet_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_ScreenToClient)
TPoint
TabSheet_ScreenToClient(TTabSheet AObj, TPoint Point) {
    GET_FUNC_ADDR(TabSheet_ScreenToClient)
    TPoint result;
    MySyscall(pTabSheet_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(TabSheet_ParentToClient)
TPoint
TabSheet_ParentToClient(TTabSheet AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(TabSheet_ParentToClient)
    TPoint result;
    MySyscall(pTabSheet_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(TabSheet_SendToBack)
void
TabSheet_SendToBack(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_SendToBack)
    MySyscall(pTabSheet_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_Show)
void
TabSheet_Show(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_Show)
    MySyscall(pTabSheet_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetTextBuf)
int32_t
TabSheet_GetTextBuf(TTabSheet AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(TabSheet_GetTextBuf)
    return (int32_t)MySyscall(pTabSheet_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetTextLen)
int32_t
TabSheet_GetTextLen(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetTextLen)
    return (int32_t)MySyscall(pTabSheet_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetTextBuf)
void
TabSheet_SetTextBuf(TTabSheet AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(TabSheet_SetTextBuf)
    MySyscall(pTabSheet_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_FindComponent)
TComponent
TabSheet_FindComponent(TTabSheet AObj, CChar char* AName) {
    GET_FUNC_ADDR(TabSheet_FindComponent)
    return (TComponent)MySyscall(pTabSheet_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetNamePath)
char*
TabSheet_GetNamePath(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetNamePath)
    return (char*)MySyscall(pTabSheet_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_Assign)
void
TabSheet_Assign(TTabSheet AObj, TObject Source) {
    GET_FUNC_ADDR(TabSheet_Assign)
    MySyscall(pTabSheet_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_ClassType)
TClass
TabSheet_ClassType(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_ClassType)
    return (TClass)MySyscall(pTabSheet_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_ClassName)
char*
TabSheet_ClassName(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_ClassName)
    return (char*)MySyscall(pTabSheet_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_InstanceSize)
int32_t
TabSheet_InstanceSize(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_InstanceSize)
    return (int32_t)MySyscall(pTabSheet_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_InheritsFrom)
BOOL
TabSheet_InheritsFrom(TTabSheet AObj, TClass AClass) {
    GET_FUNC_ADDR(TabSheet_InheritsFrom)
    return (BOOL)MySyscall(pTabSheet_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_Equals)
BOOL
TabSheet_Equals(TTabSheet AObj, TObject Obj) {
    GET_FUNC_ADDR(TabSheet_Equals)
    return (BOOL)MySyscall(pTabSheet_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetHashCode)
int32_t
TabSheet_GetHashCode(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetHashCode)
    return (int32_t)MySyscall(pTabSheet_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_ToString)
char*
TabSheet_ToString(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_ToString)
    return (char*)MySyscall(pTabSheet_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_AnchorToNeighbour)
void
TabSheet_AnchorToNeighbour(TTabSheet AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(TabSheet_AnchorToNeighbour)
    MySyscall(pTabSheet_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_AnchorParallel)
void
TabSheet_AnchorParallel(TTabSheet AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(TabSheet_AnchorParallel)
    MySyscall(pTabSheet_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_AnchorHorizontalCenterTo)
void
TabSheet_AnchorHorizontalCenterTo(TTabSheet AObj, TControl ASibling) {
    GET_FUNC_ADDR(TabSheet_AnchorHorizontalCenterTo)
    MySyscall(pTabSheet_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_AnchorVerticalCenterTo)
void
TabSheet_AnchorVerticalCenterTo(TTabSheet AObj, TControl ASibling) {
    GET_FUNC_ADDR(TabSheet_AnchorVerticalCenterTo)
    MySyscall(pTabSheet_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_AnchorSame)
void
TabSheet_AnchorSame(TTabSheet AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(TabSheet_AnchorSame)
    MySyscall(pTabSheet_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_AnchorAsAlign)
void
TabSheet_AnchorAsAlign(TTabSheet AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(TabSheet_AnchorAsAlign)
    MySyscall(pTabSheet_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_AnchorClient)
void
TabSheet_AnchorClient(TTabSheet AObj, int32_t ASpace) {
    GET_FUNC_ADDR(TabSheet_AnchorClient)
    MySyscall(pTabSheet_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_ScaleDesignToForm)
int32_t
TabSheet_ScaleDesignToForm(TTabSheet AObj, int32_t ASize) {
    GET_FUNC_ADDR(TabSheet_ScaleDesignToForm)
    return (int32_t)MySyscall(pTabSheet_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_ScaleFormToDesign)
int32_t
TabSheet_ScaleFormToDesign(TTabSheet AObj, int32_t ASize) {
    GET_FUNC_ADDR(TabSheet_ScaleFormToDesign)
    return (int32_t)MySyscall(pTabSheet_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_Scale96ToForm)
int32_t
TabSheet_Scale96ToForm(TTabSheet AObj, int32_t ASize) {
    GET_FUNC_ADDR(TabSheet_Scale96ToForm)
    return (int32_t)MySyscall(pTabSheet_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_ScaleFormTo96)
int32_t
TabSheet_ScaleFormTo96(TTabSheet AObj, int32_t ASize) {
    GET_FUNC_ADDR(TabSheet_ScaleFormTo96)
    return (int32_t)MySyscall(pTabSheet_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_Scale96ToFont)
int32_t
TabSheet_Scale96ToFont(TTabSheet AObj, int32_t ASize) {
    GET_FUNC_ADDR(TabSheet_Scale96ToFont)
    return (int32_t)MySyscall(pTabSheet_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_ScaleFontTo96)
int32_t
TabSheet_ScaleFontTo96(TTabSheet AObj, int32_t ASize) {
    GET_FUNC_ADDR(TabSheet_ScaleFontTo96)
    return (int32_t)MySyscall(pTabSheet_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_ScaleScreenToFont)
int32_t
TabSheet_ScaleScreenToFont(TTabSheet AObj, int32_t ASize) {
    GET_FUNC_ADDR(TabSheet_ScaleScreenToFont)
    return (int32_t)MySyscall(pTabSheet_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_ScaleFontToScreen)
int32_t
TabSheet_ScaleFontToScreen(TTabSheet AObj, int32_t ASize) {
    GET_FUNC_ADDR(TabSheet_ScaleFontToScreen)
    return (int32_t)MySyscall(pTabSheet_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_Scale96ToScreen)
int32_t
TabSheet_Scale96ToScreen(TTabSheet AObj, int32_t ASize) {
    GET_FUNC_ADDR(TabSheet_Scale96ToScreen)
    return (int32_t)MySyscall(pTabSheet_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_ScaleScreenTo96)
int32_t
TabSheet_ScaleScreenTo96(TTabSheet AObj, int32_t ASize) {
    GET_FUNC_ADDR(TabSheet_ScaleScreenTo96)
    return (int32_t)MySyscall(pTabSheet_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_AutoAdjustLayout)
void
TabSheet_AutoAdjustLayout(TTabSheet AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(TabSheet_AutoAdjustLayout)
    MySyscall(pTabSheet_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_FixDesignFontsPPI)
void
TabSheet_FixDesignFontsPPI(TTabSheet AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(TabSheet_FixDesignFontsPPI)
    MySyscall(pTabSheet_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_ScaleFontsPPI)
void
TabSheet_ScaleFontsPPI(TTabSheet AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(TabSheet_ScaleFontsPPI)
    MySyscall(pTabSheet_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetPageControl)
TPageControl
TabSheet_GetPageControl(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetPageControl)
    return (TPageControl)MySyscall(pTabSheet_GetPageControl, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetPageControl)
void
TabSheet_SetPageControl(TTabSheet AObj, TPageControl AValue) {
    GET_FUNC_ADDR(TabSheet_SetPageControl)
    MySyscall(pTabSheet_SetPageControl, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetTabIndex)
int32_t
TabSheet_GetTabIndex(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetTabIndex)
    return (int32_t)MySyscall(pTabSheet_GetTabIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetBorderWidth)
int32_t
TabSheet_GetBorderWidth(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetBorderWidth)
    return (int32_t)MySyscall(pTabSheet_GetBorderWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetBorderWidth)
void
TabSheet_SetBorderWidth(TTabSheet AObj, int32_t AValue) {
    GET_FUNC_ADDR(TabSheet_SetBorderWidth)
    MySyscall(pTabSheet_SetBorderWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetCaption)
char*
TabSheet_GetCaption(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetCaption)
    return (char*)MySyscall(pTabSheet_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetCaption)
void
TabSheet_SetCaption(TTabSheet AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TabSheet_SetCaption)
    MySyscall(pTabSheet_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetDoubleBuffered)
BOOL
TabSheet_GetDoubleBuffered(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetDoubleBuffered)
    return (BOOL)MySyscall(pTabSheet_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetDoubleBuffered)
void
TabSheet_SetDoubleBuffered(TTabSheet AObj, BOOL AValue) {
    GET_FUNC_ADDR(TabSheet_SetDoubleBuffered)
    MySyscall(pTabSheet_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetEnabled)
BOOL
TabSheet_GetEnabled(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetEnabled)
    return (BOOL)MySyscall(pTabSheet_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetEnabled)
void
TabSheet_SetEnabled(TTabSheet AObj, BOOL AValue) {
    GET_FUNC_ADDR(TabSheet_SetEnabled)
    MySyscall(pTabSheet_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetFont)
TFont
TabSheet_GetFont(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetFont)
    return (TFont)MySyscall(pTabSheet_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetFont)
void
TabSheet_SetFont(TTabSheet AObj, TFont AValue) {
    GET_FUNC_ADDR(TabSheet_SetFont)
    MySyscall(pTabSheet_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetHeight)
int32_t
TabSheet_GetHeight(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetHeight)
    return (int32_t)MySyscall(pTabSheet_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetHeight)
void
TabSheet_SetHeight(TTabSheet AObj, int32_t AValue) {
    GET_FUNC_ADDR(TabSheet_SetHeight)
    MySyscall(pTabSheet_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetImageIndex)
int32_t
TabSheet_GetImageIndex(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetImageIndex)
    return (int32_t)MySyscall(pTabSheet_GetImageIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetImageIndex)
void
TabSheet_SetImageIndex(TTabSheet AObj, int32_t AValue) {
    GET_FUNC_ADDR(TabSheet_SetImageIndex)
    MySyscall(pTabSheet_SetImageIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetLeft)
int32_t
TabSheet_GetLeft(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetLeft)
    return (int32_t)MySyscall(pTabSheet_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetLeft)
void
TabSheet_SetLeft(TTabSheet AObj, int32_t AValue) {
    GET_FUNC_ADDR(TabSheet_SetLeft)
    MySyscall(pTabSheet_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetConstraints)
TSizeConstraints
TabSheet_GetConstraints(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetConstraints)
    return (TSizeConstraints)MySyscall(pTabSheet_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetConstraints)
void
TabSheet_SetConstraints(TTabSheet AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(TabSheet_SetConstraints)
    MySyscall(pTabSheet_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetPageIndex)
int32_t
TabSheet_GetPageIndex(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetPageIndex)
    return (int32_t)MySyscall(pTabSheet_GetPageIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetPageIndex)
void
TabSheet_SetPageIndex(TTabSheet AObj, int32_t AValue) {
    GET_FUNC_ADDR(TabSheet_SetPageIndex)
    MySyscall(pTabSheet_SetPageIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetParentDoubleBuffered)
BOOL
TabSheet_GetParentDoubleBuffered(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pTabSheet_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetParentDoubleBuffered)
void
TabSheet_SetParentDoubleBuffered(TTabSheet AObj, BOOL AValue) {
    GET_FUNC_ADDR(TabSheet_SetParentDoubleBuffered)
    MySyscall(pTabSheet_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetParentFont)
BOOL
TabSheet_GetParentFont(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetParentFont)
    return (BOOL)MySyscall(pTabSheet_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetParentFont)
void
TabSheet_SetParentFont(TTabSheet AObj, BOOL AValue) {
    GET_FUNC_ADDR(TabSheet_SetParentFont)
    MySyscall(pTabSheet_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetParentShowHint)
BOOL
TabSheet_GetParentShowHint(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetParentShowHint)
    return (BOOL)MySyscall(pTabSheet_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetParentShowHint)
void
TabSheet_SetParentShowHint(TTabSheet AObj, BOOL AValue) {
    GET_FUNC_ADDR(TabSheet_SetParentShowHint)
    MySyscall(pTabSheet_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetPopupMenu)
TPopupMenu
TabSheet_GetPopupMenu(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetPopupMenu)
    return (TPopupMenu)MySyscall(pTabSheet_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetPopupMenu)
void
TabSheet_SetPopupMenu(TTabSheet AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(TabSheet_SetPopupMenu)
    MySyscall(pTabSheet_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetShowHint)
BOOL
TabSheet_GetShowHint(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetShowHint)
    return (BOOL)MySyscall(pTabSheet_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetShowHint)
void
TabSheet_SetShowHint(TTabSheet AObj, BOOL AValue) {
    GET_FUNC_ADDR(TabSheet_SetShowHint)
    MySyscall(pTabSheet_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetTabVisible)
BOOL
TabSheet_GetTabVisible(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetTabVisible)
    return (BOOL)MySyscall(pTabSheet_GetTabVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetTabVisible)
void
TabSheet_SetTabVisible(TTabSheet AObj, BOOL AValue) {
    GET_FUNC_ADDR(TabSheet_SetTabVisible)
    MySyscall(pTabSheet_SetTabVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetTop)
int32_t
TabSheet_GetTop(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetTop)
    return (int32_t)MySyscall(pTabSheet_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetTop)
void
TabSheet_SetTop(TTabSheet AObj, int32_t AValue) {
    GET_FUNC_ADDR(TabSheet_SetTop)
    MySyscall(pTabSheet_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetVisible)
BOOL
TabSheet_GetVisible(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetVisible)
    return (BOOL)MySyscall(pTabSheet_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetVisible)
void
TabSheet_SetVisible(TTabSheet AObj, BOOL AValue) {
    GET_FUNC_ADDR(TabSheet_SetVisible)
    MySyscall(pTabSheet_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetWidth)
int32_t
TabSheet_GetWidth(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetWidth)
    return (int32_t)MySyscall(pTabSheet_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetWidth)
void
TabSheet_SetWidth(TTabSheet AObj, int32_t AValue) {
    GET_FUNC_ADDR(TabSheet_SetWidth)
    MySyscall(pTabSheet_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetOnContextPopup)
void
TabSheet_SetOnContextPopup(TTabSheet AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(TabSheet_SetOnContextPopup)
    MySyscall(pTabSheet_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetOnDragDrop)
void
TabSheet_SetOnDragDrop(TTabSheet AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(TabSheet_SetOnDragDrop)
    MySyscall(pTabSheet_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetOnDragOver)
void
TabSheet_SetOnDragOver(TTabSheet AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(TabSheet_SetOnDragOver)
    MySyscall(pTabSheet_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetOnEndDrag)
void
TabSheet_SetOnEndDrag(TTabSheet AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(TabSheet_SetOnEndDrag)
    MySyscall(pTabSheet_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetOnEnter)
void
TabSheet_SetOnEnter(TTabSheet AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(TabSheet_SetOnEnter)
    MySyscall(pTabSheet_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetOnExit)
void
TabSheet_SetOnExit(TTabSheet AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(TabSheet_SetOnExit)
    MySyscall(pTabSheet_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetOnHide)
void
TabSheet_SetOnHide(TTabSheet AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(TabSheet_SetOnHide)
    MySyscall(pTabSheet_SetOnHide, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetOnMouseDown)
void
TabSheet_SetOnMouseDown(TTabSheet AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(TabSheet_SetOnMouseDown)
    MySyscall(pTabSheet_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetOnMouseEnter)
void
TabSheet_SetOnMouseEnter(TTabSheet AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(TabSheet_SetOnMouseEnter)
    MySyscall(pTabSheet_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetOnMouseLeave)
void
TabSheet_SetOnMouseLeave(TTabSheet AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(TabSheet_SetOnMouseLeave)
    MySyscall(pTabSheet_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetOnMouseMove)
void
TabSheet_SetOnMouseMove(TTabSheet AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(TabSheet_SetOnMouseMove)
    MySyscall(pTabSheet_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetOnMouseUp)
void
TabSheet_SetOnMouseUp(TTabSheet AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(TabSheet_SetOnMouseUp)
    MySyscall(pTabSheet_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetOnResize)
void
TabSheet_SetOnResize(TTabSheet AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(TabSheet_SetOnResize)
    MySyscall(pTabSheet_SetOnResize, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetOnShow)
void
TabSheet_SetOnShow(TTabSheet AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(TabSheet_SetOnShow)
    MySyscall(pTabSheet_SetOnShow, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetDockClientCount)
int32_t
TabSheet_GetDockClientCount(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetDockClientCount)
    return (int32_t)MySyscall(pTabSheet_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetDockSite)
BOOL
TabSheet_GetDockSite(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetDockSite)
    return (BOOL)MySyscall(pTabSheet_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetDockSite)
void
TabSheet_SetDockSite(TTabSheet AObj, BOOL AValue) {
    GET_FUNC_ADDR(TabSheet_SetDockSite)
    MySyscall(pTabSheet_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetMouseInClient)
BOOL
TabSheet_GetMouseInClient(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetMouseInClient)
    return (BOOL)MySyscall(pTabSheet_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetVisibleDockClientCount)
int32_t
TabSheet_GetVisibleDockClientCount(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pTabSheet_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetBrush)
TBrush
TabSheet_GetBrush(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetBrush)
    return (TBrush)MySyscall(pTabSheet_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetControlCount)
int32_t
TabSheet_GetControlCount(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetControlCount)
    return (int32_t)MySyscall(pTabSheet_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetHandle)
HWND
TabSheet_GetHandle(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetHandle)
    return (HWND)MySyscall(pTabSheet_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetParentWindow)
HWND
TabSheet_GetParentWindow(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetParentWindow)
    return (HWND)MySyscall(pTabSheet_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetParentWindow)
void
TabSheet_SetParentWindow(TTabSheet AObj, HWND AValue) {
    GET_FUNC_ADDR(TabSheet_SetParentWindow)
    MySyscall(pTabSheet_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetShowing)
BOOL
TabSheet_GetShowing(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetShowing)
    return (BOOL)MySyscall(pTabSheet_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetTabOrder)
TTabOrder
TabSheet_GetTabOrder(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetTabOrder)
    return (TTabOrder)MySyscall(pTabSheet_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetTabOrder)
void
TabSheet_SetTabOrder(TTabSheet AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(TabSheet_SetTabOrder)
    MySyscall(pTabSheet_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetTabStop)
BOOL
TabSheet_GetTabStop(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetTabStop)
    return (BOOL)MySyscall(pTabSheet_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetTabStop)
void
TabSheet_SetTabStop(TTabSheet AObj, BOOL AValue) {
    GET_FUNC_ADDR(TabSheet_SetTabStop)
    MySyscall(pTabSheet_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetUseDockManager)
BOOL
TabSheet_GetUseDockManager(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetUseDockManager)
    return (BOOL)MySyscall(pTabSheet_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetUseDockManager)
void
TabSheet_SetUseDockManager(TTabSheet AObj, BOOL AValue) {
    GET_FUNC_ADDR(TabSheet_SetUseDockManager)
    MySyscall(pTabSheet_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetAction)
TAction
TabSheet_GetAction(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetAction)
    return (TAction)MySyscall(pTabSheet_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetAction)
void
TabSheet_SetAction(TTabSheet AObj, TAction AValue) {
    GET_FUNC_ADDR(TabSheet_SetAction)
    MySyscall(pTabSheet_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetAlign)
TAlign
TabSheet_GetAlign(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetAlign)
    return (TAlign)MySyscall(pTabSheet_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetAlign)
void
TabSheet_SetAlign(TTabSheet AObj, TAlign AValue) {
    GET_FUNC_ADDR(TabSheet_SetAlign)
    MySyscall(pTabSheet_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetAnchors)
TAnchors
TabSheet_GetAnchors(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetAnchors)
    return (TAnchors)MySyscall(pTabSheet_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetAnchors)
void
TabSheet_SetAnchors(TTabSheet AObj, TAnchors AValue) {
    GET_FUNC_ADDR(TabSheet_SetAnchors)
    MySyscall(pTabSheet_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetBiDiMode)
TBiDiMode
TabSheet_GetBiDiMode(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetBiDiMode)
    return (TBiDiMode)MySyscall(pTabSheet_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetBiDiMode)
void
TabSheet_SetBiDiMode(TTabSheet AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(TabSheet_SetBiDiMode)
    MySyscall(pTabSheet_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetBoundsRect)
TRect
TabSheet_GetBoundsRect(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetBoundsRect)
    TRect result;
    MySyscall(pTabSheet_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(TabSheet_SetBoundsRect)
void
TabSheet_SetBoundsRect(TTabSheet AObj, TRect AValue) {
    GET_FUNC_ADDR(TabSheet_SetBoundsRect)
    MySyscall(pTabSheet_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetClientHeight)
int32_t
TabSheet_GetClientHeight(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetClientHeight)
    return (int32_t)MySyscall(pTabSheet_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetClientHeight)
void
TabSheet_SetClientHeight(TTabSheet AObj, int32_t AValue) {
    GET_FUNC_ADDR(TabSheet_SetClientHeight)
    MySyscall(pTabSheet_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetClientOrigin)
TPoint
TabSheet_GetClientOrigin(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetClientOrigin)
    TPoint result;
    MySyscall(pTabSheet_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(TabSheet_GetClientRect)
TRect
TabSheet_GetClientRect(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetClientRect)
    TRect result;
    MySyscall(pTabSheet_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(TabSheet_GetClientWidth)
int32_t
TabSheet_GetClientWidth(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetClientWidth)
    return (int32_t)MySyscall(pTabSheet_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetClientWidth)
void
TabSheet_SetClientWidth(TTabSheet AObj, int32_t AValue) {
    GET_FUNC_ADDR(TabSheet_SetClientWidth)
    MySyscall(pTabSheet_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetControlState)
TControlState
TabSheet_GetControlState(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetControlState)
    return (TControlState)MySyscall(pTabSheet_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetControlState)
void
TabSheet_SetControlState(TTabSheet AObj, TControlState AValue) {
    GET_FUNC_ADDR(TabSheet_SetControlState)
    MySyscall(pTabSheet_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetControlStyle)
TControlStyle
TabSheet_GetControlStyle(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetControlStyle)
    return (TControlStyle)MySyscall(pTabSheet_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetControlStyle)
void
TabSheet_SetControlStyle(TTabSheet AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(TabSheet_SetControlStyle)
    MySyscall(pTabSheet_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetFloating)
BOOL
TabSheet_GetFloating(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetFloating)
    return (BOOL)MySyscall(pTabSheet_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetParent)
TWinControl
TabSheet_GetParent(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetParent)
    return (TWinControl)MySyscall(pTabSheet_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetParent)
void
TabSheet_SetParent(TTabSheet AObj, TWinControl AValue) {
    GET_FUNC_ADDR(TabSheet_SetParent)
    MySyscall(pTabSheet_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetCursor)
TCursor
TabSheet_GetCursor(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetCursor)
    return (TCursor)MySyscall(pTabSheet_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetCursor)
void
TabSheet_SetCursor(TTabSheet AObj, TCursor AValue) {
    GET_FUNC_ADDR(TabSheet_SetCursor)
    MySyscall(pTabSheet_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetHint)
char*
TabSheet_GetHint(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetHint)
    return (char*)MySyscall(pTabSheet_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetHint)
void
TabSheet_SetHint(TTabSheet AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TabSheet_SetHint)
    MySyscall(pTabSheet_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetComponentCount)
int32_t
TabSheet_GetComponentCount(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetComponentCount)
    return (int32_t)MySyscall(pTabSheet_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetComponentIndex)
int32_t
TabSheet_GetComponentIndex(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetComponentIndex)
    return (int32_t)MySyscall(pTabSheet_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetComponentIndex)
void
TabSheet_SetComponentIndex(TTabSheet AObj, int32_t AValue) {
    GET_FUNC_ADDR(TabSheet_SetComponentIndex)
    MySyscall(pTabSheet_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetOwner)
TComponent
TabSheet_GetOwner(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetOwner)
    return (TComponent)MySyscall(pTabSheet_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetName)
char*
TabSheet_GetName(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetName)
    return (char*)MySyscall(pTabSheet_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetName)
void
TabSheet_SetName(TTabSheet AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TabSheet_SetName)
    MySyscall(pTabSheet_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetTag)
intptr_t
TabSheet_GetTag(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetTag)
    return (intptr_t)MySyscall(pTabSheet_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetTag)
void
TabSheet_SetTag(TTabSheet AObj, intptr_t AValue) {
    GET_FUNC_ADDR(TabSheet_SetTag)
    MySyscall(pTabSheet_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetAnchorSideLeft)
TAnchorSide
TabSheet_GetAnchorSideLeft(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pTabSheet_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetAnchorSideLeft)
void
TabSheet_SetAnchorSideLeft(TTabSheet AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(TabSheet_SetAnchorSideLeft)
    MySyscall(pTabSheet_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetAnchorSideTop)
TAnchorSide
TabSheet_GetAnchorSideTop(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pTabSheet_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetAnchorSideTop)
void
TabSheet_SetAnchorSideTop(TTabSheet AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(TabSheet_SetAnchorSideTop)
    MySyscall(pTabSheet_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetAnchorSideRight)
TAnchorSide
TabSheet_GetAnchorSideRight(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pTabSheet_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetAnchorSideRight)
void
TabSheet_SetAnchorSideRight(TTabSheet AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(TabSheet_SetAnchorSideRight)
    MySyscall(pTabSheet_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetAnchorSideBottom)
TAnchorSide
TabSheet_GetAnchorSideBottom(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pTabSheet_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetAnchorSideBottom)
void
TabSheet_SetAnchorSideBottom(TTabSheet AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(TabSheet_SetAnchorSideBottom)
    MySyscall(pTabSheet_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetChildSizing)
TControlChildSizing
TabSheet_GetChildSizing(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetChildSizing)
    return (TControlChildSizing)MySyscall(pTabSheet_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetChildSizing)
void
TabSheet_SetChildSizing(TTabSheet AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(TabSheet_SetChildSizing)
    MySyscall(pTabSheet_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetBorderSpacing)
TControlBorderSpacing
TabSheet_GetBorderSpacing(TTabSheet AObj) {
    GET_FUNC_ADDR(TabSheet_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pTabSheet_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_SetBorderSpacing)
void
TabSheet_SetBorderSpacing(TTabSheet AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(TabSheet_SetBorderSpacing)
    MySyscall(pTabSheet_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetDockClients)
TControl
TabSheet_GetDockClients(TTabSheet AObj, int32_t Index) {
    GET_FUNC_ADDR(TabSheet_GetDockClients)
    return (TControl)MySyscall(pTabSheet_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetControls)
TControl
TabSheet_GetControls(TTabSheet AObj, int32_t Index) {
    GET_FUNC_ADDR(TabSheet_GetControls)
    return (TControl)MySyscall(pTabSheet_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetComponents)
TComponent
TabSheet_GetComponents(TTabSheet AObj, int32_t AIndex) {
    GET_FUNC_ADDR(TabSheet_GetComponents)
    return (TComponent)MySyscall(pTabSheet_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_GetAnchorSide)
TAnchorSide
TabSheet_GetAnchorSide(TTabSheet AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(TabSheet_GetAnchorSide)
    return (TAnchorSide)MySyscall(pTabSheet_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TabSheet_StaticClassType)
TClass
TabSheet_StaticClassType() {
    GET_FUNC_ADDR(TabSheet_StaticClassType)
    return (TClass)MySyscall(pTabSheet_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TButton-------------------

DEFINE_FUNC_PTR(Button_Create)
TButton
Button_Create(TComponent AOwner) {
    GET_FUNC_ADDR(Button_Create)
    return (TButton)MySyscall(pButton_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_Free)
void
Button_Free(TButton AObj) {
    GET_FUNC_ADDR(Button_Free)
    MySyscall(pButton_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_Click)
void
Button_Click(TButton AObj) {
    GET_FUNC_ADDR(Button_Click)
    MySyscall(pButton_Click, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_CanFocus)
BOOL
Button_CanFocus(TButton AObj) {
    GET_FUNC_ADDR(Button_CanFocus)
    return (BOOL)MySyscall(pButton_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_ContainsControl)
BOOL
Button_ContainsControl(TButton AObj, TControl Control) {
    GET_FUNC_ADDR(Button_ContainsControl)
    return (BOOL)MySyscall(pButton_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_ControlAtPos)
TControl
Button_ControlAtPos(TButton AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(Button_ControlAtPos)
    return (TControl)MySyscall(pButton_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_DisableAlign)
void
Button_DisableAlign(TButton AObj) {
    GET_FUNC_ADDR(Button_DisableAlign)
    MySyscall(pButton_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_EnableAlign)
void
Button_EnableAlign(TButton AObj) {
    GET_FUNC_ADDR(Button_EnableAlign)
    MySyscall(pButton_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_FindChildControl)
TControl
Button_FindChildControl(TButton AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(Button_FindChildControl)
    return (TControl)MySyscall(pButton_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_FlipChildren)
void
Button_FlipChildren(TButton AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(Button_FlipChildren)
    MySyscall(pButton_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_Focused)
BOOL
Button_Focused(TButton AObj) {
    GET_FUNC_ADDR(Button_Focused)
    return (BOOL)MySyscall(pButton_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_HandleAllocated)
BOOL
Button_HandleAllocated(TButton AObj) {
    GET_FUNC_ADDR(Button_HandleAllocated)
    return (BOOL)MySyscall(pButton_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_InsertControl)
void
Button_InsertControl(TButton AObj, TControl AControl) {
    GET_FUNC_ADDR(Button_InsertControl)
    MySyscall(pButton_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_Invalidate)
void
Button_Invalidate(TButton AObj) {
    GET_FUNC_ADDR(Button_Invalidate)
    MySyscall(pButton_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_PaintTo)
void
Button_PaintTo(TButton AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(Button_PaintTo)
    MySyscall(pButton_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_RemoveControl)
void
Button_RemoveControl(TButton AObj, TControl AControl) {
    GET_FUNC_ADDR(Button_RemoveControl)
    MySyscall(pButton_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_Realign)
void
Button_Realign(TButton AObj) {
    GET_FUNC_ADDR(Button_Realign)
    MySyscall(pButton_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_Repaint)
void
Button_Repaint(TButton AObj) {
    GET_FUNC_ADDR(Button_Repaint)
    MySyscall(pButton_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_ScaleBy)
void
Button_ScaleBy(TButton AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(Button_ScaleBy)
    MySyscall(pButton_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_ScrollBy)
void
Button_ScrollBy(TButton AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(Button_ScrollBy)
    MySyscall(pButton_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetBounds)
void
Button_SetBounds(TButton AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(Button_SetBounds)
    MySyscall(pButton_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetFocus)
void
Button_SetFocus(TButton AObj) {
    GET_FUNC_ADDR(Button_SetFocus)
    MySyscall(pButton_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_Update)
void
Button_Update(TButton AObj) {
    GET_FUNC_ADDR(Button_Update)
    MySyscall(pButton_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_BringToFront)
void
Button_BringToFront(TButton AObj) {
    GET_FUNC_ADDR(Button_BringToFront)
    MySyscall(pButton_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_ClientToScreen)
TPoint
Button_ClientToScreen(TButton AObj, TPoint Point) {
    GET_FUNC_ADDR(Button_ClientToScreen)
    TPoint result;
    MySyscall(pButton_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Button_ClientToParent)
TPoint
Button_ClientToParent(TButton AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Button_ClientToParent)
    TPoint result;
    MySyscall(pButton_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Button_Dragging)
BOOL
Button_Dragging(TButton AObj) {
    GET_FUNC_ADDR(Button_Dragging)
    return (BOOL)MySyscall(pButton_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_HasParent)
BOOL
Button_HasParent(TButton AObj) {
    GET_FUNC_ADDR(Button_HasParent)
    return (BOOL)MySyscall(pButton_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_Hide)
void
Button_Hide(TButton AObj) {
    GET_FUNC_ADDR(Button_Hide)
    MySyscall(pButton_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_Perform)
intptr_t
Button_Perform(TButton AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(Button_Perform)
    return (intptr_t)MySyscall(pButton_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_Refresh)
void
Button_Refresh(TButton AObj) {
    GET_FUNC_ADDR(Button_Refresh)
    MySyscall(pButton_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_ScreenToClient)
TPoint
Button_ScreenToClient(TButton AObj, TPoint Point) {
    GET_FUNC_ADDR(Button_ScreenToClient)
    TPoint result;
    MySyscall(pButton_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Button_ParentToClient)
TPoint
Button_ParentToClient(TButton AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Button_ParentToClient)
    TPoint result;
    MySyscall(pButton_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Button_SendToBack)
void
Button_SendToBack(TButton AObj) {
    GET_FUNC_ADDR(Button_SendToBack)
    MySyscall(pButton_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_Show)
void
Button_Show(TButton AObj) {
    GET_FUNC_ADDR(Button_Show)
    MySyscall(pButton_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetTextBuf)
int32_t
Button_GetTextBuf(TButton AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(Button_GetTextBuf)
    return (int32_t)MySyscall(pButton_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetTextLen)
int32_t
Button_GetTextLen(TButton AObj) {
    GET_FUNC_ADDR(Button_GetTextLen)
    return (int32_t)MySyscall(pButton_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetTextBuf)
void
Button_SetTextBuf(TButton AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(Button_SetTextBuf)
    MySyscall(pButton_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_FindComponent)
TComponent
Button_FindComponent(TButton AObj, CChar char* AName) {
    GET_FUNC_ADDR(Button_FindComponent)
    return (TComponent)MySyscall(pButton_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetNamePath)
char*
Button_GetNamePath(TButton AObj) {
    GET_FUNC_ADDR(Button_GetNamePath)
    return (char*)MySyscall(pButton_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_Assign)
void
Button_Assign(TButton AObj, TObject Source) {
    GET_FUNC_ADDR(Button_Assign)
    MySyscall(pButton_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_ClassType)
TClass
Button_ClassType(TButton AObj) {
    GET_FUNC_ADDR(Button_ClassType)
    return (TClass)MySyscall(pButton_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_ClassName)
char*
Button_ClassName(TButton AObj) {
    GET_FUNC_ADDR(Button_ClassName)
    return (char*)MySyscall(pButton_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_InstanceSize)
int32_t
Button_InstanceSize(TButton AObj) {
    GET_FUNC_ADDR(Button_InstanceSize)
    return (int32_t)MySyscall(pButton_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_InheritsFrom)
BOOL
Button_InheritsFrom(TButton AObj, TClass AClass) {
    GET_FUNC_ADDR(Button_InheritsFrom)
    return (BOOL)MySyscall(pButton_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_Equals)
BOOL
Button_Equals(TButton AObj, TObject Obj) {
    GET_FUNC_ADDR(Button_Equals)
    return (BOOL)MySyscall(pButton_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetHashCode)
int32_t
Button_GetHashCode(TButton AObj) {
    GET_FUNC_ADDR(Button_GetHashCode)
    return (int32_t)MySyscall(pButton_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_ToString)
char*
Button_ToString(TButton AObj) {
    GET_FUNC_ADDR(Button_ToString)
    return (char*)MySyscall(pButton_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_AnchorToNeighbour)
void
Button_AnchorToNeighbour(TButton AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Button_AnchorToNeighbour)
    MySyscall(pButton_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_AnchorParallel)
void
Button_AnchorParallel(TButton AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Button_AnchorParallel)
    MySyscall(pButton_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_AnchorHorizontalCenterTo)
void
Button_AnchorHorizontalCenterTo(TButton AObj, TControl ASibling) {
    GET_FUNC_ADDR(Button_AnchorHorizontalCenterTo)
    MySyscall(pButton_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_AnchorVerticalCenterTo)
void
Button_AnchorVerticalCenterTo(TButton AObj, TControl ASibling) {
    GET_FUNC_ADDR(Button_AnchorVerticalCenterTo)
    MySyscall(pButton_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_AnchorSame)
void
Button_AnchorSame(TButton AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(Button_AnchorSame)
    MySyscall(pButton_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_AnchorAsAlign)
void
Button_AnchorAsAlign(TButton AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(Button_AnchorAsAlign)
    MySyscall(pButton_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_AnchorClient)
void
Button_AnchorClient(TButton AObj, int32_t ASpace) {
    GET_FUNC_ADDR(Button_AnchorClient)
    MySyscall(pButton_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_ScaleDesignToForm)
int32_t
Button_ScaleDesignToForm(TButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(Button_ScaleDesignToForm)
    return (int32_t)MySyscall(pButton_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_ScaleFormToDesign)
int32_t
Button_ScaleFormToDesign(TButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(Button_ScaleFormToDesign)
    return (int32_t)MySyscall(pButton_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_Scale96ToForm)
int32_t
Button_Scale96ToForm(TButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(Button_Scale96ToForm)
    return (int32_t)MySyscall(pButton_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_ScaleFormTo96)
int32_t
Button_ScaleFormTo96(TButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(Button_ScaleFormTo96)
    return (int32_t)MySyscall(pButton_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_Scale96ToFont)
int32_t
Button_Scale96ToFont(TButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(Button_Scale96ToFont)
    return (int32_t)MySyscall(pButton_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_ScaleFontTo96)
int32_t
Button_ScaleFontTo96(TButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(Button_ScaleFontTo96)
    return (int32_t)MySyscall(pButton_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_ScaleScreenToFont)
int32_t
Button_ScaleScreenToFont(TButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(Button_ScaleScreenToFont)
    return (int32_t)MySyscall(pButton_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_ScaleFontToScreen)
int32_t
Button_ScaleFontToScreen(TButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(Button_ScaleFontToScreen)
    return (int32_t)MySyscall(pButton_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_Scale96ToScreen)
int32_t
Button_Scale96ToScreen(TButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(Button_Scale96ToScreen)
    return (int32_t)MySyscall(pButton_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_ScaleScreenTo96)
int32_t
Button_ScaleScreenTo96(TButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(Button_ScaleScreenTo96)
    return (int32_t)MySyscall(pButton_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_AutoAdjustLayout)
void
Button_AutoAdjustLayout(TButton AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(Button_AutoAdjustLayout)
    MySyscall(pButton_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_FixDesignFontsPPI)
void
Button_FixDesignFontsPPI(TButton AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(Button_FixDesignFontsPPI)
    MySyscall(pButton_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_ScaleFontsPPI)
void
Button_ScaleFontsPPI(TButton AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(Button_ScaleFontsPPI)
    MySyscall(pButton_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetAction)
TAction
Button_GetAction(TButton AObj) {
    GET_FUNC_ADDR(Button_GetAction)
    return (TAction)MySyscall(pButton_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetAction)
void
Button_SetAction(TButton AObj, TAction AValue) {
    GET_FUNC_ADDR(Button_SetAction)
    MySyscall(pButton_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetAlign)
TAlign
Button_GetAlign(TButton AObj) {
    GET_FUNC_ADDR(Button_GetAlign)
    return (TAlign)MySyscall(pButton_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetAlign)
void
Button_SetAlign(TButton AObj, TAlign AValue) {
    GET_FUNC_ADDR(Button_SetAlign)
    MySyscall(pButton_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetAnchors)
TAnchors
Button_GetAnchors(TButton AObj) {
    GET_FUNC_ADDR(Button_GetAnchors)
    return (TAnchors)MySyscall(pButton_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetAnchors)
void
Button_SetAnchors(TButton AObj, TAnchors AValue) {
    GET_FUNC_ADDR(Button_SetAnchors)
    MySyscall(pButton_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetBiDiMode)
TBiDiMode
Button_GetBiDiMode(TButton AObj) {
    GET_FUNC_ADDR(Button_GetBiDiMode)
    return (TBiDiMode)MySyscall(pButton_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetBiDiMode)
void
Button_SetBiDiMode(TButton AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(Button_SetBiDiMode)
    MySyscall(pButton_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetCancel)
BOOL
Button_GetCancel(TButton AObj) {
    GET_FUNC_ADDR(Button_GetCancel)
    return (BOOL)MySyscall(pButton_GetCancel, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetCancel)
void
Button_SetCancel(TButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(Button_SetCancel)
    MySyscall(pButton_SetCancel, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetCaption)
char*
Button_GetCaption(TButton AObj) {
    GET_FUNC_ADDR(Button_GetCaption)
    return (char*)MySyscall(pButton_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetCaption)
void
Button_SetCaption(TButton AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Button_SetCaption)
    MySyscall(pButton_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetConstraints)
TSizeConstraints
Button_GetConstraints(TButton AObj) {
    GET_FUNC_ADDR(Button_GetConstraints)
    return (TSizeConstraints)MySyscall(pButton_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetConstraints)
void
Button_SetConstraints(TButton AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(Button_SetConstraints)
    MySyscall(pButton_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetDefault)
BOOL
Button_GetDefault(TButton AObj) {
    GET_FUNC_ADDR(Button_GetDefault)
    return (BOOL)MySyscall(pButton_GetDefault, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetDefault)
void
Button_SetDefault(TButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(Button_SetDefault)
    MySyscall(pButton_SetDefault, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetDoubleBuffered)
BOOL
Button_GetDoubleBuffered(TButton AObj) {
    GET_FUNC_ADDR(Button_GetDoubleBuffered)
    return (BOOL)MySyscall(pButton_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetDoubleBuffered)
void
Button_SetDoubleBuffered(TButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(Button_SetDoubleBuffered)
    MySyscall(pButton_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetDragCursor)
TCursor
Button_GetDragCursor(TButton AObj) {
    GET_FUNC_ADDR(Button_GetDragCursor)
    return (TCursor)MySyscall(pButton_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetDragCursor)
void
Button_SetDragCursor(TButton AObj, TCursor AValue) {
    GET_FUNC_ADDR(Button_SetDragCursor)
    MySyscall(pButton_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetDragKind)
TDragKind
Button_GetDragKind(TButton AObj) {
    GET_FUNC_ADDR(Button_GetDragKind)
    return (TDragKind)MySyscall(pButton_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetDragKind)
void
Button_SetDragKind(TButton AObj, TDragKind AValue) {
    GET_FUNC_ADDR(Button_SetDragKind)
    MySyscall(pButton_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetDragMode)
TDragMode
Button_GetDragMode(TButton AObj) {
    GET_FUNC_ADDR(Button_GetDragMode)
    return (TDragMode)MySyscall(pButton_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetDragMode)
void
Button_SetDragMode(TButton AObj, TDragMode AValue) {
    GET_FUNC_ADDR(Button_SetDragMode)
    MySyscall(pButton_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetEnabled)
BOOL
Button_GetEnabled(TButton AObj) {
    GET_FUNC_ADDR(Button_GetEnabled)
    return (BOOL)MySyscall(pButton_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetEnabled)
void
Button_SetEnabled(TButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(Button_SetEnabled)
    MySyscall(pButton_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetFont)
TFont
Button_GetFont(TButton AObj) {
    GET_FUNC_ADDR(Button_GetFont)
    return (TFont)MySyscall(pButton_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetFont)
void
Button_SetFont(TButton AObj, TFont AValue) {
    GET_FUNC_ADDR(Button_SetFont)
    MySyscall(pButton_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetModalResult)
TModalResult
Button_GetModalResult(TButton AObj) {
    GET_FUNC_ADDR(Button_GetModalResult)
    return (TModalResult)MySyscall(pButton_GetModalResult, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetModalResult)
void
Button_SetModalResult(TButton AObj, TModalResult AValue) {
    GET_FUNC_ADDR(Button_SetModalResult)
    MySyscall(pButton_SetModalResult, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetParentDoubleBuffered)
BOOL
Button_GetParentDoubleBuffered(TButton AObj) {
    GET_FUNC_ADDR(Button_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pButton_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetParentDoubleBuffered)
void
Button_SetParentDoubleBuffered(TButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(Button_SetParentDoubleBuffered)
    MySyscall(pButton_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetParentFont)
BOOL
Button_GetParentFont(TButton AObj) {
    GET_FUNC_ADDR(Button_GetParentFont)
    return (BOOL)MySyscall(pButton_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetParentFont)
void
Button_SetParentFont(TButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(Button_SetParentFont)
    MySyscall(pButton_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetParentShowHint)
BOOL
Button_GetParentShowHint(TButton AObj) {
    GET_FUNC_ADDR(Button_GetParentShowHint)
    return (BOOL)MySyscall(pButton_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetParentShowHint)
void
Button_SetParentShowHint(TButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(Button_SetParentShowHint)
    MySyscall(pButton_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetPopupMenu)
TPopupMenu
Button_GetPopupMenu(TButton AObj) {
    GET_FUNC_ADDR(Button_GetPopupMenu)
    return (TPopupMenu)MySyscall(pButton_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetPopupMenu)
void
Button_SetPopupMenu(TButton AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(Button_SetPopupMenu)
    MySyscall(pButton_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetShowHint)
BOOL
Button_GetShowHint(TButton AObj) {
    GET_FUNC_ADDR(Button_GetShowHint)
    return (BOOL)MySyscall(pButton_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetShowHint)
void
Button_SetShowHint(TButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(Button_SetShowHint)
    MySyscall(pButton_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetTabOrder)
TTabOrder
Button_GetTabOrder(TButton AObj) {
    GET_FUNC_ADDR(Button_GetTabOrder)
    return (TTabOrder)MySyscall(pButton_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetTabOrder)
void
Button_SetTabOrder(TButton AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(Button_SetTabOrder)
    MySyscall(pButton_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetTabStop)
BOOL
Button_GetTabStop(TButton AObj) {
    GET_FUNC_ADDR(Button_GetTabStop)
    return (BOOL)MySyscall(pButton_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetTabStop)
void
Button_SetTabStop(TButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(Button_SetTabStop)
    MySyscall(pButton_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetVisible)
BOOL
Button_GetVisible(TButton AObj) {
    GET_FUNC_ADDR(Button_GetVisible)
    return (BOOL)MySyscall(pButton_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetVisible)
void
Button_SetVisible(TButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(Button_SetVisible)
    MySyscall(pButton_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetOnClick)
void
Button_SetOnClick(TButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Button_SetOnClick)
    MySyscall(pButton_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetOnContextPopup)
void
Button_SetOnContextPopup(TButton AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(Button_SetOnContextPopup)
    MySyscall(pButton_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetOnDragDrop)
void
Button_SetOnDragDrop(TButton AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(Button_SetOnDragDrop)
    MySyscall(pButton_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetOnDragOver)
void
Button_SetOnDragOver(TButton AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(Button_SetOnDragOver)
    MySyscall(pButton_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetOnEndDrag)
void
Button_SetOnEndDrag(TButton AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(Button_SetOnEndDrag)
    MySyscall(pButton_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetOnEnter)
void
Button_SetOnEnter(TButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Button_SetOnEnter)
    MySyscall(pButton_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetOnExit)
void
Button_SetOnExit(TButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Button_SetOnExit)
    MySyscall(pButton_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetOnKeyDown)
void
Button_SetOnKeyDown(TButton AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(Button_SetOnKeyDown)
    MySyscall(pButton_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetOnKeyPress)
void
Button_SetOnKeyPress(TButton AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(Button_SetOnKeyPress)
    MySyscall(pButton_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetOnKeyUp)
void
Button_SetOnKeyUp(TButton AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(Button_SetOnKeyUp)
    MySyscall(pButton_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetOnMouseDown)
void
Button_SetOnMouseDown(TButton AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(Button_SetOnMouseDown)
    MySyscall(pButton_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetOnMouseEnter)
void
Button_SetOnMouseEnter(TButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Button_SetOnMouseEnter)
    MySyscall(pButton_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetOnMouseLeave)
void
Button_SetOnMouseLeave(TButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Button_SetOnMouseLeave)
    MySyscall(pButton_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetOnMouseMove)
void
Button_SetOnMouseMove(TButton AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(Button_SetOnMouseMove)
    MySyscall(pButton_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetOnMouseUp)
void
Button_SetOnMouseUp(TButton AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(Button_SetOnMouseUp)
    MySyscall(pButton_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetDockClientCount)
int32_t
Button_GetDockClientCount(TButton AObj) {
    GET_FUNC_ADDR(Button_GetDockClientCount)
    return (int32_t)MySyscall(pButton_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetDockSite)
BOOL
Button_GetDockSite(TButton AObj) {
    GET_FUNC_ADDR(Button_GetDockSite)
    return (BOOL)MySyscall(pButton_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetDockSite)
void
Button_SetDockSite(TButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(Button_SetDockSite)
    MySyscall(pButton_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetMouseInClient)
BOOL
Button_GetMouseInClient(TButton AObj) {
    GET_FUNC_ADDR(Button_GetMouseInClient)
    return (BOOL)MySyscall(pButton_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetVisibleDockClientCount)
int32_t
Button_GetVisibleDockClientCount(TButton AObj) {
    GET_FUNC_ADDR(Button_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pButton_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetBrush)
TBrush
Button_GetBrush(TButton AObj) {
    GET_FUNC_ADDR(Button_GetBrush)
    return (TBrush)MySyscall(pButton_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetControlCount)
int32_t
Button_GetControlCount(TButton AObj) {
    GET_FUNC_ADDR(Button_GetControlCount)
    return (int32_t)MySyscall(pButton_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetHandle)
HWND
Button_GetHandle(TButton AObj) {
    GET_FUNC_ADDR(Button_GetHandle)
    return (HWND)MySyscall(pButton_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetParentWindow)
HWND
Button_GetParentWindow(TButton AObj) {
    GET_FUNC_ADDR(Button_GetParentWindow)
    return (HWND)MySyscall(pButton_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetParentWindow)
void
Button_SetParentWindow(TButton AObj, HWND AValue) {
    GET_FUNC_ADDR(Button_SetParentWindow)
    MySyscall(pButton_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetShowing)
BOOL
Button_GetShowing(TButton AObj) {
    GET_FUNC_ADDR(Button_GetShowing)
    return (BOOL)MySyscall(pButton_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetUseDockManager)
BOOL
Button_GetUseDockManager(TButton AObj) {
    GET_FUNC_ADDR(Button_GetUseDockManager)
    return (BOOL)MySyscall(pButton_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetUseDockManager)
void
Button_SetUseDockManager(TButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(Button_SetUseDockManager)
    MySyscall(pButton_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetBoundsRect)
TRect
Button_GetBoundsRect(TButton AObj) {
    GET_FUNC_ADDR(Button_GetBoundsRect)
    TRect result;
    MySyscall(pButton_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Button_SetBoundsRect)
void
Button_SetBoundsRect(TButton AObj, TRect AValue) {
    GET_FUNC_ADDR(Button_SetBoundsRect)
    MySyscall(pButton_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetClientHeight)
int32_t
Button_GetClientHeight(TButton AObj) {
    GET_FUNC_ADDR(Button_GetClientHeight)
    return (int32_t)MySyscall(pButton_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetClientHeight)
void
Button_SetClientHeight(TButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(Button_SetClientHeight)
    MySyscall(pButton_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetClientOrigin)
TPoint
Button_GetClientOrigin(TButton AObj) {
    GET_FUNC_ADDR(Button_GetClientOrigin)
    TPoint result;
    MySyscall(pButton_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Button_GetClientRect)
TRect
Button_GetClientRect(TButton AObj) {
    GET_FUNC_ADDR(Button_GetClientRect)
    TRect result;
    MySyscall(pButton_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Button_GetClientWidth)
int32_t
Button_GetClientWidth(TButton AObj) {
    GET_FUNC_ADDR(Button_GetClientWidth)
    return (int32_t)MySyscall(pButton_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetClientWidth)
void
Button_SetClientWidth(TButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(Button_SetClientWidth)
    MySyscall(pButton_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetControlState)
TControlState
Button_GetControlState(TButton AObj) {
    GET_FUNC_ADDR(Button_GetControlState)
    return (TControlState)MySyscall(pButton_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetControlState)
void
Button_SetControlState(TButton AObj, TControlState AValue) {
    GET_FUNC_ADDR(Button_SetControlState)
    MySyscall(pButton_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetControlStyle)
TControlStyle
Button_GetControlStyle(TButton AObj) {
    GET_FUNC_ADDR(Button_GetControlStyle)
    return (TControlStyle)MySyscall(pButton_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetControlStyle)
void
Button_SetControlStyle(TButton AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(Button_SetControlStyle)
    MySyscall(pButton_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetFloating)
BOOL
Button_GetFloating(TButton AObj) {
    GET_FUNC_ADDR(Button_GetFloating)
    return (BOOL)MySyscall(pButton_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetParent)
TWinControl
Button_GetParent(TButton AObj) {
    GET_FUNC_ADDR(Button_GetParent)
    return (TWinControl)MySyscall(pButton_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetParent)
void
Button_SetParent(TButton AObj, TWinControl AValue) {
    GET_FUNC_ADDR(Button_SetParent)
    MySyscall(pButton_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetLeft)
int32_t
Button_GetLeft(TButton AObj) {
    GET_FUNC_ADDR(Button_GetLeft)
    return (int32_t)MySyscall(pButton_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetLeft)
void
Button_SetLeft(TButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(Button_SetLeft)
    MySyscall(pButton_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetTop)
int32_t
Button_GetTop(TButton AObj) {
    GET_FUNC_ADDR(Button_GetTop)
    return (int32_t)MySyscall(pButton_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetTop)
void
Button_SetTop(TButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(Button_SetTop)
    MySyscall(pButton_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetWidth)
int32_t
Button_GetWidth(TButton AObj) {
    GET_FUNC_ADDR(Button_GetWidth)
    return (int32_t)MySyscall(pButton_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetWidth)
void
Button_SetWidth(TButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(Button_SetWidth)
    MySyscall(pButton_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetHeight)
int32_t
Button_GetHeight(TButton AObj) {
    GET_FUNC_ADDR(Button_GetHeight)
    return (int32_t)MySyscall(pButton_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetHeight)
void
Button_SetHeight(TButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(Button_SetHeight)
    MySyscall(pButton_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetCursor)
TCursor
Button_GetCursor(TButton AObj) {
    GET_FUNC_ADDR(Button_GetCursor)
    return (TCursor)MySyscall(pButton_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetCursor)
void
Button_SetCursor(TButton AObj, TCursor AValue) {
    GET_FUNC_ADDR(Button_SetCursor)
    MySyscall(pButton_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetHint)
char*
Button_GetHint(TButton AObj) {
    GET_FUNC_ADDR(Button_GetHint)
    return (char*)MySyscall(pButton_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetHint)
void
Button_SetHint(TButton AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Button_SetHint)
    MySyscall(pButton_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetComponentCount)
int32_t
Button_GetComponentCount(TButton AObj) {
    GET_FUNC_ADDR(Button_GetComponentCount)
    return (int32_t)MySyscall(pButton_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetComponentIndex)
int32_t
Button_GetComponentIndex(TButton AObj) {
    GET_FUNC_ADDR(Button_GetComponentIndex)
    return (int32_t)MySyscall(pButton_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetComponentIndex)
void
Button_SetComponentIndex(TButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(Button_SetComponentIndex)
    MySyscall(pButton_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetOwner)
TComponent
Button_GetOwner(TButton AObj) {
    GET_FUNC_ADDR(Button_GetOwner)
    return (TComponent)MySyscall(pButton_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetName)
char*
Button_GetName(TButton AObj) {
    GET_FUNC_ADDR(Button_GetName)
    return (char*)MySyscall(pButton_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetName)
void
Button_SetName(TButton AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Button_SetName)
    MySyscall(pButton_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetTag)
intptr_t
Button_GetTag(TButton AObj) {
    GET_FUNC_ADDR(Button_GetTag)
    return (intptr_t)MySyscall(pButton_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetTag)
void
Button_SetTag(TButton AObj, intptr_t AValue) {
    GET_FUNC_ADDR(Button_SetTag)
    MySyscall(pButton_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetAnchorSideLeft)
TAnchorSide
Button_GetAnchorSideLeft(TButton AObj) {
    GET_FUNC_ADDR(Button_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pButton_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetAnchorSideLeft)
void
Button_SetAnchorSideLeft(TButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Button_SetAnchorSideLeft)
    MySyscall(pButton_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetAnchorSideTop)
TAnchorSide
Button_GetAnchorSideTop(TButton AObj) {
    GET_FUNC_ADDR(Button_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pButton_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetAnchorSideTop)
void
Button_SetAnchorSideTop(TButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Button_SetAnchorSideTop)
    MySyscall(pButton_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetAnchorSideRight)
TAnchorSide
Button_GetAnchorSideRight(TButton AObj) {
    GET_FUNC_ADDR(Button_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pButton_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetAnchorSideRight)
void
Button_SetAnchorSideRight(TButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Button_SetAnchorSideRight)
    MySyscall(pButton_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetAnchorSideBottom)
TAnchorSide
Button_GetAnchorSideBottom(TButton AObj) {
    GET_FUNC_ADDR(Button_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pButton_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetAnchorSideBottom)
void
Button_SetAnchorSideBottom(TButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Button_SetAnchorSideBottom)
    MySyscall(pButton_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetChildSizing)
TControlChildSizing
Button_GetChildSizing(TButton AObj) {
    GET_FUNC_ADDR(Button_GetChildSizing)
    return (TControlChildSizing)MySyscall(pButton_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetChildSizing)
void
Button_SetChildSizing(TButton AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(Button_SetChildSizing)
    MySyscall(pButton_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetBorderSpacing)
TControlBorderSpacing
Button_GetBorderSpacing(TButton AObj) {
    GET_FUNC_ADDR(Button_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pButton_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_SetBorderSpacing)
void
Button_SetBorderSpacing(TButton AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(Button_SetBorderSpacing)
    MySyscall(pButton_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetDockClients)
TControl
Button_GetDockClients(TButton AObj, int32_t Index) {
    GET_FUNC_ADDR(Button_GetDockClients)
    return (TControl)MySyscall(pButton_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetControls)
TControl
Button_GetControls(TButton AObj, int32_t Index) {
    GET_FUNC_ADDR(Button_GetControls)
    return (TControl)MySyscall(pButton_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetComponents)
TComponent
Button_GetComponents(TButton AObj, int32_t AIndex) {
    GET_FUNC_ADDR(Button_GetComponents)
    return (TComponent)MySyscall(pButton_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_GetAnchorSide)
TAnchorSide
Button_GetAnchorSide(TButton AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(Button_GetAnchorSide)
    return (TAnchorSide)MySyscall(pButton_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Button_StaticClassType)
TClass
Button_StaticClassType() {
    GET_FUNC_ADDR(Button_StaticClassType)
    return (TClass)MySyscall(pButton_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TEdit-------------------

DEFINE_FUNC_PTR(Edit_Create)
TEdit
Edit_Create(TComponent AOwner) {
    GET_FUNC_ADDR(Edit_Create)
    return (TEdit)MySyscall(pEdit_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_Free)
void
Edit_Free(TEdit AObj) {
    GET_FUNC_ADDR(Edit_Free)
    MySyscall(pEdit_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_Clear)
void
Edit_Clear(TEdit AObj) {
    GET_FUNC_ADDR(Edit_Clear)
    MySyscall(pEdit_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_ClearSelection)
void
Edit_ClearSelection(TEdit AObj) {
    GET_FUNC_ADDR(Edit_ClearSelection)
    MySyscall(pEdit_ClearSelection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_CopyToClipboard)
void
Edit_CopyToClipboard(TEdit AObj) {
    GET_FUNC_ADDR(Edit_CopyToClipboard)
    MySyscall(pEdit_CopyToClipboard, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_CutToClipboard)
void
Edit_CutToClipboard(TEdit AObj) {
    GET_FUNC_ADDR(Edit_CutToClipboard)
    MySyscall(pEdit_CutToClipboard, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_PasteFromClipboard)
void
Edit_PasteFromClipboard(TEdit AObj) {
    GET_FUNC_ADDR(Edit_PasteFromClipboard)
    MySyscall(pEdit_PasteFromClipboard, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_Undo)
void
Edit_Undo(TEdit AObj) {
    GET_FUNC_ADDR(Edit_Undo)
    MySyscall(pEdit_Undo, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SelectAll)
void
Edit_SelectAll(TEdit AObj) {
    GET_FUNC_ADDR(Edit_SelectAll)
    MySyscall(pEdit_SelectAll, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_CanFocus)
BOOL
Edit_CanFocus(TEdit AObj) {
    GET_FUNC_ADDR(Edit_CanFocus)
    return (BOOL)MySyscall(pEdit_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_ContainsControl)
BOOL
Edit_ContainsControl(TEdit AObj, TControl Control) {
    GET_FUNC_ADDR(Edit_ContainsControl)
    return (BOOL)MySyscall(pEdit_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_ControlAtPos)
TControl
Edit_ControlAtPos(TEdit AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(Edit_ControlAtPos)
    return (TControl)MySyscall(pEdit_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_DisableAlign)
void
Edit_DisableAlign(TEdit AObj) {
    GET_FUNC_ADDR(Edit_DisableAlign)
    MySyscall(pEdit_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_EnableAlign)
void
Edit_EnableAlign(TEdit AObj) {
    GET_FUNC_ADDR(Edit_EnableAlign)
    MySyscall(pEdit_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_FindChildControl)
TControl
Edit_FindChildControl(TEdit AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(Edit_FindChildControl)
    return (TControl)MySyscall(pEdit_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_FlipChildren)
void
Edit_FlipChildren(TEdit AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(Edit_FlipChildren)
    MySyscall(pEdit_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_Focused)
BOOL
Edit_Focused(TEdit AObj) {
    GET_FUNC_ADDR(Edit_Focused)
    return (BOOL)MySyscall(pEdit_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_HandleAllocated)
BOOL
Edit_HandleAllocated(TEdit AObj) {
    GET_FUNC_ADDR(Edit_HandleAllocated)
    return (BOOL)MySyscall(pEdit_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_InsertControl)
void
Edit_InsertControl(TEdit AObj, TControl AControl) {
    GET_FUNC_ADDR(Edit_InsertControl)
    MySyscall(pEdit_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_Invalidate)
void
Edit_Invalidate(TEdit AObj) {
    GET_FUNC_ADDR(Edit_Invalidate)
    MySyscall(pEdit_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_PaintTo)
void
Edit_PaintTo(TEdit AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(Edit_PaintTo)
    MySyscall(pEdit_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_RemoveControl)
void
Edit_RemoveControl(TEdit AObj, TControl AControl) {
    GET_FUNC_ADDR(Edit_RemoveControl)
    MySyscall(pEdit_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_Realign)
void
Edit_Realign(TEdit AObj) {
    GET_FUNC_ADDR(Edit_Realign)
    MySyscall(pEdit_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_Repaint)
void
Edit_Repaint(TEdit AObj) {
    GET_FUNC_ADDR(Edit_Repaint)
    MySyscall(pEdit_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_ScaleBy)
void
Edit_ScaleBy(TEdit AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(Edit_ScaleBy)
    MySyscall(pEdit_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_ScrollBy)
void
Edit_ScrollBy(TEdit AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(Edit_ScrollBy)
    MySyscall(pEdit_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetBounds)
void
Edit_SetBounds(TEdit AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(Edit_SetBounds)
    MySyscall(pEdit_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetFocus)
void
Edit_SetFocus(TEdit AObj) {
    GET_FUNC_ADDR(Edit_SetFocus)
    MySyscall(pEdit_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_Update)
void
Edit_Update(TEdit AObj) {
    GET_FUNC_ADDR(Edit_Update)
    MySyscall(pEdit_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_BringToFront)
void
Edit_BringToFront(TEdit AObj) {
    GET_FUNC_ADDR(Edit_BringToFront)
    MySyscall(pEdit_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_ClientToScreen)
TPoint
Edit_ClientToScreen(TEdit AObj, TPoint Point) {
    GET_FUNC_ADDR(Edit_ClientToScreen)
    TPoint result;
    MySyscall(pEdit_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Edit_ClientToParent)
TPoint
Edit_ClientToParent(TEdit AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Edit_ClientToParent)
    TPoint result;
    MySyscall(pEdit_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Edit_Dragging)
BOOL
Edit_Dragging(TEdit AObj) {
    GET_FUNC_ADDR(Edit_Dragging)
    return (BOOL)MySyscall(pEdit_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_HasParent)
BOOL
Edit_HasParent(TEdit AObj) {
    GET_FUNC_ADDR(Edit_HasParent)
    return (BOOL)MySyscall(pEdit_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_Hide)
void
Edit_Hide(TEdit AObj) {
    GET_FUNC_ADDR(Edit_Hide)
    MySyscall(pEdit_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_Perform)
intptr_t
Edit_Perform(TEdit AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(Edit_Perform)
    return (intptr_t)MySyscall(pEdit_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_Refresh)
void
Edit_Refresh(TEdit AObj) {
    GET_FUNC_ADDR(Edit_Refresh)
    MySyscall(pEdit_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_ScreenToClient)
TPoint
Edit_ScreenToClient(TEdit AObj, TPoint Point) {
    GET_FUNC_ADDR(Edit_ScreenToClient)
    TPoint result;
    MySyscall(pEdit_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Edit_ParentToClient)
TPoint
Edit_ParentToClient(TEdit AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Edit_ParentToClient)
    TPoint result;
    MySyscall(pEdit_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Edit_SendToBack)
void
Edit_SendToBack(TEdit AObj) {
    GET_FUNC_ADDR(Edit_SendToBack)
    MySyscall(pEdit_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_Show)
void
Edit_Show(TEdit AObj) {
    GET_FUNC_ADDR(Edit_Show)
    MySyscall(pEdit_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetTextBuf)
int32_t
Edit_GetTextBuf(TEdit AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(Edit_GetTextBuf)
    return (int32_t)MySyscall(pEdit_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetTextLen)
int32_t
Edit_GetTextLen(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetTextLen)
    return (int32_t)MySyscall(pEdit_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetTextBuf)
void
Edit_SetTextBuf(TEdit AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(Edit_SetTextBuf)
    MySyscall(pEdit_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_FindComponent)
TComponent
Edit_FindComponent(TEdit AObj, CChar char* AName) {
    GET_FUNC_ADDR(Edit_FindComponent)
    return (TComponent)MySyscall(pEdit_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetNamePath)
char*
Edit_GetNamePath(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetNamePath)
    return (char*)MySyscall(pEdit_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_Assign)
void
Edit_Assign(TEdit AObj, TObject Source) {
    GET_FUNC_ADDR(Edit_Assign)
    MySyscall(pEdit_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_ClassType)
TClass
Edit_ClassType(TEdit AObj) {
    GET_FUNC_ADDR(Edit_ClassType)
    return (TClass)MySyscall(pEdit_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_ClassName)
char*
Edit_ClassName(TEdit AObj) {
    GET_FUNC_ADDR(Edit_ClassName)
    return (char*)MySyscall(pEdit_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_InstanceSize)
int32_t
Edit_InstanceSize(TEdit AObj) {
    GET_FUNC_ADDR(Edit_InstanceSize)
    return (int32_t)MySyscall(pEdit_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_InheritsFrom)
BOOL
Edit_InheritsFrom(TEdit AObj, TClass AClass) {
    GET_FUNC_ADDR(Edit_InheritsFrom)
    return (BOOL)MySyscall(pEdit_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_Equals)
BOOL
Edit_Equals(TEdit AObj, TObject Obj) {
    GET_FUNC_ADDR(Edit_Equals)
    return (BOOL)MySyscall(pEdit_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetHashCode)
int32_t
Edit_GetHashCode(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetHashCode)
    return (int32_t)MySyscall(pEdit_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_ToString)
char*
Edit_ToString(TEdit AObj) {
    GET_FUNC_ADDR(Edit_ToString)
    return (char*)MySyscall(pEdit_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_AnchorToNeighbour)
void
Edit_AnchorToNeighbour(TEdit AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Edit_AnchorToNeighbour)
    MySyscall(pEdit_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_AnchorParallel)
void
Edit_AnchorParallel(TEdit AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Edit_AnchorParallel)
    MySyscall(pEdit_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_AnchorHorizontalCenterTo)
void
Edit_AnchorHorizontalCenterTo(TEdit AObj, TControl ASibling) {
    GET_FUNC_ADDR(Edit_AnchorHorizontalCenterTo)
    MySyscall(pEdit_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_AnchorVerticalCenterTo)
void
Edit_AnchorVerticalCenterTo(TEdit AObj, TControl ASibling) {
    GET_FUNC_ADDR(Edit_AnchorVerticalCenterTo)
    MySyscall(pEdit_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_AnchorSame)
void
Edit_AnchorSame(TEdit AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(Edit_AnchorSame)
    MySyscall(pEdit_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_AnchorAsAlign)
void
Edit_AnchorAsAlign(TEdit AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(Edit_AnchorAsAlign)
    MySyscall(pEdit_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_AnchorClient)
void
Edit_AnchorClient(TEdit AObj, int32_t ASpace) {
    GET_FUNC_ADDR(Edit_AnchorClient)
    MySyscall(pEdit_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_ScaleDesignToForm)
int32_t
Edit_ScaleDesignToForm(TEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(Edit_ScaleDesignToForm)
    return (int32_t)MySyscall(pEdit_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_ScaleFormToDesign)
int32_t
Edit_ScaleFormToDesign(TEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(Edit_ScaleFormToDesign)
    return (int32_t)MySyscall(pEdit_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_Scale96ToForm)
int32_t
Edit_Scale96ToForm(TEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(Edit_Scale96ToForm)
    return (int32_t)MySyscall(pEdit_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_ScaleFormTo96)
int32_t
Edit_ScaleFormTo96(TEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(Edit_ScaleFormTo96)
    return (int32_t)MySyscall(pEdit_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_Scale96ToFont)
int32_t
Edit_Scale96ToFont(TEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(Edit_Scale96ToFont)
    return (int32_t)MySyscall(pEdit_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_ScaleFontTo96)
int32_t
Edit_ScaleFontTo96(TEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(Edit_ScaleFontTo96)
    return (int32_t)MySyscall(pEdit_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_ScaleScreenToFont)
int32_t
Edit_ScaleScreenToFont(TEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(Edit_ScaleScreenToFont)
    return (int32_t)MySyscall(pEdit_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_ScaleFontToScreen)
int32_t
Edit_ScaleFontToScreen(TEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(Edit_ScaleFontToScreen)
    return (int32_t)MySyscall(pEdit_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_Scale96ToScreen)
int32_t
Edit_Scale96ToScreen(TEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(Edit_Scale96ToScreen)
    return (int32_t)MySyscall(pEdit_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_ScaleScreenTo96)
int32_t
Edit_ScaleScreenTo96(TEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(Edit_ScaleScreenTo96)
    return (int32_t)MySyscall(pEdit_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_AutoAdjustLayout)
void
Edit_AutoAdjustLayout(TEdit AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(Edit_AutoAdjustLayout)
    MySyscall(pEdit_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_FixDesignFontsPPI)
void
Edit_FixDesignFontsPPI(TEdit AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(Edit_FixDesignFontsPPI)
    MySyscall(pEdit_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_ScaleFontsPPI)
void
Edit_ScaleFontsPPI(TEdit AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(Edit_ScaleFontsPPI)
    MySyscall(pEdit_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetAlign)
TAlign
Edit_GetAlign(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetAlign)
    return (TAlign)MySyscall(pEdit_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetAlign)
void
Edit_SetAlign(TEdit AObj, TAlign AValue) {
    GET_FUNC_ADDR(Edit_SetAlign)
    MySyscall(pEdit_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetAlignment)
TAlignment
Edit_GetAlignment(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetAlignment)
    return (TAlignment)MySyscall(pEdit_GetAlignment, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetAlignment)
void
Edit_SetAlignment(TEdit AObj, TAlignment AValue) {
    GET_FUNC_ADDR(Edit_SetAlignment)
    MySyscall(pEdit_SetAlignment, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetAnchors)
TAnchors
Edit_GetAnchors(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetAnchors)
    return (TAnchors)MySyscall(pEdit_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetAnchors)
void
Edit_SetAnchors(TEdit AObj, TAnchors AValue) {
    GET_FUNC_ADDR(Edit_SetAnchors)
    MySyscall(pEdit_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetAutoSelect)
BOOL
Edit_GetAutoSelect(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetAutoSelect)
    return (BOOL)MySyscall(pEdit_GetAutoSelect, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetAutoSelect)
void
Edit_SetAutoSelect(TEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(Edit_SetAutoSelect)
    MySyscall(pEdit_SetAutoSelect, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetAutoSize)
BOOL
Edit_GetAutoSize(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetAutoSize)
    return (BOOL)MySyscall(pEdit_GetAutoSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetAutoSize)
void
Edit_SetAutoSize(TEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(Edit_SetAutoSize)
    MySyscall(pEdit_SetAutoSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetBiDiMode)
TBiDiMode
Edit_GetBiDiMode(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetBiDiMode)
    return (TBiDiMode)MySyscall(pEdit_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetBiDiMode)
void
Edit_SetBiDiMode(TEdit AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(Edit_SetBiDiMode)
    MySyscall(pEdit_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetBorderStyle)
TBorderStyle
Edit_GetBorderStyle(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetBorderStyle)
    return (TBorderStyle)MySyscall(pEdit_GetBorderStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetBorderStyle)
void
Edit_SetBorderStyle(TEdit AObj, TBorderStyle AValue) {
    GET_FUNC_ADDR(Edit_SetBorderStyle)
    MySyscall(pEdit_SetBorderStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetCharCase)
TEditCharCase
Edit_GetCharCase(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetCharCase)
    return (TEditCharCase)MySyscall(pEdit_GetCharCase, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetCharCase)
void
Edit_SetCharCase(TEdit AObj, TEditCharCase AValue) {
    GET_FUNC_ADDR(Edit_SetCharCase)
    MySyscall(pEdit_SetCharCase, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetColor)
TColor
Edit_GetColor(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetColor)
    return (TColor)MySyscall(pEdit_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetColor)
void
Edit_SetColor(TEdit AObj, TColor AValue) {
    GET_FUNC_ADDR(Edit_SetColor)
    MySyscall(pEdit_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetConstraints)
TSizeConstraints
Edit_GetConstraints(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetConstraints)
    return (TSizeConstraints)MySyscall(pEdit_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetConstraints)
void
Edit_SetConstraints(TEdit AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(Edit_SetConstraints)
    MySyscall(pEdit_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetDoubleBuffered)
BOOL
Edit_GetDoubleBuffered(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetDoubleBuffered)
    return (BOOL)MySyscall(pEdit_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetDoubleBuffered)
void
Edit_SetDoubleBuffered(TEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(Edit_SetDoubleBuffered)
    MySyscall(pEdit_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetDragCursor)
TCursor
Edit_GetDragCursor(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetDragCursor)
    return (TCursor)MySyscall(pEdit_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetDragCursor)
void
Edit_SetDragCursor(TEdit AObj, TCursor AValue) {
    GET_FUNC_ADDR(Edit_SetDragCursor)
    MySyscall(pEdit_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetDragKind)
TDragKind
Edit_GetDragKind(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetDragKind)
    return (TDragKind)MySyscall(pEdit_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetDragKind)
void
Edit_SetDragKind(TEdit AObj, TDragKind AValue) {
    GET_FUNC_ADDR(Edit_SetDragKind)
    MySyscall(pEdit_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetDragMode)
TDragMode
Edit_GetDragMode(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetDragMode)
    return (TDragMode)MySyscall(pEdit_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetDragMode)
void
Edit_SetDragMode(TEdit AObj, TDragMode AValue) {
    GET_FUNC_ADDR(Edit_SetDragMode)
    MySyscall(pEdit_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetEnabled)
BOOL
Edit_GetEnabled(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetEnabled)
    return (BOOL)MySyscall(pEdit_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetEnabled)
void
Edit_SetEnabled(TEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(Edit_SetEnabled)
    MySyscall(pEdit_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetFont)
TFont
Edit_GetFont(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetFont)
    return (TFont)MySyscall(pEdit_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetFont)
void
Edit_SetFont(TEdit AObj, TFont AValue) {
    GET_FUNC_ADDR(Edit_SetFont)
    MySyscall(pEdit_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetHideSelection)
BOOL
Edit_GetHideSelection(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetHideSelection)
    return (BOOL)MySyscall(pEdit_GetHideSelection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetHideSelection)
void
Edit_SetHideSelection(TEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(Edit_SetHideSelection)
    MySyscall(pEdit_SetHideSelection, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetMaxLength)
int32_t
Edit_GetMaxLength(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetMaxLength)
    return (int32_t)MySyscall(pEdit_GetMaxLength, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetMaxLength)
void
Edit_SetMaxLength(TEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(Edit_SetMaxLength)
    MySyscall(pEdit_SetMaxLength, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetNumbersOnly)
BOOL
Edit_GetNumbersOnly(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetNumbersOnly)
    return (BOOL)MySyscall(pEdit_GetNumbersOnly, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetNumbersOnly)
void
Edit_SetNumbersOnly(TEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(Edit_SetNumbersOnly)
    MySyscall(pEdit_SetNumbersOnly, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetParentColor)
BOOL
Edit_GetParentColor(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetParentColor)
    return (BOOL)MySyscall(pEdit_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetParentColor)
void
Edit_SetParentColor(TEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(Edit_SetParentColor)
    MySyscall(pEdit_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetParentDoubleBuffered)
BOOL
Edit_GetParentDoubleBuffered(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pEdit_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetParentDoubleBuffered)
void
Edit_SetParentDoubleBuffered(TEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(Edit_SetParentDoubleBuffered)
    MySyscall(pEdit_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetParentFont)
BOOL
Edit_GetParentFont(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetParentFont)
    return (BOOL)MySyscall(pEdit_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetParentFont)
void
Edit_SetParentFont(TEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(Edit_SetParentFont)
    MySyscall(pEdit_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetParentShowHint)
BOOL
Edit_GetParentShowHint(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetParentShowHint)
    return (BOOL)MySyscall(pEdit_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetParentShowHint)
void
Edit_SetParentShowHint(TEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(Edit_SetParentShowHint)
    MySyscall(pEdit_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetPasswordChar)
Char
Edit_GetPasswordChar(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetPasswordChar)
    return (Char)MySyscall(pEdit_GetPasswordChar, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetPasswordChar)
void
Edit_SetPasswordChar(TEdit AObj, Char AValue) {
    GET_FUNC_ADDR(Edit_SetPasswordChar)
    MySyscall(pEdit_SetPasswordChar, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetPopupMenu)
TPopupMenu
Edit_GetPopupMenu(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetPopupMenu)
    return (TPopupMenu)MySyscall(pEdit_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetPopupMenu)
void
Edit_SetPopupMenu(TEdit AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(Edit_SetPopupMenu)
    MySyscall(pEdit_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetReadOnly)
BOOL
Edit_GetReadOnly(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetReadOnly)
    return (BOOL)MySyscall(pEdit_GetReadOnly, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetReadOnly)
void
Edit_SetReadOnly(TEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(Edit_SetReadOnly)
    MySyscall(pEdit_SetReadOnly, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetShowHint)
BOOL
Edit_GetShowHint(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetShowHint)
    return (BOOL)MySyscall(pEdit_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetShowHint)
void
Edit_SetShowHint(TEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(Edit_SetShowHint)
    MySyscall(pEdit_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetTabOrder)
TTabOrder
Edit_GetTabOrder(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetTabOrder)
    return (TTabOrder)MySyscall(pEdit_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetTabOrder)
void
Edit_SetTabOrder(TEdit AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(Edit_SetTabOrder)
    MySyscall(pEdit_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetTabStop)
BOOL
Edit_GetTabStop(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetTabStop)
    return (BOOL)MySyscall(pEdit_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetTabStop)
void
Edit_SetTabStop(TEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(Edit_SetTabStop)
    MySyscall(pEdit_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetText)
char*
Edit_GetText(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetText)
    return (char*)MySyscall(pEdit_GetText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetText)
void
Edit_SetText(TEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Edit_SetText)
    MySyscall(pEdit_SetText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetTextHint)
char*
Edit_GetTextHint(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetTextHint)
    return (char*)MySyscall(pEdit_GetTextHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetTextHint)
void
Edit_SetTextHint(TEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Edit_SetTextHint)
    MySyscall(pEdit_SetTextHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetVisible)
BOOL
Edit_GetVisible(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetVisible)
    return (BOOL)MySyscall(pEdit_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetVisible)
void
Edit_SetVisible(TEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(Edit_SetVisible)
    MySyscall(pEdit_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetOnChange)
void
Edit_SetOnChange(TEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Edit_SetOnChange)
    MySyscall(pEdit_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetOnClick)
void
Edit_SetOnClick(TEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Edit_SetOnClick)
    MySyscall(pEdit_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetOnContextPopup)
void
Edit_SetOnContextPopup(TEdit AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(Edit_SetOnContextPopup)
    MySyscall(pEdit_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetOnDblClick)
void
Edit_SetOnDblClick(TEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Edit_SetOnDblClick)
    MySyscall(pEdit_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetOnDragDrop)
void
Edit_SetOnDragDrop(TEdit AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(Edit_SetOnDragDrop)
    MySyscall(pEdit_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetOnDragOver)
void
Edit_SetOnDragOver(TEdit AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(Edit_SetOnDragOver)
    MySyscall(pEdit_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetOnEndDrag)
void
Edit_SetOnEndDrag(TEdit AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(Edit_SetOnEndDrag)
    MySyscall(pEdit_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetOnEnter)
void
Edit_SetOnEnter(TEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Edit_SetOnEnter)
    MySyscall(pEdit_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetOnExit)
void
Edit_SetOnExit(TEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Edit_SetOnExit)
    MySyscall(pEdit_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetOnKeyDown)
void
Edit_SetOnKeyDown(TEdit AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(Edit_SetOnKeyDown)
    MySyscall(pEdit_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetOnKeyPress)
void
Edit_SetOnKeyPress(TEdit AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(Edit_SetOnKeyPress)
    MySyscall(pEdit_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetOnKeyUp)
void
Edit_SetOnKeyUp(TEdit AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(Edit_SetOnKeyUp)
    MySyscall(pEdit_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetOnMouseDown)
void
Edit_SetOnMouseDown(TEdit AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(Edit_SetOnMouseDown)
    MySyscall(pEdit_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetOnMouseEnter)
void
Edit_SetOnMouseEnter(TEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Edit_SetOnMouseEnter)
    MySyscall(pEdit_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetOnMouseLeave)
void
Edit_SetOnMouseLeave(TEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Edit_SetOnMouseLeave)
    MySyscall(pEdit_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetOnMouseMove)
void
Edit_SetOnMouseMove(TEdit AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(Edit_SetOnMouseMove)
    MySyscall(pEdit_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetOnMouseUp)
void
Edit_SetOnMouseUp(TEdit AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(Edit_SetOnMouseUp)
    MySyscall(pEdit_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetCanUndo)
BOOL
Edit_GetCanUndo(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetCanUndo)
    return (BOOL)MySyscall(pEdit_GetCanUndo, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetModified)
BOOL
Edit_GetModified(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetModified)
    return (BOOL)MySyscall(pEdit_GetModified, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetModified)
void
Edit_SetModified(TEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(Edit_SetModified)
    MySyscall(pEdit_SetModified, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetSelLength)
int32_t
Edit_GetSelLength(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetSelLength)
    return (int32_t)MySyscall(pEdit_GetSelLength, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetSelLength)
void
Edit_SetSelLength(TEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(Edit_SetSelLength)
    MySyscall(pEdit_SetSelLength, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetSelStart)
int32_t
Edit_GetSelStart(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetSelStart)
    return (int32_t)MySyscall(pEdit_GetSelStart, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetSelStart)
void
Edit_SetSelStart(TEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(Edit_SetSelStart)
    MySyscall(pEdit_SetSelStart, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetSelText)
char*
Edit_GetSelText(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetSelText)
    return (char*)MySyscall(pEdit_GetSelText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetSelText)
void
Edit_SetSelText(TEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Edit_SetSelText)
    MySyscall(pEdit_SetSelText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetDockClientCount)
int32_t
Edit_GetDockClientCount(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetDockClientCount)
    return (int32_t)MySyscall(pEdit_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetDockSite)
BOOL
Edit_GetDockSite(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetDockSite)
    return (BOOL)MySyscall(pEdit_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetDockSite)
void
Edit_SetDockSite(TEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(Edit_SetDockSite)
    MySyscall(pEdit_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetMouseInClient)
BOOL
Edit_GetMouseInClient(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetMouseInClient)
    return (BOOL)MySyscall(pEdit_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetVisibleDockClientCount)
int32_t
Edit_GetVisibleDockClientCount(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pEdit_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetBrush)
TBrush
Edit_GetBrush(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetBrush)
    return (TBrush)MySyscall(pEdit_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetControlCount)
int32_t
Edit_GetControlCount(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetControlCount)
    return (int32_t)MySyscall(pEdit_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetHandle)
HWND
Edit_GetHandle(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetHandle)
    return (HWND)MySyscall(pEdit_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetParentWindow)
HWND
Edit_GetParentWindow(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetParentWindow)
    return (HWND)MySyscall(pEdit_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetParentWindow)
void
Edit_SetParentWindow(TEdit AObj, HWND AValue) {
    GET_FUNC_ADDR(Edit_SetParentWindow)
    MySyscall(pEdit_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetShowing)
BOOL
Edit_GetShowing(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetShowing)
    return (BOOL)MySyscall(pEdit_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetUseDockManager)
BOOL
Edit_GetUseDockManager(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetUseDockManager)
    return (BOOL)MySyscall(pEdit_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetUseDockManager)
void
Edit_SetUseDockManager(TEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(Edit_SetUseDockManager)
    MySyscall(pEdit_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetAction)
TAction
Edit_GetAction(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetAction)
    return (TAction)MySyscall(pEdit_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetAction)
void
Edit_SetAction(TEdit AObj, TAction AValue) {
    GET_FUNC_ADDR(Edit_SetAction)
    MySyscall(pEdit_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetBoundsRect)
TRect
Edit_GetBoundsRect(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetBoundsRect)
    TRect result;
    MySyscall(pEdit_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Edit_SetBoundsRect)
void
Edit_SetBoundsRect(TEdit AObj, TRect AValue) {
    GET_FUNC_ADDR(Edit_SetBoundsRect)
    MySyscall(pEdit_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetClientHeight)
int32_t
Edit_GetClientHeight(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetClientHeight)
    return (int32_t)MySyscall(pEdit_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetClientHeight)
void
Edit_SetClientHeight(TEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(Edit_SetClientHeight)
    MySyscall(pEdit_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetClientOrigin)
TPoint
Edit_GetClientOrigin(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetClientOrigin)
    TPoint result;
    MySyscall(pEdit_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Edit_GetClientRect)
TRect
Edit_GetClientRect(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetClientRect)
    TRect result;
    MySyscall(pEdit_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Edit_GetClientWidth)
int32_t
Edit_GetClientWidth(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetClientWidth)
    return (int32_t)MySyscall(pEdit_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetClientWidth)
void
Edit_SetClientWidth(TEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(Edit_SetClientWidth)
    MySyscall(pEdit_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetControlState)
TControlState
Edit_GetControlState(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetControlState)
    return (TControlState)MySyscall(pEdit_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetControlState)
void
Edit_SetControlState(TEdit AObj, TControlState AValue) {
    GET_FUNC_ADDR(Edit_SetControlState)
    MySyscall(pEdit_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetControlStyle)
TControlStyle
Edit_GetControlStyle(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetControlStyle)
    return (TControlStyle)MySyscall(pEdit_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetControlStyle)
void
Edit_SetControlStyle(TEdit AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(Edit_SetControlStyle)
    MySyscall(pEdit_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetFloating)
BOOL
Edit_GetFloating(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetFloating)
    return (BOOL)MySyscall(pEdit_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetParent)
TWinControl
Edit_GetParent(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetParent)
    return (TWinControl)MySyscall(pEdit_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetParent)
void
Edit_SetParent(TEdit AObj, TWinControl AValue) {
    GET_FUNC_ADDR(Edit_SetParent)
    MySyscall(pEdit_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetLeft)
int32_t
Edit_GetLeft(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetLeft)
    return (int32_t)MySyscall(pEdit_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetLeft)
void
Edit_SetLeft(TEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(Edit_SetLeft)
    MySyscall(pEdit_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetTop)
int32_t
Edit_GetTop(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetTop)
    return (int32_t)MySyscall(pEdit_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetTop)
void
Edit_SetTop(TEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(Edit_SetTop)
    MySyscall(pEdit_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetWidth)
int32_t
Edit_GetWidth(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetWidth)
    return (int32_t)MySyscall(pEdit_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetWidth)
void
Edit_SetWidth(TEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(Edit_SetWidth)
    MySyscall(pEdit_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetHeight)
int32_t
Edit_GetHeight(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetHeight)
    return (int32_t)MySyscall(pEdit_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetHeight)
void
Edit_SetHeight(TEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(Edit_SetHeight)
    MySyscall(pEdit_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetCursor)
TCursor
Edit_GetCursor(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetCursor)
    return (TCursor)MySyscall(pEdit_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetCursor)
void
Edit_SetCursor(TEdit AObj, TCursor AValue) {
    GET_FUNC_ADDR(Edit_SetCursor)
    MySyscall(pEdit_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetHint)
char*
Edit_GetHint(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetHint)
    return (char*)MySyscall(pEdit_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetHint)
void
Edit_SetHint(TEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Edit_SetHint)
    MySyscall(pEdit_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetComponentCount)
int32_t
Edit_GetComponentCount(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetComponentCount)
    return (int32_t)MySyscall(pEdit_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetComponentIndex)
int32_t
Edit_GetComponentIndex(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetComponentIndex)
    return (int32_t)MySyscall(pEdit_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetComponentIndex)
void
Edit_SetComponentIndex(TEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(Edit_SetComponentIndex)
    MySyscall(pEdit_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetOwner)
TComponent
Edit_GetOwner(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetOwner)
    return (TComponent)MySyscall(pEdit_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetName)
char*
Edit_GetName(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetName)
    return (char*)MySyscall(pEdit_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetName)
void
Edit_SetName(TEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Edit_SetName)
    MySyscall(pEdit_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetTag)
intptr_t
Edit_GetTag(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetTag)
    return (intptr_t)MySyscall(pEdit_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetTag)
void
Edit_SetTag(TEdit AObj, intptr_t AValue) {
    GET_FUNC_ADDR(Edit_SetTag)
    MySyscall(pEdit_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetAnchorSideLeft)
TAnchorSide
Edit_GetAnchorSideLeft(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pEdit_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetAnchorSideLeft)
void
Edit_SetAnchorSideLeft(TEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Edit_SetAnchorSideLeft)
    MySyscall(pEdit_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetAnchorSideTop)
TAnchorSide
Edit_GetAnchorSideTop(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pEdit_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetAnchorSideTop)
void
Edit_SetAnchorSideTop(TEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Edit_SetAnchorSideTop)
    MySyscall(pEdit_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetAnchorSideRight)
TAnchorSide
Edit_GetAnchorSideRight(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pEdit_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetAnchorSideRight)
void
Edit_SetAnchorSideRight(TEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Edit_SetAnchorSideRight)
    MySyscall(pEdit_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetAnchorSideBottom)
TAnchorSide
Edit_GetAnchorSideBottom(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pEdit_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetAnchorSideBottom)
void
Edit_SetAnchorSideBottom(TEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Edit_SetAnchorSideBottom)
    MySyscall(pEdit_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetChildSizing)
TControlChildSizing
Edit_GetChildSizing(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetChildSizing)
    return (TControlChildSizing)MySyscall(pEdit_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetChildSizing)
void
Edit_SetChildSizing(TEdit AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(Edit_SetChildSizing)
    MySyscall(pEdit_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetBorderSpacing)
TControlBorderSpacing
Edit_GetBorderSpacing(TEdit AObj) {
    GET_FUNC_ADDR(Edit_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pEdit_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_SetBorderSpacing)
void
Edit_SetBorderSpacing(TEdit AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(Edit_SetBorderSpacing)
    MySyscall(pEdit_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetDockClients)
TControl
Edit_GetDockClients(TEdit AObj, int32_t Index) {
    GET_FUNC_ADDR(Edit_GetDockClients)
    return (TControl)MySyscall(pEdit_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetControls)
TControl
Edit_GetControls(TEdit AObj, int32_t Index) {
    GET_FUNC_ADDR(Edit_GetControls)
    return (TControl)MySyscall(pEdit_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetComponents)
TComponent
Edit_GetComponents(TEdit AObj, int32_t AIndex) {
    GET_FUNC_ADDR(Edit_GetComponents)
    return (TComponent)MySyscall(pEdit_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_GetAnchorSide)
TAnchorSide
Edit_GetAnchorSide(TEdit AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(Edit_GetAnchorSide)
    return (TAnchorSide)MySyscall(pEdit_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Edit_StaticClassType)
TClass
Edit_StaticClassType() {
    GET_FUNC_ADDR(Edit_StaticClassType)
    return (TClass)MySyscall(pEdit_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TScreen-------------------

DEFINE_FUNC_PTR(Screen_Create)
TScreen
Screen_Create(TComponent AOwner) {
    GET_FUNC_ADDR(Screen_Create)
    return (TScreen)MySyscall(pScreen_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_Free)
void
Screen_Free(TScreen AObj) {
    GET_FUNC_ADDR(Screen_Free)
    MySyscall(pScreen_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_BeginTempCursor)
void
Screen_BeginTempCursor(TScreen AObj, TCursor aCursor) {
    GET_FUNC_ADDR(Screen_BeginTempCursor)
    MySyscall(pScreen_BeginTempCursor, 2, AObj, aCursor ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_EndTempCursor)
void
Screen_EndTempCursor(TScreen AObj, TCursor aCursor) {
    GET_FUNC_ADDR(Screen_EndTempCursor)
    MySyscall(pScreen_EndTempCursor, 2, AObj, aCursor ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_BeginWaitCursor)
void
Screen_BeginWaitCursor(TScreen AObj) {
    GET_FUNC_ADDR(Screen_BeginWaitCursor)
    MySyscall(pScreen_BeginWaitCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_EndWaitCursor)
void
Screen_EndWaitCursor(TScreen AObj) {
    GET_FUNC_ADDR(Screen_EndWaitCursor)
    MySyscall(pScreen_EndWaitCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_FindComponent)
TComponent
Screen_FindComponent(TScreen AObj, CChar char* AName) {
    GET_FUNC_ADDR(Screen_FindComponent)
    return (TComponent)MySyscall(pScreen_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetNamePath)
char*
Screen_GetNamePath(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetNamePath)
    return (char*)MySyscall(pScreen_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_HasParent)
BOOL
Screen_HasParent(TScreen AObj) {
    GET_FUNC_ADDR(Screen_HasParent)
    return (BOOL)MySyscall(pScreen_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_Assign)
void
Screen_Assign(TScreen AObj, TObject Source) {
    GET_FUNC_ADDR(Screen_Assign)
    MySyscall(pScreen_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_ClassType)
TClass
Screen_ClassType(TScreen AObj) {
    GET_FUNC_ADDR(Screen_ClassType)
    return (TClass)MySyscall(pScreen_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_ClassName)
char*
Screen_ClassName(TScreen AObj) {
    GET_FUNC_ADDR(Screen_ClassName)
    return (char*)MySyscall(pScreen_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_InstanceSize)
int32_t
Screen_InstanceSize(TScreen AObj) {
    GET_FUNC_ADDR(Screen_InstanceSize)
    return (int32_t)MySyscall(pScreen_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_InheritsFrom)
BOOL
Screen_InheritsFrom(TScreen AObj, TClass AClass) {
    GET_FUNC_ADDR(Screen_InheritsFrom)
    return (BOOL)MySyscall(pScreen_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_Equals)
BOOL
Screen_Equals(TScreen AObj, TObject Obj) {
    GET_FUNC_ADDR(Screen_Equals)
    return (BOOL)MySyscall(pScreen_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetHashCode)
int32_t
Screen_GetHashCode(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetHashCode)
    return (int32_t)MySyscall(pScreen_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_ToString)
char*
Screen_ToString(TScreen AObj) {
    GET_FUNC_ADDR(Screen_ToString)
    return (char*)MySyscall(pScreen_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetRealCursor)
TCursor
Screen_GetRealCursor(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetRealCursor)
    return (TCursor)MySyscall(pScreen_GetRealCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetFocusedForm)
TForm
Screen_GetFocusedForm(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetFocusedForm)
    return (TForm)MySyscall(pScreen_GetFocusedForm, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetActiveControl)
TWinControl
Screen_GetActiveControl(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetActiveControl)
    return (TWinControl)MySyscall(pScreen_GetActiveControl, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetActiveForm)
TForm
Screen_GetActiveForm(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetActiveForm)
    return (TForm)MySyscall(pScreen_GetActiveForm, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetCustomFormCount)
int32_t
Screen_GetCustomFormCount(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetCustomFormCount)
    return (int32_t)MySyscall(pScreen_GetCustomFormCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetCursor)
TCursor
Screen_GetCursor(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetCursor)
    return (TCursor)MySyscall(pScreen_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_SetCursor)
void
Screen_SetCursor(TScreen AObj, TCursor AValue) {
    GET_FUNC_ADDR(Screen_SetCursor)
    MySyscall(pScreen_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetMonitorCount)
int32_t
Screen_GetMonitorCount(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetMonitorCount)
    return (int32_t)MySyscall(pScreen_GetMonitorCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetDesktopRect)
TRect
Screen_GetDesktopRect(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetDesktopRect)
    TRect result;
    MySyscall(pScreen_GetDesktopRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Screen_GetDesktopHeight)
int32_t
Screen_GetDesktopHeight(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetDesktopHeight)
    return (int32_t)MySyscall(pScreen_GetDesktopHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetDesktopLeft)
int32_t
Screen_GetDesktopLeft(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetDesktopLeft)
    return (int32_t)MySyscall(pScreen_GetDesktopLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetDesktopTop)
int32_t
Screen_GetDesktopTop(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetDesktopTop)
    return (int32_t)MySyscall(pScreen_GetDesktopTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetDesktopWidth)
int32_t
Screen_GetDesktopWidth(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetDesktopWidth)
    return (int32_t)MySyscall(pScreen_GetDesktopWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetWorkAreaRect)
TRect
Screen_GetWorkAreaRect(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetWorkAreaRect)
    TRect result;
    MySyscall(pScreen_GetWorkAreaRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Screen_GetWorkAreaHeight)
int32_t
Screen_GetWorkAreaHeight(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetWorkAreaHeight)
    return (int32_t)MySyscall(pScreen_GetWorkAreaHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetWorkAreaLeft)
int32_t
Screen_GetWorkAreaLeft(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetWorkAreaLeft)
    return (int32_t)MySyscall(pScreen_GetWorkAreaLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetWorkAreaTop)
int32_t
Screen_GetWorkAreaTop(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetWorkAreaTop)
    return (int32_t)MySyscall(pScreen_GetWorkAreaTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetWorkAreaWidth)
int32_t
Screen_GetWorkAreaWidth(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetWorkAreaWidth)
    return (int32_t)MySyscall(pScreen_GetWorkAreaWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetFonts)
TStrings
Screen_GetFonts(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetFonts)
    return (TStrings)MySyscall(pScreen_GetFonts, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetFormCount)
int32_t
Screen_GetFormCount(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetFormCount)
    return (int32_t)MySyscall(pScreen_GetFormCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetHeight)
int32_t
Screen_GetHeight(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetHeight)
    return (int32_t)MySyscall(pScreen_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetPixelsPerInch)
int32_t
Screen_GetPixelsPerInch(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetPixelsPerInch)
    return (int32_t)MySyscall(pScreen_GetPixelsPerInch, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetPrimaryMonitor)
TMonitor
Screen_GetPrimaryMonitor(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetPrimaryMonitor)
    return (TMonitor)MySyscall(pScreen_GetPrimaryMonitor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetWidth)
int32_t
Screen_GetWidth(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetWidth)
    return (int32_t)MySyscall(pScreen_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetComponentCount)
int32_t
Screen_GetComponentCount(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetComponentCount)
    return (int32_t)MySyscall(pScreen_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetComponentIndex)
int32_t
Screen_GetComponentIndex(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetComponentIndex)
    return (int32_t)MySyscall(pScreen_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_SetComponentIndex)
void
Screen_SetComponentIndex(TScreen AObj, int32_t AValue) {
    GET_FUNC_ADDR(Screen_SetComponentIndex)
    MySyscall(pScreen_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetOwner)
TComponent
Screen_GetOwner(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetOwner)
    return (TComponent)MySyscall(pScreen_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetName)
char*
Screen_GetName(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetName)
    return (char*)MySyscall(pScreen_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_SetName)
void
Screen_SetName(TScreen AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Screen_SetName)
    MySyscall(pScreen_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetTag)
intptr_t
Screen_GetTag(TScreen AObj) {
    GET_FUNC_ADDR(Screen_GetTag)
    return (intptr_t)MySyscall(pScreen_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_SetTag)
void
Screen_SetTag(TScreen AObj, intptr_t AValue) {
    GET_FUNC_ADDR(Screen_SetTag)
    MySyscall(pScreen_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetCursors)
HICON
Screen_GetCursors(TScreen AObj, int32_t Index) {
    GET_FUNC_ADDR(Screen_GetCursors)
    return (HICON)MySyscall(pScreen_GetCursors, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_SetCursors)
void
Screen_SetCursors(TScreen AObj, int32_t Index, HICON AValue) {
    GET_FUNC_ADDR(Screen_SetCursors)
    MySyscall(pScreen_SetCursors, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetMonitors)
TMonitor
Screen_GetMonitors(TScreen AObj, int32_t Index) {
    GET_FUNC_ADDR(Screen_GetMonitors)
    return (TMonitor)MySyscall(pScreen_GetMonitors, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetForms)
TForm
Screen_GetForms(TScreen AObj, int32_t Index) {
    GET_FUNC_ADDR(Screen_GetForms)
    return (TForm)MySyscall(pScreen_GetForms, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_GetComponents)
TComponent
Screen_GetComponents(TScreen AObj, int32_t AIndex) {
    GET_FUNC_ADDR(Screen_GetComponents)
    return (TComponent)MySyscall(pScreen_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Screen_StaticClassType)
TClass
Screen_StaticClassType() {
    GET_FUNC_ADDR(Screen_StaticClassType)
    return (TClass)MySyscall(pScreen_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TMouse-------------------

DEFINE_FUNC_PTR(Mouse_Create)
TMouse
Mouse_Create() {
    GET_FUNC_ADDR(Mouse_Create)
    return (TMouse)MySyscall(pMouse_Create, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Mouse_Free)
void
Mouse_Free(TMouse AObj) {
    GET_FUNC_ADDR(Mouse_Free)
    MySyscall(pMouse_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Mouse_ClassType)
TClass
Mouse_ClassType(TMouse AObj) {
    GET_FUNC_ADDR(Mouse_ClassType)
    return (TClass)MySyscall(pMouse_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Mouse_ClassName)
char*
Mouse_ClassName(TMouse AObj) {
    GET_FUNC_ADDR(Mouse_ClassName)
    return (char*)MySyscall(pMouse_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Mouse_InstanceSize)
int32_t
Mouse_InstanceSize(TMouse AObj) {
    GET_FUNC_ADDR(Mouse_InstanceSize)
    return (int32_t)MySyscall(pMouse_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Mouse_InheritsFrom)
BOOL
Mouse_InheritsFrom(TMouse AObj, TClass AClass) {
    GET_FUNC_ADDR(Mouse_InheritsFrom)
    return (BOOL)MySyscall(pMouse_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Mouse_Equals)
BOOL
Mouse_Equals(TMouse AObj, TObject Obj) {
    GET_FUNC_ADDR(Mouse_Equals)
    return (BOOL)MySyscall(pMouse_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Mouse_GetHashCode)
int32_t
Mouse_GetHashCode(TMouse AObj) {
    GET_FUNC_ADDR(Mouse_GetHashCode)
    return (int32_t)MySyscall(pMouse_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Mouse_ToString)
char*
Mouse_ToString(TMouse AObj) {
    GET_FUNC_ADDR(Mouse_ToString)
    return (char*)MySyscall(pMouse_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Mouse_GetCapture)
HWND
Mouse_GetCapture(TMouse AObj) {
    GET_FUNC_ADDR(Mouse_GetCapture)
    return (HWND)MySyscall(pMouse_GetCapture, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Mouse_SetCapture)
void
Mouse_SetCapture(TMouse AObj, HWND AValue) {
    GET_FUNC_ADDR(Mouse_SetCapture)
    MySyscall(pMouse_SetCapture, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Mouse_GetCursorPos)
TPoint
Mouse_GetCursorPos(TMouse AObj) {
    GET_FUNC_ADDR(Mouse_GetCursorPos)
    TPoint result;
    MySyscall(pMouse_GetCursorPos, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Mouse_SetCursorPos)
void
Mouse_SetCursorPos(TMouse AObj, TPoint AValue) {
    GET_FUNC_ADDR(Mouse_SetCursorPos)
    MySyscall(pMouse_SetCursorPos, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Mouse_GetIsDragging)
BOOL
Mouse_GetIsDragging(TMouse AObj) {
    GET_FUNC_ADDR(Mouse_GetIsDragging)
    return (BOOL)MySyscall(pMouse_GetIsDragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Mouse_GetWheelScrollLines)
int32_t
Mouse_GetWheelScrollLines(TMouse AObj) {
    GET_FUNC_ADDR(Mouse_GetWheelScrollLines)
    return (int32_t)MySyscall(pMouse_GetWheelScrollLines, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Mouse_StaticClassType)
TClass
Mouse_StaticClassType() {
    GET_FUNC_ADDR(Mouse_StaticClassType)
    return (TClass)MySyscall(pMouse_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TListColumn-------------------

DEFINE_FUNC_PTR(ListColumn_Create)
TListColumn
ListColumn_Create(TCollection AOwner) {
    GET_FUNC_ADDR(ListColumn_Create)
    return (TListColumn)MySyscall(pListColumn_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_Free)
void
ListColumn_Free(TListColumn AObj) {
    GET_FUNC_ADDR(ListColumn_Free)
    MySyscall(pListColumn_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_Assign)
void
ListColumn_Assign(TListColumn AObj, TObject Source) {
    GET_FUNC_ADDR(ListColumn_Assign)
    MySyscall(pListColumn_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_GetNamePath)
char*
ListColumn_GetNamePath(TListColumn AObj) {
    GET_FUNC_ADDR(ListColumn_GetNamePath)
    return (char*)MySyscall(pListColumn_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_ClassType)
TClass
ListColumn_ClassType(TListColumn AObj) {
    GET_FUNC_ADDR(ListColumn_ClassType)
    return (TClass)MySyscall(pListColumn_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_ClassName)
char*
ListColumn_ClassName(TListColumn AObj) {
    GET_FUNC_ADDR(ListColumn_ClassName)
    return (char*)MySyscall(pListColumn_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_InstanceSize)
int32_t
ListColumn_InstanceSize(TListColumn AObj) {
    GET_FUNC_ADDR(ListColumn_InstanceSize)
    return (int32_t)MySyscall(pListColumn_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_InheritsFrom)
BOOL
ListColumn_InheritsFrom(TListColumn AObj, TClass AClass) {
    GET_FUNC_ADDR(ListColumn_InheritsFrom)
    return (BOOL)MySyscall(pListColumn_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_Equals)
BOOL
ListColumn_Equals(TListColumn AObj, TObject Obj) {
    GET_FUNC_ADDR(ListColumn_Equals)
    return (BOOL)MySyscall(pListColumn_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_GetHashCode)
int32_t
ListColumn_GetHashCode(TListColumn AObj) {
    GET_FUNC_ADDR(ListColumn_GetHashCode)
    return (int32_t)MySyscall(pListColumn_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_ToString)
char*
ListColumn_ToString(TListColumn AObj) {
    GET_FUNC_ADDR(ListColumn_ToString)
    return (char*)MySyscall(pListColumn_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_GetSortIndicator)
TSortIndicator
ListColumn_GetSortIndicator(TListColumn AObj) {
    GET_FUNC_ADDR(ListColumn_GetSortIndicator)
    return (TSortIndicator)MySyscall(pListColumn_GetSortIndicator, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_SetSortIndicator)
void
ListColumn_SetSortIndicator(TListColumn AObj, TSortIndicator AValue) {
    GET_FUNC_ADDR(ListColumn_SetSortIndicator)
    MySyscall(pListColumn_SetSortIndicator, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_GetAlignment)
TAlignment
ListColumn_GetAlignment(TListColumn AObj) {
    GET_FUNC_ADDR(ListColumn_GetAlignment)
    return (TAlignment)MySyscall(pListColumn_GetAlignment, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_SetAlignment)
void
ListColumn_SetAlignment(TListColumn AObj, TAlignment AValue) {
    GET_FUNC_ADDR(ListColumn_SetAlignment)
    MySyscall(pListColumn_SetAlignment, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_GetAutoSize)
BOOL
ListColumn_GetAutoSize(TListColumn AObj) {
    GET_FUNC_ADDR(ListColumn_GetAutoSize)
    return (BOOL)MySyscall(pListColumn_GetAutoSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_SetAutoSize)
void
ListColumn_SetAutoSize(TListColumn AObj, BOOL AValue) {
    GET_FUNC_ADDR(ListColumn_SetAutoSize)
    MySyscall(pListColumn_SetAutoSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_GetCaption)
char*
ListColumn_GetCaption(TListColumn AObj) {
    GET_FUNC_ADDR(ListColumn_GetCaption)
    return (char*)MySyscall(pListColumn_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_SetCaption)
void
ListColumn_SetCaption(TListColumn AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ListColumn_SetCaption)
    MySyscall(pListColumn_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_GetImageIndex)
int32_t
ListColumn_GetImageIndex(TListColumn AObj) {
    GET_FUNC_ADDR(ListColumn_GetImageIndex)
    return (int32_t)MySyscall(pListColumn_GetImageIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_SetImageIndex)
void
ListColumn_SetImageIndex(TListColumn AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListColumn_SetImageIndex)
    MySyscall(pListColumn_SetImageIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_GetMaxWidth)
int32_t
ListColumn_GetMaxWidth(TListColumn AObj) {
    GET_FUNC_ADDR(ListColumn_GetMaxWidth)
    return (int32_t)MySyscall(pListColumn_GetMaxWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_SetMaxWidth)
void
ListColumn_SetMaxWidth(TListColumn AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListColumn_SetMaxWidth)
    MySyscall(pListColumn_SetMaxWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_GetMinWidth)
int32_t
ListColumn_GetMinWidth(TListColumn AObj) {
    GET_FUNC_ADDR(ListColumn_GetMinWidth)
    return (int32_t)MySyscall(pListColumn_GetMinWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_SetMinWidth)
void
ListColumn_SetMinWidth(TListColumn AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListColumn_SetMinWidth)
    MySyscall(pListColumn_SetMinWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_GetTag)
int32_t
ListColumn_GetTag(TListColumn AObj) {
    GET_FUNC_ADDR(ListColumn_GetTag)
    return (int32_t)MySyscall(pListColumn_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_SetTag)
void
ListColumn_SetTag(TListColumn AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListColumn_SetTag)
    MySyscall(pListColumn_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_GetWidth)
int32_t
ListColumn_GetWidth(TListColumn AObj) {
    GET_FUNC_ADDR(ListColumn_GetWidth)
    return (int32_t)MySyscall(pListColumn_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_SetWidth)
void
ListColumn_SetWidth(TListColumn AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListColumn_SetWidth)
    MySyscall(pListColumn_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_GetCollection)
TCollection
ListColumn_GetCollection(TListColumn AObj) {
    GET_FUNC_ADDR(ListColumn_GetCollection)
    return (TCollection)MySyscall(pListColumn_GetCollection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_SetCollection)
void
ListColumn_SetCollection(TListColumn AObj, TCollection AValue) {
    GET_FUNC_ADDR(ListColumn_SetCollection)
    MySyscall(pListColumn_SetCollection, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_GetIndex)
int32_t
ListColumn_GetIndex(TListColumn AObj) {
    GET_FUNC_ADDR(ListColumn_GetIndex)
    return (int32_t)MySyscall(pListColumn_GetIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_SetIndex)
void
ListColumn_SetIndex(TListColumn AObj, int32_t AValue) {
    GET_FUNC_ADDR(ListColumn_SetIndex)
    MySyscall(pListColumn_SetIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_GetDisplayName)
char*
ListColumn_GetDisplayName(TListColumn AObj) {
    GET_FUNC_ADDR(ListColumn_GetDisplayName)
    return (char*)MySyscall(pListColumn_GetDisplayName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_SetDisplayName)
void
ListColumn_SetDisplayName(TListColumn AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ListColumn_SetDisplayName)
    MySyscall(pListColumn_SetDisplayName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ListColumn_StaticClassType)
TClass
ListColumn_StaticClassType() {
    GET_FUNC_ADDR(ListColumn_StaticClassType)
    return (TClass)MySyscall(pListColumn_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TCollectionItem-------------------

DEFINE_FUNC_PTR(CollectionItem_Create)
TCollectionItem
CollectionItem_Create(TCollection AOwner) {
    GET_FUNC_ADDR(CollectionItem_Create)
    return (TCollectionItem)MySyscall(pCollectionItem_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CollectionItem_Free)
void
CollectionItem_Free(TCollectionItem AObj) {
    GET_FUNC_ADDR(CollectionItem_Free)
    MySyscall(pCollectionItem_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CollectionItem_GetNamePath)
char*
CollectionItem_GetNamePath(TCollectionItem AObj) {
    GET_FUNC_ADDR(CollectionItem_GetNamePath)
    return (char*)MySyscall(pCollectionItem_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CollectionItem_Assign)
void
CollectionItem_Assign(TCollectionItem AObj, TObject Source) {
    GET_FUNC_ADDR(CollectionItem_Assign)
    MySyscall(pCollectionItem_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CollectionItem_ClassType)
TClass
CollectionItem_ClassType(TCollectionItem AObj) {
    GET_FUNC_ADDR(CollectionItem_ClassType)
    return (TClass)MySyscall(pCollectionItem_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CollectionItem_ClassName)
char*
CollectionItem_ClassName(TCollectionItem AObj) {
    GET_FUNC_ADDR(CollectionItem_ClassName)
    return (char*)MySyscall(pCollectionItem_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CollectionItem_InstanceSize)
int32_t
CollectionItem_InstanceSize(TCollectionItem AObj) {
    GET_FUNC_ADDR(CollectionItem_InstanceSize)
    return (int32_t)MySyscall(pCollectionItem_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CollectionItem_InheritsFrom)
BOOL
CollectionItem_InheritsFrom(TCollectionItem AObj, TClass AClass) {
    GET_FUNC_ADDR(CollectionItem_InheritsFrom)
    return (BOOL)MySyscall(pCollectionItem_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CollectionItem_Equals)
BOOL
CollectionItem_Equals(TCollectionItem AObj, TObject Obj) {
    GET_FUNC_ADDR(CollectionItem_Equals)
    return (BOOL)MySyscall(pCollectionItem_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CollectionItem_GetHashCode)
int32_t
CollectionItem_GetHashCode(TCollectionItem AObj) {
    GET_FUNC_ADDR(CollectionItem_GetHashCode)
    return (int32_t)MySyscall(pCollectionItem_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CollectionItem_ToString)
char*
CollectionItem_ToString(TCollectionItem AObj) {
    GET_FUNC_ADDR(CollectionItem_ToString)
    return (char*)MySyscall(pCollectionItem_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CollectionItem_GetCollection)
TCollection
CollectionItem_GetCollection(TCollectionItem AObj) {
    GET_FUNC_ADDR(CollectionItem_GetCollection)
    return (TCollection)MySyscall(pCollectionItem_GetCollection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CollectionItem_SetCollection)
void
CollectionItem_SetCollection(TCollectionItem AObj, TCollection AValue) {
    GET_FUNC_ADDR(CollectionItem_SetCollection)
    MySyscall(pCollectionItem_SetCollection, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CollectionItem_GetIndex)
int32_t
CollectionItem_GetIndex(TCollectionItem AObj) {
    GET_FUNC_ADDR(CollectionItem_GetIndex)
    return (int32_t)MySyscall(pCollectionItem_GetIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CollectionItem_SetIndex)
void
CollectionItem_SetIndex(TCollectionItem AObj, int32_t AValue) {
    GET_FUNC_ADDR(CollectionItem_SetIndex)
    MySyscall(pCollectionItem_SetIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CollectionItem_GetDisplayName)
char*
CollectionItem_GetDisplayName(TCollectionItem AObj) {
    GET_FUNC_ADDR(CollectionItem_GetDisplayName)
    return (char*)MySyscall(pCollectionItem_GetDisplayName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CollectionItem_SetDisplayName)
void
CollectionItem_SetDisplayName(TCollectionItem AObj, CChar char* AValue) {
    GET_FUNC_ADDR(CollectionItem_SetDisplayName)
    MySyscall(pCollectionItem_SetDisplayName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CollectionItem_StaticClassType)
TClass
CollectionItem_StaticClassType() {
    GET_FUNC_ADDR(CollectionItem_StaticClassType)
    return (TClass)MySyscall(pCollectionItem_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TStatusPanels-------------------

DEFINE_FUNC_PTR(StatusPanels_Create)
TStatusPanels
StatusPanels_Create(TStatusBar AOwner) {
    GET_FUNC_ADDR(StatusPanels_Create)
    return (TStatusPanels)MySyscall(pStatusPanels_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanels_Free)
void
StatusPanels_Free(TStatusPanels AObj) {
    GET_FUNC_ADDR(StatusPanels_Free)
    MySyscall(pStatusPanels_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanels_Add)
TStatusPanel
StatusPanels_Add(TStatusPanels AObj) {
    GET_FUNC_ADDR(StatusPanels_Add)
    return (TStatusPanel)MySyscall(pStatusPanels_Add, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanels_Insert)
TStatusPanel
StatusPanels_Insert(TStatusPanels AObj, int32_t Index) {
    GET_FUNC_ADDR(StatusPanels_Insert)
    return (TStatusPanel)MySyscall(pStatusPanels_Insert, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanels_Owner)
TObject
StatusPanels_Owner(TStatusPanels AObj) {
    GET_FUNC_ADDR(StatusPanels_Owner)
    return (TObject)MySyscall(pStatusPanels_Owner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanels_Assign)
void
StatusPanels_Assign(TStatusPanels AObj, TObject Source) {
    GET_FUNC_ADDR(StatusPanels_Assign)
    MySyscall(pStatusPanels_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanels_BeginUpdate)
void
StatusPanels_BeginUpdate(TStatusPanels AObj) {
    GET_FUNC_ADDR(StatusPanels_BeginUpdate)
    MySyscall(pStatusPanels_BeginUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanels_Clear)
void
StatusPanels_Clear(TStatusPanels AObj) {
    GET_FUNC_ADDR(StatusPanels_Clear)
    MySyscall(pStatusPanels_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanels_Delete)
void
StatusPanels_Delete(TStatusPanels AObj, int32_t Index) {
    GET_FUNC_ADDR(StatusPanels_Delete)
    MySyscall(pStatusPanels_Delete, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanels_EndUpdate)
void
StatusPanels_EndUpdate(TStatusPanels AObj) {
    GET_FUNC_ADDR(StatusPanels_EndUpdate)
    MySyscall(pStatusPanels_EndUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanels_FindItemID)
TCollectionItem
StatusPanels_FindItemID(TStatusPanels AObj, int32_t ID) {
    GET_FUNC_ADDR(StatusPanels_FindItemID)
    return (TCollectionItem)MySyscall(pStatusPanels_FindItemID, 2, AObj, ID ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanels_GetNamePath)
char*
StatusPanels_GetNamePath(TStatusPanels AObj) {
    GET_FUNC_ADDR(StatusPanels_GetNamePath)
    return (char*)MySyscall(pStatusPanels_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanels_ClassType)
TClass
StatusPanels_ClassType(TStatusPanels AObj) {
    GET_FUNC_ADDR(StatusPanels_ClassType)
    return (TClass)MySyscall(pStatusPanels_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanels_ClassName)
char*
StatusPanels_ClassName(TStatusPanels AObj) {
    GET_FUNC_ADDR(StatusPanels_ClassName)
    return (char*)MySyscall(pStatusPanels_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanels_InstanceSize)
int32_t
StatusPanels_InstanceSize(TStatusPanels AObj) {
    GET_FUNC_ADDR(StatusPanels_InstanceSize)
    return (int32_t)MySyscall(pStatusPanels_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanels_InheritsFrom)
BOOL
StatusPanels_InheritsFrom(TStatusPanels AObj, TClass AClass) {
    GET_FUNC_ADDR(StatusPanels_InheritsFrom)
    return (BOOL)MySyscall(pStatusPanels_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanels_Equals)
BOOL
StatusPanels_Equals(TStatusPanels AObj, TObject Obj) {
    GET_FUNC_ADDR(StatusPanels_Equals)
    return (BOOL)MySyscall(pStatusPanels_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanels_GetHashCode)
int32_t
StatusPanels_GetHashCode(TStatusPanels AObj) {
    GET_FUNC_ADDR(StatusPanels_GetHashCode)
    return (int32_t)MySyscall(pStatusPanels_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanels_ToString)
char*
StatusPanels_ToString(TStatusPanels AObj) {
    GET_FUNC_ADDR(StatusPanels_ToString)
    return (char*)MySyscall(pStatusPanels_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanels_GetCapacity)
int32_t
StatusPanels_GetCapacity(TStatusPanels AObj) {
    GET_FUNC_ADDR(StatusPanels_GetCapacity)
    return (int32_t)MySyscall(pStatusPanels_GetCapacity, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanels_SetCapacity)
void
StatusPanels_SetCapacity(TStatusPanels AObj, int32_t AValue) {
    GET_FUNC_ADDR(StatusPanels_SetCapacity)
    MySyscall(pStatusPanels_SetCapacity, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanels_GetCount)
int32_t
StatusPanels_GetCount(TStatusPanels AObj) {
    GET_FUNC_ADDR(StatusPanels_GetCount)
    return (int32_t)MySyscall(pStatusPanels_GetCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanels_GetItems)
TStatusPanel
StatusPanels_GetItems(TStatusPanels AObj, int32_t Index) {
    GET_FUNC_ADDR(StatusPanels_GetItems)
    return (TStatusPanel)MySyscall(pStatusPanels_GetItems, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanels_SetItems)
void
StatusPanels_SetItems(TStatusPanels AObj, int32_t Index, TStatusPanel AValue) {
    GET_FUNC_ADDR(StatusPanels_SetItems)
    MySyscall(pStatusPanels_SetItems, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanels_StaticClassType)
TClass
StatusPanels_StaticClassType() {
    GET_FUNC_ADDR(StatusPanels_StaticClassType)
    return (TClass)MySyscall(pStatusPanels_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TStatusPanel-------------------

DEFINE_FUNC_PTR(StatusPanel_Create)
TStatusPanel
StatusPanel_Create(TCollection AOwner) {
    GET_FUNC_ADDR(StatusPanel_Create)
    return (TStatusPanel)MySyscall(pStatusPanel_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_Free)
void
StatusPanel_Free(TStatusPanel AObj) {
    GET_FUNC_ADDR(StatusPanel_Free)
    MySyscall(pStatusPanel_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_Assign)
void
StatusPanel_Assign(TStatusPanel AObj, TObject Source) {
    GET_FUNC_ADDR(StatusPanel_Assign)
    MySyscall(pStatusPanel_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_GetNamePath)
char*
StatusPanel_GetNamePath(TStatusPanel AObj) {
    GET_FUNC_ADDR(StatusPanel_GetNamePath)
    return (char*)MySyscall(pStatusPanel_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_ClassType)
TClass
StatusPanel_ClassType(TStatusPanel AObj) {
    GET_FUNC_ADDR(StatusPanel_ClassType)
    return (TClass)MySyscall(pStatusPanel_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_ClassName)
char*
StatusPanel_ClassName(TStatusPanel AObj) {
    GET_FUNC_ADDR(StatusPanel_ClassName)
    return (char*)MySyscall(pStatusPanel_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_InstanceSize)
int32_t
StatusPanel_InstanceSize(TStatusPanel AObj) {
    GET_FUNC_ADDR(StatusPanel_InstanceSize)
    return (int32_t)MySyscall(pStatusPanel_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_InheritsFrom)
BOOL
StatusPanel_InheritsFrom(TStatusPanel AObj, TClass AClass) {
    GET_FUNC_ADDR(StatusPanel_InheritsFrom)
    return (BOOL)MySyscall(pStatusPanel_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_Equals)
BOOL
StatusPanel_Equals(TStatusPanel AObj, TObject Obj) {
    GET_FUNC_ADDR(StatusPanel_Equals)
    return (BOOL)MySyscall(pStatusPanel_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_GetHashCode)
int32_t
StatusPanel_GetHashCode(TStatusPanel AObj) {
    GET_FUNC_ADDR(StatusPanel_GetHashCode)
    return (int32_t)MySyscall(pStatusPanel_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_ToString)
char*
StatusPanel_ToString(TStatusPanel AObj) {
    GET_FUNC_ADDR(StatusPanel_ToString)
    return (char*)MySyscall(pStatusPanel_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_GetAlignment)
TAlignment
StatusPanel_GetAlignment(TStatusPanel AObj) {
    GET_FUNC_ADDR(StatusPanel_GetAlignment)
    return (TAlignment)MySyscall(pStatusPanel_GetAlignment, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_SetAlignment)
void
StatusPanel_SetAlignment(TStatusPanel AObj, TAlignment AValue) {
    GET_FUNC_ADDR(StatusPanel_SetAlignment)
    MySyscall(pStatusPanel_SetAlignment, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_GetBiDiMode)
TBiDiMode
StatusPanel_GetBiDiMode(TStatusPanel AObj) {
    GET_FUNC_ADDR(StatusPanel_GetBiDiMode)
    return (TBiDiMode)MySyscall(pStatusPanel_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_SetBiDiMode)
void
StatusPanel_SetBiDiMode(TStatusPanel AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(StatusPanel_SetBiDiMode)
    MySyscall(pStatusPanel_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_GetStyle)
TStatusPanelStyle
StatusPanel_GetStyle(TStatusPanel AObj) {
    GET_FUNC_ADDR(StatusPanel_GetStyle)
    return (TStatusPanelStyle)MySyscall(pStatusPanel_GetStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_SetStyle)
void
StatusPanel_SetStyle(TStatusPanel AObj, TStatusPanelStyle AValue) {
    GET_FUNC_ADDR(StatusPanel_SetStyle)
    MySyscall(pStatusPanel_SetStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_GetText)
char*
StatusPanel_GetText(TStatusPanel AObj) {
    GET_FUNC_ADDR(StatusPanel_GetText)
    return (char*)MySyscall(pStatusPanel_GetText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_SetText)
void
StatusPanel_SetText(TStatusPanel AObj, CChar char* AValue) {
    GET_FUNC_ADDR(StatusPanel_SetText)
    MySyscall(pStatusPanel_SetText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_GetWidth)
int32_t
StatusPanel_GetWidth(TStatusPanel AObj) {
    GET_FUNC_ADDR(StatusPanel_GetWidth)
    return (int32_t)MySyscall(pStatusPanel_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_SetWidth)
void
StatusPanel_SetWidth(TStatusPanel AObj, int32_t AValue) {
    GET_FUNC_ADDR(StatusPanel_SetWidth)
    MySyscall(pStatusPanel_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_GetCollection)
TCollection
StatusPanel_GetCollection(TStatusPanel AObj) {
    GET_FUNC_ADDR(StatusPanel_GetCollection)
    return (TCollection)MySyscall(pStatusPanel_GetCollection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_SetCollection)
void
StatusPanel_SetCollection(TStatusPanel AObj, TCollection AValue) {
    GET_FUNC_ADDR(StatusPanel_SetCollection)
    MySyscall(pStatusPanel_SetCollection, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_GetIndex)
int32_t
StatusPanel_GetIndex(TStatusPanel AObj) {
    GET_FUNC_ADDR(StatusPanel_GetIndex)
    return (int32_t)MySyscall(pStatusPanel_GetIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_SetIndex)
void
StatusPanel_SetIndex(TStatusPanel AObj, int32_t AValue) {
    GET_FUNC_ADDR(StatusPanel_SetIndex)
    MySyscall(pStatusPanel_SetIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_GetDisplayName)
char*
StatusPanel_GetDisplayName(TStatusPanel AObj) {
    GET_FUNC_ADDR(StatusPanel_GetDisplayName)
    return (char*)MySyscall(pStatusPanel_GetDisplayName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_SetDisplayName)
void
StatusPanel_SetDisplayName(TStatusPanel AObj, CChar char* AValue) {
    GET_FUNC_ADDR(StatusPanel_SetDisplayName)
    MySyscall(pStatusPanel_SetDisplayName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StatusPanel_StaticClassType)
TClass
StatusPanel_StaticClassType() {
    GET_FUNC_ADDR(StatusPanel_StaticClassType)
    return (TClass)MySyscall(pStatusPanel_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TSpinEdit-------------------

DEFINE_FUNC_PTR(SpinEdit_Create)
TSpinEdit
SpinEdit_Create(TComponent AOwner) {
    GET_FUNC_ADDR(SpinEdit_Create)
    return (TSpinEdit)MySyscall(pSpinEdit_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_Free)
void
SpinEdit_Free(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_Free)
    MySyscall(pSpinEdit_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_Clear)
void
SpinEdit_Clear(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_Clear)
    MySyscall(pSpinEdit_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_ClearSelection)
void
SpinEdit_ClearSelection(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_ClearSelection)
    MySyscall(pSpinEdit_ClearSelection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_CopyToClipboard)
void
SpinEdit_CopyToClipboard(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_CopyToClipboard)
    MySyscall(pSpinEdit_CopyToClipboard, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_CutToClipboard)
void
SpinEdit_CutToClipboard(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_CutToClipboard)
    MySyscall(pSpinEdit_CutToClipboard, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_PasteFromClipboard)
void
SpinEdit_PasteFromClipboard(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_PasteFromClipboard)
    MySyscall(pSpinEdit_PasteFromClipboard, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_Undo)
void
SpinEdit_Undo(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_Undo)
    MySyscall(pSpinEdit_Undo, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SelectAll)
void
SpinEdit_SelectAll(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_SelectAll)
    MySyscall(pSpinEdit_SelectAll, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_CanFocus)
BOOL
SpinEdit_CanFocus(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_CanFocus)
    return (BOOL)MySyscall(pSpinEdit_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_ContainsControl)
BOOL
SpinEdit_ContainsControl(TSpinEdit AObj, TControl Control) {
    GET_FUNC_ADDR(SpinEdit_ContainsControl)
    return (BOOL)MySyscall(pSpinEdit_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_ControlAtPos)
TControl
SpinEdit_ControlAtPos(TSpinEdit AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(SpinEdit_ControlAtPos)
    return (TControl)MySyscall(pSpinEdit_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_DisableAlign)
void
SpinEdit_DisableAlign(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_DisableAlign)
    MySyscall(pSpinEdit_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_EnableAlign)
void
SpinEdit_EnableAlign(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_EnableAlign)
    MySyscall(pSpinEdit_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_FindChildControl)
TControl
SpinEdit_FindChildControl(TSpinEdit AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(SpinEdit_FindChildControl)
    return (TControl)MySyscall(pSpinEdit_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_FlipChildren)
void
SpinEdit_FlipChildren(TSpinEdit AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(SpinEdit_FlipChildren)
    MySyscall(pSpinEdit_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_Focused)
BOOL
SpinEdit_Focused(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_Focused)
    return (BOOL)MySyscall(pSpinEdit_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_HandleAllocated)
BOOL
SpinEdit_HandleAllocated(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_HandleAllocated)
    return (BOOL)MySyscall(pSpinEdit_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_InsertControl)
void
SpinEdit_InsertControl(TSpinEdit AObj, TControl AControl) {
    GET_FUNC_ADDR(SpinEdit_InsertControl)
    MySyscall(pSpinEdit_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_Invalidate)
void
SpinEdit_Invalidate(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_Invalidate)
    MySyscall(pSpinEdit_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_PaintTo)
void
SpinEdit_PaintTo(TSpinEdit AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(SpinEdit_PaintTo)
    MySyscall(pSpinEdit_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_RemoveControl)
void
SpinEdit_RemoveControl(TSpinEdit AObj, TControl AControl) {
    GET_FUNC_ADDR(SpinEdit_RemoveControl)
    MySyscall(pSpinEdit_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_Realign)
void
SpinEdit_Realign(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_Realign)
    MySyscall(pSpinEdit_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_Repaint)
void
SpinEdit_Repaint(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_Repaint)
    MySyscall(pSpinEdit_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_ScaleBy)
void
SpinEdit_ScaleBy(TSpinEdit AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(SpinEdit_ScaleBy)
    MySyscall(pSpinEdit_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_ScrollBy)
void
SpinEdit_ScrollBy(TSpinEdit AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(SpinEdit_ScrollBy)
    MySyscall(pSpinEdit_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetBounds)
void
SpinEdit_SetBounds(TSpinEdit AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(SpinEdit_SetBounds)
    MySyscall(pSpinEdit_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetFocus)
void
SpinEdit_SetFocus(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_SetFocus)
    MySyscall(pSpinEdit_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_Update)
void
SpinEdit_Update(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_Update)
    MySyscall(pSpinEdit_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_BringToFront)
void
SpinEdit_BringToFront(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_BringToFront)
    MySyscall(pSpinEdit_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_ClientToScreen)
TPoint
SpinEdit_ClientToScreen(TSpinEdit AObj, TPoint Point) {
    GET_FUNC_ADDR(SpinEdit_ClientToScreen)
    TPoint result;
    MySyscall(pSpinEdit_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(SpinEdit_ClientToParent)
TPoint
SpinEdit_ClientToParent(TSpinEdit AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(SpinEdit_ClientToParent)
    TPoint result;
    MySyscall(pSpinEdit_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(SpinEdit_Dragging)
BOOL
SpinEdit_Dragging(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_Dragging)
    return (BOOL)MySyscall(pSpinEdit_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_HasParent)
BOOL
SpinEdit_HasParent(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_HasParent)
    return (BOOL)MySyscall(pSpinEdit_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_Hide)
void
SpinEdit_Hide(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_Hide)
    MySyscall(pSpinEdit_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_Perform)
intptr_t
SpinEdit_Perform(TSpinEdit AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(SpinEdit_Perform)
    return (intptr_t)MySyscall(pSpinEdit_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_Refresh)
void
SpinEdit_Refresh(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_Refresh)
    MySyscall(pSpinEdit_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_ScreenToClient)
TPoint
SpinEdit_ScreenToClient(TSpinEdit AObj, TPoint Point) {
    GET_FUNC_ADDR(SpinEdit_ScreenToClient)
    TPoint result;
    MySyscall(pSpinEdit_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(SpinEdit_ParentToClient)
TPoint
SpinEdit_ParentToClient(TSpinEdit AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(SpinEdit_ParentToClient)
    TPoint result;
    MySyscall(pSpinEdit_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(SpinEdit_SendToBack)
void
SpinEdit_SendToBack(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_SendToBack)
    MySyscall(pSpinEdit_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_Show)
void
SpinEdit_Show(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_Show)
    MySyscall(pSpinEdit_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetTextBuf)
int32_t
SpinEdit_GetTextBuf(TSpinEdit AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(SpinEdit_GetTextBuf)
    return (int32_t)MySyscall(pSpinEdit_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetTextLen)
int32_t
SpinEdit_GetTextLen(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetTextLen)
    return (int32_t)MySyscall(pSpinEdit_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetTextBuf)
void
SpinEdit_SetTextBuf(TSpinEdit AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(SpinEdit_SetTextBuf)
    MySyscall(pSpinEdit_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_FindComponent)
TComponent
SpinEdit_FindComponent(TSpinEdit AObj, CChar char* AName) {
    GET_FUNC_ADDR(SpinEdit_FindComponent)
    return (TComponent)MySyscall(pSpinEdit_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetNamePath)
char*
SpinEdit_GetNamePath(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetNamePath)
    return (char*)MySyscall(pSpinEdit_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_Assign)
void
SpinEdit_Assign(TSpinEdit AObj, TObject Source) {
    GET_FUNC_ADDR(SpinEdit_Assign)
    MySyscall(pSpinEdit_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_ClassType)
TClass
SpinEdit_ClassType(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_ClassType)
    return (TClass)MySyscall(pSpinEdit_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_ClassName)
char*
SpinEdit_ClassName(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_ClassName)
    return (char*)MySyscall(pSpinEdit_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_InstanceSize)
int32_t
SpinEdit_InstanceSize(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_InstanceSize)
    return (int32_t)MySyscall(pSpinEdit_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_InheritsFrom)
BOOL
SpinEdit_InheritsFrom(TSpinEdit AObj, TClass AClass) {
    GET_FUNC_ADDR(SpinEdit_InheritsFrom)
    return (BOOL)MySyscall(pSpinEdit_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_Equals)
BOOL
SpinEdit_Equals(TSpinEdit AObj, TObject Obj) {
    GET_FUNC_ADDR(SpinEdit_Equals)
    return (BOOL)MySyscall(pSpinEdit_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetHashCode)
int32_t
SpinEdit_GetHashCode(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetHashCode)
    return (int32_t)MySyscall(pSpinEdit_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_ToString)
char*
SpinEdit_ToString(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_ToString)
    return (char*)MySyscall(pSpinEdit_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_AnchorToNeighbour)
void
SpinEdit_AnchorToNeighbour(TSpinEdit AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(SpinEdit_AnchorToNeighbour)
    MySyscall(pSpinEdit_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_AnchorParallel)
void
SpinEdit_AnchorParallel(TSpinEdit AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(SpinEdit_AnchorParallel)
    MySyscall(pSpinEdit_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_AnchorHorizontalCenterTo)
void
SpinEdit_AnchorHorizontalCenterTo(TSpinEdit AObj, TControl ASibling) {
    GET_FUNC_ADDR(SpinEdit_AnchorHorizontalCenterTo)
    MySyscall(pSpinEdit_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_AnchorVerticalCenterTo)
void
SpinEdit_AnchorVerticalCenterTo(TSpinEdit AObj, TControl ASibling) {
    GET_FUNC_ADDR(SpinEdit_AnchorVerticalCenterTo)
    MySyscall(pSpinEdit_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_AnchorSame)
void
SpinEdit_AnchorSame(TSpinEdit AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(SpinEdit_AnchorSame)
    MySyscall(pSpinEdit_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_AnchorAsAlign)
void
SpinEdit_AnchorAsAlign(TSpinEdit AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(SpinEdit_AnchorAsAlign)
    MySyscall(pSpinEdit_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_AnchorClient)
void
SpinEdit_AnchorClient(TSpinEdit AObj, int32_t ASpace) {
    GET_FUNC_ADDR(SpinEdit_AnchorClient)
    MySyscall(pSpinEdit_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_ScaleDesignToForm)
int32_t
SpinEdit_ScaleDesignToForm(TSpinEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(SpinEdit_ScaleDesignToForm)
    return (int32_t)MySyscall(pSpinEdit_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_ScaleFormToDesign)
int32_t
SpinEdit_ScaleFormToDesign(TSpinEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(SpinEdit_ScaleFormToDesign)
    return (int32_t)MySyscall(pSpinEdit_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_Scale96ToForm)
int32_t
SpinEdit_Scale96ToForm(TSpinEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(SpinEdit_Scale96ToForm)
    return (int32_t)MySyscall(pSpinEdit_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_ScaleFormTo96)
int32_t
SpinEdit_ScaleFormTo96(TSpinEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(SpinEdit_ScaleFormTo96)
    return (int32_t)MySyscall(pSpinEdit_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_Scale96ToFont)
int32_t
SpinEdit_Scale96ToFont(TSpinEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(SpinEdit_Scale96ToFont)
    return (int32_t)MySyscall(pSpinEdit_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_ScaleFontTo96)
int32_t
SpinEdit_ScaleFontTo96(TSpinEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(SpinEdit_ScaleFontTo96)
    return (int32_t)MySyscall(pSpinEdit_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_ScaleScreenToFont)
int32_t
SpinEdit_ScaleScreenToFont(TSpinEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(SpinEdit_ScaleScreenToFont)
    return (int32_t)MySyscall(pSpinEdit_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_ScaleFontToScreen)
int32_t
SpinEdit_ScaleFontToScreen(TSpinEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(SpinEdit_ScaleFontToScreen)
    return (int32_t)MySyscall(pSpinEdit_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_Scale96ToScreen)
int32_t
SpinEdit_Scale96ToScreen(TSpinEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(SpinEdit_Scale96ToScreen)
    return (int32_t)MySyscall(pSpinEdit_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_ScaleScreenTo96)
int32_t
SpinEdit_ScaleScreenTo96(TSpinEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(SpinEdit_ScaleScreenTo96)
    return (int32_t)MySyscall(pSpinEdit_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_AutoAdjustLayout)
void
SpinEdit_AutoAdjustLayout(TSpinEdit AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(SpinEdit_AutoAdjustLayout)
    MySyscall(pSpinEdit_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_FixDesignFontsPPI)
void
SpinEdit_FixDesignFontsPPI(TSpinEdit AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(SpinEdit_FixDesignFontsPPI)
    MySyscall(pSpinEdit_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_ScaleFontsPPI)
void
SpinEdit_ScaleFontsPPI(TSpinEdit AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(SpinEdit_ScaleFontsPPI)
    MySyscall(pSpinEdit_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetAnchors)
TAnchors
SpinEdit_GetAnchors(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetAnchors)
    return (TAnchors)MySyscall(pSpinEdit_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetAnchors)
void
SpinEdit_SetAnchors(TSpinEdit AObj, TAnchors AValue) {
    GET_FUNC_ADDR(SpinEdit_SetAnchors)
    MySyscall(pSpinEdit_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetAutoSelect)
BOOL
SpinEdit_GetAutoSelect(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetAutoSelect)
    return (BOOL)MySyscall(pSpinEdit_GetAutoSelect, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetAutoSelect)
void
SpinEdit_SetAutoSelect(TSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(SpinEdit_SetAutoSelect)
    MySyscall(pSpinEdit_SetAutoSelect, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetAutoSize)
BOOL
SpinEdit_GetAutoSize(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetAutoSize)
    return (BOOL)MySyscall(pSpinEdit_GetAutoSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetAutoSize)
void
SpinEdit_SetAutoSize(TSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(SpinEdit_SetAutoSize)
    MySyscall(pSpinEdit_SetAutoSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetColor)
TColor
SpinEdit_GetColor(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetColor)
    return (TColor)MySyscall(pSpinEdit_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetColor)
void
SpinEdit_SetColor(TSpinEdit AObj, TColor AValue) {
    GET_FUNC_ADDR(SpinEdit_SetColor)
    MySyscall(pSpinEdit_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetConstraints)
TSizeConstraints
SpinEdit_GetConstraints(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetConstraints)
    return (TSizeConstraints)MySyscall(pSpinEdit_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetConstraints)
void
SpinEdit_SetConstraints(TSpinEdit AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(SpinEdit_SetConstraints)
    MySyscall(pSpinEdit_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetEnabled)
BOOL
SpinEdit_GetEnabled(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetEnabled)
    return (BOOL)MySyscall(pSpinEdit_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetEnabled)
void
SpinEdit_SetEnabled(TSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(SpinEdit_SetEnabled)
    MySyscall(pSpinEdit_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetFont)
TFont
SpinEdit_GetFont(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetFont)
    return (TFont)MySyscall(pSpinEdit_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetFont)
void
SpinEdit_SetFont(TSpinEdit AObj, TFont AValue) {
    GET_FUNC_ADDR(SpinEdit_SetFont)
    MySyscall(pSpinEdit_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetIncrement)
int32_t
SpinEdit_GetIncrement(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetIncrement)
    return (int32_t)MySyscall(pSpinEdit_GetIncrement, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetIncrement)
void
SpinEdit_SetIncrement(TSpinEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(SpinEdit_SetIncrement)
    MySyscall(pSpinEdit_SetIncrement, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetMaxLength)
int32_t
SpinEdit_GetMaxLength(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetMaxLength)
    return (int32_t)MySyscall(pSpinEdit_GetMaxLength, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetMaxLength)
void
SpinEdit_SetMaxLength(TSpinEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(SpinEdit_SetMaxLength)
    MySyscall(pSpinEdit_SetMaxLength, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetMaxValue)
int32_t
SpinEdit_GetMaxValue(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetMaxValue)
    return (int32_t)MySyscall(pSpinEdit_GetMaxValue, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetMaxValue)
void
SpinEdit_SetMaxValue(TSpinEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(SpinEdit_SetMaxValue)
    MySyscall(pSpinEdit_SetMaxValue, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetMinValue)
int32_t
SpinEdit_GetMinValue(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetMinValue)
    return (int32_t)MySyscall(pSpinEdit_GetMinValue, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetMinValue)
void
SpinEdit_SetMinValue(TSpinEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(SpinEdit_SetMinValue)
    MySyscall(pSpinEdit_SetMinValue, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetParentColor)
BOOL
SpinEdit_GetParentColor(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetParentColor)
    return (BOOL)MySyscall(pSpinEdit_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetParentColor)
void
SpinEdit_SetParentColor(TSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(SpinEdit_SetParentColor)
    MySyscall(pSpinEdit_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetParentFont)
BOOL
SpinEdit_GetParentFont(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetParentFont)
    return (BOOL)MySyscall(pSpinEdit_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetParentFont)
void
SpinEdit_SetParentFont(TSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(SpinEdit_SetParentFont)
    MySyscall(pSpinEdit_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetParentShowHint)
BOOL
SpinEdit_GetParentShowHint(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetParentShowHint)
    return (BOOL)MySyscall(pSpinEdit_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetParentShowHint)
void
SpinEdit_SetParentShowHint(TSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(SpinEdit_SetParentShowHint)
    MySyscall(pSpinEdit_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetPopupMenu)
TPopupMenu
SpinEdit_GetPopupMenu(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetPopupMenu)
    return (TPopupMenu)MySyscall(pSpinEdit_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetPopupMenu)
void
SpinEdit_SetPopupMenu(TSpinEdit AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(SpinEdit_SetPopupMenu)
    MySyscall(pSpinEdit_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetReadOnly)
BOOL
SpinEdit_GetReadOnly(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetReadOnly)
    return (BOOL)MySyscall(pSpinEdit_GetReadOnly, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetReadOnly)
void
SpinEdit_SetReadOnly(TSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(SpinEdit_SetReadOnly)
    MySyscall(pSpinEdit_SetReadOnly, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetShowHint)
BOOL
SpinEdit_GetShowHint(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetShowHint)
    return (BOOL)MySyscall(pSpinEdit_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetShowHint)
void
SpinEdit_SetShowHint(TSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(SpinEdit_SetShowHint)
    MySyscall(pSpinEdit_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetTabOrder)
TTabOrder
SpinEdit_GetTabOrder(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetTabOrder)
    return (TTabOrder)MySyscall(pSpinEdit_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetTabOrder)
void
SpinEdit_SetTabOrder(TSpinEdit AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(SpinEdit_SetTabOrder)
    MySyscall(pSpinEdit_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetTabStop)
BOOL
SpinEdit_GetTabStop(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetTabStop)
    return (BOOL)MySyscall(pSpinEdit_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetTabStop)
void
SpinEdit_SetTabStop(TSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(SpinEdit_SetTabStop)
    MySyscall(pSpinEdit_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetValue)
int32_t
SpinEdit_GetValue(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetValue)
    return (int32_t)MySyscall(pSpinEdit_GetValue, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetValue)
void
SpinEdit_SetValue(TSpinEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(SpinEdit_SetValue)
    MySyscall(pSpinEdit_SetValue, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetVisible)
BOOL
SpinEdit_GetVisible(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetVisible)
    return (BOOL)MySyscall(pSpinEdit_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetVisible)
void
SpinEdit_SetVisible(TSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(SpinEdit_SetVisible)
    MySyscall(pSpinEdit_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetOnChange)
void
SpinEdit_SetOnChange(TSpinEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(SpinEdit_SetOnChange)
    MySyscall(pSpinEdit_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetOnClick)
void
SpinEdit_SetOnClick(TSpinEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(SpinEdit_SetOnClick)
    MySyscall(pSpinEdit_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetOnEnter)
void
SpinEdit_SetOnEnter(TSpinEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(SpinEdit_SetOnEnter)
    MySyscall(pSpinEdit_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetOnExit)
void
SpinEdit_SetOnExit(TSpinEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(SpinEdit_SetOnExit)
    MySyscall(pSpinEdit_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetOnKeyDown)
void
SpinEdit_SetOnKeyDown(TSpinEdit AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(SpinEdit_SetOnKeyDown)
    MySyscall(pSpinEdit_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetOnKeyPress)
void
SpinEdit_SetOnKeyPress(TSpinEdit AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(SpinEdit_SetOnKeyPress)
    MySyscall(pSpinEdit_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetOnKeyUp)
void
SpinEdit_SetOnKeyUp(TSpinEdit AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(SpinEdit_SetOnKeyUp)
    MySyscall(pSpinEdit_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetOnMouseDown)
void
SpinEdit_SetOnMouseDown(TSpinEdit AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(SpinEdit_SetOnMouseDown)
    MySyscall(pSpinEdit_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetOnMouseMove)
void
SpinEdit_SetOnMouseMove(TSpinEdit AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(SpinEdit_SetOnMouseMove)
    MySyscall(pSpinEdit_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetOnMouseUp)
void
SpinEdit_SetOnMouseUp(TSpinEdit AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(SpinEdit_SetOnMouseUp)
    MySyscall(pSpinEdit_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetAlignment)
TAlignment
SpinEdit_GetAlignment(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetAlignment)
    return (TAlignment)MySyscall(pSpinEdit_GetAlignment, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetAlignment)
void
SpinEdit_SetAlignment(TSpinEdit AObj, TAlignment AValue) {
    GET_FUNC_ADDR(SpinEdit_SetAlignment)
    MySyscall(pSpinEdit_SetAlignment, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetCanUndo)
BOOL
SpinEdit_GetCanUndo(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetCanUndo)
    return (BOOL)MySyscall(pSpinEdit_GetCanUndo, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetModified)
BOOL
SpinEdit_GetModified(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetModified)
    return (BOOL)MySyscall(pSpinEdit_GetModified, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetModified)
void
SpinEdit_SetModified(TSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(SpinEdit_SetModified)
    MySyscall(pSpinEdit_SetModified, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetSelLength)
int32_t
SpinEdit_GetSelLength(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetSelLength)
    return (int32_t)MySyscall(pSpinEdit_GetSelLength, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetSelLength)
void
SpinEdit_SetSelLength(TSpinEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(SpinEdit_SetSelLength)
    MySyscall(pSpinEdit_SetSelLength, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetSelStart)
int32_t
SpinEdit_GetSelStart(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetSelStart)
    return (int32_t)MySyscall(pSpinEdit_GetSelStart, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetSelStart)
void
SpinEdit_SetSelStart(TSpinEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(SpinEdit_SetSelStart)
    MySyscall(pSpinEdit_SetSelStart, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetSelText)
char*
SpinEdit_GetSelText(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetSelText)
    return (char*)MySyscall(pSpinEdit_GetSelText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetSelText)
void
SpinEdit_SetSelText(TSpinEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SpinEdit_SetSelText)
    MySyscall(pSpinEdit_SetSelText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetText)
char*
SpinEdit_GetText(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetText)
    return (char*)MySyscall(pSpinEdit_GetText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetText)
void
SpinEdit_SetText(TSpinEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SpinEdit_SetText)
    MySyscall(pSpinEdit_SetText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetTextHint)
char*
SpinEdit_GetTextHint(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetTextHint)
    return (char*)MySyscall(pSpinEdit_GetTextHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetTextHint)
void
SpinEdit_SetTextHint(TSpinEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SpinEdit_SetTextHint)
    MySyscall(pSpinEdit_SetTextHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetDockClientCount)
int32_t
SpinEdit_GetDockClientCount(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetDockClientCount)
    return (int32_t)MySyscall(pSpinEdit_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetDockSite)
BOOL
SpinEdit_GetDockSite(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetDockSite)
    return (BOOL)MySyscall(pSpinEdit_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetDockSite)
void
SpinEdit_SetDockSite(TSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(SpinEdit_SetDockSite)
    MySyscall(pSpinEdit_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetDoubleBuffered)
BOOL
SpinEdit_GetDoubleBuffered(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetDoubleBuffered)
    return (BOOL)MySyscall(pSpinEdit_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetDoubleBuffered)
void
SpinEdit_SetDoubleBuffered(TSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(SpinEdit_SetDoubleBuffered)
    MySyscall(pSpinEdit_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetMouseInClient)
BOOL
SpinEdit_GetMouseInClient(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetMouseInClient)
    return (BOOL)MySyscall(pSpinEdit_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetVisibleDockClientCount)
int32_t
SpinEdit_GetVisibleDockClientCount(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pSpinEdit_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetBrush)
TBrush
SpinEdit_GetBrush(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetBrush)
    return (TBrush)MySyscall(pSpinEdit_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetControlCount)
int32_t
SpinEdit_GetControlCount(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetControlCount)
    return (int32_t)MySyscall(pSpinEdit_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetHandle)
HWND
SpinEdit_GetHandle(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetHandle)
    return (HWND)MySyscall(pSpinEdit_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetParentDoubleBuffered)
BOOL
SpinEdit_GetParentDoubleBuffered(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pSpinEdit_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetParentDoubleBuffered)
void
SpinEdit_SetParentDoubleBuffered(TSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(SpinEdit_SetParentDoubleBuffered)
    MySyscall(pSpinEdit_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetParentWindow)
HWND
SpinEdit_GetParentWindow(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetParentWindow)
    return (HWND)MySyscall(pSpinEdit_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetParentWindow)
void
SpinEdit_SetParentWindow(TSpinEdit AObj, HWND AValue) {
    GET_FUNC_ADDR(SpinEdit_SetParentWindow)
    MySyscall(pSpinEdit_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetShowing)
BOOL
SpinEdit_GetShowing(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetShowing)
    return (BOOL)MySyscall(pSpinEdit_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetUseDockManager)
BOOL
SpinEdit_GetUseDockManager(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetUseDockManager)
    return (BOOL)MySyscall(pSpinEdit_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetUseDockManager)
void
SpinEdit_SetUseDockManager(TSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(SpinEdit_SetUseDockManager)
    MySyscall(pSpinEdit_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetAction)
TAction
SpinEdit_GetAction(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetAction)
    return (TAction)MySyscall(pSpinEdit_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetAction)
void
SpinEdit_SetAction(TSpinEdit AObj, TAction AValue) {
    GET_FUNC_ADDR(SpinEdit_SetAction)
    MySyscall(pSpinEdit_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetAlign)
TAlign
SpinEdit_GetAlign(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetAlign)
    return (TAlign)MySyscall(pSpinEdit_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetAlign)
void
SpinEdit_SetAlign(TSpinEdit AObj, TAlign AValue) {
    GET_FUNC_ADDR(SpinEdit_SetAlign)
    MySyscall(pSpinEdit_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetBiDiMode)
TBiDiMode
SpinEdit_GetBiDiMode(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetBiDiMode)
    return (TBiDiMode)MySyscall(pSpinEdit_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetBiDiMode)
void
SpinEdit_SetBiDiMode(TSpinEdit AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(SpinEdit_SetBiDiMode)
    MySyscall(pSpinEdit_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetBoundsRect)
TRect
SpinEdit_GetBoundsRect(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetBoundsRect)
    TRect result;
    MySyscall(pSpinEdit_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(SpinEdit_SetBoundsRect)
void
SpinEdit_SetBoundsRect(TSpinEdit AObj, TRect AValue) {
    GET_FUNC_ADDR(SpinEdit_SetBoundsRect)
    MySyscall(pSpinEdit_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetClientHeight)
int32_t
SpinEdit_GetClientHeight(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetClientHeight)
    return (int32_t)MySyscall(pSpinEdit_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetClientHeight)
void
SpinEdit_SetClientHeight(TSpinEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(SpinEdit_SetClientHeight)
    MySyscall(pSpinEdit_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetClientOrigin)
TPoint
SpinEdit_GetClientOrigin(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetClientOrigin)
    TPoint result;
    MySyscall(pSpinEdit_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(SpinEdit_GetClientRect)
TRect
SpinEdit_GetClientRect(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetClientRect)
    TRect result;
    MySyscall(pSpinEdit_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(SpinEdit_GetClientWidth)
int32_t
SpinEdit_GetClientWidth(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetClientWidth)
    return (int32_t)MySyscall(pSpinEdit_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetClientWidth)
void
SpinEdit_SetClientWidth(TSpinEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(SpinEdit_SetClientWidth)
    MySyscall(pSpinEdit_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetControlState)
TControlState
SpinEdit_GetControlState(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetControlState)
    return (TControlState)MySyscall(pSpinEdit_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetControlState)
void
SpinEdit_SetControlState(TSpinEdit AObj, TControlState AValue) {
    GET_FUNC_ADDR(SpinEdit_SetControlState)
    MySyscall(pSpinEdit_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetControlStyle)
TControlStyle
SpinEdit_GetControlStyle(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetControlStyle)
    return (TControlStyle)MySyscall(pSpinEdit_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetControlStyle)
void
SpinEdit_SetControlStyle(TSpinEdit AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(SpinEdit_SetControlStyle)
    MySyscall(pSpinEdit_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetFloating)
BOOL
SpinEdit_GetFloating(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetFloating)
    return (BOOL)MySyscall(pSpinEdit_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetParent)
TWinControl
SpinEdit_GetParent(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetParent)
    return (TWinControl)MySyscall(pSpinEdit_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetParent)
void
SpinEdit_SetParent(TSpinEdit AObj, TWinControl AValue) {
    GET_FUNC_ADDR(SpinEdit_SetParent)
    MySyscall(pSpinEdit_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetLeft)
int32_t
SpinEdit_GetLeft(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetLeft)
    return (int32_t)MySyscall(pSpinEdit_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetLeft)
void
SpinEdit_SetLeft(TSpinEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(SpinEdit_SetLeft)
    MySyscall(pSpinEdit_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetTop)
int32_t
SpinEdit_GetTop(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetTop)
    return (int32_t)MySyscall(pSpinEdit_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetTop)
void
SpinEdit_SetTop(TSpinEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(SpinEdit_SetTop)
    MySyscall(pSpinEdit_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetWidth)
int32_t
SpinEdit_GetWidth(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetWidth)
    return (int32_t)MySyscall(pSpinEdit_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetWidth)
void
SpinEdit_SetWidth(TSpinEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(SpinEdit_SetWidth)
    MySyscall(pSpinEdit_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetHeight)
int32_t
SpinEdit_GetHeight(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetHeight)
    return (int32_t)MySyscall(pSpinEdit_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetHeight)
void
SpinEdit_SetHeight(TSpinEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(SpinEdit_SetHeight)
    MySyscall(pSpinEdit_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetCursor)
TCursor
SpinEdit_GetCursor(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetCursor)
    return (TCursor)MySyscall(pSpinEdit_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetCursor)
void
SpinEdit_SetCursor(TSpinEdit AObj, TCursor AValue) {
    GET_FUNC_ADDR(SpinEdit_SetCursor)
    MySyscall(pSpinEdit_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetHint)
char*
SpinEdit_GetHint(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetHint)
    return (char*)MySyscall(pSpinEdit_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetHint)
void
SpinEdit_SetHint(TSpinEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SpinEdit_SetHint)
    MySyscall(pSpinEdit_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetComponentCount)
int32_t
SpinEdit_GetComponentCount(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetComponentCount)
    return (int32_t)MySyscall(pSpinEdit_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetComponentIndex)
int32_t
SpinEdit_GetComponentIndex(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetComponentIndex)
    return (int32_t)MySyscall(pSpinEdit_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetComponentIndex)
void
SpinEdit_SetComponentIndex(TSpinEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(SpinEdit_SetComponentIndex)
    MySyscall(pSpinEdit_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetOwner)
TComponent
SpinEdit_GetOwner(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetOwner)
    return (TComponent)MySyscall(pSpinEdit_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetName)
char*
SpinEdit_GetName(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetName)
    return (char*)MySyscall(pSpinEdit_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetName)
void
SpinEdit_SetName(TSpinEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(SpinEdit_SetName)
    MySyscall(pSpinEdit_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetTag)
intptr_t
SpinEdit_GetTag(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetTag)
    return (intptr_t)MySyscall(pSpinEdit_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetTag)
void
SpinEdit_SetTag(TSpinEdit AObj, intptr_t AValue) {
    GET_FUNC_ADDR(SpinEdit_SetTag)
    MySyscall(pSpinEdit_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetAnchorSideLeft)
TAnchorSide
SpinEdit_GetAnchorSideLeft(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pSpinEdit_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetAnchorSideLeft)
void
SpinEdit_SetAnchorSideLeft(TSpinEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(SpinEdit_SetAnchorSideLeft)
    MySyscall(pSpinEdit_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetAnchorSideTop)
TAnchorSide
SpinEdit_GetAnchorSideTop(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pSpinEdit_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetAnchorSideTop)
void
SpinEdit_SetAnchorSideTop(TSpinEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(SpinEdit_SetAnchorSideTop)
    MySyscall(pSpinEdit_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetAnchorSideRight)
TAnchorSide
SpinEdit_GetAnchorSideRight(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pSpinEdit_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetAnchorSideRight)
void
SpinEdit_SetAnchorSideRight(TSpinEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(SpinEdit_SetAnchorSideRight)
    MySyscall(pSpinEdit_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetAnchorSideBottom)
TAnchorSide
SpinEdit_GetAnchorSideBottom(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pSpinEdit_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetAnchorSideBottom)
void
SpinEdit_SetAnchorSideBottom(TSpinEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(SpinEdit_SetAnchorSideBottom)
    MySyscall(pSpinEdit_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetChildSizing)
TControlChildSizing
SpinEdit_GetChildSizing(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetChildSizing)
    return (TControlChildSizing)MySyscall(pSpinEdit_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetChildSizing)
void
SpinEdit_SetChildSizing(TSpinEdit AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(SpinEdit_SetChildSizing)
    MySyscall(pSpinEdit_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetBorderSpacing)
TControlBorderSpacing
SpinEdit_GetBorderSpacing(TSpinEdit AObj) {
    GET_FUNC_ADDR(SpinEdit_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pSpinEdit_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_SetBorderSpacing)
void
SpinEdit_SetBorderSpacing(TSpinEdit AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(SpinEdit_SetBorderSpacing)
    MySyscall(pSpinEdit_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetDockClients)
TControl
SpinEdit_GetDockClients(TSpinEdit AObj, int32_t Index) {
    GET_FUNC_ADDR(SpinEdit_GetDockClients)
    return (TControl)MySyscall(pSpinEdit_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetControls)
TControl
SpinEdit_GetControls(TSpinEdit AObj, int32_t Index) {
    GET_FUNC_ADDR(SpinEdit_GetControls)
    return (TControl)MySyscall(pSpinEdit_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetComponents)
TComponent
SpinEdit_GetComponents(TSpinEdit AObj, int32_t AIndex) {
    GET_FUNC_ADDR(SpinEdit_GetComponents)
    return (TComponent)MySyscall(pSpinEdit_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_GetAnchorSide)
TAnchorSide
SpinEdit_GetAnchorSide(TSpinEdit AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(SpinEdit_GetAnchorSide)
    return (TAnchorSide)MySyscall(pSpinEdit_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SpinEdit_StaticClassType)
TClass
SpinEdit_StaticClassType() {
    GET_FUNC_ADDR(SpinEdit_StaticClassType)
    return (TClass)MySyscall(pSpinEdit_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TFloatSpinEdit-------------------

DEFINE_FUNC_PTR(FloatSpinEdit_Create)
TFloatSpinEdit
FloatSpinEdit_Create(TComponent AOwner) {
    GET_FUNC_ADDR(FloatSpinEdit_Create)
    return (TFloatSpinEdit)MySyscall(pFloatSpinEdit_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_Free)
void
FloatSpinEdit_Free(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_Free)
    MySyscall(pFloatSpinEdit_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_Clear)
void
FloatSpinEdit_Clear(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_Clear)
    MySyscall(pFloatSpinEdit_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_ClearSelection)
void
FloatSpinEdit_ClearSelection(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_ClearSelection)
    MySyscall(pFloatSpinEdit_ClearSelection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_CopyToClipboard)
void
FloatSpinEdit_CopyToClipboard(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_CopyToClipboard)
    MySyscall(pFloatSpinEdit_CopyToClipboard, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_CutToClipboard)
void
FloatSpinEdit_CutToClipboard(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_CutToClipboard)
    MySyscall(pFloatSpinEdit_CutToClipboard, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_PasteFromClipboard)
void
FloatSpinEdit_PasteFromClipboard(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_PasteFromClipboard)
    MySyscall(pFloatSpinEdit_PasteFromClipboard, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_Undo)
void
FloatSpinEdit_Undo(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_Undo)
    MySyscall(pFloatSpinEdit_Undo, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SelectAll)
void
FloatSpinEdit_SelectAll(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_SelectAll)
    MySyscall(pFloatSpinEdit_SelectAll, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_CanFocus)
BOOL
FloatSpinEdit_CanFocus(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_CanFocus)
    return (BOOL)MySyscall(pFloatSpinEdit_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_ContainsControl)
BOOL
FloatSpinEdit_ContainsControl(TFloatSpinEdit AObj, TControl Control) {
    GET_FUNC_ADDR(FloatSpinEdit_ContainsControl)
    return (BOOL)MySyscall(pFloatSpinEdit_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_ControlAtPos)
TControl
FloatSpinEdit_ControlAtPos(TFloatSpinEdit AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(FloatSpinEdit_ControlAtPos)
    return (TControl)MySyscall(pFloatSpinEdit_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_DisableAlign)
void
FloatSpinEdit_DisableAlign(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_DisableAlign)
    MySyscall(pFloatSpinEdit_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_EnableAlign)
void
FloatSpinEdit_EnableAlign(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_EnableAlign)
    MySyscall(pFloatSpinEdit_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_FindChildControl)
TControl
FloatSpinEdit_FindChildControl(TFloatSpinEdit AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(FloatSpinEdit_FindChildControl)
    return (TControl)MySyscall(pFloatSpinEdit_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_FlipChildren)
void
FloatSpinEdit_FlipChildren(TFloatSpinEdit AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(FloatSpinEdit_FlipChildren)
    MySyscall(pFloatSpinEdit_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_Focused)
BOOL
FloatSpinEdit_Focused(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_Focused)
    return (BOOL)MySyscall(pFloatSpinEdit_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_HandleAllocated)
BOOL
FloatSpinEdit_HandleAllocated(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_HandleAllocated)
    return (BOOL)MySyscall(pFloatSpinEdit_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_InsertControl)
void
FloatSpinEdit_InsertControl(TFloatSpinEdit AObj, TControl AControl) {
    GET_FUNC_ADDR(FloatSpinEdit_InsertControl)
    MySyscall(pFloatSpinEdit_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_Invalidate)
void
FloatSpinEdit_Invalidate(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_Invalidate)
    MySyscall(pFloatSpinEdit_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_PaintTo)
void
FloatSpinEdit_PaintTo(TFloatSpinEdit AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(FloatSpinEdit_PaintTo)
    MySyscall(pFloatSpinEdit_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_RemoveControl)
void
FloatSpinEdit_RemoveControl(TFloatSpinEdit AObj, TControl AControl) {
    GET_FUNC_ADDR(FloatSpinEdit_RemoveControl)
    MySyscall(pFloatSpinEdit_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_Realign)
void
FloatSpinEdit_Realign(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_Realign)
    MySyscall(pFloatSpinEdit_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_Repaint)
void
FloatSpinEdit_Repaint(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_Repaint)
    MySyscall(pFloatSpinEdit_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_ScaleBy)
void
FloatSpinEdit_ScaleBy(TFloatSpinEdit AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(FloatSpinEdit_ScaleBy)
    MySyscall(pFloatSpinEdit_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_ScrollBy)
void
FloatSpinEdit_ScrollBy(TFloatSpinEdit AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(FloatSpinEdit_ScrollBy)
    MySyscall(pFloatSpinEdit_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetBounds)
void
FloatSpinEdit_SetBounds(TFloatSpinEdit AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(FloatSpinEdit_SetBounds)
    MySyscall(pFloatSpinEdit_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetFocus)
void
FloatSpinEdit_SetFocus(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_SetFocus)
    MySyscall(pFloatSpinEdit_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_Update)
void
FloatSpinEdit_Update(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_Update)
    MySyscall(pFloatSpinEdit_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_BringToFront)
void
FloatSpinEdit_BringToFront(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_BringToFront)
    MySyscall(pFloatSpinEdit_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_ClientToScreen)
TPoint
FloatSpinEdit_ClientToScreen(TFloatSpinEdit AObj, TPoint Point) {
    GET_FUNC_ADDR(FloatSpinEdit_ClientToScreen)
    TPoint result;
    MySyscall(pFloatSpinEdit_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(FloatSpinEdit_ClientToParent)
TPoint
FloatSpinEdit_ClientToParent(TFloatSpinEdit AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(FloatSpinEdit_ClientToParent)
    TPoint result;
    MySyscall(pFloatSpinEdit_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(FloatSpinEdit_Dragging)
BOOL
FloatSpinEdit_Dragging(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_Dragging)
    return (BOOL)MySyscall(pFloatSpinEdit_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_HasParent)
BOOL
FloatSpinEdit_HasParent(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_HasParent)
    return (BOOL)MySyscall(pFloatSpinEdit_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_Hide)
void
FloatSpinEdit_Hide(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_Hide)
    MySyscall(pFloatSpinEdit_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_Perform)
intptr_t
FloatSpinEdit_Perform(TFloatSpinEdit AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(FloatSpinEdit_Perform)
    return (intptr_t)MySyscall(pFloatSpinEdit_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_Refresh)
void
FloatSpinEdit_Refresh(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_Refresh)
    MySyscall(pFloatSpinEdit_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_ScreenToClient)
TPoint
FloatSpinEdit_ScreenToClient(TFloatSpinEdit AObj, TPoint Point) {
    GET_FUNC_ADDR(FloatSpinEdit_ScreenToClient)
    TPoint result;
    MySyscall(pFloatSpinEdit_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(FloatSpinEdit_ParentToClient)
TPoint
FloatSpinEdit_ParentToClient(TFloatSpinEdit AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(FloatSpinEdit_ParentToClient)
    TPoint result;
    MySyscall(pFloatSpinEdit_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(FloatSpinEdit_SendToBack)
void
FloatSpinEdit_SendToBack(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_SendToBack)
    MySyscall(pFloatSpinEdit_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_Show)
void
FloatSpinEdit_Show(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_Show)
    MySyscall(pFloatSpinEdit_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetTextBuf)
int32_t
FloatSpinEdit_GetTextBuf(TFloatSpinEdit AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(FloatSpinEdit_GetTextBuf)
    return (int32_t)MySyscall(pFloatSpinEdit_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetTextLen)
int32_t
FloatSpinEdit_GetTextLen(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetTextLen)
    return (int32_t)MySyscall(pFloatSpinEdit_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetTextBuf)
void
FloatSpinEdit_SetTextBuf(TFloatSpinEdit AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(FloatSpinEdit_SetTextBuf)
    MySyscall(pFloatSpinEdit_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_FindComponent)
TComponent
FloatSpinEdit_FindComponent(TFloatSpinEdit AObj, CChar char* AName) {
    GET_FUNC_ADDR(FloatSpinEdit_FindComponent)
    return (TComponent)MySyscall(pFloatSpinEdit_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetNamePath)
char*
FloatSpinEdit_GetNamePath(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetNamePath)
    return (char*)MySyscall(pFloatSpinEdit_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_Assign)
void
FloatSpinEdit_Assign(TFloatSpinEdit AObj, TObject Source) {
    GET_FUNC_ADDR(FloatSpinEdit_Assign)
    MySyscall(pFloatSpinEdit_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_ClassType)
TClass
FloatSpinEdit_ClassType(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_ClassType)
    return (TClass)MySyscall(pFloatSpinEdit_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_ClassName)
char*
FloatSpinEdit_ClassName(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_ClassName)
    return (char*)MySyscall(pFloatSpinEdit_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_InstanceSize)
int32_t
FloatSpinEdit_InstanceSize(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_InstanceSize)
    return (int32_t)MySyscall(pFloatSpinEdit_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_InheritsFrom)
BOOL
FloatSpinEdit_InheritsFrom(TFloatSpinEdit AObj, TClass AClass) {
    GET_FUNC_ADDR(FloatSpinEdit_InheritsFrom)
    return (BOOL)MySyscall(pFloatSpinEdit_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_Equals)
BOOL
FloatSpinEdit_Equals(TFloatSpinEdit AObj, TObject Obj) {
    GET_FUNC_ADDR(FloatSpinEdit_Equals)
    return (BOOL)MySyscall(pFloatSpinEdit_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetHashCode)
int32_t
FloatSpinEdit_GetHashCode(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetHashCode)
    return (int32_t)MySyscall(pFloatSpinEdit_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_ToString)
char*
FloatSpinEdit_ToString(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_ToString)
    return (char*)MySyscall(pFloatSpinEdit_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_AnchorToNeighbour)
void
FloatSpinEdit_AnchorToNeighbour(TFloatSpinEdit AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(FloatSpinEdit_AnchorToNeighbour)
    MySyscall(pFloatSpinEdit_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_AnchorParallel)
void
FloatSpinEdit_AnchorParallel(TFloatSpinEdit AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(FloatSpinEdit_AnchorParallel)
    MySyscall(pFloatSpinEdit_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_AnchorHorizontalCenterTo)
void
FloatSpinEdit_AnchorHorizontalCenterTo(TFloatSpinEdit AObj, TControl ASibling) {
    GET_FUNC_ADDR(FloatSpinEdit_AnchorHorizontalCenterTo)
    MySyscall(pFloatSpinEdit_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_AnchorVerticalCenterTo)
void
FloatSpinEdit_AnchorVerticalCenterTo(TFloatSpinEdit AObj, TControl ASibling) {
    GET_FUNC_ADDR(FloatSpinEdit_AnchorVerticalCenterTo)
    MySyscall(pFloatSpinEdit_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_AnchorSame)
void
FloatSpinEdit_AnchorSame(TFloatSpinEdit AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(FloatSpinEdit_AnchorSame)
    MySyscall(pFloatSpinEdit_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_AnchorAsAlign)
void
FloatSpinEdit_AnchorAsAlign(TFloatSpinEdit AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(FloatSpinEdit_AnchorAsAlign)
    MySyscall(pFloatSpinEdit_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_AnchorClient)
void
FloatSpinEdit_AnchorClient(TFloatSpinEdit AObj, int32_t ASpace) {
    GET_FUNC_ADDR(FloatSpinEdit_AnchorClient)
    MySyscall(pFloatSpinEdit_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_ScaleDesignToForm)
int32_t
FloatSpinEdit_ScaleDesignToForm(TFloatSpinEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(FloatSpinEdit_ScaleDesignToForm)
    return (int32_t)MySyscall(pFloatSpinEdit_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_ScaleFormToDesign)
int32_t
FloatSpinEdit_ScaleFormToDesign(TFloatSpinEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(FloatSpinEdit_ScaleFormToDesign)
    return (int32_t)MySyscall(pFloatSpinEdit_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_Scale96ToForm)
int32_t
FloatSpinEdit_Scale96ToForm(TFloatSpinEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(FloatSpinEdit_Scale96ToForm)
    return (int32_t)MySyscall(pFloatSpinEdit_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_ScaleFormTo96)
int32_t
FloatSpinEdit_ScaleFormTo96(TFloatSpinEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(FloatSpinEdit_ScaleFormTo96)
    return (int32_t)MySyscall(pFloatSpinEdit_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_Scale96ToFont)
int32_t
FloatSpinEdit_Scale96ToFont(TFloatSpinEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(FloatSpinEdit_Scale96ToFont)
    return (int32_t)MySyscall(pFloatSpinEdit_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_ScaleFontTo96)
int32_t
FloatSpinEdit_ScaleFontTo96(TFloatSpinEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(FloatSpinEdit_ScaleFontTo96)
    return (int32_t)MySyscall(pFloatSpinEdit_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_ScaleScreenToFont)
int32_t
FloatSpinEdit_ScaleScreenToFont(TFloatSpinEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(FloatSpinEdit_ScaleScreenToFont)
    return (int32_t)MySyscall(pFloatSpinEdit_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_ScaleFontToScreen)
int32_t
FloatSpinEdit_ScaleFontToScreen(TFloatSpinEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(FloatSpinEdit_ScaleFontToScreen)
    return (int32_t)MySyscall(pFloatSpinEdit_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_Scale96ToScreen)
int32_t
FloatSpinEdit_Scale96ToScreen(TFloatSpinEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(FloatSpinEdit_Scale96ToScreen)
    return (int32_t)MySyscall(pFloatSpinEdit_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_ScaleScreenTo96)
int32_t
FloatSpinEdit_ScaleScreenTo96(TFloatSpinEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(FloatSpinEdit_ScaleScreenTo96)
    return (int32_t)MySyscall(pFloatSpinEdit_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_AutoAdjustLayout)
void
FloatSpinEdit_AutoAdjustLayout(TFloatSpinEdit AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(FloatSpinEdit_AutoAdjustLayout)
    MySyscall(pFloatSpinEdit_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_FixDesignFontsPPI)
void
FloatSpinEdit_FixDesignFontsPPI(TFloatSpinEdit AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(FloatSpinEdit_FixDesignFontsPPI)
    MySyscall(pFloatSpinEdit_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_ScaleFontsPPI)
void
FloatSpinEdit_ScaleFontsPPI(TFloatSpinEdit AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(FloatSpinEdit_ScaleFontsPPI)
    MySyscall(pFloatSpinEdit_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetAutoSelected)
BOOL
FloatSpinEdit_GetAutoSelected(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetAutoSelected)
    return (BOOL)MySyscall(pFloatSpinEdit_GetAutoSelected, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetAutoSelected)
void
FloatSpinEdit_SetAutoSelected(TFloatSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetAutoSelected)
    MySyscall(pFloatSpinEdit_SetAutoSelected, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetAlign)
TAlign
FloatSpinEdit_GetAlign(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetAlign)
    return (TAlign)MySyscall(pFloatSpinEdit_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetAlign)
void
FloatSpinEdit_SetAlign(TFloatSpinEdit AObj, TAlign AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetAlign)
    MySyscall(pFloatSpinEdit_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetAlignment)
TAlignment
FloatSpinEdit_GetAlignment(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetAlignment)
    return (TAlignment)MySyscall(pFloatSpinEdit_GetAlignment, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetAlignment)
void
FloatSpinEdit_SetAlignment(TFloatSpinEdit AObj, TAlignment AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetAlignment)
    MySyscall(pFloatSpinEdit_SetAlignment, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetAnchors)
TAnchors
FloatSpinEdit_GetAnchors(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetAnchors)
    return (TAnchors)MySyscall(pFloatSpinEdit_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetAnchors)
void
FloatSpinEdit_SetAnchors(TFloatSpinEdit AObj, TAnchors AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetAnchors)
    MySyscall(pFloatSpinEdit_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetAutoSelect)
BOOL
FloatSpinEdit_GetAutoSelect(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetAutoSelect)
    return (BOOL)MySyscall(pFloatSpinEdit_GetAutoSelect, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetAutoSelect)
void
FloatSpinEdit_SetAutoSelect(TFloatSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetAutoSelect)
    MySyscall(pFloatSpinEdit_SetAutoSelect, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetAutoSize)
BOOL
FloatSpinEdit_GetAutoSize(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetAutoSize)
    return (BOOL)MySyscall(pFloatSpinEdit_GetAutoSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetAutoSize)
void
FloatSpinEdit_SetAutoSize(TFloatSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetAutoSize)
    MySyscall(pFloatSpinEdit_SetAutoSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetColor)
TColor
FloatSpinEdit_GetColor(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetColor)
    return (TColor)MySyscall(pFloatSpinEdit_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetColor)
void
FloatSpinEdit_SetColor(TFloatSpinEdit AObj, TColor AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetColor)
    MySyscall(pFloatSpinEdit_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetConstraints)
TSizeConstraints
FloatSpinEdit_GetConstraints(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetConstraints)
    return (TSizeConstraints)MySyscall(pFloatSpinEdit_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetConstraints)
void
FloatSpinEdit_SetConstraints(TFloatSpinEdit AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetConstraints)
    MySyscall(pFloatSpinEdit_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetEnabled)
BOOL
FloatSpinEdit_GetEnabled(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetEnabled)
    return (BOOL)MySyscall(pFloatSpinEdit_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetEnabled)
void
FloatSpinEdit_SetEnabled(TFloatSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetEnabled)
    MySyscall(pFloatSpinEdit_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetFont)
TFont
FloatSpinEdit_GetFont(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetFont)
    return (TFont)MySyscall(pFloatSpinEdit_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetFont)
void
FloatSpinEdit_SetFont(TFloatSpinEdit AObj, TFont AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetFont)
    MySyscall(pFloatSpinEdit_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetIncrement)
double
FloatSpinEdit_GetIncrement(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetIncrement)
    double result;
    MySyscall(pFloatSpinEdit_GetIncrement, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetIncrement)
void
FloatSpinEdit_SetIncrement(TFloatSpinEdit AObj, double AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetIncrement)
    MySyscall(pFloatSpinEdit_SetIncrement, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetMaxValue)
double
FloatSpinEdit_GetMaxValue(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetMaxValue)
    double result;
    MySyscall(pFloatSpinEdit_GetMaxValue, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetMaxValue)
void
FloatSpinEdit_SetMaxValue(TFloatSpinEdit AObj, double AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetMaxValue)
    MySyscall(pFloatSpinEdit_SetMaxValue, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetMinValue)
double
FloatSpinEdit_GetMinValue(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetMinValue)
    double result;
    MySyscall(pFloatSpinEdit_GetMinValue, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetMinValue)
void
FloatSpinEdit_SetMinValue(TFloatSpinEdit AObj, double AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetMinValue)
    MySyscall(pFloatSpinEdit_SetMinValue, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetOnChange)
void
FloatSpinEdit_SetOnChange(TFloatSpinEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(FloatSpinEdit_SetOnChange)
    MySyscall(pFloatSpinEdit_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetOnClick)
void
FloatSpinEdit_SetOnClick(TFloatSpinEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(FloatSpinEdit_SetOnClick)
    MySyscall(pFloatSpinEdit_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetOnEnter)
void
FloatSpinEdit_SetOnEnter(TFloatSpinEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(FloatSpinEdit_SetOnEnter)
    MySyscall(pFloatSpinEdit_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetOnExit)
void
FloatSpinEdit_SetOnExit(TFloatSpinEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(FloatSpinEdit_SetOnExit)
    MySyscall(pFloatSpinEdit_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetOnKeyDown)
void
FloatSpinEdit_SetOnKeyDown(TFloatSpinEdit AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(FloatSpinEdit_SetOnKeyDown)
    MySyscall(pFloatSpinEdit_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetOnKeyPress)
void
FloatSpinEdit_SetOnKeyPress(TFloatSpinEdit AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(FloatSpinEdit_SetOnKeyPress)
    MySyscall(pFloatSpinEdit_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetOnKeyUp)
void
FloatSpinEdit_SetOnKeyUp(TFloatSpinEdit AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(FloatSpinEdit_SetOnKeyUp)
    MySyscall(pFloatSpinEdit_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetOnMouseDown)
void
FloatSpinEdit_SetOnMouseDown(TFloatSpinEdit AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(FloatSpinEdit_SetOnMouseDown)
    MySyscall(pFloatSpinEdit_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetOnMouseEnter)
void
FloatSpinEdit_SetOnMouseEnter(TFloatSpinEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(FloatSpinEdit_SetOnMouseEnter)
    MySyscall(pFloatSpinEdit_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetOnMouseLeave)
void
FloatSpinEdit_SetOnMouseLeave(TFloatSpinEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(FloatSpinEdit_SetOnMouseLeave)
    MySyscall(pFloatSpinEdit_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetOnMouseMove)
void
FloatSpinEdit_SetOnMouseMove(TFloatSpinEdit AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(FloatSpinEdit_SetOnMouseMove)
    MySyscall(pFloatSpinEdit_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetOnMouseUp)
void
FloatSpinEdit_SetOnMouseUp(TFloatSpinEdit AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(FloatSpinEdit_SetOnMouseUp)
    MySyscall(pFloatSpinEdit_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetOnMouseWheel)
void
FloatSpinEdit_SetOnMouseWheel(TFloatSpinEdit AObj, TMouseWheelEvent AEventData) {
    GET_FUNC_ADDR(FloatSpinEdit_SetOnMouseWheel)
    MySyscall(pFloatSpinEdit_SetOnMouseWheel, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetOnMouseWheelDown)
void
FloatSpinEdit_SetOnMouseWheelDown(TFloatSpinEdit AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(FloatSpinEdit_SetOnMouseWheelDown)
    MySyscall(pFloatSpinEdit_SetOnMouseWheelDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetOnMouseWheelUp)
void
FloatSpinEdit_SetOnMouseWheelUp(TFloatSpinEdit AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(FloatSpinEdit_SetOnMouseWheelUp)
    MySyscall(pFloatSpinEdit_SetOnMouseWheelUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetOnResize)
void
FloatSpinEdit_SetOnResize(TFloatSpinEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(FloatSpinEdit_SetOnResize)
    MySyscall(pFloatSpinEdit_SetOnResize, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetParentColor)
BOOL
FloatSpinEdit_GetParentColor(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetParentColor)
    return (BOOL)MySyscall(pFloatSpinEdit_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetParentColor)
void
FloatSpinEdit_SetParentColor(TFloatSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetParentColor)
    MySyscall(pFloatSpinEdit_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetParentFont)
BOOL
FloatSpinEdit_GetParentFont(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetParentFont)
    return (BOOL)MySyscall(pFloatSpinEdit_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetParentFont)
void
FloatSpinEdit_SetParentFont(TFloatSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetParentFont)
    MySyscall(pFloatSpinEdit_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetParentShowHint)
BOOL
FloatSpinEdit_GetParentShowHint(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetParentShowHint)
    return (BOOL)MySyscall(pFloatSpinEdit_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetParentShowHint)
void
FloatSpinEdit_SetParentShowHint(TFloatSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetParentShowHint)
    MySyscall(pFloatSpinEdit_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetPopupMenu)
TPopupMenu
FloatSpinEdit_GetPopupMenu(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetPopupMenu)
    return (TPopupMenu)MySyscall(pFloatSpinEdit_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetPopupMenu)
void
FloatSpinEdit_SetPopupMenu(TFloatSpinEdit AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetPopupMenu)
    MySyscall(pFloatSpinEdit_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetReadOnly)
BOOL
FloatSpinEdit_GetReadOnly(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetReadOnly)
    return (BOOL)MySyscall(pFloatSpinEdit_GetReadOnly, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetReadOnly)
void
FloatSpinEdit_SetReadOnly(TFloatSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetReadOnly)
    MySyscall(pFloatSpinEdit_SetReadOnly, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetShowHint)
BOOL
FloatSpinEdit_GetShowHint(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetShowHint)
    return (BOOL)MySyscall(pFloatSpinEdit_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetShowHint)
void
FloatSpinEdit_SetShowHint(TFloatSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetShowHint)
    MySyscall(pFloatSpinEdit_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetTabStop)
BOOL
FloatSpinEdit_GetTabStop(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetTabStop)
    return (BOOL)MySyscall(pFloatSpinEdit_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetTabStop)
void
FloatSpinEdit_SetTabStop(TFloatSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetTabStop)
    MySyscall(pFloatSpinEdit_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetTabOrder)
TTabOrder
FloatSpinEdit_GetTabOrder(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetTabOrder)
    return (TTabOrder)MySyscall(pFloatSpinEdit_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetTabOrder)
void
FloatSpinEdit_SetTabOrder(TFloatSpinEdit AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetTabOrder)
    MySyscall(pFloatSpinEdit_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetValue)
double
FloatSpinEdit_GetValue(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetValue)
    double result;
    MySyscall(pFloatSpinEdit_GetValue, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetValue)
void
FloatSpinEdit_SetValue(TFloatSpinEdit AObj, double AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetValue)
    MySyscall(pFloatSpinEdit_SetValue, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetVisible)
BOOL
FloatSpinEdit_GetVisible(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetVisible)
    return (BOOL)MySyscall(pFloatSpinEdit_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetVisible)
void
FloatSpinEdit_SetVisible(TFloatSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetVisible)
    MySyscall(pFloatSpinEdit_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetCanUndo)
BOOL
FloatSpinEdit_GetCanUndo(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetCanUndo)
    return (BOOL)MySyscall(pFloatSpinEdit_GetCanUndo, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetModified)
BOOL
FloatSpinEdit_GetModified(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetModified)
    return (BOOL)MySyscall(pFloatSpinEdit_GetModified, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetModified)
void
FloatSpinEdit_SetModified(TFloatSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetModified)
    MySyscall(pFloatSpinEdit_SetModified, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetSelLength)
int32_t
FloatSpinEdit_GetSelLength(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetSelLength)
    return (int32_t)MySyscall(pFloatSpinEdit_GetSelLength, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetSelLength)
void
FloatSpinEdit_SetSelLength(TFloatSpinEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetSelLength)
    MySyscall(pFloatSpinEdit_SetSelLength, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetSelStart)
int32_t
FloatSpinEdit_GetSelStart(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetSelStart)
    return (int32_t)MySyscall(pFloatSpinEdit_GetSelStart, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetSelStart)
void
FloatSpinEdit_SetSelStart(TFloatSpinEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetSelStart)
    MySyscall(pFloatSpinEdit_SetSelStart, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetSelText)
char*
FloatSpinEdit_GetSelText(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetSelText)
    return (char*)MySyscall(pFloatSpinEdit_GetSelText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetSelText)
void
FloatSpinEdit_SetSelText(TFloatSpinEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetSelText)
    MySyscall(pFloatSpinEdit_SetSelText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetText)
char*
FloatSpinEdit_GetText(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetText)
    return (char*)MySyscall(pFloatSpinEdit_GetText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetText)
void
FloatSpinEdit_SetText(TFloatSpinEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetText)
    MySyscall(pFloatSpinEdit_SetText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetTextHint)
char*
FloatSpinEdit_GetTextHint(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetTextHint)
    return (char*)MySyscall(pFloatSpinEdit_GetTextHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetTextHint)
void
FloatSpinEdit_SetTextHint(TFloatSpinEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetTextHint)
    MySyscall(pFloatSpinEdit_SetTextHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetDockClientCount)
int32_t
FloatSpinEdit_GetDockClientCount(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetDockClientCount)
    return (int32_t)MySyscall(pFloatSpinEdit_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetDockSite)
BOOL
FloatSpinEdit_GetDockSite(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetDockSite)
    return (BOOL)MySyscall(pFloatSpinEdit_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetDockSite)
void
FloatSpinEdit_SetDockSite(TFloatSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetDockSite)
    MySyscall(pFloatSpinEdit_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetDoubleBuffered)
BOOL
FloatSpinEdit_GetDoubleBuffered(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetDoubleBuffered)
    return (BOOL)MySyscall(pFloatSpinEdit_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetDoubleBuffered)
void
FloatSpinEdit_SetDoubleBuffered(TFloatSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetDoubleBuffered)
    MySyscall(pFloatSpinEdit_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetMouseInClient)
BOOL
FloatSpinEdit_GetMouseInClient(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetMouseInClient)
    return (BOOL)MySyscall(pFloatSpinEdit_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetVisibleDockClientCount)
int32_t
FloatSpinEdit_GetVisibleDockClientCount(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pFloatSpinEdit_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetBrush)
TBrush
FloatSpinEdit_GetBrush(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetBrush)
    return (TBrush)MySyscall(pFloatSpinEdit_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetControlCount)
int32_t
FloatSpinEdit_GetControlCount(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetControlCount)
    return (int32_t)MySyscall(pFloatSpinEdit_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetHandle)
HWND
FloatSpinEdit_GetHandle(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetHandle)
    return (HWND)MySyscall(pFloatSpinEdit_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetParentDoubleBuffered)
BOOL
FloatSpinEdit_GetParentDoubleBuffered(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pFloatSpinEdit_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetParentDoubleBuffered)
void
FloatSpinEdit_SetParentDoubleBuffered(TFloatSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetParentDoubleBuffered)
    MySyscall(pFloatSpinEdit_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetParentWindow)
HWND
FloatSpinEdit_GetParentWindow(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetParentWindow)
    return (HWND)MySyscall(pFloatSpinEdit_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetParentWindow)
void
FloatSpinEdit_SetParentWindow(TFloatSpinEdit AObj, HWND AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetParentWindow)
    MySyscall(pFloatSpinEdit_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetShowing)
BOOL
FloatSpinEdit_GetShowing(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetShowing)
    return (BOOL)MySyscall(pFloatSpinEdit_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetUseDockManager)
BOOL
FloatSpinEdit_GetUseDockManager(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetUseDockManager)
    return (BOOL)MySyscall(pFloatSpinEdit_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetUseDockManager)
void
FloatSpinEdit_SetUseDockManager(TFloatSpinEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetUseDockManager)
    MySyscall(pFloatSpinEdit_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetAction)
TAction
FloatSpinEdit_GetAction(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetAction)
    return (TAction)MySyscall(pFloatSpinEdit_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetAction)
void
FloatSpinEdit_SetAction(TFloatSpinEdit AObj, TAction AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetAction)
    MySyscall(pFloatSpinEdit_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetBiDiMode)
TBiDiMode
FloatSpinEdit_GetBiDiMode(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetBiDiMode)
    return (TBiDiMode)MySyscall(pFloatSpinEdit_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetBiDiMode)
void
FloatSpinEdit_SetBiDiMode(TFloatSpinEdit AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetBiDiMode)
    MySyscall(pFloatSpinEdit_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetBoundsRect)
TRect
FloatSpinEdit_GetBoundsRect(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetBoundsRect)
    TRect result;
    MySyscall(pFloatSpinEdit_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetBoundsRect)
void
FloatSpinEdit_SetBoundsRect(TFloatSpinEdit AObj, TRect AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetBoundsRect)
    MySyscall(pFloatSpinEdit_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetClientHeight)
int32_t
FloatSpinEdit_GetClientHeight(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetClientHeight)
    return (int32_t)MySyscall(pFloatSpinEdit_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetClientHeight)
void
FloatSpinEdit_SetClientHeight(TFloatSpinEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetClientHeight)
    MySyscall(pFloatSpinEdit_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetClientOrigin)
TPoint
FloatSpinEdit_GetClientOrigin(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetClientOrigin)
    TPoint result;
    MySyscall(pFloatSpinEdit_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetClientRect)
TRect
FloatSpinEdit_GetClientRect(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetClientRect)
    TRect result;
    MySyscall(pFloatSpinEdit_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetClientWidth)
int32_t
FloatSpinEdit_GetClientWidth(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetClientWidth)
    return (int32_t)MySyscall(pFloatSpinEdit_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetClientWidth)
void
FloatSpinEdit_SetClientWidth(TFloatSpinEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetClientWidth)
    MySyscall(pFloatSpinEdit_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetControlState)
TControlState
FloatSpinEdit_GetControlState(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetControlState)
    return (TControlState)MySyscall(pFloatSpinEdit_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetControlState)
void
FloatSpinEdit_SetControlState(TFloatSpinEdit AObj, TControlState AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetControlState)
    MySyscall(pFloatSpinEdit_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetControlStyle)
TControlStyle
FloatSpinEdit_GetControlStyle(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetControlStyle)
    return (TControlStyle)MySyscall(pFloatSpinEdit_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetControlStyle)
void
FloatSpinEdit_SetControlStyle(TFloatSpinEdit AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetControlStyle)
    MySyscall(pFloatSpinEdit_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetFloating)
BOOL
FloatSpinEdit_GetFloating(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetFloating)
    return (BOOL)MySyscall(pFloatSpinEdit_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetParent)
TWinControl
FloatSpinEdit_GetParent(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetParent)
    return (TWinControl)MySyscall(pFloatSpinEdit_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetParent)
void
FloatSpinEdit_SetParent(TFloatSpinEdit AObj, TWinControl AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetParent)
    MySyscall(pFloatSpinEdit_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetLeft)
int32_t
FloatSpinEdit_GetLeft(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetLeft)
    return (int32_t)MySyscall(pFloatSpinEdit_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetLeft)
void
FloatSpinEdit_SetLeft(TFloatSpinEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetLeft)
    MySyscall(pFloatSpinEdit_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetTop)
int32_t
FloatSpinEdit_GetTop(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetTop)
    return (int32_t)MySyscall(pFloatSpinEdit_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetTop)
void
FloatSpinEdit_SetTop(TFloatSpinEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetTop)
    MySyscall(pFloatSpinEdit_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetWidth)
int32_t
FloatSpinEdit_GetWidth(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetWidth)
    return (int32_t)MySyscall(pFloatSpinEdit_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetWidth)
void
FloatSpinEdit_SetWidth(TFloatSpinEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetWidth)
    MySyscall(pFloatSpinEdit_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetHeight)
int32_t
FloatSpinEdit_GetHeight(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetHeight)
    return (int32_t)MySyscall(pFloatSpinEdit_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetHeight)
void
FloatSpinEdit_SetHeight(TFloatSpinEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetHeight)
    MySyscall(pFloatSpinEdit_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetCursor)
TCursor
FloatSpinEdit_GetCursor(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetCursor)
    return (TCursor)MySyscall(pFloatSpinEdit_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetCursor)
void
FloatSpinEdit_SetCursor(TFloatSpinEdit AObj, TCursor AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetCursor)
    MySyscall(pFloatSpinEdit_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetHint)
char*
FloatSpinEdit_GetHint(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetHint)
    return (char*)MySyscall(pFloatSpinEdit_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetHint)
void
FloatSpinEdit_SetHint(TFloatSpinEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetHint)
    MySyscall(pFloatSpinEdit_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetComponentCount)
int32_t
FloatSpinEdit_GetComponentCount(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetComponentCount)
    return (int32_t)MySyscall(pFloatSpinEdit_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetComponentIndex)
int32_t
FloatSpinEdit_GetComponentIndex(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetComponentIndex)
    return (int32_t)MySyscall(pFloatSpinEdit_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetComponentIndex)
void
FloatSpinEdit_SetComponentIndex(TFloatSpinEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetComponentIndex)
    MySyscall(pFloatSpinEdit_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetOwner)
TComponent
FloatSpinEdit_GetOwner(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetOwner)
    return (TComponent)MySyscall(pFloatSpinEdit_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetName)
char*
FloatSpinEdit_GetName(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetName)
    return (char*)MySyscall(pFloatSpinEdit_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetName)
void
FloatSpinEdit_SetName(TFloatSpinEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetName)
    MySyscall(pFloatSpinEdit_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetTag)
intptr_t
FloatSpinEdit_GetTag(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetTag)
    return (intptr_t)MySyscall(pFloatSpinEdit_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetTag)
void
FloatSpinEdit_SetTag(TFloatSpinEdit AObj, intptr_t AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetTag)
    MySyscall(pFloatSpinEdit_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetAnchorSideLeft)
TAnchorSide
FloatSpinEdit_GetAnchorSideLeft(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pFloatSpinEdit_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetAnchorSideLeft)
void
FloatSpinEdit_SetAnchorSideLeft(TFloatSpinEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetAnchorSideLeft)
    MySyscall(pFloatSpinEdit_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetAnchorSideTop)
TAnchorSide
FloatSpinEdit_GetAnchorSideTop(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pFloatSpinEdit_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetAnchorSideTop)
void
FloatSpinEdit_SetAnchorSideTop(TFloatSpinEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetAnchorSideTop)
    MySyscall(pFloatSpinEdit_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetAnchorSideRight)
TAnchorSide
FloatSpinEdit_GetAnchorSideRight(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pFloatSpinEdit_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetAnchorSideRight)
void
FloatSpinEdit_SetAnchorSideRight(TFloatSpinEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetAnchorSideRight)
    MySyscall(pFloatSpinEdit_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetAnchorSideBottom)
TAnchorSide
FloatSpinEdit_GetAnchorSideBottom(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pFloatSpinEdit_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetAnchorSideBottom)
void
FloatSpinEdit_SetAnchorSideBottom(TFloatSpinEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetAnchorSideBottom)
    MySyscall(pFloatSpinEdit_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetChildSizing)
TControlChildSizing
FloatSpinEdit_GetChildSizing(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetChildSizing)
    return (TControlChildSizing)MySyscall(pFloatSpinEdit_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetChildSizing)
void
FloatSpinEdit_SetChildSizing(TFloatSpinEdit AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetChildSizing)
    MySyscall(pFloatSpinEdit_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetBorderSpacing)
TControlBorderSpacing
FloatSpinEdit_GetBorderSpacing(TFloatSpinEdit AObj) {
    GET_FUNC_ADDR(FloatSpinEdit_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pFloatSpinEdit_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_SetBorderSpacing)
void
FloatSpinEdit_SetBorderSpacing(TFloatSpinEdit AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(FloatSpinEdit_SetBorderSpacing)
    MySyscall(pFloatSpinEdit_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetDockClients)
TControl
FloatSpinEdit_GetDockClients(TFloatSpinEdit AObj, int32_t Index) {
    GET_FUNC_ADDR(FloatSpinEdit_GetDockClients)
    return (TControl)MySyscall(pFloatSpinEdit_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetControls)
TControl
FloatSpinEdit_GetControls(TFloatSpinEdit AObj, int32_t Index) {
    GET_FUNC_ADDR(FloatSpinEdit_GetControls)
    return (TControl)MySyscall(pFloatSpinEdit_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetComponents)
TComponent
FloatSpinEdit_GetComponents(TFloatSpinEdit AObj, int32_t AIndex) {
    GET_FUNC_ADDR(FloatSpinEdit_GetComponents)
    return (TComponent)MySyscall(pFloatSpinEdit_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_GetAnchorSide)
TAnchorSide
FloatSpinEdit_GetAnchorSide(TFloatSpinEdit AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(FloatSpinEdit_GetAnchorSide)
    return (TAnchorSide)MySyscall(pFloatSpinEdit_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FloatSpinEdit_StaticClassType)
TClass
FloatSpinEdit_StaticClassType() {
    GET_FUNC_ADDR(FloatSpinEdit_StaticClassType)
    return (TClass)MySyscall(pFloatSpinEdit_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TDirectoryEdit-------------------

DEFINE_FUNC_PTR(DirectoryEdit_Create)
TDirectoryEdit
irectoryEdit_Create(TComponent AOwner) {
    GET_FUNC_ADDR(DirectoryEdit_Create)
    return (TDirectoryEdit)MySyscall(pDirectoryEdit_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_Free)
void
irectoryEdit_Free(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_Free)
    MySyscall(pDirectoryEdit_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetFocus)
void
irectoryEdit_SetFocus(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_SetFocus)
    MySyscall(pDirectoryEdit_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_Focused)
BOOL
irectoryEdit_Focused(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_Focused)
    return (BOOL)MySyscall(pDirectoryEdit_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_Clear)
void
irectoryEdit_Clear(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_Clear)
    MySyscall(pDirectoryEdit_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_ClearSelection)
void
irectoryEdit_ClearSelection(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_ClearSelection)
    MySyscall(pDirectoryEdit_ClearSelection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_CopyToClipboard)
void
irectoryEdit_CopyToClipboard(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_CopyToClipboard)
    MySyscall(pDirectoryEdit_CopyToClipboard, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_CutToClipboard)
void
irectoryEdit_CutToClipboard(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_CutToClipboard)
    MySyscall(pDirectoryEdit_CutToClipboard, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_PasteFromClipboard)
void
irectoryEdit_PasteFromClipboard(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_PasteFromClipboard)
    MySyscall(pDirectoryEdit_PasteFromClipboard, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SelectAll)
void
irectoryEdit_SelectAll(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_SelectAll)
    MySyscall(pDirectoryEdit_SelectAll, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_Undo)
void
irectoryEdit_Undo(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_Undo)
    MySyscall(pDirectoryEdit_Undo, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_ValidateEdit)
void
irectoryEdit_ValidateEdit(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_ValidateEdit)
    MySyscall(pDirectoryEdit_ValidateEdit, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_CanFocus)
BOOL
irectoryEdit_CanFocus(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_CanFocus)
    return (BOOL)MySyscall(pDirectoryEdit_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_ContainsControl)
BOOL
irectoryEdit_ContainsControl(TDirectoryEdit AObj, TControl Control) {
    GET_FUNC_ADDR(DirectoryEdit_ContainsControl)
    return (BOOL)MySyscall(pDirectoryEdit_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_ControlAtPos)
TControl
irectoryEdit_ControlAtPos(TDirectoryEdit AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(DirectoryEdit_ControlAtPos)
    return (TControl)MySyscall(pDirectoryEdit_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_DisableAlign)
void
irectoryEdit_DisableAlign(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_DisableAlign)
    MySyscall(pDirectoryEdit_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_EnableAlign)
void
irectoryEdit_EnableAlign(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_EnableAlign)
    MySyscall(pDirectoryEdit_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_FindChildControl)
TControl
irectoryEdit_FindChildControl(TDirectoryEdit AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(DirectoryEdit_FindChildControl)
    return (TControl)MySyscall(pDirectoryEdit_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_FlipChildren)
void
irectoryEdit_FlipChildren(TDirectoryEdit AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(DirectoryEdit_FlipChildren)
    MySyscall(pDirectoryEdit_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_HandleAllocated)
BOOL
irectoryEdit_HandleAllocated(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_HandleAllocated)
    return (BOOL)MySyscall(pDirectoryEdit_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_InsertControl)
void
irectoryEdit_InsertControl(TDirectoryEdit AObj, TControl AControl) {
    GET_FUNC_ADDR(DirectoryEdit_InsertControl)
    MySyscall(pDirectoryEdit_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_Invalidate)
void
irectoryEdit_Invalidate(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_Invalidate)
    MySyscall(pDirectoryEdit_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_PaintTo)
void
irectoryEdit_PaintTo(TDirectoryEdit AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(DirectoryEdit_PaintTo)
    MySyscall(pDirectoryEdit_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_RemoveControl)
void
irectoryEdit_RemoveControl(TDirectoryEdit AObj, TControl AControl) {
    GET_FUNC_ADDR(DirectoryEdit_RemoveControl)
    MySyscall(pDirectoryEdit_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_Realign)
void
irectoryEdit_Realign(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_Realign)
    MySyscall(pDirectoryEdit_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_Repaint)
void
irectoryEdit_Repaint(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_Repaint)
    MySyscall(pDirectoryEdit_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_ScaleBy)
void
irectoryEdit_ScaleBy(TDirectoryEdit AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(DirectoryEdit_ScaleBy)
    MySyscall(pDirectoryEdit_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_ScrollBy)
void
irectoryEdit_ScrollBy(TDirectoryEdit AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(DirectoryEdit_ScrollBy)
    MySyscall(pDirectoryEdit_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetBounds)
void
irectoryEdit_SetBounds(TDirectoryEdit AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(DirectoryEdit_SetBounds)
    MySyscall(pDirectoryEdit_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_Update)
void
irectoryEdit_Update(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_Update)
    MySyscall(pDirectoryEdit_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_BringToFront)
void
irectoryEdit_BringToFront(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_BringToFront)
    MySyscall(pDirectoryEdit_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_ClientToScreen)
TPoint
irectoryEdit_ClientToScreen(TDirectoryEdit AObj, TPoint Point) {
    GET_FUNC_ADDR(DirectoryEdit_ClientToScreen)
    TPoint result;
    MySyscall(pDirectoryEdit_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DirectoryEdit_ClientToParent)
TPoint
irectoryEdit_ClientToParent(TDirectoryEdit AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(DirectoryEdit_ClientToParent)
    TPoint result;
    MySyscall(pDirectoryEdit_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DirectoryEdit_Dragging)
BOOL
irectoryEdit_Dragging(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_Dragging)
    return (BOOL)MySyscall(pDirectoryEdit_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_HasParent)
BOOL
irectoryEdit_HasParent(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_HasParent)
    return (BOOL)MySyscall(pDirectoryEdit_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_Hide)
void
irectoryEdit_Hide(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_Hide)
    MySyscall(pDirectoryEdit_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_Perform)
intptr_t
irectoryEdit_Perform(TDirectoryEdit AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(DirectoryEdit_Perform)
    return (intptr_t)MySyscall(pDirectoryEdit_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_Refresh)
void
irectoryEdit_Refresh(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_Refresh)
    MySyscall(pDirectoryEdit_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_ScreenToClient)
TPoint
irectoryEdit_ScreenToClient(TDirectoryEdit AObj, TPoint Point) {
    GET_FUNC_ADDR(DirectoryEdit_ScreenToClient)
    TPoint result;
    MySyscall(pDirectoryEdit_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DirectoryEdit_ParentToClient)
TPoint
irectoryEdit_ParentToClient(TDirectoryEdit AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(DirectoryEdit_ParentToClient)
    TPoint result;
    MySyscall(pDirectoryEdit_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DirectoryEdit_SendToBack)
void
irectoryEdit_SendToBack(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_SendToBack)
    MySyscall(pDirectoryEdit_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_Show)
void
irectoryEdit_Show(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_Show)
    MySyscall(pDirectoryEdit_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetTextBuf)
int32_t
irectoryEdit_GetTextBuf(TDirectoryEdit AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(DirectoryEdit_GetTextBuf)
    return (int32_t)MySyscall(pDirectoryEdit_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetTextLen)
int32_t
irectoryEdit_GetTextLen(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetTextLen)
    return (int32_t)MySyscall(pDirectoryEdit_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetTextBuf)
void
irectoryEdit_SetTextBuf(TDirectoryEdit AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(DirectoryEdit_SetTextBuf)
    MySyscall(pDirectoryEdit_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_FindComponent)
TComponent
irectoryEdit_FindComponent(TDirectoryEdit AObj, CChar char* AName) {
    GET_FUNC_ADDR(DirectoryEdit_FindComponent)
    return (TComponent)MySyscall(pDirectoryEdit_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetNamePath)
char*
irectoryEdit_GetNamePath(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetNamePath)
    return (char*)MySyscall(pDirectoryEdit_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_Assign)
void
irectoryEdit_Assign(TDirectoryEdit AObj, TObject Source) {
    GET_FUNC_ADDR(DirectoryEdit_Assign)
    MySyscall(pDirectoryEdit_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_ClassType)
TClass
irectoryEdit_ClassType(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_ClassType)
    return (TClass)MySyscall(pDirectoryEdit_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_ClassName)
char*
irectoryEdit_ClassName(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_ClassName)
    return (char*)MySyscall(pDirectoryEdit_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_InstanceSize)
int32_t
DirectoryEdit_InstanceSize(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_InstanceSize)
    return (int32_t)MySyscall(pDirectoryEdit_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_InheritsFrom)
BOOL
irectoryEdit_InheritsFrom(TDirectoryEdit AObj, TClass AClass) {
    GET_FUNC_ADDR(DirectoryEdit_InheritsFrom)
    return (BOOL)MySyscall(pDirectoryEdit_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_Equals)
BOOL
irectoryEdit_Equals(TDirectoryEdit AObj, TObject Obj) {
    GET_FUNC_ADDR(DirectoryEdit_Equals)
    return (BOOL)MySyscall(pDirectoryEdit_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetHashCode)
int32_t
irectoryEdit_GetHashCode(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetHashCode)
    return (int32_t)MySyscall(pDirectoryEdit_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_ToString)
char*
irectoryEdit_ToString(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_ToString)
    return (char*)MySyscall(pDirectoryEdit_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_AnchorToNeighbour)
void
irectoryEdit_AnchorToNeighbour(TDirectoryEdit AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(DirectoryEdit_AnchorToNeighbour)
    MySyscall(pDirectoryEdit_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_AnchorParallel)
void
irectoryEdit_AnchorParallel(TDirectoryEdit AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(DirectoryEdit_AnchorParallel)
    MySyscall(pDirectoryEdit_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_AnchorHorizontalCenterTo)
void
irectoryEdit_AnchorHorizontalCenterTo(TDirectoryEdit AObj, TControl ASibling) {
    GET_FUNC_ADDR(DirectoryEdit_AnchorHorizontalCenterTo)
    MySyscall(pDirectoryEdit_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_AnchorVerticalCenterTo)
void
irectoryEdit_AnchorVerticalCenterTo(TDirectoryEdit AObj, TControl ASibling) {
    GET_FUNC_ADDR(DirectoryEdit_AnchorVerticalCenterTo)
    MySyscall(pDirectoryEdit_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_AnchorSame)
void
irectoryEdit_AnchorSame(TDirectoryEdit AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(DirectoryEdit_AnchorSame)
    MySyscall(pDirectoryEdit_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_AnchorAsAlign)
void
irectoryEdit_AnchorAsAlign(TDirectoryEdit AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(DirectoryEdit_AnchorAsAlign)
    MySyscall(pDirectoryEdit_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_AnchorClient)
void
irectoryEdit_AnchorClient(TDirectoryEdit AObj, int32_t ASpace) {
    GET_FUNC_ADDR(DirectoryEdit_AnchorClient)
    MySyscall(pDirectoryEdit_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_ScaleDesignToForm)
int32_t
irectoryEdit_ScaleDesignToForm(TDirectoryEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(DirectoryEdit_ScaleDesignToForm)
    return (int32_t)MySyscall(pDirectoryEdit_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_ScaleFormToDesign)
int32_t
irectoryEdit_ScaleFormToDesign(TDirectoryEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(DirectoryEdit_ScaleFormToDesign)
    return (int32_t)MySyscall(pDirectoryEdit_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_Scale96ToForm)
int32_t
irectoryEdit_Scale96ToForm(TDirectoryEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(DirectoryEdit_Scale96ToForm)
    return (int32_t)MySyscall(pDirectoryEdit_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_ScaleFormTo96)
int32_t
irectoryEdit_ScaleFormTo96(TDirectoryEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(DirectoryEdit_ScaleFormTo96)
    return (int32_t)MySyscall(pDirectoryEdit_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_Scale96ToFont)
int32_t
irectoryEdit_Scale96ToFont(TDirectoryEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(DirectoryEdit_Scale96ToFont)
    return (int32_t)MySyscall(pDirectoryEdit_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_ScaleFontTo96)
int32_t
irectoryEdit_ScaleFontTo96(TDirectoryEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(DirectoryEdit_ScaleFontTo96)
    return (int32_t)MySyscall(pDirectoryEdit_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_ScaleScreenToFont)
int32_t
irectoryEdit_ScaleScreenToFont(TDirectoryEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(DirectoryEdit_ScaleScreenToFont)
    return (int32_t)MySyscall(pDirectoryEdit_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_ScaleFontToScreen)
int32_t
irectoryEdit_ScaleFontToScreen(TDirectoryEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(DirectoryEdit_ScaleFontToScreen)
    return (int32_t)MySyscall(pDirectoryEdit_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_Scale96ToScreen)
int32_t
irectoryEdit_Scale96ToScreen(TDirectoryEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(DirectoryEdit_Scale96ToScreen)
    return (int32_t)MySyscall(pDirectoryEdit_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_ScaleScreenTo96)
int32_t
irectoryEdit_ScaleScreenTo96(TDirectoryEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(DirectoryEdit_ScaleScreenTo96)
    return (int32_t)MySyscall(pDirectoryEdit_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_AutoAdjustLayout)
void
irectoryEdit_AutoAdjustLayout(TDirectoryEdit AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(DirectoryEdit_AutoAdjustLayout)
    MySyscall(pDirectoryEdit_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_FixDesignFontsPPI)
void
irectoryEdit_FixDesignFontsPPI(TDirectoryEdit AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(DirectoryEdit_FixDesignFontsPPI)
    MySyscall(pDirectoryEdit_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_ScaleFontsPPI)
void
irectoryEdit_ScaleFontsPPI(TDirectoryEdit AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(DirectoryEdit_ScaleFontsPPI)
    MySyscall(pDirectoryEdit_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetAutoSelected)
BOOL
irectoryEdit_GetAutoSelected(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetAutoSelected)
    return (BOOL)MySyscall(pDirectoryEdit_GetAutoSelected, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetAutoSelected)
void
irectoryEdit_SetAutoSelected(TDirectoryEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetAutoSelected)
    MySyscall(pDirectoryEdit_SetAutoSelected, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetDirectory)
char*
irectoryEdit_GetDirectory(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetDirectory)
    return (char*)MySyscall(pDirectoryEdit_GetDirectory, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetDirectory)
void
irectoryEdit_SetDirectory(TDirectoryEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetDirectory)
    MySyscall(pDirectoryEdit_SetDirectory, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetRootDir)
char*
irectoryEdit_GetRootDir(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetRootDir)
    return (char*)MySyscall(pDirectoryEdit_GetRootDir, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetRootDir)
void
irectoryEdit_SetRootDir(TDirectoryEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetRootDir)
    MySyscall(pDirectoryEdit_SetRootDir, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetOnAcceptDirectory)
void
irectoryEdit_SetOnAcceptDirectory(TDirectoryEdit AObj, TAcceptFileNameEvent AEventData) {
    GET_FUNC_ADDR(DirectoryEdit_SetOnAcceptDirectory)
    MySyscall(pDirectoryEdit_SetOnAcceptDirectory, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetDialogTitle)
char*
irectoryEdit_GetDialogTitle(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetDialogTitle)
    return (char*)MySyscall(pDirectoryEdit_GetDialogTitle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetDialogTitle)
void
irectoryEdit_SetDialogTitle(TDirectoryEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetDialogTitle)
    MySyscall(pDirectoryEdit_SetDialogTitle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetDialogOptions)
TOpenOptions
irectoryEdit_GetDialogOptions(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetDialogOptions)
    return (TOpenOptions)MySyscall(pDirectoryEdit_GetDialogOptions, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetDialogOptions)
void
irectoryEdit_SetDialogOptions(TDirectoryEdit AObj, TOpenOptions AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetDialogOptions)
    MySyscall(pDirectoryEdit_SetDialogOptions, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetShowHidden)
BOOL
irectoryEdit_GetShowHidden(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetShowHidden)
    return (BOOL)MySyscall(pDirectoryEdit_GetShowHidden, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetShowHidden)
void
irectoryEdit_SetShowHidden(TDirectoryEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetShowHidden)
    MySyscall(pDirectoryEdit_SetShowHidden, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetButtonCaption)
char*
irectoryEdit_GetButtonCaption(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetButtonCaption)
    return (char*)MySyscall(pDirectoryEdit_GetButtonCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetButtonCaption)
void
irectoryEdit_SetButtonCaption(TDirectoryEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetButtonCaption)
    MySyscall(pDirectoryEdit_SetButtonCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetButtonCursor)
TCursor
irectoryEdit_GetButtonCursor(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetButtonCursor)
    return (TCursor)MySyscall(pDirectoryEdit_GetButtonCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetButtonCursor)
void
irectoryEdit_SetButtonCursor(TDirectoryEdit AObj, TCursor AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetButtonCursor)
    MySyscall(pDirectoryEdit_SetButtonCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetButtonHint)
char*
irectoryEdit_GetButtonHint(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetButtonHint)
    return (char*)MySyscall(pDirectoryEdit_GetButtonHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetButtonHint)
void
irectoryEdit_SetButtonHint(TDirectoryEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetButtonHint)
    MySyscall(pDirectoryEdit_SetButtonHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetButtonOnlyWhenFocused)
BOOL
irectoryEdit_GetButtonOnlyWhenFocused(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetButtonOnlyWhenFocused)
    return (BOOL)MySyscall(pDirectoryEdit_GetButtonOnlyWhenFocused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetButtonOnlyWhenFocused)
void
irectoryEdit_SetButtonOnlyWhenFocused(TDirectoryEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetButtonOnlyWhenFocused)
    MySyscall(pDirectoryEdit_SetButtonOnlyWhenFocused, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetButtonWidth)
int32_t
irectoryEdit_GetButtonWidth(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetButtonWidth)
    return (int32_t)MySyscall(pDirectoryEdit_GetButtonWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetButtonWidth)
void
irectoryEdit_SetButtonWidth(TDirectoryEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetButtonWidth)
    MySyscall(pDirectoryEdit_SetButtonWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetConstraints)
TSizeConstraints
irectoryEdit_GetConstraints(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetConstraints)
    return (TSizeConstraints)MySyscall(pDirectoryEdit_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetConstraints)
void
irectoryEdit_SetConstraints(TDirectoryEdit AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetConstraints)
    MySyscall(pDirectoryEdit_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetDirectInput)
BOOL
irectoryEdit_GetDirectInput(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetDirectInput)
    return (BOOL)MySyscall(pDirectoryEdit_GetDirectInput, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetDirectInput)
void
irectoryEdit_SetDirectInput(TDirectoryEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetDirectInput)
    MySyscall(pDirectoryEdit_SetDirectInput, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetGlyph)
TBitmap
irectoryEdit_GetGlyph(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetGlyph)
    return (TBitmap)MySyscall(pDirectoryEdit_GetGlyph, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetGlyph)
void
irectoryEdit_SetGlyph(TDirectoryEdit AObj, TBitmap AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetGlyph)
    MySyscall(pDirectoryEdit_SetGlyph, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetNumGlyphs)
int32_t
irectoryEdit_GetNumGlyphs(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetNumGlyphs)
    return (int32_t)MySyscall(pDirectoryEdit_GetNumGlyphs, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetNumGlyphs)
void
irectoryEdit_SetNumGlyphs(TDirectoryEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetNumGlyphs)
    MySyscall(pDirectoryEdit_SetNumGlyphs, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetImages)
TImageList
irectoryEdit_GetImages(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetImages)
    return (TImageList)MySyscall(pDirectoryEdit_GetImages, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetImages)
void
irectoryEdit_SetImages(TDirectoryEdit AObj, TImageList AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetImages)
    MySyscall(pDirectoryEdit_SetImages, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetImageIndex)
int32_t
irectoryEdit_GetImageIndex(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetImageIndex)
    return (int32_t)MySyscall(pDirectoryEdit_GetImageIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetImageIndex)
void
irectoryEdit_SetImageIndex(TDirectoryEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetImageIndex)
    MySyscall(pDirectoryEdit_SetImageIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetImageWidth)
int32_t
irectoryEdit_GetImageWidth(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetImageWidth)
    return (int32_t)MySyscall(pDirectoryEdit_GetImageWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetImageWidth)
void
irectoryEdit_SetImageWidth(TDirectoryEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetImageWidth)
    MySyscall(pDirectoryEdit_SetImageWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetFlat)
BOOL
irectoryEdit_GetFlat(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetFlat)
    return (BOOL)MySyscall(pDirectoryEdit_GetFlat, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetFlat)
void
irectoryEdit_SetFlat(TDirectoryEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetFlat)
    MySyscall(pDirectoryEdit_SetFlat, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetFocusOnButtonClick)
BOOL
irectoryEdit_GetFocusOnButtonClick(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetFocusOnButtonClick)
    return (BOOL)MySyscall(pDirectoryEdit_GetFocusOnButtonClick, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetFocusOnButtonClick)
void
irectoryEdit_SetFocusOnButtonClick(TDirectoryEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetFocusOnButtonClick)
    MySyscall(pDirectoryEdit_SetFocusOnButtonClick, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetAlign)
TAlign
irectoryEdit_GetAlign(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetAlign)
    return (TAlign)MySyscall(pDirectoryEdit_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetAlign)
void
irectoryEdit_SetAlign(TDirectoryEdit AObj, TAlign AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetAlign)
    MySyscall(pDirectoryEdit_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetAnchors)
TAnchors
irectoryEdit_GetAnchors(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetAnchors)
    return (TAnchors)MySyscall(pDirectoryEdit_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetAnchors)
void
irectoryEdit_SetAnchors(TDirectoryEdit AObj, TAnchors AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetAnchors)
    MySyscall(pDirectoryEdit_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetAutoSize)
BOOL
irectoryEdit_GetAutoSize(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetAutoSize)
    return (BOOL)MySyscall(pDirectoryEdit_GetAutoSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetAutoSize)
void
irectoryEdit_SetAutoSize(TDirectoryEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetAutoSize)
    MySyscall(pDirectoryEdit_SetAutoSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetAutoSelect)
BOOL
irectoryEdit_GetAutoSelect(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetAutoSelect)
    return (BOOL)MySyscall(pDirectoryEdit_GetAutoSelect, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetAutoSelect)
void
irectoryEdit_SetAutoSelect(TDirectoryEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetAutoSelect)
    MySyscall(pDirectoryEdit_SetAutoSelect, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetColor)
TColor
irectoryEdit_GetColor(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetColor)
    return (TColor)MySyscall(pDirectoryEdit_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetColor)
void
irectoryEdit_SetColor(TDirectoryEdit AObj, TColor AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetColor)
    MySyscall(pDirectoryEdit_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetDragCursor)
TCursor
irectoryEdit_GetDragCursor(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetDragCursor)
    return (TCursor)MySyscall(pDirectoryEdit_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetDragCursor)
void
irectoryEdit_SetDragCursor(TDirectoryEdit AObj, TCursor AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetDragCursor)
    MySyscall(pDirectoryEdit_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetDragMode)
TDragMode
irectoryEdit_GetDragMode(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetDragMode)
    return (TDragMode)MySyscall(pDirectoryEdit_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetDragMode)
void
irectoryEdit_SetDragMode(TDirectoryEdit AObj, TDragMode AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetDragMode)
    MySyscall(pDirectoryEdit_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetEnabled)
BOOL
irectoryEdit_GetEnabled(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetEnabled)
    return (BOOL)MySyscall(pDirectoryEdit_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetEnabled)
void
irectoryEdit_SetEnabled(TDirectoryEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetEnabled)
    MySyscall(pDirectoryEdit_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetFont)
TFont
irectoryEdit_GetFont(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetFont)
    return (TFont)MySyscall(pDirectoryEdit_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetFont)
void
irectoryEdit_SetFont(TDirectoryEdit AObj, TFont AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetFont)
    MySyscall(pDirectoryEdit_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetLayout)
TLeftRight
irectoryEdit_GetLayout(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetLayout)
    return (TLeftRight)MySyscall(pDirectoryEdit_GetLayout, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetLayout)
void
irectoryEdit_SetLayout(TDirectoryEdit AObj, TLeftRight AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetLayout)
    MySyscall(pDirectoryEdit_SetLayout, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetMaxLength)
int32_t
irectoryEdit_GetMaxLength(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetMaxLength)
    return (int32_t)MySyscall(pDirectoryEdit_GetMaxLength, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetMaxLength)
void
irectoryEdit_SetMaxLength(TDirectoryEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetMaxLength)
    MySyscall(pDirectoryEdit_SetMaxLength, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetParentColor)
BOOL
irectoryEdit_GetParentColor(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetParentColor)
    return (BOOL)MySyscall(pDirectoryEdit_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetParentColor)
void
irectoryEdit_SetParentColor(TDirectoryEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetParentColor)
    MySyscall(pDirectoryEdit_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetParentFont)
BOOL
irectoryEdit_GetParentFont(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetParentFont)
    return (BOOL)MySyscall(pDirectoryEdit_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetParentFont)
void
irectoryEdit_SetParentFont(TDirectoryEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetParentFont)
    MySyscall(pDirectoryEdit_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetParentShowHint)
BOOL
irectoryEdit_GetParentShowHint(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetParentShowHint)
    return (BOOL)MySyscall(pDirectoryEdit_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetParentShowHint)
void
irectoryEdit_SetParentShowHint(TDirectoryEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetParentShowHint)
    MySyscall(pDirectoryEdit_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetPopupMenu)
TPopupMenu
irectoryEdit_GetPopupMenu(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetPopupMenu)
    return (TPopupMenu)MySyscall(pDirectoryEdit_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetPopupMenu)
void
irectoryEdit_SetPopupMenu(TDirectoryEdit AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetPopupMenu)
    MySyscall(pDirectoryEdit_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetReadOnly)
BOOL
irectoryEdit_GetReadOnly(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetReadOnly)
    return (BOOL)MySyscall(pDirectoryEdit_GetReadOnly, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetReadOnly)
void
irectoryEdit_SetReadOnly(TDirectoryEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetReadOnly)
    MySyscall(pDirectoryEdit_SetReadOnly, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetShowHint)
BOOL
irectoryEdit_GetShowHint(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetShowHint)
    return (BOOL)MySyscall(pDirectoryEdit_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetShowHint)
void
irectoryEdit_SetShowHint(TDirectoryEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetShowHint)
    MySyscall(pDirectoryEdit_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetTabOrder)
TTabOrder
irectoryEdit_GetTabOrder(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetTabOrder)
    return (TTabOrder)MySyscall(pDirectoryEdit_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetTabOrder)
void
irectoryEdit_SetTabOrder(TDirectoryEdit AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetTabOrder)
    MySyscall(pDirectoryEdit_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetSpacing)
int32_t
irectoryEdit_GetSpacing(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetSpacing)
    return (int32_t)MySyscall(pDirectoryEdit_GetSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetSpacing)
void
irectoryEdit_SetSpacing(TDirectoryEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetSpacing)
    MySyscall(pDirectoryEdit_SetSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetTabStop)
BOOL
irectoryEdit_GetTabStop(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetTabStop)
    return (BOOL)MySyscall(pDirectoryEdit_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetTabStop)
void
irectoryEdit_SetTabStop(TDirectoryEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetTabStop)
    MySyscall(pDirectoryEdit_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetVisible)
BOOL
irectoryEdit_GetVisible(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetVisible)
    return (BOOL)MySyscall(pDirectoryEdit_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetVisible)
void
irectoryEdit_SetVisible(TDirectoryEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetVisible)
    MySyscall(pDirectoryEdit_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetOnButtonClick)
void
irectoryEdit_SetOnButtonClick(TDirectoryEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(DirectoryEdit_SetOnButtonClick)
    MySyscall(pDirectoryEdit_SetOnButtonClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetOnChange)
void
irectoryEdit_SetOnChange(TDirectoryEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(DirectoryEdit_SetOnChange)
    MySyscall(pDirectoryEdit_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetOnClick)
void
irectoryEdit_SetOnClick(TDirectoryEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(DirectoryEdit_SetOnClick)
    MySyscall(pDirectoryEdit_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetOnContextPopup)
void
irectoryEdit_SetOnContextPopup(TDirectoryEdit AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(DirectoryEdit_SetOnContextPopup)
    MySyscall(pDirectoryEdit_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetOnDblClick)
void
irectoryEdit_SetOnDblClick(TDirectoryEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(DirectoryEdit_SetOnDblClick)
    MySyscall(pDirectoryEdit_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetOnDragDrop)
void
irectoryEdit_SetOnDragDrop(TDirectoryEdit AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(DirectoryEdit_SetOnDragDrop)
    MySyscall(pDirectoryEdit_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetOnDragOver)
void
irectoryEdit_SetOnDragOver(TDirectoryEdit AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(DirectoryEdit_SetOnDragOver)
    MySyscall(pDirectoryEdit_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetOnEditingDone)
void
irectoryEdit_SetOnEditingDone(TDirectoryEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(DirectoryEdit_SetOnEditingDone)
    MySyscall(pDirectoryEdit_SetOnEditingDone, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetOnEndDrag)
void
irectoryEdit_SetOnEndDrag(TDirectoryEdit AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(DirectoryEdit_SetOnEndDrag)
    MySyscall(pDirectoryEdit_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetOnEnter)
void
irectoryEdit_SetOnEnter(TDirectoryEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(DirectoryEdit_SetOnEnter)
    MySyscall(pDirectoryEdit_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetOnExit)
void
irectoryEdit_SetOnExit(TDirectoryEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(DirectoryEdit_SetOnExit)
    MySyscall(pDirectoryEdit_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetOnKeyDown)
void
irectoryEdit_SetOnKeyDown(TDirectoryEdit AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(DirectoryEdit_SetOnKeyDown)
    MySyscall(pDirectoryEdit_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetOnKeyPress)
void
irectoryEdit_SetOnKeyPress(TDirectoryEdit AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(DirectoryEdit_SetOnKeyPress)
    MySyscall(pDirectoryEdit_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetOnKeyUp)
void
irectoryEdit_SetOnKeyUp(TDirectoryEdit AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(DirectoryEdit_SetOnKeyUp)
    MySyscall(pDirectoryEdit_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetOnMouseDown)
void
irectoryEdit_SetOnMouseDown(TDirectoryEdit AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(DirectoryEdit_SetOnMouseDown)
    MySyscall(pDirectoryEdit_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetOnMouseEnter)
void
irectoryEdit_SetOnMouseEnter(TDirectoryEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(DirectoryEdit_SetOnMouseEnter)
    MySyscall(pDirectoryEdit_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetOnMouseLeave)
void
irectoryEdit_SetOnMouseLeave(TDirectoryEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(DirectoryEdit_SetOnMouseLeave)
    MySyscall(pDirectoryEdit_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetOnMouseMove)
void
irectoryEdit_SetOnMouseMove(TDirectoryEdit AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(DirectoryEdit_SetOnMouseMove)
    MySyscall(pDirectoryEdit_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetOnMouseUp)
void
irectoryEdit_SetOnMouseUp(TDirectoryEdit AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(DirectoryEdit_SetOnMouseUp)
    MySyscall(pDirectoryEdit_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetOnMouseWheel)
void
irectoryEdit_SetOnMouseWheel(TDirectoryEdit AObj, TMouseWheelEvent AEventData) {
    GET_FUNC_ADDR(DirectoryEdit_SetOnMouseWheel)
    MySyscall(pDirectoryEdit_SetOnMouseWheel, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetOnMouseWheelDown)
void
irectoryEdit_SetOnMouseWheelDown(TDirectoryEdit AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(DirectoryEdit_SetOnMouseWheelDown)
    MySyscall(pDirectoryEdit_SetOnMouseWheelDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetOnMouseWheelUp)
void
irectoryEdit_SetOnMouseWheelUp(TDirectoryEdit AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(DirectoryEdit_SetOnMouseWheelUp)
    MySyscall(pDirectoryEdit_SetOnMouseWheelUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetText)
char*
irectoryEdit_GetText(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetText)
    return (char*)MySyscall(pDirectoryEdit_GetText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetText)
void
irectoryEdit_SetText(TDirectoryEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetText)
    MySyscall(pDirectoryEdit_SetText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetTextHint)
char*
irectoryEdit_GetTextHint(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetTextHint)
    return (char*)MySyscall(pDirectoryEdit_GetTextHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetTextHint)
void
irectoryEdit_SetTextHint(TDirectoryEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetTextHint)
    MySyscall(pDirectoryEdit_SetTextHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetAlignment)
TAlignment
irectoryEdit_GetAlignment(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetAlignment)
    return (TAlignment)MySyscall(pDirectoryEdit_GetAlignment, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetAlignment)
void
irectoryEdit_SetAlignment(TDirectoryEdit AObj, TAlignment AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetAlignment)
    MySyscall(pDirectoryEdit_SetAlignment, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetCanUndo)
BOOL
irectoryEdit_GetCanUndo(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetCanUndo)
    return (BOOL)MySyscall(pDirectoryEdit_GetCanUndo, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetCaretPos)
TPoint
irectoryEdit_GetCaretPos(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetCaretPos)
    TPoint result;
    MySyscall(pDirectoryEdit_GetCaretPos, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DirectoryEdit_SetCaretPos)
void
irectoryEdit_SetCaretPos(TDirectoryEdit AObj, TPoint AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetCaretPos)
    MySyscall(pDirectoryEdit_SetCaretPos, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetCharCase)
TEditCharCase
irectoryEdit_GetCharCase(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetCharCase)
    return (TEditCharCase)MySyscall(pDirectoryEdit_GetCharCase, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetCharCase)
void
irectoryEdit_SetCharCase(TDirectoryEdit AObj, TEditCharCase AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetCharCase)
    MySyscall(pDirectoryEdit_SetCharCase, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetHideSelection)
BOOL
irectoryEdit_GetHideSelection(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetHideSelection)
    return (BOOL)MySyscall(pDirectoryEdit_GetHideSelection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetHideSelection)
void
irectoryEdit_SetHideSelection(TDirectoryEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetHideSelection)
    MySyscall(pDirectoryEdit_SetHideSelection, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetModified)
BOOL
irectoryEdit_GetModified(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetModified)
    return (BOOL)MySyscall(pDirectoryEdit_GetModified, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetModified)
void
irectoryEdit_SetModified(TDirectoryEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetModified)
    MySyscall(pDirectoryEdit_SetModified, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetNumbersOnly)
BOOL
irectoryEdit_GetNumbersOnly(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetNumbersOnly)
    return (BOOL)MySyscall(pDirectoryEdit_GetNumbersOnly, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetNumbersOnly)
void
irectoryEdit_SetNumbersOnly(TDirectoryEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetNumbersOnly)
    MySyscall(pDirectoryEdit_SetNumbersOnly, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetPasswordChar)
Char
irectoryEdit_GetPasswordChar(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetPasswordChar)
    return (Char)MySyscall(pDirectoryEdit_GetPasswordChar, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetPasswordChar)
void
irectoryEdit_SetPasswordChar(TDirectoryEdit AObj, Char AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetPasswordChar)
    MySyscall(pDirectoryEdit_SetPasswordChar, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetSelLength)
int32_t
irectoryEdit_GetSelLength(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetSelLength)
    return (int32_t)MySyscall(pDirectoryEdit_GetSelLength, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetSelLength)
void
irectoryEdit_SetSelLength(TDirectoryEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetSelLength)
    MySyscall(pDirectoryEdit_SetSelLength, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetSelStart)
int32_t
irectoryEdit_GetSelStart(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetSelStart)
    return (int32_t)MySyscall(pDirectoryEdit_GetSelStart, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetSelStart)
void
irectoryEdit_SetSelStart(TDirectoryEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetSelStart)
    MySyscall(pDirectoryEdit_SetSelStart, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetSelText)
char*
irectoryEdit_GetSelText(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetSelText)
    return (char*)MySyscall(pDirectoryEdit_GetSelText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetSelText)
void
irectoryEdit_SetSelText(TDirectoryEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetSelText)
    MySyscall(pDirectoryEdit_SetSelText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetDockClientCount)
int32_t
irectoryEdit_GetDockClientCount(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetDockClientCount)
    return (int32_t)MySyscall(pDirectoryEdit_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetDockSite)
BOOL
irectoryEdit_GetDockSite(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetDockSite)
    return (BOOL)MySyscall(pDirectoryEdit_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetDockSite)
void
irectoryEdit_SetDockSite(TDirectoryEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetDockSite)
    MySyscall(pDirectoryEdit_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetDoubleBuffered)
BOOL
irectoryEdit_GetDoubleBuffered(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetDoubleBuffered)
    return (BOOL)MySyscall(pDirectoryEdit_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetDoubleBuffered)
void
irectoryEdit_SetDoubleBuffered(TDirectoryEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetDoubleBuffered)
    MySyscall(pDirectoryEdit_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetMouseInClient)
BOOL
irectoryEdit_GetMouseInClient(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetMouseInClient)
    return (BOOL)MySyscall(pDirectoryEdit_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetVisibleDockClientCount)
int32_t
irectoryEdit_GetVisibleDockClientCount(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pDirectoryEdit_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetBrush)
TBrush
irectoryEdit_GetBrush(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetBrush)
    return (TBrush)MySyscall(pDirectoryEdit_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetControlCount)
int32_t
irectoryEdit_GetControlCount(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetControlCount)
    return (int32_t)MySyscall(pDirectoryEdit_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetHandle)
HWND
irectoryEdit_GetHandle(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetHandle)
    return (HWND)MySyscall(pDirectoryEdit_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetParentDoubleBuffered)
BOOL
irectoryEdit_GetParentDoubleBuffered(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pDirectoryEdit_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetParentDoubleBuffered)
void
irectoryEdit_SetParentDoubleBuffered(TDirectoryEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetParentDoubleBuffered)
    MySyscall(pDirectoryEdit_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetParentWindow)
HWND
irectoryEdit_GetParentWindow(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetParentWindow)
    return (HWND)MySyscall(pDirectoryEdit_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetParentWindow)
void
irectoryEdit_SetParentWindow(TDirectoryEdit AObj, HWND AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetParentWindow)
    MySyscall(pDirectoryEdit_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetShowing)
BOOL
irectoryEdit_GetShowing(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetShowing)
    return (BOOL)MySyscall(pDirectoryEdit_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetUseDockManager)
BOOL
irectoryEdit_GetUseDockManager(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetUseDockManager)
    return (BOOL)MySyscall(pDirectoryEdit_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetUseDockManager)
void
irectoryEdit_SetUseDockManager(TDirectoryEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetUseDockManager)
    MySyscall(pDirectoryEdit_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetAction)
TAction
irectoryEdit_GetAction(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetAction)
    return (TAction)MySyscall(pDirectoryEdit_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetAction)
void
irectoryEdit_SetAction(TDirectoryEdit AObj, TAction AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetAction)
    MySyscall(pDirectoryEdit_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetBiDiMode)
TBiDiMode
irectoryEdit_GetBiDiMode(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetBiDiMode)
    return (TBiDiMode)MySyscall(pDirectoryEdit_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetBiDiMode)
void
irectoryEdit_SetBiDiMode(TDirectoryEdit AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetBiDiMode)
    MySyscall(pDirectoryEdit_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetBoundsRect)
TRect
irectoryEdit_GetBoundsRect(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetBoundsRect)
    TRect result;
    MySyscall(pDirectoryEdit_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DirectoryEdit_SetBoundsRect)
void
irectoryEdit_SetBoundsRect(TDirectoryEdit AObj, TRect AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetBoundsRect)
    MySyscall(pDirectoryEdit_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetClientHeight)
int32_t
irectoryEdit_GetClientHeight(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetClientHeight)
    return (int32_t)MySyscall(pDirectoryEdit_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetClientHeight)
void
irectoryEdit_SetClientHeight(TDirectoryEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetClientHeight)
    MySyscall(pDirectoryEdit_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetClientOrigin)
TPoint
irectoryEdit_GetClientOrigin(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetClientOrigin)
    TPoint result;
    MySyscall(pDirectoryEdit_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DirectoryEdit_GetClientRect)
TRect
irectoryEdit_GetClientRect(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetClientRect)
    TRect result;
    MySyscall(pDirectoryEdit_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DirectoryEdit_GetClientWidth)
int32_t
irectoryEdit_GetClientWidth(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetClientWidth)
    return (int32_t)MySyscall(pDirectoryEdit_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetClientWidth)
void
irectoryEdit_SetClientWidth(TDirectoryEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetClientWidth)
    MySyscall(pDirectoryEdit_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetControlState)
TControlState
irectoryEdit_GetControlState(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetControlState)
    return (TControlState)MySyscall(pDirectoryEdit_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetControlState)
void
irectoryEdit_SetControlState(TDirectoryEdit AObj, TControlState AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetControlState)
    MySyscall(pDirectoryEdit_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetControlStyle)
TControlStyle
irectoryEdit_GetControlStyle(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetControlStyle)
    return (TControlStyle)MySyscall(pDirectoryEdit_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetControlStyle)
void
irectoryEdit_SetControlStyle(TDirectoryEdit AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetControlStyle)
    MySyscall(pDirectoryEdit_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetFloating)
BOOL
irectoryEdit_GetFloating(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetFloating)
    return (BOOL)MySyscall(pDirectoryEdit_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetParent)
TWinControl
irectoryEdit_GetParent(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetParent)
    return (TWinControl)MySyscall(pDirectoryEdit_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetParent)
void
irectoryEdit_SetParent(TDirectoryEdit AObj, TWinControl AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetParent)
    MySyscall(pDirectoryEdit_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetLeft)
int32_t
irectoryEdit_GetLeft(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetLeft)
    return (int32_t)MySyscall(pDirectoryEdit_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetLeft)
void
irectoryEdit_SetLeft(TDirectoryEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetLeft)
    MySyscall(pDirectoryEdit_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetTop)
int32_t
irectoryEdit_GetTop(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetTop)
    return (int32_t)MySyscall(pDirectoryEdit_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetTop)
void
irectoryEdit_SetTop(TDirectoryEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetTop)
    MySyscall(pDirectoryEdit_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetWidth)
int32_t
irectoryEdit_GetWidth(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetWidth)
    return (int32_t)MySyscall(pDirectoryEdit_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetWidth)
void
irectoryEdit_SetWidth(TDirectoryEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetWidth)
    MySyscall(pDirectoryEdit_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetHeight)
int32_t
irectoryEdit_GetHeight(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetHeight)
    return (int32_t)MySyscall(pDirectoryEdit_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetHeight)
void
irectoryEdit_SetHeight(TDirectoryEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetHeight)
    MySyscall(pDirectoryEdit_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetCursor)
TCursor
irectoryEdit_GetCursor(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetCursor)
    return (TCursor)MySyscall(pDirectoryEdit_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetCursor)
void
irectoryEdit_SetCursor(TDirectoryEdit AObj, TCursor AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetCursor)
    MySyscall(pDirectoryEdit_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetHint)
char*
irectoryEdit_GetHint(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetHint)
    return (char*)MySyscall(pDirectoryEdit_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetHint)
void
irectoryEdit_SetHint(TDirectoryEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetHint)
    MySyscall(pDirectoryEdit_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetComponentCount)
int32_t
irectoryEdit_GetComponentCount(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetComponentCount)
    return (int32_t)MySyscall(pDirectoryEdit_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetComponentIndex)
int32_t
irectoryEdit_GetComponentIndex(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetComponentIndex)
    return (int32_t)MySyscall(pDirectoryEdit_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetComponentIndex)
void
irectoryEdit_SetComponentIndex(TDirectoryEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetComponentIndex)
    MySyscall(pDirectoryEdit_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetOwner)
TComponent
irectoryEdit_GetOwner(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetOwner)
    return (TComponent)MySyscall(pDirectoryEdit_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetName)
char*
irectoryEdit_GetName(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetName)
    return (char*)MySyscall(pDirectoryEdit_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetName)
void
irectoryEdit_SetName(TDirectoryEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetName)
    MySyscall(pDirectoryEdit_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetTag)
intptr_t
irectoryEdit_GetTag(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetTag)
    return (intptr_t)MySyscall(pDirectoryEdit_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetTag)
void
irectoryEdit_SetTag(TDirectoryEdit AObj, intptr_t AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetTag)
    MySyscall(pDirectoryEdit_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetAnchorSideLeft)
TAnchorSide
irectoryEdit_GetAnchorSideLeft(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pDirectoryEdit_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetAnchorSideLeft)
void
irectoryEdit_SetAnchorSideLeft(TDirectoryEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetAnchorSideLeft)
    MySyscall(pDirectoryEdit_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetAnchorSideTop)
TAnchorSide
irectoryEdit_GetAnchorSideTop(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pDirectoryEdit_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetAnchorSideTop)
void
irectoryEdit_SetAnchorSideTop(TDirectoryEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetAnchorSideTop)
    MySyscall(pDirectoryEdit_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetAnchorSideRight)
TAnchorSide
irectoryEdit_GetAnchorSideRight(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pDirectoryEdit_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetAnchorSideRight)
void
irectoryEdit_SetAnchorSideRight(TDirectoryEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetAnchorSideRight)
    MySyscall(pDirectoryEdit_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetAnchorSideBottom)
TAnchorSide
irectoryEdit_GetAnchorSideBottom(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pDirectoryEdit_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetAnchorSideBottom)
void
irectoryEdit_SetAnchorSideBottom(TDirectoryEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetAnchorSideBottom)
    MySyscall(pDirectoryEdit_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetChildSizing)
TControlChildSizing
irectoryEdit_GetChildSizing(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetChildSizing)
    return (TControlChildSizing)MySyscall(pDirectoryEdit_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetChildSizing)
void
irectoryEdit_SetChildSizing(TDirectoryEdit AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetChildSizing)
    MySyscall(pDirectoryEdit_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetBorderSpacing)
TControlBorderSpacing
irectoryEdit_GetBorderSpacing(TDirectoryEdit AObj) {
    GET_FUNC_ADDR(DirectoryEdit_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pDirectoryEdit_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_SetBorderSpacing)
void
irectoryEdit_SetBorderSpacing(TDirectoryEdit AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(DirectoryEdit_SetBorderSpacing)
    MySyscall(pDirectoryEdit_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetDockClients)
TControl
irectoryEdit_GetDockClients(TDirectoryEdit AObj, int32_t Index) {
    GET_FUNC_ADDR(DirectoryEdit_GetDockClients)
    return (TControl)MySyscall(pDirectoryEdit_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetControls)
TControl
irectoryEdit_GetControls(TDirectoryEdit AObj, int32_t Index) {
    GET_FUNC_ADDR(DirectoryEdit_GetControls)
    return (TControl)MySyscall(pDirectoryEdit_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetComponents)
TComponent
irectoryEdit_GetComponents(TDirectoryEdit AObj, int32_t AIndex) {
    GET_FUNC_ADDR(DirectoryEdit_GetComponents)
    return (TComponent)MySyscall(pDirectoryEdit_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_GetAnchorSide)
TAnchorSide
irectoryEdit_GetAnchorSide(TDirectoryEdit AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(DirectoryEdit_GetAnchorSide)
    return (TAnchorSide)MySyscall(pDirectoryEdit_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DirectoryEdit_StaticClassType)
TClass
irectoryEdit_StaticClassType() {
    GET_FUNC_ADDR(DirectoryEdit_StaticClassType)
    return (TClass)MySyscall(pDirectoryEdit_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TColorButton-------------------

DEFINE_FUNC_PTR(ColorButton_Create)
TColorButton
ColorButton_Create(TComponent AOwner) {
    GET_FUNC_ADDR(ColorButton_Create)
    return (TColorButton)MySyscall(pColorButton_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_Free)
void
ColorButton_Free(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_Free)
    MySyscall(pColorButton_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_Click)
void
ColorButton_Click(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_Click)
    MySyscall(pColorButton_Click, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_BringToFront)
void
ColorButton_BringToFront(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_BringToFront)
    MySyscall(pColorButton_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_ClientToScreen)
TPoint
ColorButton_ClientToScreen(TColorButton AObj, TPoint Point) {
    GET_FUNC_ADDR(ColorButton_ClientToScreen)
    TPoint result;
    MySyscall(pColorButton_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ColorButton_ClientToParent)
TPoint
ColorButton_ClientToParent(TColorButton AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ColorButton_ClientToParent)
    TPoint result;
    MySyscall(pColorButton_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ColorButton_Dragging)
BOOL
ColorButton_Dragging(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_Dragging)
    return (BOOL)MySyscall(pColorButton_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_HasParent)
BOOL
ColorButton_HasParent(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_HasParent)
    return (BOOL)MySyscall(pColorButton_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_Hide)
void
ColorButton_Hide(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_Hide)
    MySyscall(pColorButton_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_Invalidate)
void
ColorButton_Invalidate(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_Invalidate)
    MySyscall(pColorButton_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_Perform)
intptr_t
ColorButton_Perform(TColorButton AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(ColorButton_Perform)
    return (intptr_t)MySyscall(pColorButton_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_Refresh)
void
ColorButton_Refresh(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_Refresh)
    MySyscall(pColorButton_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_Repaint)
void
ColorButton_Repaint(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_Repaint)
    MySyscall(pColorButton_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_ScreenToClient)
TPoint
ColorButton_ScreenToClient(TColorButton AObj, TPoint Point) {
    GET_FUNC_ADDR(ColorButton_ScreenToClient)
    TPoint result;
    MySyscall(pColorButton_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ColorButton_ParentToClient)
TPoint
ColorButton_ParentToClient(TColorButton AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ColorButton_ParentToClient)
    TPoint result;
    MySyscall(pColorButton_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ColorButton_SendToBack)
void
ColorButton_SendToBack(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_SendToBack)
    MySyscall(pColorButton_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetBounds)
void
ColorButton_SetBounds(TColorButton AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(ColorButton_SetBounds)
    MySyscall(pColorButton_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_Show)
void
ColorButton_Show(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_Show)
    MySyscall(pColorButton_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_Update)
void
ColorButton_Update(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_Update)
    MySyscall(pColorButton_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetTextBuf)
int32_t
ColorButton_GetTextBuf(TColorButton AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(ColorButton_GetTextBuf)
    return (int32_t)MySyscall(pColorButton_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetTextLen)
int32_t
ColorButton_GetTextLen(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetTextLen)
    return (int32_t)MySyscall(pColorButton_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetTextBuf)
void
ColorButton_SetTextBuf(TColorButton AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(ColorButton_SetTextBuf)
    MySyscall(pColorButton_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_FindComponent)
TComponent
ColorButton_FindComponent(TColorButton AObj, CChar char* AName) {
    GET_FUNC_ADDR(ColorButton_FindComponent)
    return (TComponent)MySyscall(pColorButton_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetNamePath)
char*
ColorButton_GetNamePath(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetNamePath)
    return (char*)MySyscall(pColorButton_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_Assign)
void
ColorButton_Assign(TColorButton AObj, TObject Source) {
    GET_FUNC_ADDR(ColorButton_Assign)
    MySyscall(pColorButton_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_ClassType)
TClass
ColorButton_ClassType(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_ClassType)
    return (TClass)MySyscall(pColorButton_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_ClassName)
char*
ColorButton_ClassName(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_ClassName)
    return (char*)MySyscall(pColorButton_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_InstanceSize)
int32_t
ColorButton_InstanceSize(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_InstanceSize)
    return (int32_t)MySyscall(pColorButton_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_InheritsFrom)
BOOL
ColorButton_InheritsFrom(TColorButton AObj, TClass AClass) {
    GET_FUNC_ADDR(ColorButton_InheritsFrom)
    return (BOOL)MySyscall(pColorButton_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_Equals)
BOOL
ColorButton_Equals(TColorButton AObj, TObject Obj) {
    GET_FUNC_ADDR(ColorButton_Equals)
    return (BOOL)MySyscall(pColorButton_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetHashCode)
int32_t
ColorButton_GetHashCode(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetHashCode)
    return (int32_t)MySyscall(pColorButton_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_ToString)
char*
ColorButton_ToString(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_ToString)
    return (char*)MySyscall(pColorButton_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_AnchorToNeighbour)
void
ColorButton_AnchorToNeighbour(TColorButton AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ColorButton_AnchorToNeighbour)
    MySyscall(pColorButton_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_AnchorParallel)
void
ColorButton_AnchorParallel(TColorButton AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ColorButton_AnchorParallel)
    MySyscall(pColorButton_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_AnchorHorizontalCenterTo)
void
ColorButton_AnchorHorizontalCenterTo(TColorButton AObj, TControl ASibling) {
    GET_FUNC_ADDR(ColorButton_AnchorHorizontalCenterTo)
    MySyscall(pColorButton_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_AnchorVerticalCenterTo)
void
ColorButton_AnchorVerticalCenterTo(TColorButton AObj, TControl ASibling) {
    GET_FUNC_ADDR(ColorButton_AnchorVerticalCenterTo)
    MySyscall(pColorButton_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_AnchorSame)
void
ColorButton_AnchorSame(TColorButton AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(ColorButton_AnchorSame)
    MySyscall(pColorButton_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_AnchorAsAlign)
void
ColorButton_AnchorAsAlign(TColorButton AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(ColorButton_AnchorAsAlign)
    MySyscall(pColorButton_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_AnchorClient)
void
ColorButton_AnchorClient(TColorButton AObj, int32_t ASpace) {
    GET_FUNC_ADDR(ColorButton_AnchorClient)
    MySyscall(pColorButton_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_ScaleDesignToForm)
int32_t
ColorButton_ScaleDesignToForm(TColorButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorButton_ScaleDesignToForm)
    return (int32_t)MySyscall(pColorButton_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_ScaleFormToDesign)
int32_t
ColorButton_ScaleFormToDesign(TColorButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorButton_ScaleFormToDesign)
    return (int32_t)MySyscall(pColorButton_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_Scale96ToForm)
int32_t
ColorButton_Scale96ToForm(TColorButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorButton_Scale96ToForm)
    return (int32_t)MySyscall(pColorButton_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_ScaleFormTo96)
int32_t
ColorButton_ScaleFormTo96(TColorButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorButton_ScaleFormTo96)
    return (int32_t)MySyscall(pColorButton_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_Scale96ToFont)
int32_t
ColorButton_Scale96ToFont(TColorButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorButton_Scale96ToFont)
    return (int32_t)MySyscall(pColorButton_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_ScaleFontTo96)
int32_t
ColorButton_ScaleFontTo96(TColorButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorButton_ScaleFontTo96)
    return (int32_t)MySyscall(pColorButton_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_ScaleScreenToFont)
int32_t
ColorButton_ScaleScreenToFont(TColorButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorButton_ScaleScreenToFont)
    return (int32_t)MySyscall(pColorButton_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_ScaleFontToScreen)
int32_t
ColorButton_ScaleFontToScreen(TColorButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorButton_ScaleFontToScreen)
    return (int32_t)MySyscall(pColorButton_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_Scale96ToScreen)
int32_t
ColorButton_Scale96ToScreen(TColorButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorButton_Scale96ToScreen)
    return (int32_t)MySyscall(pColorButton_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_ScaleScreenTo96)
int32_t
ColorButton_ScaleScreenTo96(TColorButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ColorButton_ScaleScreenTo96)
    return (int32_t)MySyscall(pColorButton_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_AutoAdjustLayout)
void
ColorButton_AutoAdjustLayout(TColorButton AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(ColorButton_AutoAdjustLayout)
    MySyscall(pColorButton_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_FixDesignFontsPPI)
void
ColorButton_FixDesignFontsPPI(TColorButton AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(ColorButton_FixDesignFontsPPI)
    MySyscall(pColorButton_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_ScaleFontsPPI)
void
ColorButton_ScaleFontsPPI(TColorButton AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(ColorButton_ScaleFontsPPI)
    MySyscall(pColorButton_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetAction)
TAction
ColorButton_GetAction(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetAction)
    return (TAction)MySyscall(pColorButton_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetAction)
void
ColorButton_SetAction(TColorButton AObj, TAction AValue) {
    GET_FUNC_ADDR(ColorButton_SetAction)
    MySyscall(pColorButton_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetAlign)
TAlign
ColorButton_GetAlign(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetAlign)
    return (TAlign)MySyscall(pColorButton_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetAlign)
void
ColorButton_SetAlign(TColorButton AObj, TAlign AValue) {
    GET_FUNC_ADDR(ColorButton_SetAlign)
    MySyscall(pColorButton_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetAnchors)
TAnchors
ColorButton_GetAnchors(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetAnchors)
    return (TAnchors)MySyscall(pColorButton_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetAnchors)
void
ColorButton_SetAnchors(TColorButton AObj, TAnchors AValue) {
    GET_FUNC_ADDR(ColorButton_SetAnchors)
    MySyscall(pColorButton_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetAllowAllUp)
BOOL
ColorButton_GetAllowAllUp(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetAllowAllUp)
    return (BOOL)MySyscall(pColorButton_GetAllowAllUp, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetAllowAllUp)
void
ColorButton_SetAllowAllUp(TColorButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorButton_SetAllowAllUp)
    MySyscall(pColorButton_SetAllowAllUp, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetBorderWidth)
int32_t
ColorButton_GetBorderWidth(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetBorderWidth)
    return (int32_t)MySyscall(pColorButton_GetBorderWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetBorderWidth)
void
ColorButton_SetBorderWidth(TColorButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorButton_SetBorderWidth)
    MySyscall(pColorButton_SetBorderWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetButtonColorAutoSize)
BOOL
ColorButton_GetButtonColorAutoSize(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetButtonColorAutoSize)
    return (BOOL)MySyscall(pColorButton_GetButtonColorAutoSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetButtonColorAutoSize)
void
ColorButton_SetButtonColorAutoSize(TColorButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorButton_SetButtonColorAutoSize)
    MySyscall(pColorButton_SetButtonColorAutoSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetButtonColorSize)
int32_t
ColorButton_GetButtonColorSize(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetButtonColorSize)
    return (int32_t)MySyscall(pColorButton_GetButtonColorSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetButtonColorSize)
void
ColorButton_SetButtonColorSize(TColorButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorButton_SetButtonColorSize)
    MySyscall(pColorButton_SetButtonColorSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetButtonColor)
TColor
ColorButton_GetButtonColor(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetButtonColor)
    return (TColor)MySyscall(pColorButton_GetButtonColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetButtonColor)
void
ColorButton_SetButtonColor(TColorButton AObj, TColor AValue) {
    GET_FUNC_ADDR(ColorButton_SetButtonColor)
    MySyscall(pColorButton_SetButtonColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetColorDialog)
TColorDialog
ColorButton_GetColorDialog(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetColorDialog)
    return (TColorDialog)MySyscall(pColorButton_GetColorDialog, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetColorDialog)
void
ColorButton_SetColorDialog(TColorButton AObj, TColorDialog AValue) {
    GET_FUNC_ADDR(ColorButton_SetColorDialog)
    MySyscall(pColorButton_SetColorDialog, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetConstraints)
TSizeConstraints
ColorButton_GetConstraints(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetConstraints)
    return (TSizeConstraints)MySyscall(pColorButton_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetConstraints)
void
ColorButton_SetConstraints(TColorButton AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(ColorButton_SetConstraints)
    MySyscall(pColorButton_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetCaption)
char*
ColorButton_GetCaption(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetCaption)
    return (char*)MySyscall(pColorButton_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetCaption)
void
ColorButton_SetCaption(TColorButton AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ColorButton_SetCaption)
    MySyscall(pColorButton_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetColor)
TColor
ColorButton_GetColor(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetColor)
    return (TColor)MySyscall(pColorButton_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetColor)
void
ColorButton_SetColor(TColorButton AObj, TColor AValue) {
    GET_FUNC_ADDR(ColorButton_SetColor)
    MySyscall(pColorButton_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetDown)
BOOL
ColorButton_GetDown(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetDown)
    return (BOOL)MySyscall(pColorButton_GetDown, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetDown)
void
ColorButton_SetDown(TColorButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorButton_SetDown)
    MySyscall(pColorButton_SetDown, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetEnabled)
BOOL
ColorButton_GetEnabled(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetEnabled)
    return (BOOL)MySyscall(pColorButton_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetEnabled)
void
ColorButton_SetEnabled(TColorButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorButton_SetEnabled)
    MySyscall(pColorButton_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetFlat)
BOOL
ColorButton_GetFlat(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetFlat)
    return (BOOL)MySyscall(pColorButton_GetFlat, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetFlat)
void
ColorButton_SetFlat(TColorButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorButton_SetFlat)
    MySyscall(pColorButton_SetFlat, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetFont)
TFont
ColorButton_GetFont(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetFont)
    return (TFont)MySyscall(pColorButton_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetFont)
void
ColorButton_SetFont(TColorButton AObj, TFont AValue) {
    GET_FUNC_ADDR(ColorButton_SetFont)
    MySyscall(pColorButton_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetGroupIndex)
int32_t
ColorButton_GetGroupIndex(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetGroupIndex)
    return (int32_t)MySyscall(pColorButton_GetGroupIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetGroupIndex)
void
ColorButton_SetGroupIndex(TColorButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorButton_SetGroupIndex)
    MySyscall(pColorButton_SetGroupIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetHint)
char*
ColorButton_GetHint(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetHint)
    return (char*)MySyscall(pColorButton_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetHint)
void
ColorButton_SetHint(TColorButton AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ColorButton_SetHint)
    MySyscall(pColorButton_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetLayout)
TButtonLayout
ColorButton_GetLayout(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetLayout)
    return (TButtonLayout)MySyscall(pColorButton_GetLayout, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetLayout)
void
ColorButton_SetLayout(TColorButton AObj, TButtonLayout AValue) {
    GET_FUNC_ADDR(ColorButton_SetLayout)
    MySyscall(pColorButton_SetLayout, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetSpacing)
int32_t
ColorButton_GetSpacing(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetSpacing)
    return (int32_t)MySyscall(pColorButton_GetSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetSpacing)
void
ColorButton_SetSpacing(TColorButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorButton_SetSpacing)
    MySyscall(pColorButton_SetSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetTransparent)
BOOL
ColorButton_GetTransparent(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetTransparent)
    return (BOOL)MySyscall(pColorButton_GetTransparent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetTransparent)
void
ColorButton_SetTransparent(TColorButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorButton_SetTransparent)
    MySyscall(pColorButton_SetTransparent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetVisible)
BOOL
ColorButton_GetVisible(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetVisible)
    return (BOOL)MySyscall(pColorButton_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetVisible)
void
ColorButton_SetVisible(TColorButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorButton_SetVisible)
    MySyscall(pColorButton_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetOnClick)
void
ColorButton_SetOnClick(TColorButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ColorButton_SetOnClick)
    MySyscall(pColorButton_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetOnColorChanged)
void
ColorButton_SetOnColorChanged(TColorButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ColorButton_SetOnColorChanged)
    MySyscall(pColorButton_SetOnColorChanged, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetOnDblClick)
void
ColorButton_SetOnDblClick(TColorButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ColorButton_SetOnDblClick)
    MySyscall(pColorButton_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetOnMouseDown)
void
ColorButton_SetOnMouseDown(TColorButton AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(ColorButton_SetOnMouseDown)
    MySyscall(pColorButton_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetOnMouseEnter)
void
ColorButton_SetOnMouseEnter(TColorButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ColorButton_SetOnMouseEnter)
    MySyscall(pColorButton_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetOnMouseLeave)
void
ColorButton_SetOnMouseLeave(TColorButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ColorButton_SetOnMouseLeave)
    MySyscall(pColorButton_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetOnMouseMove)
void
ColorButton_SetOnMouseMove(TColorButton AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(ColorButton_SetOnMouseMove)
    MySyscall(pColorButton_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetOnMouseUp)
void
ColorButton_SetOnMouseUp(TColorButton AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(ColorButton_SetOnMouseUp)
    MySyscall(pColorButton_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetOnMouseWheel)
void
ColorButton_SetOnMouseWheel(TColorButton AObj, TMouseWheelEvent AEventData) {
    GET_FUNC_ADDR(ColorButton_SetOnMouseWheel)
    MySyscall(pColorButton_SetOnMouseWheel, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetOnMouseWheelDown)
void
ColorButton_SetOnMouseWheelDown(TColorButton AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(ColorButton_SetOnMouseWheelDown)
    MySyscall(pColorButton_SetOnMouseWheelDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetOnMouseWheelUp)
void
ColorButton_SetOnMouseWheelUp(TColorButton AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(ColorButton_SetOnMouseWheelUp)
    MySyscall(pColorButton_SetOnMouseWheelUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetOnPaint)
void
ColorButton_SetOnPaint(TColorButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ColorButton_SetOnPaint)
    MySyscall(pColorButton_SetOnPaint, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetOnResize)
void
ColorButton_SetOnResize(TColorButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ColorButton_SetOnResize)
    MySyscall(pColorButton_SetOnResize, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetShowHint)
BOOL
ColorButton_GetShowHint(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetShowHint)
    return (BOOL)MySyscall(pColorButton_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetShowHint)
void
ColorButton_SetShowHint(TColorButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorButton_SetShowHint)
    MySyscall(pColorButton_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetParentFont)
BOOL
ColorButton_GetParentFont(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetParentFont)
    return (BOOL)MySyscall(pColorButton_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetParentFont)
void
ColorButton_SetParentFont(TColorButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorButton_SetParentFont)
    MySyscall(pColorButton_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetParentShowHint)
BOOL
ColorButton_GetParentShowHint(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetParentShowHint)
    return (BOOL)MySyscall(pColorButton_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetParentShowHint)
void
ColorButton_SetParentShowHint(TColorButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorButton_SetParentShowHint)
    MySyscall(pColorButton_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetPopupMenu)
TPopupMenu
ColorButton_GetPopupMenu(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetPopupMenu)
    return (TPopupMenu)MySyscall(pColorButton_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetPopupMenu)
void
ColorButton_SetPopupMenu(TColorButton AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(ColorButton_SetPopupMenu)
    MySyscall(pColorButton_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetImageIndex)
int32_t
ColorButton_GetImageIndex(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetImageIndex)
    return (int32_t)MySyscall(pColorButton_GetImageIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetImageIndex)
void
ColorButton_SetImageIndex(TColorButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorButton_SetImageIndex)
    MySyscall(pColorButton_SetImageIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetImages)
TImageList
ColorButton_GetImages(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetImages)
    return (TImageList)MySyscall(pColorButton_GetImages, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetImages)
void
ColorButton_SetImages(TColorButton AObj, TImageList AValue) {
    GET_FUNC_ADDR(ColorButton_SetImages)
    MySyscall(pColorButton_SetImages, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetImageWidth)
int32_t
ColorButton_GetImageWidth(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetImageWidth)
    return (int32_t)MySyscall(pColorButton_GetImageWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetImageWidth)
void
ColorButton_SetImageWidth(TColorButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorButton_SetImageWidth)
    MySyscall(pColorButton_SetImageWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetShowCaption)
BOOL
ColorButton_GetShowCaption(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetShowCaption)
    return (BOOL)MySyscall(pColorButton_GetShowCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetShowCaption)
void
ColorButton_SetShowCaption(TColorButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ColorButton_SetShowCaption)
    MySyscall(pColorButton_SetShowCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetBiDiMode)
TBiDiMode
ColorButton_GetBiDiMode(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetBiDiMode)
    return (TBiDiMode)MySyscall(pColorButton_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetBiDiMode)
void
ColorButton_SetBiDiMode(TColorButton AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(ColorButton_SetBiDiMode)
    MySyscall(pColorButton_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetGlyph)
TBitmap
ColorButton_GetGlyph(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetGlyph)
    return (TBitmap)MySyscall(pColorButton_GetGlyph, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetGlyph)
void
ColorButton_SetGlyph(TColorButton AObj, TBitmap AValue) {
    GET_FUNC_ADDR(ColorButton_SetGlyph)
    MySyscall(pColorButton_SetGlyph, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetNumGlyphs)
TNumGlyphs
ColorButton_GetNumGlyphs(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetNumGlyphs)
    return (TNumGlyphs)MySyscall(pColorButton_GetNumGlyphs, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetNumGlyphs)
void
ColorButton_SetNumGlyphs(TColorButton AObj, TNumGlyphs AValue) {
    GET_FUNC_ADDR(ColorButton_SetNumGlyphs)
    MySyscall(pColorButton_SetNumGlyphs, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetBoundsRect)
TRect
ColorButton_GetBoundsRect(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetBoundsRect)
    TRect result;
    MySyscall(pColorButton_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ColorButton_SetBoundsRect)
void
ColorButton_SetBoundsRect(TColorButton AObj, TRect AValue) {
    GET_FUNC_ADDR(ColorButton_SetBoundsRect)
    MySyscall(pColorButton_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetClientHeight)
int32_t
ColorButton_GetClientHeight(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetClientHeight)
    return (int32_t)MySyscall(pColorButton_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetClientHeight)
void
ColorButton_SetClientHeight(TColorButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorButton_SetClientHeight)
    MySyscall(pColorButton_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetClientOrigin)
TPoint
ColorButton_GetClientOrigin(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetClientOrigin)
    TPoint result;
    MySyscall(pColorButton_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ColorButton_GetClientRect)
TRect
ColorButton_GetClientRect(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetClientRect)
    TRect result;
    MySyscall(pColorButton_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ColorButton_GetClientWidth)
int32_t
ColorButton_GetClientWidth(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetClientWidth)
    return (int32_t)MySyscall(pColorButton_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetClientWidth)
void
ColorButton_SetClientWidth(TColorButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorButton_SetClientWidth)
    MySyscall(pColorButton_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetControlState)
TControlState
ColorButton_GetControlState(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetControlState)
    return (TControlState)MySyscall(pColorButton_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetControlState)
void
ColorButton_SetControlState(TColorButton AObj, TControlState AValue) {
    GET_FUNC_ADDR(ColorButton_SetControlState)
    MySyscall(pColorButton_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetControlStyle)
TControlStyle
ColorButton_GetControlStyle(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetControlStyle)
    return (TControlStyle)MySyscall(pColorButton_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetControlStyle)
void
ColorButton_SetControlStyle(TColorButton AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(ColorButton_SetControlStyle)
    MySyscall(pColorButton_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetFloating)
BOOL
ColorButton_GetFloating(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetFloating)
    return (BOOL)MySyscall(pColorButton_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetParent)
TWinControl
ColorButton_GetParent(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetParent)
    return (TWinControl)MySyscall(pColorButton_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetParent)
void
ColorButton_SetParent(TColorButton AObj, TWinControl AValue) {
    GET_FUNC_ADDR(ColorButton_SetParent)
    MySyscall(pColorButton_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetLeft)
int32_t
ColorButton_GetLeft(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetLeft)
    return (int32_t)MySyscall(pColorButton_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetLeft)
void
ColorButton_SetLeft(TColorButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorButton_SetLeft)
    MySyscall(pColorButton_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetTop)
int32_t
ColorButton_GetTop(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetTop)
    return (int32_t)MySyscall(pColorButton_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetTop)
void
ColorButton_SetTop(TColorButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorButton_SetTop)
    MySyscall(pColorButton_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetWidth)
int32_t
ColorButton_GetWidth(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetWidth)
    return (int32_t)MySyscall(pColorButton_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetWidth)
void
ColorButton_SetWidth(TColorButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorButton_SetWidth)
    MySyscall(pColorButton_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetHeight)
int32_t
ColorButton_GetHeight(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetHeight)
    return (int32_t)MySyscall(pColorButton_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetHeight)
void
ColorButton_SetHeight(TColorButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorButton_SetHeight)
    MySyscall(pColorButton_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetCursor)
TCursor
ColorButton_GetCursor(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetCursor)
    return (TCursor)MySyscall(pColorButton_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetCursor)
void
ColorButton_SetCursor(TColorButton AObj, TCursor AValue) {
    GET_FUNC_ADDR(ColorButton_SetCursor)
    MySyscall(pColorButton_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetComponentCount)
int32_t
ColorButton_GetComponentCount(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetComponentCount)
    return (int32_t)MySyscall(pColorButton_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetComponentIndex)
int32_t
ColorButton_GetComponentIndex(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetComponentIndex)
    return (int32_t)MySyscall(pColorButton_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetComponentIndex)
void
ColorButton_SetComponentIndex(TColorButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ColorButton_SetComponentIndex)
    MySyscall(pColorButton_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetOwner)
TComponent
ColorButton_GetOwner(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetOwner)
    return (TComponent)MySyscall(pColorButton_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetName)
char*
ColorButton_GetName(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetName)
    return (char*)MySyscall(pColorButton_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetName)
void
ColorButton_SetName(TColorButton AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ColorButton_SetName)
    MySyscall(pColorButton_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetTag)
intptr_t
ColorButton_GetTag(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetTag)
    return (intptr_t)MySyscall(pColorButton_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetTag)
void
ColorButton_SetTag(TColorButton AObj, intptr_t AValue) {
    GET_FUNC_ADDR(ColorButton_SetTag)
    MySyscall(pColorButton_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetAnchorSideLeft)
TAnchorSide
ColorButton_GetAnchorSideLeft(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pColorButton_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetAnchorSideLeft)
void
ColorButton_SetAnchorSideLeft(TColorButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ColorButton_SetAnchorSideLeft)
    MySyscall(pColorButton_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetAnchorSideTop)
TAnchorSide
ColorButton_GetAnchorSideTop(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pColorButton_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetAnchorSideTop)
void
ColorButton_SetAnchorSideTop(TColorButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ColorButton_SetAnchorSideTop)
    MySyscall(pColorButton_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetAnchorSideRight)
TAnchorSide
ColorButton_GetAnchorSideRight(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pColorButton_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetAnchorSideRight)
void
ColorButton_SetAnchorSideRight(TColorButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ColorButton_SetAnchorSideRight)
    MySyscall(pColorButton_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetAnchorSideBottom)
TAnchorSide
ColorButton_GetAnchorSideBottom(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pColorButton_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetAnchorSideBottom)
void
ColorButton_SetAnchorSideBottom(TColorButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ColorButton_SetAnchorSideBottom)
    MySyscall(pColorButton_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetBorderSpacing)
TControlBorderSpacing
ColorButton_GetBorderSpacing(TColorButton AObj) {
    GET_FUNC_ADDR(ColorButton_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pColorButton_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_SetBorderSpacing)
void
ColorButton_SetBorderSpacing(TColorButton AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(ColorButton_SetBorderSpacing)
    MySyscall(pColorButton_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetComponents)
TComponent
ColorButton_GetComponents(TColorButton AObj, int32_t AIndex) {
    GET_FUNC_ADDR(ColorButton_GetComponents)
    return (TComponent)MySyscall(pColorButton_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_GetAnchorSide)
TAnchorSide
ColorButton_GetAnchorSide(TColorButton AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(ColorButton_GetAnchorSide)
    return (TAnchorSide)MySyscall(pColorButton_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ColorButton_StaticClassType)
TClass
ColorButton_StaticClassType() {
    GET_FUNC_ADDR(ColorButton_StaticClassType)
    return (TClass)MySyscall(pColorButton_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TMiniWebview-------------------

DEFINE_FUNC_PTR(MiniWebview_Create)
TMiniWebview
MiniWebview_Create(TComponent AOwner) {
    GET_FUNC_ADDR(MiniWebview_Create)
    return (TMiniWebview)MySyscall(pMiniWebview_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_Free)
void
MiniWebview_Free(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_Free)
    MySyscall(pMiniWebview_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_Navigate)
void
MiniWebview_Navigate(TMiniWebview AObj, CChar char* AURL) {
    GET_FUNC_ADDR(MiniWebview_Navigate)
    MySyscall(pMiniWebview_Navigate, 2, AObj, AURL ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GoBack)
void
MiniWebview_GoBack(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GoBack)
    MySyscall(pMiniWebview_GoBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GoForward)
void
MiniWebview_GoForward(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GoForward)
    MySyscall(pMiniWebview_GoForward, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GoHome)
void
MiniWebview_GoHome(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GoHome)
    MySyscall(pMiniWebview_GoHome, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GoSearch)
void
MiniWebview_GoSearch(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GoSearch)
    MySyscall(pMiniWebview_GoSearch, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_Refresh)
void
MiniWebview_Refresh(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_Refresh)
    MySyscall(pMiniWebview_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_Stop)
void
MiniWebview_Stop(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_Stop)
    MySyscall(pMiniWebview_Stop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetBounds)
void
MiniWebview_SetBounds(TMiniWebview AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(MiniWebview_SetBounds)
    MySyscall(pMiniWebview_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_ExecuteScript)
char*
MiniWebview_ExecuteScript(TMiniWebview AObj, CChar char* AScriptText, CChar char* AScriptType) {
    GET_FUNC_ADDR(MiniWebview_ExecuteScript)
    return (char*)MySyscall(pMiniWebview_ExecuteScript, 3, AObj, AScriptText, AScriptType ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_ExecuteJS)
char*
MiniWebview_ExecuteJS(TMiniWebview AObj, CChar char* AScriptText) {
    GET_FUNC_ADDR(MiniWebview_ExecuteJS)
    return (char*)MySyscall(pMiniWebview_ExecuteJS, 2, AObj, AScriptText ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_LoadHTML)
void
MiniWebview_LoadHTML(TMiniWebview AObj, CChar char* AStr) {
    GET_FUNC_ADDR(MiniWebview_LoadHTML)
    MySyscall(pMiniWebview_LoadHTML, 2, AObj, AStr ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_CanFocus)
BOOL
MiniWebview_CanFocus(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_CanFocus)
    return (BOOL)MySyscall(pMiniWebview_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_ContainsControl)
BOOL
MiniWebview_ContainsControl(TMiniWebview AObj, TControl Control) {
    GET_FUNC_ADDR(MiniWebview_ContainsControl)
    return (BOOL)MySyscall(pMiniWebview_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_ControlAtPos)
TControl
MiniWebview_ControlAtPos(TMiniWebview AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(MiniWebview_ControlAtPos)
    return (TControl)MySyscall(pMiniWebview_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_DisableAlign)
void
MiniWebview_DisableAlign(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_DisableAlign)
    MySyscall(pMiniWebview_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_EnableAlign)
void
MiniWebview_EnableAlign(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_EnableAlign)
    MySyscall(pMiniWebview_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_FindChildControl)
TControl
MiniWebview_FindChildControl(TMiniWebview AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(MiniWebview_FindChildControl)
    return (TControl)MySyscall(pMiniWebview_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_FlipChildren)
void
MiniWebview_FlipChildren(TMiniWebview AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(MiniWebview_FlipChildren)
    MySyscall(pMiniWebview_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_Focused)
BOOL
MiniWebview_Focused(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_Focused)
    return (BOOL)MySyscall(pMiniWebview_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_HandleAllocated)
BOOL
MiniWebview_HandleAllocated(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_HandleAllocated)
    return (BOOL)MySyscall(pMiniWebview_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_InsertControl)
void
MiniWebview_InsertControl(TMiniWebview AObj, TControl AControl) {
    GET_FUNC_ADDR(MiniWebview_InsertControl)
    MySyscall(pMiniWebview_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_Invalidate)
void
MiniWebview_Invalidate(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_Invalidate)
    MySyscall(pMiniWebview_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_PaintTo)
void
MiniWebview_PaintTo(TMiniWebview AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(MiniWebview_PaintTo)
    MySyscall(pMiniWebview_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_RemoveControl)
void
MiniWebview_RemoveControl(TMiniWebview AObj, TControl AControl) {
    GET_FUNC_ADDR(MiniWebview_RemoveControl)
    MySyscall(pMiniWebview_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_Realign)
void
MiniWebview_Realign(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_Realign)
    MySyscall(pMiniWebview_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_Repaint)
void
MiniWebview_Repaint(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_Repaint)
    MySyscall(pMiniWebview_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_ScaleBy)
void
MiniWebview_ScaleBy(TMiniWebview AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(MiniWebview_ScaleBy)
    MySyscall(pMiniWebview_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_ScrollBy)
void
MiniWebview_ScrollBy(TMiniWebview AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(MiniWebview_ScrollBy)
    MySyscall(pMiniWebview_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetFocus)
void
MiniWebview_SetFocus(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_SetFocus)
    MySyscall(pMiniWebview_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_Update)
void
MiniWebview_Update(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_Update)
    MySyscall(pMiniWebview_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_BringToFront)
void
MiniWebview_BringToFront(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_BringToFront)
    MySyscall(pMiniWebview_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_ClientToScreen)
TPoint
MiniWebview_ClientToScreen(TMiniWebview AObj, TPoint Point) {
    GET_FUNC_ADDR(MiniWebview_ClientToScreen)
    TPoint result;
    MySyscall(pMiniWebview_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MiniWebview_ClientToParent)
TPoint
MiniWebview_ClientToParent(TMiniWebview AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(MiniWebview_ClientToParent)
    TPoint result;
    MySyscall(pMiniWebview_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MiniWebview_Dragging)
BOOL
MiniWebview_Dragging(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_Dragging)
    return (BOOL)MySyscall(pMiniWebview_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_HasParent)
BOOL
MiniWebview_HasParent(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_HasParent)
    return (BOOL)MySyscall(pMiniWebview_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_Hide)
void
MiniWebview_Hide(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_Hide)
    MySyscall(pMiniWebview_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_Perform)
intptr_t
MiniWebview_Perform(TMiniWebview AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(MiniWebview_Perform)
    return (intptr_t)MySyscall(pMiniWebview_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_ScreenToClient)
TPoint
MiniWebview_ScreenToClient(TMiniWebview AObj, TPoint Point) {
    GET_FUNC_ADDR(MiniWebview_ScreenToClient)
    TPoint result;
    MySyscall(pMiniWebview_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MiniWebview_ParentToClient)
TPoint
MiniWebview_ParentToClient(TMiniWebview AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(MiniWebview_ParentToClient)
    TPoint result;
    MySyscall(pMiniWebview_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MiniWebview_SendToBack)
void
MiniWebview_SendToBack(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_SendToBack)
    MySyscall(pMiniWebview_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_Show)
void
MiniWebview_Show(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_Show)
    MySyscall(pMiniWebview_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetTextBuf)
int32_t
MiniWebview_GetTextBuf(TMiniWebview AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(MiniWebview_GetTextBuf)
    return (int32_t)MySyscall(pMiniWebview_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetTextLen)
int32_t
MiniWebview_GetTextLen(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetTextLen)
    return (int32_t)MySyscall(pMiniWebview_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetTextBuf)
void
MiniWebview_SetTextBuf(TMiniWebview AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(MiniWebview_SetTextBuf)
    MySyscall(pMiniWebview_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_FindComponent)
TComponent
MiniWebview_FindComponent(TMiniWebview AObj, CChar char* AName) {
    GET_FUNC_ADDR(MiniWebview_FindComponent)
    return (TComponent)MySyscall(pMiniWebview_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetNamePath)
char*
MiniWebview_GetNamePath(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetNamePath)
    return (char*)MySyscall(pMiniWebview_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_Assign)
void
MiniWebview_Assign(TMiniWebview AObj, TObject Source) {
    GET_FUNC_ADDR(MiniWebview_Assign)
    MySyscall(pMiniWebview_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_ClassType)
TClass
MiniWebview_ClassType(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_ClassType)
    return (TClass)MySyscall(pMiniWebview_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_ClassName)
char*
MiniWebview_ClassName(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_ClassName)
    return (char*)MySyscall(pMiniWebview_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_InstanceSize)
int32_t
MiniWebview_InstanceSize(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_InstanceSize)
    return (int32_t)MySyscall(pMiniWebview_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_InheritsFrom)
BOOL
MiniWebview_InheritsFrom(TMiniWebview AObj, TClass AClass) {
    GET_FUNC_ADDR(MiniWebview_InheritsFrom)
    return (BOOL)MySyscall(pMiniWebview_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_Equals)
BOOL
MiniWebview_Equals(TMiniWebview AObj, TObject Obj) {
    GET_FUNC_ADDR(MiniWebview_Equals)
    return (BOOL)MySyscall(pMiniWebview_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetHashCode)
int32_t
MiniWebview_GetHashCode(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetHashCode)
    return (int32_t)MySyscall(pMiniWebview_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_ToString)
char*
MiniWebview_ToString(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_ToString)
    return (char*)MySyscall(pMiniWebview_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_AnchorToNeighbour)
void
MiniWebview_AnchorToNeighbour(TMiniWebview AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(MiniWebview_AnchorToNeighbour)
    MySyscall(pMiniWebview_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_AnchorParallel)
void
MiniWebview_AnchorParallel(TMiniWebview AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(MiniWebview_AnchorParallel)
    MySyscall(pMiniWebview_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_AnchorHorizontalCenterTo)
void
MiniWebview_AnchorHorizontalCenterTo(TMiniWebview AObj, TControl ASibling) {
    GET_FUNC_ADDR(MiniWebview_AnchorHorizontalCenterTo)
    MySyscall(pMiniWebview_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_AnchorVerticalCenterTo)
void
MiniWebview_AnchorVerticalCenterTo(TMiniWebview AObj, TControl ASibling) {
    GET_FUNC_ADDR(MiniWebview_AnchorVerticalCenterTo)
    MySyscall(pMiniWebview_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_AnchorSame)
void
MiniWebview_AnchorSame(TMiniWebview AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(MiniWebview_AnchorSame)
    MySyscall(pMiniWebview_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_AnchorAsAlign)
void
MiniWebview_AnchorAsAlign(TMiniWebview AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(MiniWebview_AnchorAsAlign)
    MySyscall(pMiniWebview_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_AnchorClient)
void
MiniWebview_AnchorClient(TMiniWebview AObj, int32_t ASpace) {
    GET_FUNC_ADDR(MiniWebview_AnchorClient)
    MySyscall(pMiniWebview_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_ScaleDesignToForm)
int32_t
MiniWebview_ScaleDesignToForm(TMiniWebview AObj, int32_t ASize) {
    GET_FUNC_ADDR(MiniWebview_ScaleDesignToForm)
    return (int32_t)MySyscall(pMiniWebview_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_ScaleFormToDesign)
int32_t
MiniWebview_ScaleFormToDesign(TMiniWebview AObj, int32_t ASize) {
    GET_FUNC_ADDR(MiniWebview_ScaleFormToDesign)
    return (int32_t)MySyscall(pMiniWebview_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_Scale96ToForm)
int32_t
MiniWebview_Scale96ToForm(TMiniWebview AObj, int32_t ASize) {
    GET_FUNC_ADDR(MiniWebview_Scale96ToForm)
    return (int32_t)MySyscall(pMiniWebview_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_ScaleFormTo96)
int32_t
MiniWebview_ScaleFormTo96(TMiniWebview AObj, int32_t ASize) {
    GET_FUNC_ADDR(MiniWebview_ScaleFormTo96)
    return (int32_t)MySyscall(pMiniWebview_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_Scale96ToFont)
int32_t
MiniWebview_Scale96ToFont(TMiniWebview AObj, int32_t ASize) {
    GET_FUNC_ADDR(MiniWebview_Scale96ToFont)
    return (int32_t)MySyscall(pMiniWebview_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_ScaleFontTo96)
int32_t
MiniWebview_ScaleFontTo96(TMiniWebview AObj, int32_t ASize) {
    GET_FUNC_ADDR(MiniWebview_ScaleFontTo96)
    return (int32_t)MySyscall(pMiniWebview_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_ScaleScreenToFont)
int32_t
MiniWebview_ScaleScreenToFont(TMiniWebview AObj, int32_t ASize) {
    GET_FUNC_ADDR(MiniWebview_ScaleScreenToFont)
    return (int32_t)MySyscall(pMiniWebview_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_ScaleFontToScreen)
int32_t
MiniWebview_ScaleFontToScreen(TMiniWebview AObj, int32_t ASize) {
    GET_FUNC_ADDR(MiniWebview_ScaleFontToScreen)
    return (int32_t)MySyscall(pMiniWebview_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_Scale96ToScreen)
int32_t
MiniWebview_Scale96ToScreen(TMiniWebview AObj, int32_t ASize) {
    GET_FUNC_ADDR(MiniWebview_Scale96ToScreen)
    return (int32_t)MySyscall(pMiniWebview_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_ScaleScreenTo96)
int32_t
MiniWebview_ScaleScreenTo96(TMiniWebview AObj, int32_t ASize) {
    GET_FUNC_ADDR(MiniWebview_ScaleScreenTo96)
    return (int32_t)MySyscall(pMiniWebview_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_AutoAdjustLayout)
void
MiniWebview_AutoAdjustLayout(TMiniWebview AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(MiniWebview_AutoAdjustLayout)
    MySyscall(pMiniWebview_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_FixDesignFontsPPI)
void
MiniWebview_FixDesignFontsPPI(TMiniWebview AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(MiniWebview_FixDesignFontsPPI)
    MySyscall(pMiniWebview_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_ScaleFontsPPI)
void
MiniWebview_ScaleFontsPPI(TMiniWebview AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(MiniWebview_ScaleFontsPPI)
    MySyscall(pMiniWebview_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetReadyState)
TReadyState
MiniWebview_GetReadyState(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetReadyState)
    return (TReadyState)MySyscall(pMiniWebview_GetReadyState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetAlign)
TAlign
MiniWebview_GetAlign(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetAlign)
    return (TAlign)MySyscall(pMiniWebview_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetAlign)
void
MiniWebview_SetAlign(TMiniWebview AObj, TAlign AValue) {
    GET_FUNC_ADDR(MiniWebview_SetAlign)
    MySyscall(pMiniWebview_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetAnchors)
TAnchors
MiniWebview_GetAnchors(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetAnchors)
    return (TAnchors)MySyscall(pMiniWebview_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetAnchors)
void
MiniWebview_SetAnchors(TMiniWebview AObj, TAnchors AValue) {
    GET_FUNC_ADDR(MiniWebview_SetAnchors)
    MySyscall(pMiniWebview_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetConstraints)
TSizeConstraints
MiniWebview_GetConstraints(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetConstraints)
    return (TSizeConstraints)MySyscall(pMiniWebview_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetConstraints)
void
MiniWebview_SetConstraints(TMiniWebview AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(MiniWebview_SetConstraints)
    MySyscall(pMiniWebview_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetEnabled)
BOOL
MiniWebview_GetEnabled(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetEnabled)
    return (BOOL)MySyscall(pMiniWebview_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetEnabled)
void
MiniWebview_SetEnabled(TMiniWebview AObj, BOOL AValue) {
    GET_FUNC_ADDR(MiniWebview_SetEnabled)
    MySyscall(pMiniWebview_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetVisible)
BOOL
MiniWebview_GetVisible(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetVisible)
    return (BOOL)MySyscall(pMiniWebview_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetVisible)
void
MiniWebview_SetVisible(TMiniWebview AObj, BOOL AValue) {
    GET_FUNC_ADDR(MiniWebview_SetVisible)
    MySyscall(pMiniWebview_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetOnTitleChange)
void
MiniWebview_SetOnTitleChange(TMiniWebview AObj, TWebTitleChangeEvent AEventData) {
    GET_FUNC_ADDR(MiniWebview_SetOnTitleChange)
    MySyscall(pMiniWebview_SetOnTitleChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetOnJSExternal)
void
MiniWebview_SetOnJSExternal(TMiniWebview AObj, TWebJSExternalEvent AEventData) {
    GET_FUNC_ADDR(MiniWebview_SetOnJSExternal)
    MySyscall(pMiniWebview_SetOnJSExternal, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetDockClientCount)
int32_t
MiniWebview_GetDockClientCount(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetDockClientCount)
    return (int32_t)MySyscall(pMiniWebview_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetDockSite)
BOOL
MiniWebview_GetDockSite(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetDockSite)
    return (BOOL)MySyscall(pMiniWebview_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetDockSite)
void
MiniWebview_SetDockSite(TMiniWebview AObj, BOOL AValue) {
    GET_FUNC_ADDR(MiniWebview_SetDockSite)
    MySyscall(pMiniWebview_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetDoubleBuffered)
BOOL
MiniWebview_GetDoubleBuffered(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetDoubleBuffered)
    return (BOOL)MySyscall(pMiniWebview_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetDoubleBuffered)
void
MiniWebview_SetDoubleBuffered(TMiniWebview AObj, BOOL AValue) {
    GET_FUNC_ADDR(MiniWebview_SetDoubleBuffered)
    MySyscall(pMiniWebview_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetMouseInClient)
BOOL
MiniWebview_GetMouseInClient(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetMouseInClient)
    return (BOOL)MySyscall(pMiniWebview_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetVisibleDockClientCount)
int32_t
MiniWebview_GetVisibleDockClientCount(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pMiniWebview_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetBrush)
TBrush
MiniWebview_GetBrush(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetBrush)
    return (TBrush)MySyscall(pMiniWebview_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetControlCount)
int32_t
MiniWebview_GetControlCount(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetControlCount)
    return (int32_t)MySyscall(pMiniWebview_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetHandle)
HWND
MiniWebview_GetHandle(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetHandle)
    return (HWND)MySyscall(pMiniWebview_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetParentDoubleBuffered)
BOOL
MiniWebview_GetParentDoubleBuffered(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pMiniWebview_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetParentDoubleBuffered)
void
MiniWebview_SetParentDoubleBuffered(TMiniWebview AObj, BOOL AValue) {
    GET_FUNC_ADDR(MiniWebview_SetParentDoubleBuffered)
    MySyscall(pMiniWebview_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetParentWindow)
HWND
MiniWebview_GetParentWindow(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetParentWindow)
    return (HWND)MySyscall(pMiniWebview_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetParentWindow)
void
MiniWebview_SetParentWindow(TMiniWebview AObj, HWND AValue) {
    GET_FUNC_ADDR(MiniWebview_SetParentWindow)
    MySyscall(pMiniWebview_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetShowing)
BOOL
MiniWebview_GetShowing(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetShowing)
    return (BOOL)MySyscall(pMiniWebview_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetTabOrder)
TTabOrder
MiniWebview_GetTabOrder(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetTabOrder)
    return (TTabOrder)MySyscall(pMiniWebview_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetTabOrder)
void
MiniWebview_SetTabOrder(TMiniWebview AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(MiniWebview_SetTabOrder)
    MySyscall(pMiniWebview_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetTabStop)
BOOL
MiniWebview_GetTabStop(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetTabStop)
    return (BOOL)MySyscall(pMiniWebview_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetTabStop)
void
MiniWebview_SetTabStop(TMiniWebview AObj, BOOL AValue) {
    GET_FUNC_ADDR(MiniWebview_SetTabStop)
    MySyscall(pMiniWebview_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetUseDockManager)
BOOL
MiniWebview_GetUseDockManager(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetUseDockManager)
    return (BOOL)MySyscall(pMiniWebview_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetUseDockManager)
void
MiniWebview_SetUseDockManager(TMiniWebview AObj, BOOL AValue) {
    GET_FUNC_ADDR(MiniWebview_SetUseDockManager)
    MySyscall(pMiniWebview_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetAction)
TAction
MiniWebview_GetAction(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetAction)
    return (TAction)MySyscall(pMiniWebview_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetAction)
void
MiniWebview_SetAction(TMiniWebview AObj, TAction AValue) {
    GET_FUNC_ADDR(MiniWebview_SetAction)
    MySyscall(pMiniWebview_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetBiDiMode)
TBiDiMode
MiniWebview_GetBiDiMode(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetBiDiMode)
    return (TBiDiMode)MySyscall(pMiniWebview_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetBiDiMode)
void
MiniWebview_SetBiDiMode(TMiniWebview AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(MiniWebview_SetBiDiMode)
    MySyscall(pMiniWebview_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetBoundsRect)
TRect
MiniWebview_GetBoundsRect(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetBoundsRect)
    TRect result;
    MySyscall(pMiniWebview_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MiniWebview_SetBoundsRect)
void
MiniWebview_SetBoundsRect(TMiniWebview AObj, TRect AValue) {
    GET_FUNC_ADDR(MiniWebview_SetBoundsRect)
    MySyscall(pMiniWebview_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetClientHeight)
int32_t
MiniWebview_GetClientHeight(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetClientHeight)
    return (int32_t)MySyscall(pMiniWebview_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetClientHeight)
void
MiniWebview_SetClientHeight(TMiniWebview AObj, int32_t AValue) {
    GET_FUNC_ADDR(MiniWebview_SetClientHeight)
    MySyscall(pMiniWebview_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetClientOrigin)
TPoint
MiniWebview_GetClientOrigin(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetClientOrigin)
    TPoint result;
    MySyscall(pMiniWebview_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MiniWebview_GetClientRect)
TRect
MiniWebview_GetClientRect(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetClientRect)
    TRect result;
    MySyscall(pMiniWebview_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MiniWebview_GetClientWidth)
int32_t
MiniWebview_GetClientWidth(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetClientWidth)
    return (int32_t)MySyscall(pMiniWebview_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetClientWidth)
void
MiniWebview_SetClientWidth(TMiniWebview AObj, int32_t AValue) {
    GET_FUNC_ADDR(MiniWebview_SetClientWidth)
    MySyscall(pMiniWebview_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetControlState)
TControlState
MiniWebview_GetControlState(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetControlState)
    return (TControlState)MySyscall(pMiniWebview_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetControlState)
void
MiniWebview_SetControlState(TMiniWebview AObj, TControlState AValue) {
    GET_FUNC_ADDR(MiniWebview_SetControlState)
    MySyscall(pMiniWebview_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetControlStyle)
TControlStyle
MiniWebview_GetControlStyle(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetControlStyle)
    return (TControlStyle)MySyscall(pMiniWebview_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetControlStyle)
void
MiniWebview_SetControlStyle(TMiniWebview AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(MiniWebview_SetControlStyle)
    MySyscall(pMiniWebview_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetFloating)
BOOL
MiniWebview_GetFloating(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetFloating)
    return (BOOL)MySyscall(pMiniWebview_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetShowHint)
BOOL
MiniWebview_GetShowHint(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetShowHint)
    return (BOOL)MySyscall(pMiniWebview_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetShowHint)
void
MiniWebview_SetShowHint(TMiniWebview AObj, BOOL AValue) {
    GET_FUNC_ADDR(MiniWebview_SetShowHint)
    MySyscall(pMiniWebview_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetParent)
TWinControl
MiniWebview_GetParent(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetParent)
    return (TWinControl)MySyscall(pMiniWebview_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetParent)
void
MiniWebview_SetParent(TMiniWebview AObj, TWinControl AValue) {
    GET_FUNC_ADDR(MiniWebview_SetParent)
    MySyscall(pMiniWebview_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetLeft)
int32_t
MiniWebview_GetLeft(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetLeft)
    return (int32_t)MySyscall(pMiniWebview_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetLeft)
void
MiniWebview_SetLeft(TMiniWebview AObj, int32_t AValue) {
    GET_FUNC_ADDR(MiniWebview_SetLeft)
    MySyscall(pMiniWebview_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetTop)
int32_t
MiniWebview_GetTop(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetTop)
    return (int32_t)MySyscall(pMiniWebview_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetTop)
void
MiniWebview_SetTop(TMiniWebview AObj, int32_t AValue) {
    GET_FUNC_ADDR(MiniWebview_SetTop)
    MySyscall(pMiniWebview_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetWidth)
int32_t
MiniWebview_GetWidth(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetWidth)
    return (int32_t)MySyscall(pMiniWebview_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetWidth)
void
MiniWebview_SetWidth(TMiniWebview AObj, int32_t AValue) {
    GET_FUNC_ADDR(MiniWebview_SetWidth)
    MySyscall(pMiniWebview_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetHeight)
int32_t
MiniWebview_GetHeight(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetHeight)
    return (int32_t)MySyscall(pMiniWebview_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetHeight)
void
MiniWebview_SetHeight(TMiniWebview AObj, int32_t AValue) {
    GET_FUNC_ADDR(MiniWebview_SetHeight)
    MySyscall(pMiniWebview_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetCursor)
TCursor
MiniWebview_GetCursor(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetCursor)
    return (TCursor)MySyscall(pMiniWebview_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetCursor)
void
MiniWebview_SetCursor(TMiniWebview AObj, TCursor AValue) {
    GET_FUNC_ADDR(MiniWebview_SetCursor)
    MySyscall(pMiniWebview_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetHint)
char*
MiniWebview_GetHint(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetHint)
    return (char*)MySyscall(pMiniWebview_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetHint)
void
MiniWebview_SetHint(TMiniWebview AObj, CChar char* AValue) {
    GET_FUNC_ADDR(MiniWebview_SetHint)
    MySyscall(pMiniWebview_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetComponentCount)
int32_t
MiniWebview_GetComponentCount(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetComponentCount)
    return (int32_t)MySyscall(pMiniWebview_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetComponentIndex)
int32_t
MiniWebview_GetComponentIndex(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetComponentIndex)
    return (int32_t)MySyscall(pMiniWebview_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetComponentIndex)
void
MiniWebview_SetComponentIndex(TMiniWebview AObj, int32_t AValue) {
    GET_FUNC_ADDR(MiniWebview_SetComponentIndex)
    MySyscall(pMiniWebview_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetOwner)
TComponent
MiniWebview_GetOwner(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetOwner)
    return (TComponent)MySyscall(pMiniWebview_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetName)
char*
MiniWebview_GetName(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetName)
    return (char*)MySyscall(pMiniWebview_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetName)
void
MiniWebview_SetName(TMiniWebview AObj, CChar char* AValue) {
    GET_FUNC_ADDR(MiniWebview_SetName)
    MySyscall(pMiniWebview_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetTag)
intptr_t
MiniWebview_GetTag(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetTag)
    return (intptr_t)MySyscall(pMiniWebview_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetTag)
void
MiniWebview_SetTag(TMiniWebview AObj, intptr_t AValue) {
    GET_FUNC_ADDR(MiniWebview_SetTag)
    MySyscall(pMiniWebview_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetAnchorSideLeft)
TAnchorSide
MiniWebview_GetAnchorSideLeft(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pMiniWebview_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetAnchorSideLeft)
void
MiniWebview_SetAnchorSideLeft(TMiniWebview AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(MiniWebview_SetAnchorSideLeft)
    MySyscall(pMiniWebview_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetAnchorSideTop)
TAnchorSide
MiniWebview_GetAnchorSideTop(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pMiniWebview_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetAnchorSideTop)
void
MiniWebview_SetAnchorSideTop(TMiniWebview AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(MiniWebview_SetAnchorSideTop)
    MySyscall(pMiniWebview_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetAnchorSideRight)
TAnchorSide
MiniWebview_GetAnchorSideRight(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pMiniWebview_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetAnchorSideRight)
void
MiniWebview_SetAnchorSideRight(TMiniWebview AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(MiniWebview_SetAnchorSideRight)
    MySyscall(pMiniWebview_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetAnchorSideBottom)
TAnchorSide
MiniWebview_GetAnchorSideBottom(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pMiniWebview_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetAnchorSideBottom)
void
MiniWebview_SetAnchorSideBottom(TMiniWebview AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(MiniWebview_SetAnchorSideBottom)
    MySyscall(pMiniWebview_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetChildSizing)
TControlChildSizing
MiniWebview_GetChildSizing(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetChildSizing)
    return (TControlChildSizing)MySyscall(pMiniWebview_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetChildSizing)
void
MiniWebview_SetChildSizing(TMiniWebview AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(MiniWebview_SetChildSizing)
    MySyscall(pMiniWebview_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetBorderSpacing)
TControlBorderSpacing
MiniWebview_GetBorderSpacing(TMiniWebview AObj) {
    GET_FUNC_ADDR(MiniWebview_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pMiniWebview_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_SetBorderSpacing)
void
MiniWebview_SetBorderSpacing(TMiniWebview AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(MiniWebview_SetBorderSpacing)
    MySyscall(pMiniWebview_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetDockClients)
TControl
MiniWebview_GetDockClients(TMiniWebview AObj, int32_t Index) {
    GET_FUNC_ADDR(MiniWebview_GetDockClients)
    return (TControl)MySyscall(pMiniWebview_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetControls)
TControl
MiniWebview_GetControls(TMiniWebview AObj, int32_t Index) {
    GET_FUNC_ADDR(MiniWebview_GetControls)
    return (TControl)MySyscall(pMiniWebview_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetComponents)
TComponent
MiniWebview_GetComponents(TMiniWebview AObj, int32_t AIndex) {
    GET_FUNC_ADDR(MiniWebview_GetComponents)
    return (TComponent)MySyscall(pMiniWebview_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_GetAnchorSide)
TAnchorSide
MiniWebview_GetAnchorSide(TMiniWebview AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(MiniWebview_GetAnchorSide)
    return (TAnchorSide)MySyscall(pMiniWebview_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MiniWebview_StaticClassType)
TClass
MiniWebview_StaticClassType() {
    GET_FUNC_ADDR(MiniWebview_StaticClassType)
    return (TClass)MySyscall(pMiniWebview_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TCanvas-------------------

DEFINE_FUNC_PTR(Canvas_Create)
TCanvas
Canvas_Create() {
    GET_FUNC_ADDR(Canvas_Create)
    return (TCanvas)MySyscall(pCanvas_Create, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_Free)
void
Canvas_Free(TCanvas AObj) {
    GET_FUNC_ADDR(Canvas_Free)
    MySyscall(pCanvas_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_Arc)
void
Canvas_Arc(TCanvas AObj, int32_t X1, int32_t Y1, int32_t X2, int32_t Y2, int32_t X3, int32_t Y3, int32_t X4, int32_t Y4) {
    GET_FUNC_ADDR(Canvas_Arc)
    MySyscall(pCanvas_Arc, 9, AObj, X1, Y1, X2, Y2, X3, Y3, X4, Y4 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_ArcTo)
void
Canvas_ArcTo(TCanvas AObj, int32_t X1, int32_t Y1, int32_t X2, int32_t Y2, int32_t X3, int32_t Y3, int32_t X4, int32_t Y4) {
    GET_FUNC_ADDR(Canvas_ArcTo)
    MySyscall(pCanvas_ArcTo, 9, AObj, X1, Y1, X2, Y2, X3, Y3, X4, Y4 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_AngleArc)
void
Canvas_AngleArc(TCanvas AObj, int32_t X, int32_t Y, uint32_t Radius, float StartAngle, float SweepAngle) {
    GET_FUNC_ADDR(Canvas_AngleArc)
    MySyscall(pCanvas_AngleArc, 6, AObj, X, Y, Radius, &StartAngle, &SweepAngle ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_Chord)
void
Canvas_Chord(TCanvas AObj, int32_t X1, int32_t Y1, int32_t X2, int32_t Y2, int32_t X3, int32_t Y3, int32_t X4, int32_t Y4) {
    GET_FUNC_ADDR(Canvas_Chord)
    MySyscall(pCanvas_Chord, 9, AObj, X1, Y1, X2, Y2, X3, Y3, X4, Y4 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_Ellipse)
void
Canvas_Ellipse(TCanvas AObj, int32_t X1, int32_t Y1, int32_t X2, int32_t Y2) {
    GET_FUNC_ADDR(Canvas_Ellipse)
    MySyscall(pCanvas_Ellipse, 5, AObj, X1, Y1, X2, Y2 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_FloodFill)
void
Canvas_FloodFill(TCanvas AObj, int32_t X, int32_t Y, TColor Color, TFillStyle FillStyle) {
    GET_FUNC_ADDR(Canvas_FloodFill)
    MySyscall(pCanvas_FloodFill, 5, AObj, X, Y, Color, FillStyle ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_HandleAllocated)
BOOL
Canvas_HandleAllocated(TCanvas AObj) {
    GET_FUNC_ADDR(Canvas_HandleAllocated)
    return (BOOL)MySyscall(pCanvas_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_LineTo)
void
Canvas_LineTo(TCanvas AObj, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(Canvas_LineTo)
    MySyscall(pCanvas_LineTo, 3, AObj, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_MoveTo)
void
Canvas_MoveTo(TCanvas AObj, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(Canvas_MoveTo)
    MySyscall(pCanvas_MoveTo, 3, AObj, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_Pie)
void
Canvas_Pie(TCanvas AObj, int32_t X1, int32_t Y1, int32_t X2, int32_t Y2, int32_t X3, int32_t Y3, int32_t X4, int32_t Y4) {
    GET_FUNC_ADDR(Canvas_Pie)
    MySyscall(pCanvas_Pie, 9, AObj, X1, Y1, X2, Y2, X3, Y3, X4, Y4 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_Rectangle)
void
Canvas_Rectangle(TCanvas AObj, int32_t X1, int32_t Y1, int32_t X2, int32_t Y2) {
    GET_FUNC_ADDR(Canvas_Rectangle)
    MySyscall(pCanvas_Rectangle, 5, AObj, X1, Y1, X2, Y2 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_Refresh)
void
Canvas_Refresh(TCanvas AObj) {
    GET_FUNC_ADDR(Canvas_Refresh)
    MySyscall(pCanvas_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_RoundRect)
void
Canvas_RoundRect(TCanvas AObj, int32_t X1, int32_t Y1, int32_t X2, int32_t Y2, int32_t X3, int32_t Y3) {
    GET_FUNC_ADDR(Canvas_RoundRect)
    MySyscall(pCanvas_RoundRect, 7, AObj, X1, Y1, X2, Y2, X3, Y3 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_StretchDraw)
void
Canvas_StretchDraw(TCanvas AObj, TRect Rect, TGraphic Graphic) {
    GET_FUNC_ADDR(Canvas_StretchDraw)
    MySyscall(pCanvas_StretchDraw, 3, AObj, &Rect, Graphic ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_TextExtent)
TSize
Canvas_TextExtent(TCanvas AObj, CChar char* Text) {
    GET_FUNC_ADDR(Canvas_TextExtent)
    TSize result;
    MySyscall(pCanvas_TextExtent, 3, AObj, Text, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Canvas_TextOut)
void
Canvas_TextOut(TCanvas AObj, int32_t X, int32_t Y, CChar char* Text) {
    GET_FUNC_ADDR(Canvas_TextOut)
    MySyscall(pCanvas_TextOut, 4, AObj, X, Y, Text ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_Lock)
void
Canvas_Lock(TCanvas AObj) {
    GET_FUNC_ADDR(Canvas_Lock)
    MySyscall(pCanvas_Lock, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_TextHeight)
int32_t
Canvas_TextHeight(TCanvas AObj, CChar char* Text) {
    GET_FUNC_ADDR(Canvas_TextHeight)
    return (int32_t)MySyscall(pCanvas_TextHeight, 2, AObj, Text ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_TextWidth)
int32_t
Canvas_TextWidth(TCanvas AObj, CChar char* Text) {
    GET_FUNC_ADDR(Canvas_TextWidth)
    return (int32_t)MySyscall(pCanvas_TextWidth, 2, AObj, Text ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_Assign)
void
Canvas_Assign(TCanvas AObj, TObject Source) {
    GET_FUNC_ADDR(Canvas_Assign)
    MySyscall(pCanvas_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_GetNamePath)
char*
Canvas_GetNamePath(TCanvas AObj) {
    GET_FUNC_ADDR(Canvas_GetNamePath)
    return (char*)MySyscall(pCanvas_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_ClassType)
TClass
Canvas_ClassType(TCanvas AObj) {
    GET_FUNC_ADDR(Canvas_ClassType)
    return (TClass)MySyscall(pCanvas_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_ClassName)
char*
Canvas_ClassName(TCanvas AObj) {
    GET_FUNC_ADDR(Canvas_ClassName)
    return (char*)MySyscall(pCanvas_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_InstanceSize)
int32_t
Canvas_InstanceSize(TCanvas AObj) {
    GET_FUNC_ADDR(Canvas_InstanceSize)
    return (int32_t)MySyscall(pCanvas_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_InheritsFrom)
BOOL
Canvas_InheritsFrom(TCanvas AObj, TClass AClass) {
    GET_FUNC_ADDR(Canvas_InheritsFrom)
    return (BOOL)MySyscall(pCanvas_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_Equals)
BOOL
Canvas_Equals(TCanvas AObj, TObject Obj) {
    GET_FUNC_ADDR(Canvas_Equals)
    return (BOOL)MySyscall(pCanvas_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_GetHashCode)
int32_t
Canvas_GetHashCode(TCanvas AObj) {
    GET_FUNC_ADDR(Canvas_GetHashCode)
    return (int32_t)MySyscall(pCanvas_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_ToString)
char*
Canvas_ToString(TCanvas AObj) {
    GET_FUNC_ADDR(Canvas_ToString)
    return (char*)MySyscall(pCanvas_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_GetHandle)
HDC
Canvas_GetHandle(TCanvas AObj) {
    GET_FUNC_ADDR(Canvas_GetHandle)
    return (HDC)MySyscall(pCanvas_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_SetHandle)
void
Canvas_SetHandle(TCanvas AObj, HDC AValue) {
    GET_FUNC_ADDR(Canvas_SetHandle)
    MySyscall(pCanvas_SetHandle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_GetBrush)
TBrush
Canvas_GetBrush(TCanvas AObj) {
    GET_FUNC_ADDR(Canvas_GetBrush)
    return (TBrush)MySyscall(pCanvas_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_SetBrush)
void
Canvas_SetBrush(TCanvas AObj, TBrush AValue) {
    GET_FUNC_ADDR(Canvas_SetBrush)
    MySyscall(pCanvas_SetBrush, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_GetCopyMode)
int32_t
Canvas_GetCopyMode(TCanvas AObj) {
    GET_FUNC_ADDR(Canvas_GetCopyMode)
    return (int32_t)MySyscall(pCanvas_GetCopyMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_SetCopyMode)
void
Canvas_SetCopyMode(TCanvas AObj, int32_t AValue) {
    GET_FUNC_ADDR(Canvas_SetCopyMode)
    MySyscall(pCanvas_SetCopyMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_GetFont)
TFont
Canvas_GetFont(TCanvas AObj) {
    GET_FUNC_ADDR(Canvas_GetFont)
    return (TFont)MySyscall(pCanvas_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_SetFont)
void
Canvas_SetFont(TCanvas AObj, TFont AValue) {
    GET_FUNC_ADDR(Canvas_SetFont)
    MySyscall(pCanvas_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_GetPen)
TPen
Canvas_GetPen(TCanvas AObj) {
    GET_FUNC_ADDR(Canvas_GetPen)
    return (TPen)MySyscall(pCanvas_GetPen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_SetPen)
void
Canvas_SetPen(TCanvas AObj, TPen AValue) {
    GET_FUNC_ADDR(Canvas_SetPen)
    MySyscall(pCanvas_SetPen, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_SetOnChange)
void
Canvas_SetOnChange(TCanvas AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Canvas_SetOnChange)
    MySyscall(pCanvas_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_SetOnChanging)
void
Canvas_SetOnChanging(TCanvas AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Canvas_SetOnChanging)
    MySyscall(pCanvas_SetOnChanging, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_GetPixels)
TColor
Canvas_GetPixels(TCanvas AObj, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(Canvas_GetPixels)
    return (TColor)MySyscall(pCanvas_GetPixels, 3, AObj, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_SetPixels)
void
Canvas_SetPixels(TCanvas AObj, int32_t X, int32_t Y, TColor AValue) {
    GET_FUNC_ADDR(Canvas_SetPixels)
    MySyscall(pCanvas_SetPixels, 4, AObj, X, Y, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_StaticClassType)
TClass
Canvas_StaticClassType() {
    GET_FUNC_ADDR(Canvas_StaticClassType)
    return (TClass)MySyscall(pCanvas_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_BrushCopy)
void
Canvas_BrushCopy(TCanvas AObj, TRect Dest, TBitmap Bitmap, TRect Source, TColor Color) {
    GET_FUNC_ADDR(Canvas_BrushCopy)
    MySyscall(pCanvas_BrushCopy, 5, AObj, &Dest, Bitmap, &Source, Color ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_CopyRect)
void
Canvas_CopyRect(TCanvas AObj, TRect Dest, TCanvas Canvas, TRect Source) {
    GET_FUNC_ADDR(Canvas_CopyRect)
    MySyscall(pCanvas_CopyRect, 4, AObj, &Dest, Canvas, &Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_Draw1)
void
Canvas_Draw1(TCanvas AObj, int32_t X, int32_t Y, TGraphic Graphic) {
    GET_FUNC_ADDR(Canvas_Draw1)
    MySyscall(pCanvas_Draw1, 4, AObj, X, Y, Graphic ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_Draw2)
void
Canvas_Draw2(TCanvas AObj, int32_t X, int32_t Y, TGraphic Graphic, int8_t Opacity) {
    GET_FUNC_ADDR(Canvas_Draw2)
    MySyscall(pCanvas_Draw2, 5, AObj, X, Y, Graphic, Opacity ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_DrawFocusRect)
void
Canvas_DrawFocusRect(TCanvas AObj, TRect ARect) {
    GET_FUNC_ADDR(Canvas_DrawFocusRect)
    MySyscall(pCanvas_DrawFocusRect, 2, AObj, &ARect ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_FillRect)
void
Canvas_FillRect(TCanvas AObj, TRect Rect) {
    GET_FUNC_ADDR(Canvas_FillRect)
    MySyscall(pCanvas_FillRect, 2, AObj, &Rect ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_FrameRect)
void
Canvas_FrameRect(TCanvas AObj, TRect Rect) {
    GET_FUNC_ADDR(Canvas_FrameRect)
    MySyscall(pCanvas_FrameRect, 2, AObj, &Rect ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_TextRect1)
void
Canvas_TextRect1(TCanvas AObj, TRect Rect, int32_t X, int32_t Y, CChar char* Text) {
    GET_FUNC_ADDR(Canvas_TextRect1)
    MySyscall(pCanvas_TextRect1, 5, AObj, &Rect, X, Y, Text ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_TextRect2)
int32_t
Canvas_TextRect2(TCanvas AObj, TRect* Rect, CChar char* Text, TTextFormat TextFormat) {
    GET_FUNC_ADDR(Canvas_TextRect2)
    return (int32_t)MySyscall(pCanvas_TextRect2, 4, AObj, Rect, Text, TextFormat ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_Polygon)
void
Canvas_Polygon(TCanvas AObj, TPoint* APoints, int32_t ALen) {
    GET_FUNC_ADDR(Canvas_Polygon)
    MySyscall(pCanvas_Polygon, 3, AObj, APoints, ALen ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_Polyline)
void
Canvas_Polyline(TCanvas AObj, TPoint* APoints, int32_t ALen) {
    GET_FUNC_ADDR(Canvas_Polyline)
    MySyscall(pCanvas_Polyline, 3, AObj, APoints, ALen ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Canvas_PolyBezier)
void
Canvas_PolyBezier(TCanvas AObj, TPoint* APoints, int32_t ALen) {
    GET_FUNC_ADDR(Canvas_PolyBezier)
    MySyscall(pCanvas_PolyBezier, 3, AObj, APoints, ALen ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TApplication-------------------

DEFINE_FUNC_PTR(Application_Create)
TApplication
Application_Create(TComponent AOwner) {
    GET_FUNC_ADDR(Application_Create)
    return (TApplication)MySyscall(pApplication_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_Free)
void
Application_Free(TApplication AObj) {
    GET_FUNC_ADDR(Application_Free)
    MySyscall(pApplication_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_ActivateHint)
void
Application_ActivateHint(TApplication AObj, TPoint CursorPos) {
    GET_FUNC_ADDR(Application_ActivateHint)
    MySyscall(pApplication_ActivateHint, 2, AObj, &CursorPos ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_BringToFront)
void
Application_BringToFront(TApplication AObj) {
    GET_FUNC_ADDR(Application_BringToFront)
    MySyscall(pApplication_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_CancelHint)
void
Application_CancelHint(TApplication AObj) {
    GET_FUNC_ADDR(Application_CancelHint)
    MySyscall(pApplication_CancelHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_HandleMessage)
void
Application_HandleMessage(TApplication AObj) {
    GET_FUNC_ADDR(Application_HandleMessage)
    MySyscall(pApplication_HandleMessage, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_HideHint)
void
Application_HideHint(TApplication AObj) {
    GET_FUNC_ADDR(Application_HideHint)
    MySyscall(pApplication_HideHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_Minimize)
void
Application_Minimize(TApplication AObj) {
    GET_FUNC_ADDR(Application_Minimize)
    MySyscall(pApplication_Minimize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_ModalStarted)
void
Application_ModalStarted(TApplication AObj) {
    GET_FUNC_ADDR(Application_ModalStarted)
    MySyscall(pApplication_ModalStarted, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_ModalFinished)
void
Application_ModalFinished(TApplication AObj) {
    GET_FUNC_ADDR(Application_ModalFinished)
    MySyscall(pApplication_ModalFinished, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_ProcessMessages)
void
Application_ProcessMessages(TApplication AObj) {
    GET_FUNC_ADDR(Application_ProcessMessages)
    MySyscall(pApplication_ProcessMessages, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_Restore)
void
Application_Restore(TApplication AObj) {
    GET_FUNC_ADDR(Application_Restore)
    MySyscall(pApplication_Restore, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_RestoreTopMosts)
void
Application_RestoreTopMosts(TApplication AObj) {
    GET_FUNC_ADDR(Application_RestoreTopMosts)
    MySyscall(pApplication_RestoreTopMosts, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_Terminate)
void
Application_Terminate(TApplication AObj) {
    GET_FUNC_ADDR(Application_Terminate)
    MySyscall(pApplication_Terminate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_MessageBox)
int32_t
Application_MessageBox(TApplication AObj, CChar char* Text, CChar char* Caption, int32_t Flags) {
    GET_FUNC_ADDR(Application_MessageBox)
    return (int32_t)MySyscall(pApplication_MessageBox, 4, AObj, Text, Caption, Flags ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_FindComponent)
TComponent
Application_FindComponent(TApplication AObj, CChar char* AName) {
    GET_FUNC_ADDR(Application_FindComponent)
    return (TComponent)MySyscall(pApplication_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetNamePath)
char*
Application_GetNamePath(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetNamePath)
    return (char*)MySyscall(pApplication_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_HasParent)
BOOL
Application_HasParent(TApplication AObj) {
    GET_FUNC_ADDR(Application_HasParent)
    return (BOOL)MySyscall(pApplication_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_Assign)
void
Application_Assign(TApplication AObj, TObject Source) {
    GET_FUNC_ADDR(Application_Assign)
    MySyscall(pApplication_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_ClassType)
TClass
Application_ClassType(TApplication AObj) {
    GET_FUNC_ADDR(Application_ClassType)
    return (TClass)MySyscall(pApplication_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_ClassName)
char*
Application_ClassName(TApplication AObj) {
    GET_FUNC_ADDR(Application_ClassName)
    return (char*)MySyscall(pApplication_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_InstanceSize)
int32_t
Application_InstanceSize(TApplication AObj) {
    GET_FUNC_ADDR(Application_InstanceSize)
    return (int32_t)MySyscall(pApplication_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_InheritsFrom)
BOOL
Application_InheritsFrom(TApplication AObj, TClass AClass) {
    GET_FUNC_ADDR(Application_InheritsFrom)
    return (BOOL)MySyscall(pApplication_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_Equals)
BOOL
Application_Equals(TApplication AObj, TObject Obj) {
    GET_FUNC_ADDR(Application_Equals)
    return (BOOL)MySyscall(pApplication_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetHashCode)
int32_t
Application_GetHashCode(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetHashCode)
    return (int32_t)MySyscall(pApplication_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_ToString)
char*
Application_ToString(TApplication AObj) {
    GET_FUNC_ADDR(Application_ToString)
    return (char*)MySyscall(pApplication_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetScaled)
BOOL
Application_GetScaled(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetScaled)
    return (BOOL)MySyscall(pApplication_GetScaled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetScaled)
void
Application_SetScaled(TApplication AObj, BOOL AValue) {
    GET_FUNC_ADDR(Application_SetScaled)
    MySyscall(pApplication_SetScaled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetSingleInstanceEnabled)
BOOL
Application_GetSingleInstanceEnabled(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetSingleInstanceEnabled)
    return (BOOL)MySyscall(pApplication_GetSingleInstanceEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetSingleInstanceEnabled)
void
Application_SetSingleInstanceEnabled(TApplication AObj, BOOL AValue) {
    GET_FUNC_ADDR(Application_SetSingleInstanceEnabled)
    MySyscall(pApplication_SetSingleInstanceEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetLocation)
char*
Application_GetLocation(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetLocation)
    return (char*)MySyscall(pApplication_GetLocation, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetStopOnException)
BOOL
Application_GetStopOnException(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetStopOnException)
    return (BOOL)MySyscall(pApplication_GetStopOnException, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetStopOnException)
void
Application_SetStopOnException(TApplication AObj, BOOL AValue) {
    GET_FUNC_ADDR(Application_SetStopOnException)
    MySyscall(pApplication_SetStopOnException, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetExceptionExitCode)
int32_t
Application_GetExceptionExitCode(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetExceptionExitCode)
    return (int32_t)MySyscall(pApplication_GetExceptionExitCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetExceptionExitCode)
void
Application_SetExceptionExitCode(TApplication AObj, int32_t AValue) {
    GET_FUNC_ADDR(Application_SetExceptionExitCode)
    MySyscall(pApplication_SetExceptionExitCode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetExeName)
char*
Application_GetExeName(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetExeName)
    return (char*)MySyscall(pApplication_GetExeName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetHint)
char*
Application_GetHint(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetHint)
    return (char*)MySyscall(pApplication_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetHint)
void
Application_SetHint(TApplication AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Application_SetHint)
    MySyscall(pApplication_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetHintColor)
TColor
Application_GetHintColor(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetHintColor)
    return (TColor)MySyscall(pApplication_GetHintColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetHintColor)
void
Application_SetHintColor(TApplication AObj, TColor AValue) {
    GET_FUNC_ADDR(Application_SetHintColor)
    MySyscall(pApplication_SetHintColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetHintHidePause)
int32_t
Application_GetHintHidePause(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetHintHidePause)
    return (int32_t)MySyscall(pApplication_GetHintHidePause, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetHintHidePause)
void
Application_SetHintHidePause(TApplication AObj, int32_t AValue) {
    GET_FUNC_ADDR(Application_SetHintHidePause)
    MySyscall(pApplication_SetHintHidePause, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetHintPause)
int32_t
Application_GetHintPause(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetHintPause)
    return (int32_t)MySyscall(pApplication_GetHintPause, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetHintPause)
void
Application_SetHintPause(TApplication AObj, int32_t AValue) {
    GET_FUNC_ADDR(Application_SetHintPause)
    MySyscall(pApplication_SetHintPause, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetHintShortCuts)
BOOL
Application_GetHintShortCuts(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetHintShortCuts)
    return (BOOL)MySyscall(pApplication_GetHintShortCuts, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetHintShortCuts)
void
Application_SetHintShortCuts(TApplication AObj, BOOL AValue) {
    GET_FUNC_ADDR(Application_SetHintShortCuts)
    MySyscall(pApplication_SetHintShortCuts, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetHintShortPause)
int32_t
Application_GetHintShortPause(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetHintShortPause)
    return (int32_t)MySyscall(pApplication_GetHintShortPause, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetHintShortPause)
void
Application_SetHintShortPause(TApplication AObj, int32_t AValue) {
    GET_FUNC_ADDR(Application_SetHintShortPause)
    MySyscall(pApplication_SetHintShortPause, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetIcon)
TIcon
Application_GetIcon(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetIcon)
    return (TIcon)MySyscall(pApplication_GetIcon, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetIcon)
void
Application_SetIcon(TApplication AObj, TIcon AValue) {
    GET_FUNC_ADDR(Application_SetIcon)
    MySyscall(pApplication_SetIcon, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetMainForm)
TForm
Application_GetMainForm(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetMainForm)
    return (TForm)MySyscall(pApplication_GetMainForm, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetMainFormHandle)
HWND
Application_GetMainFormHandle(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetMainFormHandle)
    return (HWND)MySyscall(pApplication_GetMainFormHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetMainFormOnTaskBar)
BOOL
Application_GetMainFormOnTaskBar(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetMainFormOnTaskBar)
    return (BOOL)MySyscall(pApplication_GetMainFormOnTaskBar, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetMainFormOnTaskBar)
void
Application_SetMainFormOnTaskBar(TApplication AObj, BOOL AValue) {
    GET_FUNC_ADDR(Application_SetMainFormOnTaskBar)
    MySyscall(pApplication_SetMainFormOnTaskBar, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetBiDiMode)
TBiDiMode
Application_GetBiDiMode(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetBiDiMode)
    return (TBiDiMode)MySyscall(pApplication_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetBiDiMode)
void
Application_SetBiDiMode(TApplication AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(Application_SetBiDiMode)
    MySyscall(pApplication_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetShowHint)
BOOL
Application_GetShowHint(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetShowHint)
    return (BOOL)MySyscall(pApplication_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetShowHint)
void
Application_SetShowHint(TApplication AObj, BOOL AValue) {
    GET_FUNC_ADDR(Application_SetShowHint)
    MySyscall(pApplication_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetShowMainForm)
BOOL
Application_GetShowMainForm(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetShowMainForm)
    return (BOOL)MySyscall(pApplication_GetShowMainForm, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetShowMainForm)
void
Application_SetShowMainForm(TApplication AObj, BOOL AValue) {
    GET_FUNC_ADDR(Application_SetShowMainForm)
    MySyscall(pApplication_SetShowMainForm, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetTitle)
char*
Application_GetTitle(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetTitle)
    return (char*)MySyscall(pApplication_GetTitle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetTitle)
void
Application_SetTitle(TApplication AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Application_SetTitle)
    MySyscall(pApplication_SetTitle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetOnActivate)
void
Application_SetOnActivate(TApplication AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Application_SetOnActivate)
    MySyscall(pApplication_SetOnActivate, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetOnDeactivate)
void
Application_SetOnDeactivate(TApplication AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Application_SetOnDeactivate)
    MySyscall(pApplication_SetOnDeactivate, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetOnException)
void
Application_SetOnException(TApplication AObj, TExceptionEvent AEventData) {
    GET_FUNC_ADDR(Application_SetOnException)
    MySyscall(pApplication_SetOnException, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetOnHelp)
void
Application_SetOnHelp(TApplication AObj, THelpEvent AEventData) {
    GET_FUNC_ADDR(Application_SetOnHelp)
    MySyscall(pApplication_SetOnHelp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetOnHint)
void
Application_SetOnHint(TApplication AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Application_SetOnHint)
    MySyscall(pApplication_SetOnHint, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetOnMinimize)
void
Application_SetOnMinimize(TApplication AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Application_SetOnMinimize)
    MySyscall(pApplication_SetOnMinimize, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetOnRestore)
void
Application_SetOnRestore(TApplication AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Application_SetOnRestore)
    MySyscall(pApplication_SetOnRestore, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetOnShortCut)
void
Application_SetOnShortCut(TApplication AObj, TShortCutEvent AEventData) {
    GET_FUNC_ADDR(Application_SetOnShortCut)
    MySyscall(pApplication_SetOnShortCut, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetHandle)
HWND
Application_GetHandle(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetHandle)
    return (HWND)MySyscall(pApplication_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetHandle)
void
Application_SetHandle(TApplication AObj, HWND AValue) {
    GET_FUNC_ADDR(Application_SetHandle)
    MySyscall(pApplication_SetHandle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetComponentCount)
int32_t
Application_GetComponentCount(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetComponentCount)
    return (int32_t)MySyscall(pApplication_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetComponentIndex)
int32_t
Application_GetComponentIndex(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetComponentIndex)
    return (int32_t)MySyscall(pApplication_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetComponentIndex)
void
Application_SetComponentIndex(TApplication AObj, int32_t AValue) {
    GET_FUNC_ADDR(Application_SetComponentIndex)
    MySyscall(pApplication_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetOwner)
TComponent
Application_GetOwner(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetOwner)
    return (TComponent)MySyscall(pApplication_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetName)
char*
Application_GetName(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetName)
    return (char*)MySyscall(pApplication_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetName)
void
Application_SetName(TApplication AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Application_SetName)
    MySyscall(pApplication_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetTag)
intptr_t
Application_GetTag(TApplication AObj) {
    GET_FUNC_ADDR(Application_GetTag)
    return (intptr_t)MySyscall(pApplication_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_SetTag)
void
Application_SetTag(TApplication AObj, intptr_t AValue) {
    GET_FUNC_ADDR(Application_SetTag)
    MySyscall(pApplication_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_GetComponents)
TComponent
Application_GetComponents(TApplication AObj, int32_t AIndex) {
    GET_FUNC_ADDR(Application_GetComponents)
    return (TComponent)MySyscall(pApplication_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_StaticClassType)
TClass
Application_StaticClassType() {
    GET_FUNC_ADDR(Application_StaticClassType)
    return (TClass)MySyscall(pApplication_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_Initialize)
void
Application_Initialize(TApplication AObj) {
    GET_FUNC_ADDR(Application_Initialize)
    MySyscall(pApplication_Initialize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_CreateForm)
TForm
Application_CreateForm(TApplication App, BOOL AInitScale) {
    GET_FUNC_ADDR(Application_CreateForm)
    return (TForm)MySyscall(pApplication_CreateForm, 2, App, AInitScale ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Application_Run)
void
Application_Run(TApplication AObj) {
    GET_FUNC_ADDR(Application_Run)
    MySyscall(pApplication_Run, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TMainMenu-------------------

DEFINE_FUNC_PTR(MainMenu_Create)
TMainMenu
MainMenu_Create(TComponent AOwner) {
    GET_FUNC_ADDR(MainMenu_Create)
    return (TMainMenu)MySyscall(pMainMenu_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_Free)
void
MainMenu_Free(TMainMenu AObj) {
    GET_FUNC_ADDR(MainMenu_Free)
    MySyscall(pMainMenu_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_FindComponent)
TComponent
MainMenu_FindComponent(TMainMenu AObj, CChar char* AName) {
    GET_FUNC_ADDR(MainMenu_FindComponent)
    return (TComponent)MySyscall(pMainMenu_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_GetNamePath)
char*
MainMenu_GetNamePath(TMainMenu AObj) {
    GET_FUNC_ADDR(MainMenu_GetNamePath)
    return (char*)MySyscall(pMainMenu_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_HasParent)
BOOL
MainMenu_HasParent(TMainMenu AObj) {
    GET_FUNC_ADDR(MainMenu_HasParent)
    return (BOOL)MySyscall(pMainMenu_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_Assign)
void
MainMenu_Assign(TMainMenu AObj, TObject Source) {
    GET_FUNC_ADDR(MainMenu_Assign)
    MySyscall(pMainMenu_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_ClassType)
TClass
MainMenu_ClassType(TMainMenu AObj) {
    GET_FUNC_ADDR(MainMenu_ClassType)
    return (TClass)MySyscall(pMainMenu_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_ClassName)
char*
MainMenu_ClassName(TMainMenu AObj) {
    GET_FUNC_ADDR(MainMenu_ClassName)
    return (char*)MySyscall(pMainMenu_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_InstanceSize)
int32_t
MainMenu_InstanceSize(TMainMenu AObj) {
    GET_FUNC_ADDR(MainMenu_InstanceSize)
    return (int32_t)MySyscall(pMainMenu_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_InheritsFrom)
BOOL
MainMenu_InheritsFrom(TMainMenu AObj, TClass AClass) {
    GET_FUNC_ADDR(MainMenu_InheritsFrom)
    return (BOOL)MySyscall(pMainMenu_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_Equals)
BOOL
MainMenu_Equals(TMainMenu AObj, TObject Obj) {
    GET_FUNC_ADDR(MainMenu_Equals)
    return (BOOL)MySyscall(pMainMenu_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_GetHashCode)
int32_t
MainMenu_GetHashCode(TMainMenu AObj) {
    GET_FUNC_ADDR(MainMenu_GetHashCode)
    return (int32_t)MySyscall(pMainMenu_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_ToString)
char*
MainMenu_ToString(TMainMenu AObj) {
    GET_FUNC_ADDR(MainMenu_ToString)
    return (char*)MySyscall(pMainMenu_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_GetImagesWidth)
int32_t
MainMenu_GetImagesWidth(TMainMenu AObj) {
    GET_FUNC_ADDR(MainMenu_GetImagesWidth)
    return (int32_t)MySyscall(pMainMenu_GetImagesWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_SetImagesWidth)
void
MainMenu_SetImagesWidth(TMainMenu AObj, int32_t AValue) {
    GET_FUNC_ADDR(MainMenu_SetImagesWidth)
    MySyscall(pMainMenu_SetImagesWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_SetOnDrawItem)
void
MainMenu_SetOnDrawItem(TMainMenu AObj, TMenuDrawItemEvent AEventData) {
    GET_FUNC_ADDR(MainMenu_SetOnDrawItem)
    MySyscall(pMainMenu_SetOnDrawItem, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_SetOnMeasureItem)
void
MainMenu_SetOnMeasureItem(TMainMenu AObj, TMenuMeasureItemEvent AEventData) {
    GET_FUNC_ADDR(MainMenu_SetOnMeasureItem)
    MySyscall(pMainMenu_SetOnMeasureItem, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_GetBiDiMode)
TBiDiMode
MainMenu_GetBiDiMode(TMainMenu AObj) {
    GET_FUNC_ADDR(MainMenu_GetBiDiMode)
    return (TBiDiMode)MySyscall(pMainMenu_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_SetBiDiMode)
void
MainMenu_SetBiDiMode(TMainMenu AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(MainMenu_SetBiDiMode)
    MySyscall(pMainMenu_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_GetImages)
TImageList
MainMenu_GetImages(TMainMenu AObj) {
    GET_FUNC_ADDR(MainMenu_GetImages)
    return (TImageList)MySyscall(pMainMenu_GetImages, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_SetImages)
void
MainMenu_SetImages(TMainMenu AObj, TImageList AValue) {
    GET_FUNC_ADDR(MainMenu_SetImages)
    MySyscall(pMainMenu_SetImages, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_GetOwnerDraw)
BOOL
MainMenu_GetOwnerDraw(TMainMenu AObj) {
    GET_FUNC_ADDR(MainMenu_GetOwnerDraw)
    return (BOOL)MySyscall(pMainMenu_GetOwnerDraw, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_SetOwnerDraw)
void
MainMenu_SetOwnerDraw(TMainMenu AObj, BOOL AValue) {
    GET_FUNC_ADDR(MainMenu_SetOwnerDraw)
    MySyscall(pMainMenu_SetOwnerDraw, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_SetOnChange)
void
MainMenu_SetOnChange(TMainMenu AObj, TMenuChangeEvent AEventData) {
    GET_FUNC_ADDR(MainMenu_SetOnChange)
    MySyscall(pMainMenu_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_GetHandle)
HMENU
MainMenu_GetHandle(TMainMenu AObj) {
    GET_FUNC_ADDR(MainMenu_GetHandle)
    return (HMENU)MySyscall(pMainMenu_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_GetItems)
TMenuItem
MainMenu_GetItems(TMainMenu AObj) {
    GET_FUNC_ADDR(MainMenu_GetItems)
    return (TMenuItem)MySyscall(pMainMenu_GetItems, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_GetComponentCount)
int32_t
MainMenu_GetComponentCount(TMainMenu AObj) {
    GET_FUNC_ADDR(MainMenu_GetComponentCount)
    return (int32_t)MySyscall(pMainMenu_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_GetComponentIndex)
int32_t
MainMenu_GetComponentIndex(TMainMenu AObj) {
    GET_FUNC_ADDR(MainMenu_GetComponentIndex)
    return (int32_t)MySyscall(pMainMenu_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_SetComponentIndex)
void
MainMenu_SetComponentIndex(TMainMenu AObj, int32_t AValue) {
    GET_FUNC_ADDR(MainMenu_SetComponentIndex)
    MySyscall(pMainMenu_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_GetOwner)
TComponent
MainMenu_GetOwner(TMainMenu AObj) {
    GET_FUNC_ADDR(MainMenu_GetOwner)
    return (TComponent)MySyscall(pMainMenu_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_GetName)
char*
MainMenu_GetName(TMainMenu AObj) {
    GET_FUNC_ADDR(MainMenu_GetName)
    return (char*)MySyscall(pMainMenu_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_SetName)
void
MainMenu_SetName(TMainMenu AObj, CChar char* AValue) {
    GET_FUNC_ADDR(MainMenu_SetName)
    MySyscall(pMainMenu_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_GetTag)
intptr_t
MainMenu_GetTag(TMainMenu AObj) {
    GET_FUNC_ADDR(MainMenu_GetTag)
    return (intptr_t)MySyscall(pMainMenu_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_SetTag)
void
MainMenu_SetTag(TMainMenu AObj, intptr_t AValue) {
    GET_FUNC_ADDR(MainMenu_SetTag)
    MySyscall(pMainMenu_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_GetComponents)
TComponent
MainMenu_GetComponents(TMainMenu AObj, int32_t AIndex) {
    GET_FUNC_ADDR(MainMenu_GetComponents)
    return (TComponent)MySyscall(pMainMenu_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MainMenu_StaticClassType)
TClass
MainMenu_StaticClassType() {
    GET_FUNC_ADDR(MainMenu_StaticClassType)
    return (TClass)MySyscall(pMainMenu_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TPngImage-------------------

DEFINE_FUNC_PTR(PngImage_Create)
TPngImage
PngImage_Create() {
    GET_FUNC_ADDR(PngImage_Create)
    return (TPngImage)MySyscall(pPngImage_Create, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_Free)
void
PngImage_Free(TPngImage AObj) {
    GET_FUNC_ADDR(PngImage_Free)
    MySyscall(pPngImage_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_Assign)
void
PngImage_Assign(TPngImage AObj, TObject Source) {
    GET_FUNC_ADDR(PngImage_Assign)
    MySyscall(pPngImage_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_LoadFromStream)
void
PngImage_LoadFromStream(TPngImage AObj, TStream Stream) {
    GET_FUNC_ADDR(PngImage_LoadFromStream)
    MySyscall(pPngImage_LoadFromStream, 2, AObj, Stream ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_SaveToStream)
void
PngImage_SaveToStream(TPngImage AObj, TStream Stream) {
    GET_FUNC_ADDR(PngImage_SaveToStream)
    MySyscall(pPngImage_SaveToStream, 2, AObj, Stream ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_LoadFromResourceName)
void
PngImage_LoadFromResourceName(TPngImage AObj, uintptr_t Instance, CChar char* Name) {
    GET_FUNC_ADDR(PngImage_LoadFromResourceName)
    MySyscall(pPngImage_LoadFromResourceName, 3, AObj, Instance, Name ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_LoadFromResourceID)
void
PngImage_LoadFromResourceID(TPngImage AObj, uintptr_t Instance, int32_t ResID) {
    GET_FUNC_ADDR(PngImage_LoadFromResourceID)
    MySyscall(pPngImage_LoadFromResourceID, 3, AObj, Instance, ResID ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_Equals)
BOOL
PngImage_Equals(TPngImage AObj, TObject Obj) {
    GET_FUNC_ADDR(PngImage_Equals)
    return (BOOL)MySyscall(pPngImage_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_LoadFromFile)
void
PngImage_LoadFromFile(TPngImage AObj, CChar char* Filename) {
    GET_FUNC_ADDR(PngImage_LoadFromFile)
    MySyscall(pPngImage_LoadFromFile, 2, AObj, Filename ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_SaveToFile)
void
PngImage_SaveToFile(TPngImage AObj, CChar char* Filename) {
    GET_FUNC_ADDR(PngImage_SaveToFile)
    MySyscall(pPngImage_SaveToFile, 2, AObj, Filename ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_SetSize)
void
PngImage_SetSize(TPngImage AObj, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(PngImage_SetSize)
    MySyscall(pPngImage_SetSize, 3, AObj, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_GetNamePath)
char*
PngImage_GetNamePath(TPngImage AObj) {
    GET_FUNC_ADDR(PngImage_GetNamePath)
    return (char*)MySyscall(pPngImage_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_ClassType)
TClass
PngImage_ClassType(TPngImage AObj) {
    GET_FUNC_ADDR(PngImage_ClassType)
    return (TClass)MySyscall(pPngImage_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_ClassName)
char*
PngImage_ClassName(TPngImage AObj) {
    GET_FUNC_ADDR(PngImage_ClassName)
    return (char*)MySyscall(pPngImage_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_InstanceSize)
int32_t
PngImage_InstanceSize(TPngImage AObj) {
    GET_FUNC_ADDR(PngImage_InstanceSize)
    return (int32_t)MySyscall(pPngImage_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_InheritsFrom)
BOOL
PngImage_InheritsFrom(TPngImage AObj, TClass AClass) {
    GET_FUNC_ADDR(PngImage_InheritsFrom)
    return (BOOL)MySyscall(pPngImage_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_GetHashCode)
int32_t
PngImage_GetHashCode(TPngImage AObj) {
    GET_FUNC_ADDR(PngImage_GetHashCode)
    return (int32_t)MySyscall(pPngImage_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_ToString)
char*
PngImage_ToString(TPngImage AObj) {
    GET_FUNC_ADDR(PngImage_ToString)
    return (char*)MySyscall(pPngImage_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_GetCanvas)
TCanvas
PngImage_GetCanvas(TPngImage AObj) {
    GET_FUNC_ADDR(PngImage_GetCanvas)
    return (TCanvas)MySyscall(pPngImage_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_GetWidth)
int32_t
PngImage_GetWidth(TPngImage AObj) {
    GET_FUNC_ADDR(PngImage_GetWidth)
    return (int32_t)MySyscall(pPngImage_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_GetHeight)
int32_t
PngImage_GetHeight(TPngImage AObj) {
    GET_FUNC_ADDR(PngImage_GetHeight)
    return (int32_t)MySyscall(pPngImage_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_GetEmpty)
BOOL
PngImage_GetEmpty(TPngImage AObj) {
    GET_FUNC_ADDR(PngImage_GetEmpty)
    return (BOOL)MySyscall(pPngImage_GetEmpty, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_GetModified)
BOOL
PngImage_GetModified(TPngImage AObj) {
    GET_FUNC_ADDR(PngImage_GetModified)
    return (BOOL)MySyscall(pPngImage_GetModified, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_SetModified)
void
PngImage_SetModified(TPngImage AObj, BOOL AValue) {
    GET_FUNC_ADDR(PngImage_SetModified)
    MySyscall(pPngImage_SetModified, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_GetPalette)
HPALETTE
PngImage_GetPalette(TPngImage AObj) {
    GET_FUNC_ADDR(PngImage_GetPalette)
    return (HPALETTE)MySyscall(pPngImage_GetPalette, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_SetPalette)
void
PngImage_SetPalette(TPngImage AObj, HPALETTE AValue) {
    GET_FUNC_ADDR(PngImage_SetPalette)
    MySyscall(pPngImage_SetPalette, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_GetPaletteModified)
BOOL
PngImage_GetPaletteModified(TPngImage AObj) {
    GET_FUNC_ADDR(PngImage_GetPaletteModified)
    return (BOOL)MySyscall(pPngImage_GetPaletteModified, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_SetPaletteModified)
void
PngImage_SetPaletteModified(TPngImage AObj, BOOL AValue) {
    GET_FUNC_ADDR(PngImage_SetPaletteModified)
    MySyscall(pPngImage_SetPaletteModified, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_GetTransparent)
BOOL
PngImage_GetTransparent(TPngImage AObj) {
    GET_FUNC_ADDR(PngImage_GetTransparent)
    return (BOOL)MySyscall(pPngImage_GetTransparent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_SetTransparent)
void
PngImage_SetTransparent(TPngImage AObj, BOOL AValue) {
    GET_FUNC_ADDR(PngImage_SetTransparent)
    MySyscall(pPngImage_SetTransparent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_SetOnChange)
void
PngImage_SetOnChange(TPngImage AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(PngImage_SetOnChange)
    MySyscall(pPngImage_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PngImage_StaticClassType)
TClass
PngImage_StaticClassType() {
    GET_FUNC_ADDR(PngImage_StaticClassType)
    return (TClass)MySyscall(pPngImage_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TJPEGImage-------------------

DEFINE_FUNC_PTR(JPEGImage_Create)
TJPEGImage
JPEGImage_Create() {
    GET_FUNC_ADDR(JPEGImage_Create)
    return (TJPEGImage)MySyscall(pJPEGImage_Create, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_Free)
void
JPEGImage_Free(TJPEGImage AObj) {
    GET_FUNC_ADDR(JPEGImage_Free)
    MySyscall(pJPEGImage_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_Assign)
void
JPEGImage_Assign(TJPEGImage AObj, TObject Source) {
    GET_FUNC_ADDR(JPEGImage_Assign)
    MySyscall(pJPEGImage_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_LoadFromStream)
void
JPEGImage_LoadFromStream(TJPEGImage AObj, TStream Stream) {
    GET_FUNC_ADDR(JPEGImage_LoadFromStream)
    MySyscall(pJPEGImage_LoadFromStream, 2, AObj, Stream ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_SaveToStream)
void
JPEGImage_SaveToStream(TJPEGImage AObj, TStream Stream) {
    GET_FUNC_ADDR(JPEGImage_SaveToStream)
    MySyscall(pJPEGImage_SaveToStream, 2, AObj, Stream ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_Equals)
BOOL
JPEGImage_Equals(TJPEGImage AObj, TObject Obj) {
    GET_FUNC_ADDR(JPEGImage_Equals)
    return (BOOL)MySyscall(pJPEGImage_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_LoadFromFile)
void
JPEGImage_LoadFromFile(TJPEGImage AObj, CChar char* Filename) {
    GET_FUNC_ADDR(JPEGImage_LoadFromFile)
    MySyscall(pJPEGImage_LoadFromFile, 2, AObj, Filename ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_SaveToFile)
void
JPEGImage_SaveToFile(TJPEGImage AObj, CChar char* Filename) {
    GET_FUNC_ADDR(JPEGImage_SaveToFile)
    MySyscall(pJPEGImage_SaveToFile, 2, AObj, Filename ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_SetSize)
void
JPEGImage_SetSize(TJPEGImage AObj, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(JPEGImage_SetSize)
    MySyscall(pJPEGImage_SetSize, 3, AObj, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_GetNamePath)
char*
JPEGImage_GetNamePath(TJPEGImage AObj) {
    GET_FUNC_ADDR(JPEGImage_GetNamePath)
    return (char*)MySyscall(pJPEGImage_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_ClassType)
TClass
JPEGImage_ClassType(TJPEGImage AObj) {
    GET_FUNC_ADDR(JPEGImage_ClassType)
    return (TClass)MySyscall(pJPEGImage_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_ClassName)
char*
JPEGImage_ClassName(TJPEGImage AObj) {
    GET_FUNC_ADDR(JPEGImage_ClassName)
    return (char*)MySyscall(pJPEGImage_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_InstanceSize)
int32_t
JPEGImage_InstanceSize(TJPEGImage AObj) {
    GET_FUNC_ADDR(JPEGImage_InstanceSize)
    return (int32_t)MySyscall(pJPEGImage_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_InheritsFrom)
BOOL
JPEGImage_InheritsFrom(TJPEGImage AObj, TClass AClass) {
    GET_FUNC_ADDR(JPEGImage_InheritsFrom)
    return (BOOL)MySyscall(pJPEGImage_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_GetHashCode)
int32_t
JPEGImage_GetHashCode(TJPEGImage AObj) {
    GET_FUNC_ADDR(JPEGImage_GetHashCode)
    return (int32_t)MySyscall(pJPEGImage_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_ToString)
char*
JPEGImage_ToString(TJPEGImage AObj) {
    GET_FUNC_ADDR(JPEGImage_ToString)
    return (char*)MySyscall(pJPEGImage_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_GetPixelFormat)
TPixelFormat
JPEGImage_GetPixelFormat(TJPEGImage AObj) {
    GET_FUNC_ADDR(JPEGImage_GetPixelFormat)
    return (TPixelFormat)MySyscall(pJPEGImage_GetPixelFormat, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_SetPixelFormat)
void
JPEGImage_SetPixelFormat(TJPEGImage AObj, TJPEGPixelFormat AValue) {
    GET_FUNC_ADDR(JPEGImage_SetPixelFormat)
    MySyscall(pJPEGImage_SetPixelFormat, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_GetPerformance)
TJPEGPerformance
JPEGImage_GetPerformance(TJPEGImage AObj) {
    GET_FUNC_ADDR(JPEGImage_GetPerformance)
    return (TJPEGPerformance)MySyscall(pJPEGImage_GetPerformance, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_SetPerformance)
void
JPEGImage_SetPerformance(TJPEGImage AObj, TJPEGPerformance AValue) {
    GET_FUNC_ADDR(JPEGImage_SetPerformance)
    MySyscall(pJPEGImage_SetPerformance, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_GetCanvas)
TCanvas
JPEGImage_GetCanvas(TJPEGImage AObj) {
    GET_FUNC_ADDR(JPEGImage_GetCanvas)
    return (TCanvas)MySyscall(pJPEGImage_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_GetEmpty)
BOOL
JPEGImage_GetEmpty(TJPEGImage AObj) {
    GET_FUNC_ADDR(JPEGImage_GetEmpty)
    return (BOOL)MySyscall(pJPEGImage_GetEmpty, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_GetHeight)
int32_t
JPEGImage_GetHeight(TJPEGImage AObj) {
    GET_FUNC_ADDR(JPEGImage_GetHeight)
    return (int32_t)MySyscall(pJPEGImage_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_SetHeight)
void
JPEGImage_SetHeight(TJPEGImage AObj, int32_t AValue) {
    GET_FUNC_ADDR(JPEGImage_SetHeight)
    MySyscall(pJPEGImage_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_GetModified)
BOOL
JPEGImage_GetModified(TJPEGImage AObj) {
    GET_FUNC_ADDR(JPEGImage_GetModified)
    return (BOOL)MySyscall(pJPEGImage_GetModified, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_SetModified)
void
JPEGImage_SetModified(TJPEGImage AObj, BOOL AValue) {
    GET_FUNC_ADDR(JPEGImage_SetModified)
    MySyscall(pJPEGImage_SetModified, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_GetPalette)
HPALETTE
JPEGImage_GetPalette(TJPEGImage AObj) {
    GET_FUNC_ADDR(JPEGImage_GetPalette)
    return (HPALETTE)MySyscall(pJPEGImage_GetPalette, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_SetPalette)
void
JPEGImage_SetPalette(TJPEGImage AObj, HPALETTE AValue) {
    GET_FUNC_ADDR(JPEGImage_SetPalette)
    MySyscall(pJPEGImage_SetPalette, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_GetPaletteModified)
BOOL
JPEGImage_GetPaletteModified(TJPEGImage AObj) {
    GET_FUNC_ADDR(JPEGImage_GetPaletteModified)
    return (BOOL)MySyscall(pJPEGImage_GetPaletteModified, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_SetPaletteModified)
void
JPEGImage_SetPaletteModified(TJPEGImage AObj, BOOL AValue) {
    GET_FUNC_ADDR(JPEGImage_SetPaletteModified)
    MySyscall(pJPEGImage_SetPaletteModified, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_GetTransparent)
BOOL
JPEGImage_GetTransparent(TJPEGImage AObj) {
    GET_FUNC_ADDR(JPEGImage_GetTransparent)
    return (BOOL)MySyscall(pJPEGImage_GetTransparent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_SetTransparent)
void
JPEGImage_SetTransparent(TJPEGImage AObj, BOOL AValue) {
    GET_FUNC_ADDR(JPEGImage_SetTransparent)
    MySyscall(pJPEGImage_SetTransparent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_GetWidth)
int32_t
JPEGImage_GetWidth(TJPEGImage AObj) {
    GET_FUNC_ADDR(JPEGImage_GetWidth)
    return (int32_t)MySyscall(pJPEGImage_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_SetWidth)
void
JPEGImage_SetWidth(TJPEGImage AObj, int32_t AValue) {
    GET_FUNC_ADDR(JPEGImage_SetWidth)
    MySyscall(pJPEGImage_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_SetOnChange)
void
JPEGImage_SetOnChange(TJPEGImage AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(JPEGImage_SetOnChange)
    MySyscall(pJPEGImage_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(JPEGImage_StaticClassType)
TClass
JPEGImage_StaticClassType() {
    GET_FUNC_ADDR(JPEGImage_StaticClassType)
    return (TClass)MySyscall(pJPEGImage_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TGIFImage-------------------

DEFINE_FUNC_PTR(GIFImage_Create)
TGIFImage
GIFImage_Create() {
    GET_FUNC_ADDR(GIFImage_Create)
    return (TGIFImage)MySyscall(pGIFImage_Create, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_Free)
void
GIFImage_Free(TGIFImage AObj) {
    GET_FUNC_ADDR(GIFImage_Free)
    MySyscall(pGIFImage_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_SaveToStream)
void
GIFImage_SaveToStream(TGIFImage AObj, TStream Stream) {
    GET_FUNC_ADDR(GIFImage_SaveToStream)
    MySyscall(pGIFImage_SaveToStream, 2, AObj, Stream ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_LoadFromStream)
void
GIFImage_LoadFromStream(TGIFImage AObj, TStream Stream) {
    GET_FUNC_ADDR(GIFImage_LoadFromStream)
    MySyscall(pGIFImage_LoadFromStream, 2, AObj, Stream ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_Clear)
void
GIFImage_Clear(TGIFImage AObj) {
    GET_FUNC_ADDR(GIFImage_Clear)
    MySyscall(pGIFImage_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_Assign)
void
GIFImage_Assign(TGIFImage AObj, TObject Source) {
    GET_FUNC_ADDR(GIFImage_Assign)
    MySyscall(pGIFImage_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_Equals)
BOOL
GIFImage_Equals(TGIFImage AObj, TObject Obj) {
    GET_FUNC_ADDR(GIFImage_Equals)
    return (BOOL)MySyscall(pGIFImage_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_LoadFromFile)
void
GIFImage_LoadFromFile(TGIFImage AObj, CChar char* Filename) {
    GET_FUNC_ADDR(GIFImage_LoadFromFile)
    MySyscall(pGIFImage_LoadFromFile, 2, AObj, Filename ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_SaveToFile)
void
GIFImage_SaveToFile(TGIFImage AObj, CChar char* Filename) {
    GET_FUNC_ADDR(GIFImage_SaveToFile)
    MySyscall(pGIFImage_SaveToFile, 2, AObj, Filename ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_SetSize)
void
GIFImage_SetSize(TGIFImage AObj, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(GIFImage_SetSize)
    MySyscall(pGIFImage_SetSize, 3, AObj, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_GetNamePath)
char*
GIFImage_GetNamePath(TGIFImage AObj) {
    GET_FUNC_ADDR(GIFImage_GetNamePath)
    return (char*)MySyscall(pGIFImage_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_ClassType)
TClass
GIFImage_ClassType(TGIFImage AObj) {
    GET_FUNC_ADDR(GIFImage_ClassType)
    return (TClass)MySyscall(pGIFImage_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_ClassName)
char*
GIFImage_ClassName(TGIFImage AObj) {
    GET_FUNC_ADDR(GIFImage_ClassName)
    return (char*)MySyscall(pGIFImage_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_InstanceSize)
int32_t
GIFImage_InstanceSize(TGIFImage AObj) {
    GET_FUNC_ADDR(GIFImage_InstanceSize)
    return (int32_t)MySyscall(pGIFImage_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_InheritsFrom)
BOOL
GIFImage_InheritsFrom(TGIFImage AObj, TClass AClass) {
    GET_FUNC_ADDR(GIFImage_InheritsFrom)
    return (BOOL)MySyscall(pGIFImage_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_GetHashCode)
int32_t
GIFImage_GetHashCode(TGIFImage AObj) {
    GET_FUNC_ADDR(GIFImage_GetHashCode)
    return (int32_t)MySyscall(pGIFImage_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_ToString)
char*
GIFImage_ToString(TGIFImage AObj) {
    GET_FUNC_ADDR(GIFImage_ToString)
    return (char*)MySyscall(pGIFImage_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_GetBitsPerPixel)
int32_t
GIFImage_GetBitsPerPixel(TGIFImage AObj) {
    GET_FUNC_ADDR(GIFImage_GetBitsPerPixel)
    return (int32_t)MySyscall(pGIFImage_GetBitsPerPixel, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_GetEmpty)
BOOL
GIFImage_GetEmpty(TGIFImage AObj) {
    GET_FUNC_ADDR(GIFImage_GetEmpty)
    return (BOOL)MySyscall(pGIFImage_GetEmpty, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_GetHeight)
int32_t
GIFImage_GetHeight(TGIFImage AObj) {
    GET_FUNC_ADDR(GIFImage_GetHeight)
    return (int32_t)MySyscall(pGIFImage_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_SetHeight)
void
GIFImage_SetHeight(TGIFImage AObj, int32_t AValue) {
    GET_FUNC_ADDR(GIFImage_SetHeight)
    MySyscall(pGIFImage_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_GetModified)
BOOL
GIFImage_GetModified(TGIFImage AObj) {
    GET_FUNC_ADDR(GIFImage_GetModified)
    return (BOOL)MySyscall(pGIFImage_GetModified, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_SetModified)
void
GIFImage_SetModified(TGIFImage AObj, BOOL AValue) {
    GET_FUNC_ADDR(GIFImage_SetModified)
    MySyscall(pGIFImage_SetModified, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_GetPalette)
HPALETTE
GIFImage_GetPalette(TGIFImage AObj) {
    GET_FUNC_ADDR(GIFImage_GetPalette)
    return (HPALETTE)MySyscall(pGIFImage_GetPalette, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_SetPalette)
void
GIFImage_SetPalette(TGIFImage AObj, HPALETTE AValue) {
    GET_FUNC_ADDR(GIFImage_SetPalette)
    MySyscall(pGIFImage_SetPalette, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_GetPaletteModified)
BOOL
GIFImage_GetPaletteModified(TGIFImage AObj) {
    GET_FUNC_ADDR(GIFImage_GetPaletteModified)
    return (BOOL)MySyscall(pGIFImage_GetPaletteModified, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_SetPaletteModified)
void
GIFImage_SetPaletteModified(TGIFImage AObj, BOOL AValue) {
    GET_FUNC_ADDR(GIFImage_SetPaletteModified)
    MySyscall(pGIFImage_SetPaletteModified, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_GetTransparent)
BOOL
GIFImage_GetTransparent(TGIFImage AObj) {
    GET_FUNC_ADDR(GIFImage_GetTransparent)
    return (BOOL)MySyscall(pGIFImage_GetTransparent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_GetWidth)
int32_t
GIFImage_GetWidth(TGIFImage AObj) {
    GET_FUNC_ADDR(GIFImage_GetWidth)
    return (int32_t)MySyscall(pGIFImage_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_SetWidth)
void
GIFImage_SetWidth(TGIFImage AObj, int32_t AValue) {
    GET_FUNC_ADDR(GIFImage_SetWidth)
    MySyscall(pGIFImage_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_SetOnChange)
void
GIFImage_SetOnChange(TGIFImage AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(GIFImage_SetOnChange)
    MySyscall(pGIFImage_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GIFImage_StaticClassType)
TClass
GIFImage_StaticClassType() {
    GET_FUNC_ADDR(GIFImage_StaticClassType)
    return (TClass)MySyscall(pGIFImage_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TActionList-------------------

DEFINE_FUNC_PTR(ActionList_Create)
TActionList
ActionList_Create(TComponent AOwner) {
    GET_FUNC_ADDR(ActionList_Create)
    return (TActionList)MySyscall(pActionList_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_Free)
void
ActionList_Free(TActionList AObj) {
    GET_FUNC_ADDR(ActionList_Free)
    MySyscall(pActionList_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_FindComponent)
TComponent
ActionList_FindComponent(TActionList AObj, CChar char* AName) {
    GET_FUNC_ADDR(ActionList_FindComponent)
    return (TComponent)MySyscall(pActionList_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_GetNamePath)
char*
ActionList_GetNamePath(TActionList AObj) {
    GET_FUNC_ADDR(ActionList_GetNamePath)
    return (char*)MySyscall(pActionList_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_HasParent)
BOOL
ActionList_HasParent(TActionList AObj) {
    GET_FUNC_ADDR(ActionList_HasParent)
    return (BOOL)MySyscall(pActionList_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_Assign)
void
ActionList_Assign(TActionList AObj, TObject Source) {
    GET_FUNC_ADDR(ActionList_Assign)
    MySyscall(pActionList_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_ClassType)
TClass
ActionList_ClassType(TActionList AObj) {
    GET_FUNC_ADDR(ActionList_ClassType)
    return (TClass)MySyscall(pActionList_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_ClassName)
char*
ActionList_ClassName(TActionList AObj) {
    GET_FUNC_ADDR(ActionList_ClassName)
    return (char*)MySyscall(pActionList_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_InstanceSize)
int32_t
ActionList_InstanceSize(TActionList AObj) {
    GET_FUNC_ADDR(ActionList_InstanceSize)
    return (int32_t)MySyscall(pActionList_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_InheritsFrom)
BOOL
ActionList_InheritsFrom(TActionList AObj, TClass AClass) {
    GET_FUNC_ADDR(ActionList_InheritsFrom)
    return (BOOL)MySyscall(pActionList_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_Equals)
BOOL
ActionList_Equals(TActionList AObj, TObject Obj) {
    GET_FUNC_ADDR(ActionList_Equals)
    return (BOOL)MySyscall(pActionList_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_GetHashCode)
int32_t
ActionList_GetHashCode(TActionList AObj) {
    GET_FUNC_ADDR(ActionList_GetHashCode)
    return (int32_t)MySyscall(pActionList_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_ToString)
char*
ActionList_ToString(TActionList AObj) {
    GET_FUNC_ADDR(ActionList_ToString)
    return (char*)MySyscall(pActionList_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_GetImages)
TImageList
ActionList_GetImages(TActionList AObj) {
    GET_FUNC_ADDR(ActionList_GetImages)
    return (TImageList)MySyscall(pActionList_GetImages, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_SetImages)
void
ActionList_SetImages(TActionList AObj, TImageList AValue) {
    GET_FUNC_ADDR(ActionList_SetImages)
    MySyscall(pActionList_SetImages, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_GetState)
TActionListState
ActionList_GetState(TActionList AObj) {
    GET_FUNC_ADDR(ActionList_GetState)
    return (TActionListState)MySyscall(pActionList_GetState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_SetState)
void
ActionList_SetState(TActionList AObj, TActionListState AValue) {
    GET_FUNC_ADDR(ActionList_SetState)
    MySyscall(pActionList_SetState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_SetOnChange)
void
ActionList_SetOnChange(TActionList AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ActionList_SetOnChange)
    MySyscall(pActionList_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_GetComponentCount)
int32_t
ActionList_GetComponentCount(TActionList AObj) {
    GET_FUNC_ADDR(ActionList_GetComponentCount)
    return (int32_t)MySyscall(pActionList_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_GetComponentIndex)
int32_t
ActionList_GetComponentIndex(TActionList AObj) {
    GET_FUNC_ADDR(ActionList_GetComponentIndex)
    return (int32_t)MySyscall(pActionList_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_SetComponentIndex)
void
ActionList_SetComponentIndex(TActionList AObj, int32_t AValue) {
    GET_FUNC_ADDR(ActionList_SetComponentIndex)
    MySyscall(pActionList_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_GetOwner)
TComponent
ActionList_GetOwner(TActionList AObj) {
    GET_FUNC_ADDR(ActionList_GetOwner)
    return (TComponent)MySyscall(pActionList_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_GetName)
char*
ActionList_GetName(TActionList AObj) {
    GET_FUNC_ADDR(ActionList_GetName)
    return (char*)MySyscall(pActionList_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_SetName)
void
ActionList_SetName(TActionList AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ActionList_SetName)
    MySyscall(pActionList_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_GetTag)
intptr_t
ActionList_GetTag(TActionList AObj) {
    GET_FUNC_ADDR(ActionList_GetTag)
    return (intptr_t)MySyscall(pActionList_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_SetTag)
void
ActionList_SetTag(TActionList AObj, intptr_t AValue) {
    GET_FUNC_ADDR(ActionList_SetTag)
    MySyscall(pActionList_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_GetComponents)
TComponent
ActionList_GetComponents(TActionList AObj, int32_t AIndex) {
    GET_FUNC_ADDR(ActionList_GetComponents)
    return (TComponent)MySyscall(pActionList_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ActionList_StaticClassType)
TClass
ActionList_StaticClassType() {
    GET_FUNC_ADDR(ActionList_StaticClassType)
    return (TClass)MySyscall(pActionList_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TAction-------------------

DEFINE_FUNC_PTR(Action_Create)
TAction
Action_Create(TComponent AOwner) {
    GET_FUNC_ADDR(Action_Create)
    return (TAction)MySyscall(pAction_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_Free)
void
Action_Free(TAction AObj) {
    GET_FUNC_ADDR(Action_Free)
    MySyscall(pAction_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_Execute)
BOOL
Action_Execute(TAction AObj) {
    GET_FUNC_ADDR(Action_Execute)
    return (BOOL)MySyscall(pAction_Execute, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_Update)
BOOL
Action_Update(TAction AObj) {
    GET_FUNC_ADDR(Action_Update)
    return (BOOL)MySyscall(pAction_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_HasParent)
BOOL
Action_HasParent(TAction AObj) {
    GET_FUNC_ADDR(Action_HasParent)
    return (BOOL)MySyscall(pAction_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_FindComponent)
TComponent
Action_FindComponent(TAction AObj, CChar char* AName) {
    GET_FUNC_ADDR(Action_FindComponent)
    return (TComponent)MySyscall(pAction_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_GetNamePath)
char*
Action_GetNamePath(TAction AObj) {
    GET_FUNC_ADDR(Action_GetNamePath)
    return (char*)MySyscall(pAction_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_Assign)
void
Action_Assign(TAction AObj, TObject Source) {
    GET_FUNC_ADDR(Action_Assign)
    MySyscall(pAction_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_ClassType)
TClass
Action_ClassType(TAction AObj) {
    GET_FUNC_ADDR(Action_ClassType)
    return (TClass)MySyscall(pAction_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_ClassName)
char*
Action_ClassName(TAction AObj) {
    GET_FUNC_ADDR(Action_ClassName)
    return (char*)MySyscall(pAction_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_InstanceSize)
int32_t
Action_InstanceSize(TAction AObj) {
    GET_FUNC_ADDR(Action_InstanceSize)
    return (int32_t)MySyscall(pAction_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_InheritsFrom)
BOOL
Action_InheritsFrom(TAction AObj, TClass AClass) {
    GET_FUNC_ADDR(Action_InheritsFrom)
    return (BOOL)MySyscall(pAction_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_Equals)
BOOL
Action_Equals(TAction AObj, TObject Obj) {
    GET_FUNC_ADDR(Action_Equals)
    return (BOOL)MySyscall(pAction_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_GetHashCode)
int32_t
Action_GetHashCode(TAction AObj) {
    GET_FUNC_ADDR(Action_GetHashCode)
    return (int32_t)MySyscall(pAction_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_ToString)
char*
Action_ToString(TAction AObj) {
    GET_FUNC_ADDR(Action_ToString)
    return (char*)MySyscall(pAction_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_GetAutoCheck)
BOOL
Action_GetAutoCheck(TAction AObj) {
    GET_FUNC_ADDR(Action_GetAutoCheck)
    return (BOOL)MySyscall(pAction_GetAutoCheck, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_SetAutoCheck)
void
Action_SetAutoCheck(TAction AObj, BOOL AValue) {
    GET_FUNC_ADDR(Action_SetAutoCheck)
    MySyscall(pAction_SetAutoCheck, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_GetCaption)
char*
Action_GetCaption(TAction AObj) {
    GET_FUNC_ADDR(Action_GetCaption)
    return (char*)MySyscall(pAction_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_SetCaption)
void
Action_SetCaption(TAction AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Action_SetCaption)
    MySyscall(pAction_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_GetChecked)
BOOL
Action_GetChecked(TAction AObj) {
    GET_FUNC_ADDR(Action_GetChecked)
    return (BOOL)MySyscall(pAction_GetChecked, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_SetChecked)
void
Action_SetChecked(TAction AObj, BOOL AValue) {
    GET_FUNC_ADDR(Action_SetChecked)
    MySyscall(pAction_SetChecked, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_GetEnabled)
BOOL
Action_GetEnabled(TAction AObj) {
    GET_FUNC_ADDR(Action_GetEnabled)
    return (BOOL)MySyscall(pAction_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_SetEnabled)
void
Action_SetEnabled(TAction AObj, BOOL AValue) {
    GET_FUNC_ADDR(Action_SetEnabled)
    MySyscall(pAction_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_GetGroupIndex)
int32_t
Action_GetGroupIndex(TAction AObj) {
    GET_FUNC_ADDR(Action_GetGroupIndex)
    return (int32_t)MySyscall(pAction_GetGroupIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_SetGroupIndex)
void
Action_SetGroupIndex(TAction AObj, int32_t AValue) {
    GET_FUNC_ADDR(Action_SetGroupIndex)
    MySyscall(pAction_SetGroupIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_GetHint)
char*
Action_GetHint(TAction AObj) {
    GET_FUNC_ADDR(Action_GetHint)
    return (char*)MySyscall(pAction_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_SetHint)
void
Action_SetHint(TAction AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Action_SetHint)
    MySyscall(pAction_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_GetImageIndex)
int32_t
Action_GetImageIndex(TAction AObj) {
    GET_FUNC_ADDR(Action_GetImageIndex)
    return (int32_t)MySyscall(pAction_GetImageIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_SetImageIndex)
void
Action_SetImageIndex(TAction AObj, int32_t AValue) {
    GET_FUNC_ADDR(Action_SetImageIndex)
    MySyscall(pAction_SetImageIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_GetShortCut)
TShortCut
Action_GetShortCut(TAction AObj) {
    GET_FUNC_ADDR(Action_GetShortCut)
    return (TShortCut)MySyscall(pAction_GetShortCut, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_SetShortCut)
void
Action_SetShortCut(TAction AObj, TShortCut AValue) {
    GET_FUNC_ADDR(Action_SetShortCut)
    MySyscall(pAction_SetShortCut, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_GetVisible)
BOOL
Action_GetVisible(TAction AObj) {
    GET_FUNC_ADDR(Action_GetVisible)
    return (BOOL)MySyscall(pAction_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_SetVisible)
void
Action_SetVisible(TAction AObj, BOOL AValue) {
    GET_FUNC_ADDR(Action_SetVisible)
    MySyscall(pAction_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_SetOnExecute)
void
Action_SetOnExecute(TAction AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Action_SetOnExecute)
    MySyscall(pAction_SetOnExecute, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_SetOnUpdate)
void
Action_SetOnUpdate(TAction AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Action_SetOnUpdate)
    MySyscall(pAction_SetOnUpdate, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_GetIndex)
int32_t
Action_GetIndex(TAction AObj) {
    GET_FUNC_ADDR(Action_GetIndex)
    return (int32_t)MySyscall(pAction_GetIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_SetIndex)
void
Action_SetIndex(TAction AObj, int32_t AValue) {
    GET_FUNC_ADDR(Action_SetIndex)
    MySyscall(pAction_SetIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_GetComponentCount)
int32_t
Action_GetComponentCount(TAction AObj) {
    GET_FUNC_ADDR(Action_GetComponentCount)
    return (int32_t)MySyscall(pAction_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_GetComponentIndex)
int32_t
Action_GetComponentIndex(TAction AObj) {
    GET_FUNC_ADDR(Action_GetComponentIndex)
    return (int32_t)MySyscall(pAction_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_SetComponentIndex)
void
Action_SetComponentIndex(TAction AObj, int32_t AValue) {
    GET_FUNC_ADDR(Action_SetComponentIndex)
    MySyscall(pAction_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_GetOwner)
TComponent
Action_GetOwner(TAction AObj) {
    GET_FUNC_ADDR(Action_GetOwner)
    return (TComponent)MySyscall(pAction_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_GetName)
char*
Action_GetName(TAction AObj) {
    GET_FUNC_ADDR(Action_GetName)
    return (char*)MySyscall(pAction_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_SetName)
void
Action_SetName(TAction AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Action_SetName)
    MySyscall(pAction_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_GetTag)
intptr_t
Action_GetTag(TAction AObj) {
    GET_FUNC_ADDR(Action_GetTag)
    return (intptr_t)MySyscall(pAction_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_SetTag)
void
Action_SetTag(TAction AObj, intptr_t AValue) {
    GET_FUNC_ADDR(Action_SetTag)
    MySyscall(pAction_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_GetComponents)
TComponent
Action_GetComponents(TAction AObj, int32_t AIndex) {
    GET_FUNC_ADDR(Action_GetComponents)
    return (TComponent)MySyscall(pAction_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Action_StaticClassType)
TClass
Action_StaticClassType() {
    GET_FUNC_ADDR(Action_StaticClassType)
    return (TClass)MySyscall(pAction_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TToolButton-------------------

DEFINE_FUNC_PTR(ToolButton_Create)
TToolButton
ToolButton_Create(TComponent AOwner) {
    GET_FUNC_ADDR(ToolButton_Create)
    return (TToolButton)MySyscall(pToolButton_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_Free)
void
ToolButton_Free(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_Free)
    MySyscall(pToolButton_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_CheckMenuDropdown)
BOOL
ToolButton_CheckMenuDropdown(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_CheckMenuDropdown)
    return (BOOL)MySyscall(pToolButton_CheckMenuDropdown, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_Click)
void
ToolButton_Click(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_Click)
    MySyscall(pToolButton_Click, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetBounds)
void
ToolButton_SetBounds(TToolButton AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(ToolButton_SetBounds)
    MySyscall(pToolButton_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_BringToFront)
void
ToolButton_BringToFront(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_BringToFront)
    MySyscall(pToolButton_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_ClientToScreen)
TPoint
ToolButton_ClientToScreen(TToolButton AObj, TPoint Point) {
    GET_FUNC_ADDR(ToolButton_ClientToScreen)
    TPoint result;
    MySyscall(pToolButton_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ToolButton_ClientToParent)
TPoint
ToolButton_ClientToParent(TToolButton AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ToolButton_ClientToParent)
    TPoint result;
    MySyscall(pToolButton_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ToolButton_Dragging)
BOOL
ToolButton_Dragging(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_Dragging)
    return (BOOL)MySyscall(pToolButton_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_HasParent)
BOOL
ToolButton_HasParent(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_HasParent)
    return (BOOL)MySyscall(pToolButton_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_Hide)
void
ToolButton_Hide(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_Hide)
    MySyscall(pToolButton_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_Invalidate)
void
ToolButton_Invalidate(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_Invalidate)
    MySyscall(pToolButton_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_Perform)
intptr_t
ToolButton_Perform(TToolButton AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(ToolButton_Perform)
    return (intptr_t)MySyscall(pToolButton_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_Refresh)
void
ToolButton_Refresh(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_Refresh)
    MySyscall(pToolButton_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_Repaint)
void
ToolButton_Repaint(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_Repaint)
    MySyscall(pToolButton_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_ScreenToClient)
TPoint
ToolButton_ScreenToClient(TToolButton AObj, TPoint Point) {
    GET_FUNC_ADDR(ToolButton_ScreenToClient)
    TPoint result;
    MySyscall(pToolButton_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ToolButton_ParentToClient)
TPoint
ToolButton_ParentToClient(TToolButton AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ToolButton_ParentToClient)
    TPoint result;
    MySyscall(pToolButton_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ToolButton_SendToBack)
void
ToolButton_SendToBack(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_SendToBack)
    MySyscall(pToolButton_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_Show)
void
ToolButton_Show(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_Show)
    MySyscall(pToolButton_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_Update)
void
ToolButton_Update(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_Update)
    MySyscall(pToolButton_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetTextBuf)
int32_t
ToolButton_GetTextBuf(TToolButton AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(ToolButton_GetTextBuf)
    return (int32_t)MySyscall(pToolButton_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetTextLen)
int32_t
ToolButton_GetTextLen(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetTextLen)
    return (int32_t)MySyscall(pToolButton_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetTextBuf)
void
ToolButton_SetTextBuf(TToolButton AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(ToolButton_SetTextBuf)
    MySyscall(pToolButton_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_FindComponent)
TComponent
ToolButton_FindComponent(TToolButton AObj, CChar char* AName) {
    GET_FUNC_ADDR(ToolButton_FindComponent)
    return (TComponent)MySyscall(pToolButton_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetNamePath)
char*
ToolButton_GetNamePath(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetNamePath)
    return (char*)MySyscall(pToolButton_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_Assign)
void
ToolButton_Assign(TToolButton AObj, TObject Source) {
    GET_FUNC_ADDR(ToolButton_Assign)
    MySyscall(pToolButton_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_ClassType)
TClass
ToolButton_ClassType(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_ClassType)
    return (TClass)MySyscall(pToolButton_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_ClassName)
char*
ToolButton_ClassName(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_ClassName)
    return (char*)MySyscall(pToolButton_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_InstanceSize)
int32_t
ToolButton_InstanceSize(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_InstanceSize)
    return (int32_t)MySyscall(pToolButton_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_InheritsFrom)
BOOL
ToolButton_InheritsFrom(TToolButton AObj, TClass AClass) {
    GET_FUNC_ADDR(ToolButton_InheritsFrom)
    return (BOOL)MySyscall(pToolButton_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_Equals)
BOOL
ToolButton_Equals(TToolButton AObj, TObject Obj) {
    GET_FUNC_ADDR(ToolButton_Equals)
    return (BOOL)MySyscall(pToolButton_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetHashCode)
int32_t
ToolButton_GetHashCode(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetHashCode)
    return (int32_t)MySyscall(pToolButton_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_ToString)
char*
ToolButton_ToString(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_ToString)
    return (char*)MySyscall(pToolButton_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_AnchorToNeighbour)
void
ToolButton_AnchorToNeighbour(TToolButton AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ToolButton_AnchorToNeighbour)
    MySyscall(pToolButton_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_AnchorParallel)
void
ToolButton_AnchorParallel(TToolButton AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ToolButton_AnchorParallel)
    MySyscall(pToolButton_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_AnchorHorizontalCenterTo)
void
ToolButton_AnchorHorizontalCenterTo(TToolButton AObj, TControl ASibling) {
    GET_FUNC_ADDR(ToolButton_AnchorHorizontalCenterTo)
    MySyscall(pToolButton_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_AnchorVerticalCenterTo)
void
ToolButton_AnchorVerticalCenterTo(TToolButton AObj, TControl ASibling) {
    GET_FUNC_ADDR(ToolButton_AnchorVerticalCenterTo)
    MySyscall(pToolButton_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_AnchorSame)
void
ToolButton_AnchorSame(TToolButton AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(ToolButton_AnchorSame)
    MySyscall(pToolButton_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_AnchorAsAlign)
void
ToolButton_AnchorAsAlign(TToolButton AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(ToolButton_AnchorAsAlign)
    MySyscall(pToolButton_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_AnchorClient)
void
ToolButton_AnchorClient(TToolButton AObj, int32_t ASpace) {
    GET_FUNC_ADDR(ToolButton_AnchorClient)
    MySyscall(pToolButton_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_ScaleDesignToForm)
int32_t
ToolButton_ScaleDesignToForm(TToolButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToolButton_ScaleDesignToForm)
    return (int32_t)MySyscall(pToolButton_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_ScaleFormToDesign)
int32_t
ToolButton_ScaleFormToDesign(TToolButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToolButton_ScaleFormToDesign)
    return (int32_t)MySyscall(pToolButton_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_Scale96ToForm)
int32_t
ToolButton_Scale96ToForm(TToolButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToolButton_Scale96ToForm)
    return (int32_t)MySyscall(pToolButton_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_ScaleFormTo96)
int32_t
ToolButton_ScaleFormTo96(TToolButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToolButton_ScaleFormTo96)
    return (int32_t)MySyscall(pToolButton_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_Scale96ToFont)
int32_t
ToolButton_Scale96ToFont(TToolButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToolButton_Scale96ToFont)
    return (int32_t)MySyscall(pToolButton_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_ScaleFontTo96)
int32_t
ToolButton_ScaleFontTo96(TToolButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToolButton_ScaleFontTo96)
    return (int32_t)MySyscall(pToolButton_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_ScaleScreenToFont)
int32_t
ToolButton_ScaleScreenToFont(TToolButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToolButton_ScaleScreenToFont)
    return (int32_t)MySyscall(pToolButton_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_ScaleFontToScreen)
int32_t
ToolButton_ScaleFontToScreen(TToolButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToolButton_ScaleFontToScreen)
    return (int32_t)MySyscall(pToolButton_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_Scale96ToScreen)
int32_t
ToolButton_Scale96ToScreen(TToolButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToolButton_Scale96ToScreen)
    return (int32_t)MySyscall(pToolButton_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_ScaleScreenTo96)
int32_t
ToolButton_ScaleScreenTo96(TToolButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToolButton_ScaleScreenTo96)
    return (int32_t)MySyscall(pToolButton_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_AutoAdjustLayout)
void
ToolButton_AutoAdjustLayout(TToolButton AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(ToolButton_AutoAdjustLayout)
    MySyscall(pToolButton_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_FixDesignFontsPPI)
void
ToolButton_FixDesignFontsPPI(TToolButton AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(ToolButton_FixDesignFontsPPI)
    MySyscall(pToolButton_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_ScaleFontsPPI)
void
ToolButton_ScaleFontsPPI(TToolButton AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(ToolButton_ScaleFontsPPI)
    MySyscall(pToolButton_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetIndex)
int32_t
ToolButton_GetIndex(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetIndex)
    return (int32_t)MySyscall(pToolButton_GetIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetAction)
TAction
ToolButton_GetAction(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetAction)
    return (TAction)MySyscall(pToolButton_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetAction)
void
ToolButton_SetAction(TToolButton AObj, TAction AValue) {
    GET_FUNC_ADDR(ToolButton_SetAction)
    MySyscall(pToolButton_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetAllowAllUp)
BOOL
ToolButton_GetAllowAllUp(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetAllowAllUp)
    return (BOOL)MySyscall(pToolButton_GetAllowAllUp, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetAllowAllUp)
void
ToolButton_SetAllowAllUp(TToolButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolButton_SetAllowAllUp)
    MySyscall(pToolButton_SetAllowAllUp, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetAutoSize)
BOOL
ToolButton_GetAutoSize(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetAutoSize)
    return (BOOL)MySyscall(pToolButton_GetAutoSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetAutoSize)
void
ToolButton_SetAutoSize(TToolButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolButton_SetAutoSize)
    MySyscall(pToolButton_SetAutoSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetCaption)
char*
ToolButton_GetCaption(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetCaption)
    return (char*)MySyscall(pToolButton_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetCaption)
void
ToolButton_SetCaption(TToolButton AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ToolButton_SetCaption)
    MySyscall(pToolButton_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetDown)
BOOL
ToolButton_GetDown(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetDown)
    return (BOOL)MySyscall(pToolButton_GetDown, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetDown)
void
ToolButton_SetDown(TToolButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolButton_SetDown)
    MySyscall(pToolButton_SetDown, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetDragCursor)
TCursor
ToolButton_GetDragCursor(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetDragCursor)
    return (TCursor)MySyscall(pToolButton_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetDragCursor)
void
ToolButton_SetDragCursor(TToolButton AObj, TCursor AValue) {
    GET_FUNC_ADDR(ToolButton_SetDragCursor)
    MySyscall(pToolButton_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetDragKind)
TDragKind
ToolButton_GetDragKind(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetDragKind)
    return (TDragKind)MySyscall(pToolButton_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetDragKind)
void
ToolButton_SetDragKind(TToolButton AObj, TDragKind AValue) {
    GET_FUNC_ADDR(ToolButton_SetDragKind)
    MySyscall(pToolButton_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetDragMode)
TDragMode
ToolButton_GetDragMode(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetDragMode)
    return (TDragMode)MySyscall(pToolButton_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetDragMode)
void
ToolButton_SetDragMode(TToolButton AObj, TDragMode AValue) {
    GET_FUNC_ADDR(ToolButton_SetDragMode)
    MySyscall(pToolButton_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetDropdownMenu)
TPopupMenu
ToolButton_GetDropdownMenu(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetDropdownMenu)
    return (TPopupMenu)MySyscall(pToolButton_GetDropdownMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetDropdownMenu)
void
ToolButton_SetDropdownMenu(TToolButton AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(ToolButton_SetDropdownMenu)
    MySyscall(pToolButton_SetDropdownMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetEnabled)
BOOL
ToolButton_GetEnabled(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetEnabled)
    return (BOOL)MySyscall(pToolButton_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetEnabled)
void
ToolButton_SetEnabled(TToolButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolButton_SetEnabled)
    MySyscall(pToolButton_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetGrouped)
BOOL
ToolButton_GetGrouped(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetGrouped)
    return (BOOL)MySyscall(pToolButton_GetGrouped, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetGrouped)
void
ToolButton_SetGrouped(TToolButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolButton_SetGrouped)
    MySyscall(pToolButton_SetGrouped, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetHeight)
int32_t
ToolButton_GetHeight(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetHeight)
    return (int32_t)MySyscall(pToolButton_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetHeight)
void
ToolButton_SetHeight(TToolButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToolButton_SetHeight)
    MySyscall(pToolButton_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetImageIndex)
int32_t
ToolButton_GetImageIndex(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetImageIndex)
    return (int32_t)MySyscall(pToolButton_GetImageIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetImageIndex)
void
ToolButton_SetImageIndex(TToolButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToolButton_SetImageIndex)
    MySyscall(pToolButton_SetImageIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetIndeterminate)
BOOL
ToolButton_GetIndeterminate(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetIndeterminate)
    return (BOOL)MySyscall(pToolButton_GetIndeterminate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetIndeterminate)
void
ToolButton_SetIndeterminate(TToolButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolButton_SetIndeterminate)
    MySyscall(pToolButton_SetIndeterminate, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetMarked)
BOOL
ToolButton_GetMarked(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetMarked)
    return (BOOL)MySyscall(pToolButton_GetMarked, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetMarked)
void
ToolButton_SetMarked(TToolButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolButton_SetMarked)
    MySyscall(pToolButton_SetMarked, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetParentShowHint)
BOOL
ToolButton_GetParentShowHint(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetParentShowHint)
    return (BOOL)MySyscall(pToolButton_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetParentShowHint)
void
ToolButton_SetParentShowHint(TToolButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolButton_SetParentShowHint)
    MySyscall(pToolButton_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetPopupMenu)
TPopupMenu
ToolButton_GetPopupMenu(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetPopupMenu)
    return (TPopupMenu)MySyscall(pToolButton_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetPopupMenu)
void
ToolButton_SetPopupMenu(TToolButton AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(ToolButton_SetPopupMenu)
    MySyscall(pToolButton_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetWrap)
BOOL
ToolButton_GetWrap(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetWrap)
    return (BOOL)MySyscall(pToolButton_GetWrap, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetWrap)
void
ToolButton_SetWrap(TToolButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolButton_SetWrap)
    MySyscall(pToolButton_SetWrap, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetShowHint)
BOOL
ToolButton_GetShowHint(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetShowHint)
    return (BOOL)MySyscall(pToolButton_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetShowHint)
void
ToolButton_SetShowHint(TToolButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolButton_SetShowHint)
    MySyscall(pToolButton_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetStyle)
TToolButtonStyle
ToolButton_GetStyle(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetStyle)
    return (TToolButtonStyle)MySyscall(pToolButton_GetStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetStyle)
void
ToolButton_SetStyle(TToolButton AObj, TToolButtonStyle AValue) {
    GET_FUNC_ADDR(ToolButton_SetStyle)
    MySyscall(pToolButton_SetStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetVisible)
BOOL
ToolButton_GetVisible(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetVisible)
    return (BOOL)MySyscall(pToolButton_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetVisible)
void
ToolButton_SetVisible(TToolButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToolButton_SetVisible)
    MySyscall(pToolButton_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetWidth)
int32_t
ToolButton_GetWidth(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetWidth)
    return (int32_t)MySyscall(pToolButton_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetWidth)
void
ToolButton_SetWidth(TToolButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToolButton_SetWidth)
    MySyscall(pToolButton_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetOnClick)
void
ToolButton_SetOnClick(TToolButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ToolButton_SetOnClick)
    MySyscall(pToolButton_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetOnContextPopup)
void
ToolButton_SetOnContextPopup(TToolButton AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(ToolButton_SetOnContextPopup)
    MySyscall(pToolButton_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetOnDragDrop)
void
ToolButton_SetOnDragDrop(TToolButton AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(ToolButton_SetOnDragDrop)
    MySyscall(pToolButton_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetOnDragOver)
void
ToolButton_SetOnDragOver(TToolButton AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(ToolButton_SetOnDragOver)
    MySyscall(pToolButton_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetOnEndDock)
void
ToolButton_SetOnEndDock(TToolButton AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(ToolButton_SetOnEndDock)
    MySyscall(pToolButton_SetOnEndDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetOnEndDrag)
void
ToolButton_SetOnEndDrag(TToolButton AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(ToolButton_SetOnEndDrag)
    MySyscall(pToolButton_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetOnMouseDown)
void
ToolButton_SetOnMouseDown(TToolButton AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(ToolButton_SetOnMouseDown)
    MySyscall(pToolButton_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetOnMouseEnter)
void
ToolButton_SetOnMouseEnter(TToolButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ToolButton_SetOnMouseEnter)
    MySyscall(pToolButton_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetOnMouseLeave)
void
ToolButton_SetOnMouseLeave(TToolButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ToolButton_SetOnMouseLeave)
    MySyscall(pToolButton_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetOnMouseMove)
void
ToolButton_SetOnMouseMove(TToolButton AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(ToolButton_SetOnMouseMove)
    MySyscall(pToolButton_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetOnMouseUp)
void
ToolButton_SetOnMouseUp(TToolButton AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(ToolButton_SetOnMouseUp)
    MySyscall(pToolButton_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetOnStartDock)
void
ToolButton_SetOnStartDock(TToolButton AObj, TStartDockEvent AEventData) {
    GET_FUNC_ADDR(ToolButton_SetOnStartDock)
    MySyscall(pToolButton_SetOnStartDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetAlign)
TAlign
ToolButton_GetAlign(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetAlign)
    return (TAlign)MySyscall(pToolButton_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetAlign)
void
ToolButton_SetAlign(TToolButton AObj, TAlign AValue) {
    GET_FUNC_ADDR(ToolButton_SetAlign)
    MySyscall(pToolButton_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetAnchors)
TAnchors
ToolButton_GetAnchors(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetAnchors)
    return (TAnchors)MySyscall(pToolButton_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetAnchors)
void
ToolButton_SetAnchors(TToolButton AObj, TAnchors AValue) {
    GET_FUNC_ADDR(ToolButton_SetAnchors)
    MySyscall(pToolButton_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetBiDiMode)
TBiDiMode
ToolButton_GetBiDiMode(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetBiDiMode)
    return (TBiDiMode)MySyscall(pToolButton_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetBiDiMode)
void
ToolButton_SetBiDiMode(TToolButton AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(ToolButton_SetBiDiMode)
    MySyscall(pToolButton_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetBoundsRect)
TRect
ToolButton_GetBoundsRect(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetBoundsRect)
    TRect result;
    MySyscall(pToolButton_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ToolButton_SetBoundsRect)
void
ToolButton_SetBoundsRect(TToolButton AObj, TRect AValue) {
    GET_FUNC_ADDR(ToolButton_SetBoundsRect)
    MySyscall(pToolButton_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetClientHeight)
int32_t
ToolButton_GetClientHeight(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetClientHeight)
    return (int32_t)MySyscall(pToolButton_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetClientHeight)
void
ToolButton_SetClientHeight(TToolButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToolButton_SetClientHeight)
    MySyscall(pToolButton_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetClientOrigin)
TPoint
ToolButton_GetClientOrigin(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetClientOrigin)
    TPoint result;
    MySyscall(pToolButton_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ToolButton_GetClientRect)
TRect
ToolButton_GetClientRect(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetClientRect)
    TRect result;
    MySyscall(pToolButton_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ToolButton_GetClientWidth)
int32_t
ToolButton_GetClientWidth(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetClientWidth)
    return (int32_t)MySyscall(pToolButton_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetClientWidth)
void
ToolButton_SetClientWidth(TToolButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToolButton_SetClientWidth)
    MySyscall(pToolButton_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetConstraints)
TSizeConstraints
ToolButton_GetConstraints(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetConstraints)
    return (TSizeConstraints)MySyscall(pToolButton_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetConstraints)
void
ToolButton_SetConstraints(TToolButton AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(ToolButton_SetConstraints)
    MySyscall(pToolButton_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetControlState)
TControlState
ToolButton_GetControlState(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetControlState)
    return (TControlState)MySyscall(pToolButton_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetControlState)
void
ToolButton_SetControlState(TToolButton AObj, TControlState AValue) {
    GET_FUNC_ADDR(ToolButton_SetControlState)
    MySyscall(pToolButton_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetControlStyle)
TControlStyle
ToolButton_GetControlStyle(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetControlStyle)
    return (TControlStyle)MySyscall(pToolButton_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetControlStyle)
void
ToolButton_SetControlStyle(TToolButton AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(ToolButton_SetControlStyle)
    MySyscall(pToolButton_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetFloating)
BOOL
ToolButton_GetFloating(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetFloating)
    return (BOOL)MySyscall(pToolButton_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetParent)
TWinControl
ToolButton_GetParent(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetParent)
    return (TWinControl)MySyscall(pToolButton_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetParent)
void
ToolButton_SetParent(TToolButton AObj, TWinControl AValue) {
    GET_FUNC_ADDR(ToolButton_SetParent)
    MySyscall(pToolButton_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetLeft)
int32_t
ToolButton_GetLeft(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetLeft)
    return (int32_t)MySyscall(pToolButton_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetLeft)
void
ToolButton_SetLeft(TToolButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToolButton_SetLeft)
    MySyscall(pToolButton_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetTop)
int32_t
ToolButton_GetTop(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetTop)
    return (int32_t)MySyscall(pToolButton_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetTop)
void
ToolButton_SetTop(TToolButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToolButton_SetTop)
    MySyscall(pToolButton_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetCursor)
TCursor
ToolButton_GetCursor(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetCursor)
    return (TCursor)MySyscall(pToolButton_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetCursor)
void
ToolButton_SetCursor(TToolButton AObj, TCursor AValue) {
    GET_FUNC_ADDR(ToolButton_SetCursor)
    MySyscall(pToolButton_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetHint)
char*
ToolButton_GetHint(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetHint)
    return (char*)MySyscall(pToolButton_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetHint)
void
ToolButton_SetHint(TToolButton AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ToolButton_SetHint)
    MySyscall(pToolButton_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetComponentCount)
int32_t
ToolButton_GetComponentCount(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetComponentCount)
    return (int32_t)MySyscall(pToolButton_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetComponentIndex)
int32_t
ToolButton_GetComponentIndex(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetComponentIndex)
    return (int32_t)MySyscall(pToolButton_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetComponentIndex)
void
ToolButton_SetComponentIndex(TToolButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToolButton_SetComponentIndex)
    MySyscall(pToolButton_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetOwner)
TComponent
ToolButton_GetOwner(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetOwner)
    return (TComponent)MySyscall(pToolButton_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetName)
char*
ToolButton_GetName(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetName)
    return (char*)MySyscall(pToolButton_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetName)
void
ToolButton_SetName(TToolButton AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ToolButton_SetName)
    MySyscall(pToolButton_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetTag)
intptr_t
ToolButton_GetTag(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetTag)
    return (intptr_t)MySyscall(pToolButton_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetTag)
void
ToolButton_SetTag(TToolButton AObj, intptr_t AValue) {
    GET_FUNC_ADDR(ToolButton_SetTag)
    MySyscall(pToolButton_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetAnchorSideLeft)
TAnchorSide
ToolButton_GetAnchorSideLeft(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pToolButton_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetAnchorSideLeft)
void
ToolButton_SetAnchorSideLeft(TToolButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ToolButton_SetAnchorSideLeft)
    MySyscall(pToolButton_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetAnchorSideTop)
TAnchorSide
ToolButton_GetAnchorSideTop(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pToolButton_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetAnchorSideTop)
void
ToolButton_SetAnchorSideTop(TToolButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ToolButton_SetAnchorSideTop)
    MySyscall(pToolButton_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetAnchorSideRight)
TAnchorSide
ToolButton_GetAnchorSideRight(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pToolButton_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetAnchorSideRight)
void
ToolButton_SetAnchorSideRight(TToolButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ToolButton_SetAnchorSideRight)
    MySyscall(pToolButton_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetAnchorSideBottom)
TAnchorSide
ToolButton_GetAnchorSideBottom(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pToolButton_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetAnchorSideBottom)
void
ToolButton_SetAnchorSideBottom(TToolButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ToolButton_SetAnchorSideBottom)
    MySyscall(pToolButton_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetBorderSpacing)
TControlBorderSpacing
ToolButton_GetBorderSpacing(TToolButton AObj) {
    GET_FUNC_ADDR(ToolButton_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pToolButton_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_SetBorderSpacing)
void
ToolButton_SetBorderSpacing(TToolButton AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(ToolButton_SetBorderSpacing)
    MySyscall(pToolButton_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetComponents)
TComponent
ToolButton_GetComponents(TToolButton AObj, int32_t AIndex) {
    GET_FUNC_ADDR(ToolButton_GetComponents)
    return (TComponent)MySyscall(pToolButton_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_GetAnchorSide)
TAnchorSide
ToolButton_GetAnchorSide(TToolButton AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(ToolButton_GetAnchorSide)
    return (TAnchorSide)MySyscall(pToolButton_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToolButton_StaticClassType)
TClass
ToolButton_StaticClassType() {
    GET_FUNC_ADDR(ToolButton_StaticClassType)
    return (TClass)MySyscall(pToolButton_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TIniFile-------------------

DEFINE_FUNC_PTR(IniFile_Create)
TIniFile
IniFile_Create(CChar char* AFileName) {
    GET_FUNC_ADDR(IniFile_Create)
    return (TIniFile)MySyscall(pIniFile_Create, 1, AFileName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_Free)
void
IniFile_Free(TIniFile AObj) {
    GET_FUNC_ADDR(IniFile_Free)
    MySyscall(pIniFile_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_ReadString)
char*
IniFile_ReadString(TIniFile AObj, CChar char* Section, CChar char* Ident, CChar char* Default) {
    GET_FUNC_ADDR(IniFile_ReadString)
    return (char*)MySyscall(pIniFile_ReadString, 4, AObj, Section, Ident, Default ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_WriteString)
void
IniFile_WriteString(TIniFile AObj, CChar char* Section, CChar char* Ident, CChar char* Value) {
    GET_FUNC_ADDR(IniFile_WriteString)
    MySyscall(pIniFile_WriteString, 4, AObj, Section, Ident, Value ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_ReadSections)
void
IniFile_ReadSections(TIniFile AObj, TStrings Strings) {
    GET_FUNC_ADDR(IniFile_ReadSections)
    MySyscall(pIniFile_ReadSections, 2, AObj, Strings ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_ReadSectionValues)
void
IniFile_ReadSectionValues(TIniFile AObj, CChar char* Section, TStrings Strings) {
    GET_FUNC_ADDR(IniFile_ReadSectionValues)
    MySyscall(pIniFile_ReadSectionValues, 3, AObj, Section, Strings ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_EraseSection)
void
IniFile_EraseSection(TIniFile AObj, CChar char* Section) {
    GET_FUNC_ADDR(IniFile_EraseSection)
    MySyscall(pIniFile_EraseSection, 2, AObj, Section ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_DeleteKey)
void
IniFile_DeleteKey(TIniFile AObj, CChar char* Section, CChar char* Ident) {
    GET_FUNC_ADDR(IniFile_DeleteKey)
    MySyscall(pIniFile_DeleteKey, 3, AObj, Section, Ident ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_UpdateFile)
void
IniFile_UpdateFile(TIniFile AObj) {
    GET_FUNC_ADDR(IniFile_UpdateFile)
    MySyscall(pIniFile_UpdateFile, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_SectionExists)
BOOL
IniFile_SectionExists(TIniFile AObj, CChar char* Section) {
    GET_FUNC_ADDR(IniFile_SectionExists)
    return (BOOL)MySyscall(pIniFile_SectionExists, 2, AObj, Section ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_ReadInteger)
int32_t
IniFile_ReadInteger(TIniFile AObj, CChar char* Section, CChar char* Ident, int32_t Default) {
    GET_FUNC_ADDR(IniFile_ReadInteger)
    return (int32_t)MySyscall(pIniFile_ReadInteger, 4, AObj, Section, Ident, Default ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_WriteInteger)
void
IniFile_WriteInteger(TIniFile AObj, CChar char* Section, CChar char* Ident, int32_t Value) {
    GET_FUNC_ADDR(IniFile_WriteInteger)
    MySyscall(pIniFile_WriteInteger, 4, AObj, Section, Ident, Value ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_ReadBool)
BOOL
IniFile_ReadBool(TIniFile AObj, CChar char* Section, CChar char* Ident, BOOL Default) {
    GET_FUNC_ADDR(IniFile_ReadBool)
    return (BOOL)MySyscall(pIniFile_ReadBool, 4, AObj, Section, Ident, Default ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_WriteBool)
void
IniFile_WriteBool(TIniFile AObj, CChar char* Section, CChar char* Ident, BOOL Value) {
    GET_FUNC_ADDR(IniFile_WriteBool)
    MySyscall(pIniFile_WriteBool, 4, AObj, Section, Ident, Value ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_ReadDate)
uint32_t
IniFile_ReadDate(TIniFile AObj, CChar char* Section, CChar char* Name, uint32_t Default) {
    GET_FUNC_ADDR(IniFile_ReadDate)
    return (uint32_t)MySyscall(pIniFile_ReadDate, 4, AObj, Section, Name, Default ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_ReadDateTime)
uint32_t
IniFile_ReadDateTime(TIniFile AObj, CChar char* Section, CChar char* Name, uint32_t Default) {
    GET_FUNC_ADDR(IniFile_ReadDateTime)
    return (uint32_t)MySyscall(pIniFile_ReadDateTime, 4, AObj, Section, Name, Default ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_ReadFloat)
double
IniFile_ReadFloat(TIniFile AObj, CChar char* Section, CChar char* Name, double Default) {
    GET_FUNC_ADDR(IniFile_ReadFloat)
    double result;
    MySyscall(pIniFile_ReadFloat, 5, AObj, Section, Name, &Default, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(IniFile_ReadTime)
uint32_t
IniFile_ReadTime(TIniFile AObj, CChar char* Section, CChar char* Name, uint32_t Default) {
    GET_FUNC_ADDR(IniFile_ReadTime)
    return (uint32_t)MySyscall(pIniFile_ReadTime, 4, AObj, Section, Name, Default ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_WriteDate)
void
IniFile_WriteDate(TIniFile AObj, CChar char* Section, CChar char* Name, uint32_t Value) {
    GET_FUNC_ADDR(IniFile_WriteDate)
    MySyscall(pIniFile_WriteDate, 4, AObj, Section, Name, Value ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_WriteDateTime)
void
IniFile_WriteDateTime(TIniFile AObj, CChar char* Section, CChar char* Name, uint32_t Value) {
    GET_FUNC_ADDR(IniFile_WriteDateTime)
    MySyscall(pIniFile_WriteDateTime, 4, AObj, Section, Name, Value ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_WriteFloat)
void
IniFile_WriteFloat(TIniFile AObj, CChar char* Section, CChar char* Name, double Value) {
    GET_FUNC_ADDR(IniFile_WriteFloat)
    MySyscall(pIniFile_WriteFloat, 4, AObj, Section, Name, &Value ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_WriteTime)
void
IniFile_WriteTime(TIniFile AObj, CChar char* Section, CChar char* Name, uint32_t Value) {
    GET_FUNC_ADDR(IniFile_WriteTime)
    MySyscall(pIniFile_WriteTime, 4, AObj, Section, Name, Value ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_ValueExists)
BOOL
IniFile_ValueExists(TIniFile AObj, CChar char* Section, CChar char* Ident) {
    GET_FUNC_ADDR(IniFile_ValueExists)
    return (BOOL)MySyscall(pIniFile_ValueExists, 3, AObj, Section, Ident ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_ClassType)
TClass
IniFile_ClassType(TIniFile AObj) {
    GET_FUNC_ADDR(IniFile_ClassType)
    return (TClass)MySyscall(pIniFile_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_ClassName)
char*
IniFile_ClassName(TIniFile AObj) {
    GET_FUNC_ADDR(IniFile_ClassName)
    return (char*)MySyscall(pIniFile_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_InstanceSize)
int32_t
IniFile_InstanceSize(TIniFile AObj) {
    GET_FUNC_ADDR(IniFile_InstanceSize)
    return (int32_t)MySyscall(pIniFile_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_InheritsFrom)
BOOL
IniFile_InheritsFrom(TIniFile AObj, TClass AClass) {
    GET_FUNC_ADDR(IniFile_InheritsFrom)
    return (BOOL)MySyscall(pIniFile_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_Equals)
BOOL
IniFile_Equals(TIniFile AObj, TObject Obj) {
    GET_FUNC_ADDR(IniFile_Equals)
    return (BOOL)MySyscall(pIniFile_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_GetHashCode)
int32_t
IniFile_GetHashCode(TIniFile AObj) {
    GET_FUNC_ADDR(IniFile_GetHashCode)
    return (int32_t)MySyscall(pIniFile_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_ToString)
char*
IniFile_ToString(TIniFile AObj) {
    GET_FUNC_ADDR(IniFile_ToString)
    return (char*)MySyscall(pIniFile_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_GetFileName)
char*
IniFile_GetFileName(TIniFile AObj) {
    GET_FUNC_ADDR(IniFile_GetFileName)
    return (char*)MySyscall(pIniFile_GetFileName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IniFile_StaticClassType)
TClass
IniFile_StaticClassType() {
    GET_FUNC_ADDR(IniFile_StaticClassType)
    return (TClass)MySyscall(pIniFile_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TRegistry-------------------

DEFINE_FUNC_PTR(Registry_Create)
TRegistry
Registry_Create(uint32_t AAccess) {
    GET_FUNC_ADDR(Registry_Create)
    return (TRegistry)MySyscall(pRegistry_Create, 1, AAccess ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_Free)
void
Registry_Free(TRegistry AObj) {
    GET_FUNC_ADDR(Registry_Free)
    MySyscall(pRegistry_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_CloseKey)
void
Registry_CloseKey(TRegistry AObj) {
    GET_FUNC_ADDR(Registry_CloseKey)
    MySyscall(pRegistry_CloseKey, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_CreateKey)
BOOL
Registry_CreateKey(TRegistry AObj, CChar char* Key) {
    GET_FUNC_ADDR(Registry_CreateKey)
    return (BOOL)MySyscall(pRegistry_CreateKey, 2, AObj, Key ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_DeleteKey)
BOOL
Registry_DeleteKey(TRegistry AObj, CChar char* Key) {
    GET_FUNC_ADDR(Registry_DeleteKey)
    return (BOOL)MySyscall(pRegistry_DeleteKey, 2, AObj, Key ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_DeleteValue)
BOOL
Registry_DeleteValue(TRegistry AObj, CChar char* Name) {
    GET_FUNC_ADDR(Registry_DeleteValue)
    return (BOOL)MySyscall(pRegistry_DeleteValue, 2, AObj, Name ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_HasSubKeys)
BOOL
Registry_HasSubKeys(TRegistry AObj) {
    GET_FUNC_ADDR(Registry_HasSubKeys)
    return (BOOL)MySyscall(pRegistry_HasSubKeys, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_KeyExists)
BOOL
Registry_KeyExists(TRegistry AObj, CChar char* Key) {
    GET_FUNC_ADDR(Registry_KeyExists)
    return (BOOL)MySyscall(pRegistry_KeyExists, 2, AObj, Key ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_LoadKey)
BOOL
Registry_LoadKey(TRegistry AObj, CChar char* Key, CChar char* FileName) {
    GET_FUNC_ADDR(Registry_LoadKey)
    return (BOOL)MySyscall(pRegistry_LoadKey, 3, AObj, Key, FileName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_MoveKey)
void
Registry_MoveKey(TRegistry AObj, CChar char* OldName, CChar char* NewName, BOOL Delete) {
    GET_FUNC_ADDR(Registry_MoveKey)
    MySyscall(pRegistry_MoveKey, 4, AObj, OldName, NewName, Delete ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_OpenKey)
BOOL
Registry_OpenKey(TRegistry AObj, CChar char* Key, BOOL CanCreate) {
    GET_FUNC_ADDR(Registry_OpenKey)
    return (BOOL)MySyscall(pRegistry_OpenKey, 3, AObj, Key, CanCreate ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_OpenKeyReadOnly)
BOOL
Registry_OpenKeyReadOnly(TRegistry AObj, CChar char* Key) {
    GET_FUNC_ADDR(Registry_OpenKeyReadOnly)
    return (BOOL)MySyscall(pRegistry_OpenKeyReadOnly, 2, AObj, Key ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_ReadBool)
BOOL
Registry_ReadBool(TRegistry AObj, CChar char* Name) {
    GET_FUNC_ADDR(Registry_ReadBool)
    return (BOOL)MySyscall(pRegistry_ReadBool, 2, AObj, Name ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_ReadDate)
uint32_t
Registry_ReadDate(TRegistry AObj, CChar char* Name) {
    GET_FUNC_ADDR(Registry_ReadDate)
    return (uint32_t)MySyscall(pRegistry_ReadDate, 2, AObj, Name ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_ReadDateTime)
uint32_t
Registry_ReadDateTime(TRegistry AObj, CChar char* Name) {
    GET_FUNC_ADDR(Registry_ReadDateTime)
    return (uint32_t)MySyscall(pRegistry_ReadDateTime, 2, AObj, Name ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_ReadFloat)
double
Registry_ReadFloat(TRegistry AObj, CChar char* Name) {
    GET_FUNC_ADDR(Registry_ReadFloat)
    double result;
    MySyscall(pRegistry_ReadFloat, 3, AObj, Name, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Registry_ReadInteger)
int32_t
Registry_ReadInteger(TRegistry AObj, CChar char* Name) {
    GET_FUNC_ADDR(Registry_ReadInteger)
    return (int32_t)MySyscall(pRegistry_ReadInteger, 2, AObj, Name ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_ReadString)
char*
Registry_ReadString(TRegistry AObj, CChar char* Name) {
    GET_FUNC_ADDR(Registry_ReadString)
    return (char*)MySyscall(pRegistry_ReadString, 2, AObj, Name ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_ReadTime)
uint32_t
Registry_ReadTime(TRegistry AObj, CChar char* Name) {
    GET_FUNC_ADDR(Registry_ReadTime)
    return (uint32_t)MySyscall(pRegistry_ReadTime, 2, AObj, Name ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_RegistryConnect)
BOOL
Registry_RegistryConnect(TRegistry AObj, CChar char* UNCName) {
    GET_FUNC_ADDR(Registry_RegistryConnect)
    return (BOOL)MySyscall(pRegistry_RegistryConnect, 2, AObj, UNCName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_RenameValue)
void
Registry_RenameValue(TRegistry AObj, CChar char* OldName, CChar char* NewName) {
    GET_FUNC_ADDR(Registry_RenameValue)
    MySyscall(pRegistry_RenameValue, 3, AObj, OldName, NewName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_ReplaceKey)
BOOL
Registry_ReplaceKey(TRegistry AObj, CChar char* Key, CChar char* FileName, CChar char* BackUpFileName) {
    GET_FUNC_ADDR(Registry_ReplaceKey)
    return (BOOL)MySyscall(pRegistry_ReplaceKey, 4, AObj, Key, FileName, BackUpFileName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_RestoreKey)
BOOL
Registry_RestoreKey(TRegistry AObj, CChar char* Key, CChar char* FileName) {
    GET_FUNC_ADDR(Registry_RestoreKey)
    return (BOOL)MySyscall(pRegistry_RestoreKey, 3, AObj, Key, FileName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_SaveKey)
BOOL
Registry_SaveKey(TRegistry AObj, CChar char* Key, CChar char* FileName) {
    GET_FUNC_ADDR(Registry_SaveKey)
    return (BOOL)MySyscall(pRegistry_SaveKey, 3, AObj, Key, FileName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_UnLoadKey)
BOOL
Registry_UnLoadKey(TRegistry AObj, CChar char* Key) {
    GET_FUNC_ADDR(Registry_UnLoadKey)
    return (BOOL)MySyscall(pRegistry_UnLoadKey, 2, AObj, Key ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_ValueExists)
BOOL
Registry_ValueExists(TRegistry AObj, CChar char* Name) {
    GET_FUNC_ADDR(Registry_ValueExists)
    return (BOOL)MySyscall(pRegistry_ValueExists, 2, AObj, Name ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_WriteBool)
void
Registry_WriteBool(TRegistry AObj, CChar char* Name, BOOL Value) {
    GET_FUNC_ADDR(Registry_WriteBool)
    MySyscall(pRegistry_WriteBool, 3, AObj, Name, Value ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_WriteDate)
void
Registry_WriteDate(TRegistry AObj, CChar char* Name, uint32_t Value) {
    GET_FUNC_ADDR(Registry_WriteDate)
    MySyscall(pRegistry_WriteDate, 3, AObj, Name, Value ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_WriteDateTime)
void
Registry_WriteDateTime(TRegistry AObj, CChar char* Name, uint32_t Value) {
    GET_FUNC_ADDR(Registry_WriteDateTime)
    MySyscall(pRegistry_WriteDateTime, 3, AObj, Name, Value ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_WriteFloat)
void
Registry_WriteFloat(TRegistry AObj, CChar char* Name, double Value) {
    GET_FUNC_ADDR(Registry_WriteFloat)
    MySyscall(pRegistry_WriteFloat, 3, AObj, Name, &Value ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_WriteInteger)
void
Registry_WriteInteger(TRegistry AObj, CChar char* Name, int32_t Value) {
    GET_FUNC_ADDR(Registry_WriteInteger)
    MySyscall(pRegistry_WriteInteger, 3, AObj, Name, Value ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_WriteString)
void
Registry_WriteString(TRegistry AObj, CChar char* Name, CChar char* Value) {
    GET_FUNC_ADDR(Registry_WriteString)
    MySyscall(pRegistry_WriteString, 3, AObj, Name, Value ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_WriteExpandString)
void
Registry_WriteExpandString(TRegistry AObj, CChar char* Name, CChar char* Value) {
    GET_FUNC_ADDR(Registry_WriteExpandString)
    MySyscall(pRegistry_WriteExpandString, 3, AObj, Name, Value ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_WriteTime)
void
Registry_WriteTime(TRegistry AObj, CChar char* Name, uint32_t Value) {
    GET_FUNC_ADDR(Registry_WriteTime)
    MySyscall(pRegistry_WriteTime, 3, AObj, Name, Value ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_ClassType)
TClass
Registry_ClassType(TRegistry AObj) {
    GET_FUNC_ADDR(Registry_ClassType)
    return (TClass)MySyscall(pRegistry_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_ClassName)
char*
Registry_ClassName(TRegistry AObj) {
    GET_FUNC_ADDR(Registry_ClassName)
    return (char*)MySyscall(pRegistry_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_InstanceSize)
int32_t
Registry_InstanceSize(TRegistry AObj) {
    GET_FUNC_ADDR(Registry_InstanceSize)
    return (int32_t)MySyscall(pRegistry_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_InheritsFrom)
BOOL
Registry_InheritsFrom(TRegistry AObj, TClass AClass) {
    GET_FUNC_ADDR(Registry_InheritsFrom)
    return (BOOL)MySyscall(pRegistry_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_Equals)
BOOL
Registry_Equals(TRegistry AObj, TObject Obj) {
    GET_FUNC_ADDR(Registry_Equals)
    return (BOOL)MySyscall(pRegistry_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_GetHashCode)
int32_t
Registry_GetHashCode(TRegistry AObj) {
    GET_FUNC_ADDR(Registry_GetHashCode)
    return (int32_t)MySyscall(pRegistry_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_ToString)
char*
Registry_ToString(TRegistry AObj) {
    GET_FUNC_ADDR(Registry_ToString)
    return (char*)MySyscall(pRegistry_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_GetCurrentKey)
HKEY
Registry_GetCurrentKey(TRegistry AObj) {
    GET_FUNC_ADDR(Registry_GetCurrentKey)
    return (HKEY)MySyscall(pRegistry_GetCurrentKey, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_GetCurrentPath)
char*
Registry_GetCurrentPath(TRegistry AObj) {
    GET_FUNC_ADDR(Registry_GetCurrentPath)
    return (char*)MySyscall(pRegistry_GetCurrentPath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_GetLazyWrite)
BOOL
Registry_GetLazyWrite(TRegistry AObj) {
    GET_FUNC_ADDR(Registry_GetLazyWrite)
    return (BOOL)MySyscall(pRegistry_GetLazyWrite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_SetLazyWrite)
void
Registry_SetLazyWrite(TRegistry AObj, BOOL AValue) {
    GET_FUNC_ADDR(Registry_SetLazyWrite)
    MySyscall(pRegistry_SetLazyWrite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_GetLastError)
int32_t
Registry_GetLastError(TRegistry AObj) {
    GET_FUNC_ADDR(Registry_GetLastError)
    return (int32_t)MySyscall(pRegistry_GetLastError, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_GetLastErrorMsg)
char*
Registry_GetLastErrorMsg(TRegistry AObj) {
    GET_FUNC_ADDR(Registry_GetLastErrorMsg)
    return (char*)MySyscall(pRegistry_GetLastErrorMsg, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_GetRootKey)
HKEY
Registry_GetRootKey(TRegistry AObj) {
    GET_FUNC_ADDR(Registry_GetRootKey)
    return (HKEY)MySyscall(pRegistry_GetRootKey, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_SetRootKey)
void
Registry_SetRootKey(TRegistry AObj, HKEY AValue) {
    GET_FUNC_ADDR(Registry_SetRootKey)
    MySyscall(pRegistry_SetRootKey, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_GetAccess)
uint32_t
Registry_GetAccess(TRegistry AObj) {
    GET_FUNC_ADDR(Registry_GetAccess)
    return (uint32_t)MySyscall(pRegistry_GetAccess, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_SetAccess)
void
Registry_SetAccess(TRegistry AObj, uint32_t AValue) {
    GET_FUNC_ADDR(Registry_SetAccess)
    MySyscall(pRegistry_SetAccess, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Registry_StaticClassType)
TClass
Registry_StaticClassType() {
    GET_FUNC_ADDR(Registry_StaticClassType)
    return (TClass)MySyscall(pRegistry_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TClipboard-------------------

DEFINE_FUNC_PTR(Clipboard_Create)
TClipboard
Clipboard_Create() {
    GET_FUNC_ADDR(Clipboard_Create)
    return (TClipboard)MySyscall(pClipboard_Create, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_Free)
void
Clipboard_Free(TClipboard AObj) {
    GET_FUNC_ADDR(Clipboard_Free)
    MySyscall(pClipboard_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_FindPictureFormatID)
TClipboardFormat
Clipboard_FindPictureFormatID(TClipboard AObj) {
    GET_FUNC_ADDR(Clipboard_FindPictureFormatID)
    return (TClipboardFormat)MySyscall(pClipboard_FindPictureFormatID, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_FindFormatID)
TClipboardFormat
Clipboard_FindFormatID(TClipboard AObj, CChar char* FormatName) {
    GET_FUNC_ADDR(Clipboard_FindFormatID)
    return (TClipboardFormat)MySyscall(pClipboard_FindFormatID, 2, AObj, FormatName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_SupportedFormats)
void
Clipboard_SupportedFormats(TClipboard AObj, TStrings List) {
    GET_FUNC_ADDR(Clipboard_SupportedFormats)
    MySyscall(pClipboard_SupportedFormats, 2, AObj, List ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_HasFormatName)
BOOL
Clipboard_HasFormatName(TClipboard AObj, CChar char* FormatName) {
    GET_FUNC_ADDR(Clipboard_HasFormatName)
    return (BOOL)MySyscall(pClipboard_HasFormatName, 2, AObj, FormatName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_HasPictureFormat)
BOOL
Clipboard_HasPictureFormat(TClipboard AObj) {
    GET_FUNC_ADDR(Clipboard_HasPictureFormat)
    return (BOOL)MySyscall(pClipboard_HasPictureFormat, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_SetAsHtml)
void
Clipboard_SetAsHtml(TClipboard AObj, CChar char* Html, CChar char* PlainText) {
    GET_FUNC_ADDR(Clipboard_SetAsHtml)
    MySyscall(pClipboard_SetAsHtml, 3, AObj, Html, PlainText ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_GetFormat)
BOOL
Clipboard_GetFormat(TClipboard AObj, TClipboardFormat FormatID, TStream Stream) {
    GET_FUNC_ADDR(Clipboard_GetFormat)
    return (BOOL)MySyscall(pClipboard_GetFormat, 3, AObj, FormatID, Stream ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_Assign)
void
Clipboard_Assign(TClipboard AObj, TObject Source) {
    GET_FUNC_ADDR(Clipboard_Assign)
    MySyscall(pClipboard_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_Clear)
void
Clipboard_Clear(TClipboard AObj) {
    GET_FUNC_ADDR(Clipboard_Clear)
    MySyscall(pClipboard_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_Close)
void
Clipboard_Close(TClipboard AObj) {
    GET_FUNC_ADDR(Clipboard_Close)
    MySyscall(pClipboard_Close, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_Open)
void
Clipboard_Open(TClipboard AObj) {
    GET_FUNC_ADDR(Clipboard_Open)
    MySyscall(pClipboard_Open, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_SetTextBuf)
void
Clipboard_SetTextBuf(TClipboard AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(Clipboard_SetTextBuf)
    MySyscall(pClipboard_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_GetNamePath)
char*
Clipboard_GetNamePath(TClipboard AObj) {
    GET_FUNC_ADDR(Clipboard_GetNamePath)
    return (char*)MySyscall(pClipboard_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_ClassType)
TClass
Clipboard_ClassType(TClipboard AObj) {
    GET_FUNC_ADDR(Clipboard_ClassType)
    return (TClass)MySyscall(pClipboard_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_ClassName)
char*
Clipboard_ClassName(TClipboard AObj) {
    GET_FUNC_ADDR(Clipboard_ClassName)
    return (char*)MySyscall(pClipboard_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_InstanceSize)
int32_t
Clipboard_InstanceSize(TClipboard AObj) {
    GET_FUNC_ADDR(Clipboard_InstanceSize)
    return (int32_t)MySyscall(pClipboard_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_InheritsFrom)
BOOL
Clipboard_InheritsFrom(TClipboard AObj, TClass AClass) {
    GET_FUNC_ADDR(Clipboard_InheritsFrom)
    return (BOOL)MySyscall(pClipboard_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_Equals)
BOOL
Clipboard_Equals(TClipboard AObj, TObject Obj) {
    GET_FUNC_ADDR(Clipboard_Equals)
    return (BOOL)MySyscall(pClipboard_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_GetHashCode)
int32_t
Clipboard_GetHashCode(TClipboard AObj) {
    GET_FUNC_ADDR(Clipboard_GetHashCode)
    return (int32_t)MySyscall(pClipboard_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_ToString)
char*
Clipboard_ToString(TClipboard AObj) {
    GET_FUNC_ADDR(Clipboard_ToString)
    return (char*)MySyscall(pClipboard_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_GetFormatCount)
int32_t
Clipboard_GetFormatCount(TClipboard AObj) {
    GET_FUNC_ADDR(Clipboard_GetFormatCount)
    return (int32_t)MySyscall(pClipboard_GetFormatCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_GetFormats)
TClipboardFormat
Clipboard_GetFormats(TClipboard AObj, int32_t Index) {
    GET_FUNC_ADDR(Clipboard_GetFormats)
    return (TClipboardFormat)MySyscall(pClipboard_GetFormats, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_StaticClassType)
TClass
Clipboard_StaticClassType() {
    GET_FUNC_ADDR(Clipboard_StaticClassType)
    return (TClass)MySyscall(pClipboard_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_HasFormat)
BOOL
Clipboard_HasFormat(TClipboard AObj, TClipboardFormat AFormatID) {
    GET_FUNC_ADDR(Clipboard_HasFormat)
    return (BOOL)MySyscall(pClipboard_HasFormat, 2, AObj, AFormatID ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_GetTextBuf)
int32_t
Clipboard_GetTextBuf(TClipboard AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(Clipboard_GetTextBuf)
    return (int32_t)MySyscall(pClipboard_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_GetAsText)
char*
Clipboard_GetAsText(TClipboard AObj) {
    GET_FUNC_ADDR(Clipboard_GetAsText)
    return (char*)MySyscall(pClipboard_GetAsText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_SetAsText)
void
Clipboard_SetAsText(TClipboard AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Clipboard_SetAsText)
    MySyscall(pClipboard_SetAsText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Clipboard_GetAsHtml)
char*
Clipboard_GetAsHtml(TClipboard AObj, BOOL ExtractFragmentOnly) {
    GET_FUNC_ADDR(Clipboard_GetAsHtml)
    return (char*)MySyscall(pClipboard_GetAsHtml, 2, AObj, ExtractFragmentOnly ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TMonitor-------------------

DEFINE_FUNC_PTR(Monitor_Create)
TMonitor
Monitor_Create() {
    GET_FUNC_ADDR(Monitor_Create)
    return (TMonitor)MySyscall(pMonitor_Create, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Monitor_Free)
void
Monitor_Free(TMonitor AObj) {
    GET_FUNC_ADDR(Monitor_Free)
    MySyscall(pMonitor_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Monitor_ClassType)
TClass
Monitor_ClassType(TMonitor AObj) {
    GET_FUNC_ADDR(Monitor_ClassType)
    return (TClass)MySyscall(pMonitor_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Monitor_ClassName)
char*
Monitor_ClassName(TMonitor AObj) {
    GET_FUNC_ADDR(Monitor_ClassName)
    return (char*)MySyscall(pMonitor_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Monitor_InstanceSize)
int32_t
Monitor_InstanceSize(TMonitor AObj) {
    GET_FUNC_ADDR(Monitor_InstanceSize)
    return (int32_t)MySyscall(pMonitor_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Monitor_InheritsFrom)
BOOL
Monitor_InheritsFrom(TMonitor AObj, TClass AClass) {
    GET_FUNC_ADDR(Monitor_InheritsFrom)
    return (BOOL)MySyscall(pMonitor_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Monitor_Equals)
BOOL
Monitor_Equals(TMonitor AObj, TObject Obj) {
    GET_FUNC_ADDR(Monitor_Equals)
    return (BOOL)MySyscall(pMonitor_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Monitor_GetHashCode)
int32_t
Monitor_GetHashCode(TMonitor AObj) {
    GET_FUNC_ADDR(Monitor_GetHashCode)
    return (int32_t)MySyscall(pMonitor_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Monitor_ToString)
char*
Monitor_ToString(TMonitor AObj) {
    GET_FUNC_ADDR(Monitor_ToString)
    return (char*)MySyscall(pMonitor_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Monitor_GetHandle)
HMONITOR
Monitor_GetHandle(TMonitor AObj) {
    GET_FUNC_ADDR(Monitor_GetHandle)
    return (HMONITOR)MySyscall(pMonitor_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Monitor_GetMonitorNum)
int32_t
Monitor_GetMonitorNum(TMonitor AObj) {
    GET_FUNC_ADDR(Monitor_GetMonitorNum)
    return (int32_t)MySyscall(pMonitor_GetMonitorNum, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Monitor_GetLeft)
int32_t
Monitor_GetLeft(TMonitor AObj) {
    GET_FUNC_ADDR(Monitor_GetLeft)
    return (int32_t)MySyscall(pMonitor_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Monitor_GetHeight)
int32_t
Monitor_GetHeight(TMonitor AObj) {
    GET_FUNC_ADDR(Monitor_GetHeight)
    return (int32_t)MySyscall(pMonitor_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Monitor_GetTop)
int32_t
Monitor_GetTop(TMonitor AObj) {
    GET_FUNC_ADDR(Monitor_GetTop)
    return (int32_t)MySyscall(pMonitor_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Monitor_GetWidth)
int32_t
Monitor_GetWidth(TMonitor AObj) {
    GET_FUNC_ADDR(Monitor_GetWidth)
    return (int32_t)MySyscall(pMonitor_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Monitor_GetBoundsRect)
TRect
Monitor_GetBoundsRect(TMonitor AObj) {
    GET_FUNC_ADDR(Monitor_GetBoundsRect)
    TRect result;
    MySyscall(pMonitor_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Monitor_GetWorkareaRect)
TRect
Monitor_GetWorkareaRect(TMonitor AObj) {
    GET_FUNC_ADDR(Monitor_GetWorkareaRect)
    TRect result;
    MySyscall(pMonitor_GetWorkareaRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Monitor_GetPrimary)
BOOL
Monitor_GetPrimary(TMonitor AObj) {
    GET_FUNC_ADDR(Monitor_GetPrimary)
    return (BOOL)MySyscall(pMonitor_GetPrimary, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Monitor_GetPixelsPerInch)
int32_t
Monitor_GetPixelsPerInch(TMonitor AObj) {
    GET_FUNC_ADDR(Monitor_GetPixelsPerInch)
    return (int32_t)MySyscall(pMonitor_GetPixelsPerInch, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Monitor_StaticClassType)
TClass
Monitor_StaticClassType() {
    GET_FUNC_ADDR(Monitor_StaticClassType)
    return (TClass)MySyscall(pMonitor_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TPaintBox-------------------

DEFINE_FUNC_PTR(PaintBox_Create)
TPaintBox
PaintBox_Create(TComponent AOwner) {
    GET_FUNC_ADDR(PaintBox_Create)
    return (TPaintBox)MySyscall(pPaintBox_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_Free)
void
PaintBox_Free(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_Free)
    MySyscall(pPaintBox_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_BringToFront)
void
PaintBox_BringToFront(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_BringToFront)
    MySyscall(pPaintBox_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_ClientToScreen)
TPoint
PaintBox_ClientToScreen(TPaintBox AObj, TPoint Point) {
    GET_FUNC_ADDR(PaintBox_ClientToScreen)
    TPoint result;
    MySyscall(pPaintBox_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(PaintBox_ClientToParent)
TPoint
PaintBox_ClientToParent(TPaintBox AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(PaintBox_ClientToParent)
    TPoint result;
    MySyscall(pPaintBox_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(PaintBox_Dragging)
BOOL
PaintBox_Dragging(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_Dragging)
    return (BOOL)MySyscall(pPaintBox_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_HasParent)
BOOL
PaintBox_HasParent(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_HasParent)
    return (BOOL)MySyscall(pPaintBox_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_Hide)
void
PaintBox_Hide(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_Hide)
    MySyscall(pPaintBox_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_Invalidate)
void
PaintBox_Invalidate(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_Invalidate)
    MySyscall(pPaintBox_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_Perform)
intptr_t
PaintBox_Perform(TPaintBox AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(PaintBox_Perform)
    return (intptr_t)MySyscall(pPaintBox_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_Refresh)
void
PaintBox_Refresh(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_Refresh)
    MySyscall(pPaintBox_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_Repaint)
void
PaintBox_Repaint(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_Repaint)
    MySyscall(pPaintBox_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_ScreenToClient)
TPoint
PaintBox_ScreenToClient(TPaintBox AObj, TPoint Point) {
    GET_FUNC_ADDR(PaintBox_ScreenToClient)
    TPoint result;
    MySyscall(pPaintBox_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(PaintBox_ParentToClient)
TPoint
PaintBox_ParentToClient(TPaintBox AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(PaintBox_ParentToClient)
    TPoint result;
    MySyscall(pPaintBox_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(PaintBox_SendToBack)
void
PaintBox_SendToBack(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_SendToBack)
    MySyscall(pPaintBox_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetBounds)
void
PaintBox_SetBounds(TPaintBox AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(PaintBox_SetBounds)
    MySyscall(pPaintBox_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_Show)
void
PaintBox_Show(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_Show)
    MySyscall(pPaintBox_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_Update)
void
PaintBox_Update(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_Update)
    MySyscall(pPaintBox_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetTextBuf)
int32_t
PaintBox_GetTextBuf(TPaintBox AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(PaintBox_GetTextBuf)
    return (int32_t)MySyscall(pPaintBox_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetTextLen)
int32_t
PaintBox_GetTextLen(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetTextLen)
    return (int32_t)MySyscall(pPaintBox_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetTextBuf)
void
PaintBox_SetTextBuf(TPaintBox AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(PaintBox_SetTextBuf)
    MySyscall(pPaintBox_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_FindComponent)
TComponent
PaintBox_FindComponent(TPaintBox AObj, CChar char* AName) {
    GET_FUNC_ADDR(PaintBox_FindComponent)
    return (TComponent)MySyscall(pPaintBox_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetNamePath)
char*
PaintBox_GetNamePath(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetNamePath)
    return (char*)MySyscall(pPaintBox_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_Assign)
void
PaintBox_Assign(TPaintBox AObj, TObject Source) {
    GET_FUNC_ADDR(PaintBox_Assign)
    MySyscall(pPaintBox_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_ClassType)
TClass
PaintBox_ClassType(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_ClassType)
    return (TClass)MySyscall(pPaintBox_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_ClassName)
char*
PaintBox_ClassName(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_ClassName)
    return (char*)MySyscall(pPaintBox_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_InstanceSize)
int32_t
PaintBox_InstanceSize(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_InstanceSize)
    return (int32_t)MySyscall(pPaintBox_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_InheritsFrom)
BOOL
PaintBox_InheritsFrom(TPaintBox AObj, TClass AClass) {
    GET_FUNC_ADDR(PaintBox_InheritsFrom)
    return (BOOL)MySyscall(pPaintBox_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_Equals)
BOOL
PaintBox_Equals(TPaintBox AObj, TObject Obj) {
    GET_FUNC_ADDR(PaintBox_Equals)
    return (BOOL)MySyscall(pPaintBox_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetHashCode)
int32_t
PaintBox_GetHashCode(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetHashCode)
    return (int32_t)MySyscall(pPaintBox_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_ToString)
char*
PaintBox_ToString(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_ToString)
    return (char*)MySyscall(pPaintBox_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_AnchorToNeighbour)
void
PaintBox_AnchorToNeighbour(TPaintBox AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(PaintBox_AnchorToNeighbour)
    MySyscall(pPaintBox_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_AnchorParallel)
void
PaintBox_AnchorParallel(TPaintBox AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(PaintBox_AnchorParallel)
    MySyscall(pPaintBox_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_AnchorHorizontalCenterTo)
void
PaintBox_AnchorHorizontalCenterTo(TPaintBox AObj, TControl ASibling) {
    GET_FUNC_ADDR(PaintBox_AnchorHorizontalCenterTo)
    MySyscall(pPaintBox_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_AnchorVerticalCenterTo)
void
PaintBox_AnchorVerticalCenterTo(TPaintBox AObj, TControl ASibling) {
    GET_FUNC_ADDR(PaintBox_AnchorVerticalCenterTo)
    MySyscall(pPaintBox_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_AnchorSame)
void
PaintBox_AnchorSame(TPaintBox AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(PaintBox_AnchorSame)
    MySyscall(pPaintBox_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_AnchorAsAlign)
void
PaintBox_AnchorAsAlign(TPaintBox AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(PaintBox_AnchorAsAlign)
    MySyscall(pPaintBox_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_AnchorClient)
void
PaintBox_AnchorClient(TPaintBox AObj, int32_t ASpace) {
    GET_FUNC_ADDR(PaintBox_AnchorClient)
    MySyscall(pPaintBox_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_ScaleDesignToForm)
int32_t
PaintBox_ScaleDesignToForm(TPaintBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(PaintBox_ScaleDesignToForm)
    return (int32_t)MySyscall(pPaintBox_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_ScaleFormToDesign)
int32_t
PaintBox_ScaleFormToDesign(TPaintBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(PaintBox_ScaleFormToDesign)
    return (int32_t)MySyscall(pPaintBox_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_Scale96ToForm)
int32_t
PaintBox_Scale96ToForm(TPaintBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(PaintBox_Scale96ToForm)
    return (int32_t)MySyscall(pPaintBox_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_ScaleFormTo96)
int32_t
PaintBox_ScaleFormTo96(TPaintBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(PaintBox_ScaleFormTo96)
    return (int32_t)MySyscall(pPaintBox_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_Scale96ToFont)
int32_t
PaintBox_Scale96ToFont(TPaintBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(PaintBox_Scale96ToFont)
    return (int32_t)MySyscall(pPaintBox_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_ScaleFontTo96)
int32_t
PaintBox_ScaleFontTo96(TPaintBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(PaintBox_ScaleFontTo96)
    return (int32_t)MySyscall(pPaintBox_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_ScaleScreenToFont)
int32_t
PaintBox_ScaleScreenToFont(TPaintBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(PaintBox_ScaleScreenToFont)
    return (int32_t)MySyscall(pPaintBox_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_ScaleFontToScreen)
int32_t
PaintBox_ScaleFontToScreen(TPaintBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(PaintBox_ScaleFontToScreen)
    return (int32_t)MySyscall(pPaintBox_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_Scale96ToScreen)
int32_t
PaintBox_Scale96ToScreen(TPaintBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(PaintBox_Scale96ToScreen)
    return (int32_t)MySyscall(pPaintBox_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_ScaleScreenTo96)
int32_t
PaintBox_ScaleScreenTo96(TPaintBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(PaintBox_ScaleScreenTo96)
    return (int32_t)MySyscall(pPaintBox_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_AutoAdjustLayout)
void
PaintBox_AutoAdjustLayout(TPaintBox AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(PaintBox_AutoAdjustLayout)
    MySyscall(pPaintBox_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_FixDesignFontsPPI)
void
PaintBox_FixDesignFontsPPI(TPaintBox AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(PaintBox_FixDesignFontsPPI)
    MySyscall(pPaintBox_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_ScaleFontsPPI)
void
PaintBox_ScaleFontsPPI(TPaintBox AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(PaintBox_ScaleFontsPPI)
    MySyscall(pPaintBox_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetCanvas)
TCanvas
PaintBox_GetCanvas(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetCanvas)
    return (TCanvas)MySyscall(pPaintBox_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetAlign)
TAlign
PaintBox_GetAlign(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetAlign)
    return (TAlign)MySyscall(pPaintBox_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetAlign)
void
PaintBox_SetAlign(TPaintBox AObj, TAlign AValue) {
    GET_FUNC_ADDR(PaintBox_SetAlign)
    MySyscall(pPaintBox_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetAnchors)
TAnchors
PaintBox_GetAnchors(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetAnchors)
    return (TAnchors)MySyscall(pPaintBox_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetAnchors)
void
PaintBox_SetAnchors(TPaintBox AObj, TAnchors AValue) {
    GET_FUNC_ADDR(PaintBox_SetAnchors)
    MySyscall(pPaintBox_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetColor)
TColor
PaintBox_GetColor(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetColor)
    return (TColor)MySyscall(pPaintBox_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetColor)
void
PaintBox_SetColor(TPaintBox AObj, TColor AValue) {
    GET_FUNC_ADDR(PaintBox_SetColor)
    MySyscall(pPaintBox_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetConstraints)
TSizeConstraints
PaintBox_GetConstraints(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetConstraints)
    return (TSizeConstraints)MySyscall(pPaintBox_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetConstraints)
void
PaintBox_SetConstraints(TPaintBox AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(PaintBox_SetConstraints)
    MySyscall(pPaintBox_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetDragCursor)
TCursor
PaintBox_GetDragCursor(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetDragCursor)
    return (TCursor)MySyscall(pPaintBox_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetDragCursor)
void
PaintBox_SetDragCursor(TPaintBox AObj, TCursor AValue) {
    GET_FUNC_ADDR(PaintBox_SetDragCursor)
    MySyscall(pPaintBox_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetDragMode)
TDragMode
PaintBox_GetDragMode(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetDragMode)
    return (TDragMode)MySyscall(pPaintBox_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetDragMode)
void
PaintBox_SetDragMode(TPaintBox AObj, TDragMode AValue) {
    GET_FUNC_ADDR(PaintBox_SetDragMode)
    MySyscall(pPaintBox_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetEnabled)
BOOL
PaintBox_GetEnabled(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetEnabled)
    return (BOOL)MySyscall(pPaintBox_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetEnabled)
void
PaintBox_SetEnabled(TPaintBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(PaintBox_SetEnabled)
    MySyscall(pPaintBox_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetFont)
TFont
PaintBox_GetFont(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetFont)
    return (TFont)MySyscall(pPaintBox_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetFont)
void
PaintBox_SetFont(TPaintBox AObj, TFont AValue) {
    GET_FUNC_ADDR(PaintBox_SetFont)
    MySyscall(pPaintBox_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetParentColor)
BOOL
PaintBox_GetParentColor(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetParentColor)
    return (BOOL)MySyscall(pPaintBox_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetParentColor)
void
PaintBox_SetParentColor(TPaintBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(PaintBox_SetParentColor)
    MySyscall(pPaintBox_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetParentFont)
BOOL
PaintBox_GetParentFont(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetParentFont)
    return (BOOL)MySyscall(pPaintBox_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetParentFont)
void
PaintBox_SetParentFont(TPaintBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(PaintBox_SetParentFont)
    MySyscall(pPaintBox_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetParentShowHint)
BOOL
PaintBox_GetParentShowHint(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetParentShowHint)
    return (BOOL)MySyscall(pPaintBox_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetParentShowHint)
void
PaintBox_SetParentShowHint(TPaintBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(PaintBox_SetParentShowHint)
    MySyscall(pPaintBox_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetPopupMenu)
TPopupMenu
PaintBox_GetPopupMenu(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetPopupMenu)
    return (TPopupMenu)MySyscall(pPaintBox_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetPopupMenu)
void
PaintBox_SetPopupMenu(TPaintBox AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(PaintBox_SetPopupMenu)
    MySyscall(pPaintBox_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetShowHint)
BOOL
PaintBox_GetShowHint(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetShowHint)
    return (BOOL)MySyscall(pPaintBox_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetShowHint)
void
PaintBox_SetShowHint(TPaintBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(PaintBox_SetShowHint)
    MySyscall(pPaintBox_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetVisible)
BOOL
PaintBox_GetVisible(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetVisible)
    return (BOOL)MySyscall(pPaintBox_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetVisible)
void
PaintBox_SetVisible(TPaintBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(PaintBox_SetVisible)
    MySyscall(pPaintBox_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetOnClick)
void
PaintBox_SetOnClick(TPaintBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(PaintBox_SetOnClick)
    MySyscall(pPaintBox_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetOnDblClick)
void
PaintBox_SetOnDblClick(TPaintBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(PaintBox_SetOnDblClick)
    MySyscall(pPaintBox_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetOnDragDrop)
void
PaintBox_SetOnDragDrop(TPaintBox AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(PaintBox_SetOnDragDrop)
    MySyscall(pPaintBox_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetOnDragOver)
void
PaintBox_SetOnDragOver(TPaintBox AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(PaintBox_SetOnDragOver)
    MySyscall(pPaintBox_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetOnEndDrag)
void
PaintBox_SetOnEndDrag(TPaintBox AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(PaintBox_SetOnEndDrag)
    MySyscall(pPaintBox_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetOnMouseDown)
void
PaintBox_SetOnMouseDown(TPaintBox AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(PaintBox_SetOnMouseDown)
    MySyscall(pPaintBox_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetOnMouseEnter)
void
PaintBox_SetOnMouseEnter(TPaintBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(PaintBox_SetOnMouseEnter)
    MySyscall(pPaintBox_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetOnMouseLeave)
void
PaintBox_SetOnMouseLeave(TPaintBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(PaintBox_SetOnMouseLeave)
    MySyscall(pPaintBox_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetOnMouseMove)
void
PaintBox_SetOnMouseMove(TPaintBox AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(PaintBox_SetOnMouseMove)
    MySyscall(pPaintBox_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetOnMouseUp)
void
PaintBox_SetOnMouseUp(TPaintBox AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(PaintBox_SetOnMouseUp)
    MySyscall(pPaintBox_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetOnPaint)
void
PaintBox_SetOnPaint(TPaintBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(PaintBox_SetOnPaint)
    MySyscall(pPaintBox_SetOnPaint, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetAction)
TAction
PaintBox_GetAction(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetAction)
    return (TAction)MySyscall(pPaintBox_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetAction)
void
PaintBox_SetAction(TPaintBox AObj, TAction AValue) {
    GET_FUNC_ADDR(PaintBox_SetAction)
    MySyscall(pPaintBox_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetBiDiMode)
TBiDiMode
PaintBox_GetBiDiMode(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetBiDiMode)
    return (TBiDiMode)MySyscall(pPaintBox_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetBiDiMode)
void
PaintBox_SetBiDiMode(TPaintBox AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(PaintBox_SetBiDiMode)
    MySyscall(pPaintBox_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetBoundsRect)
TRect
PaintBox_GetBoundsRect(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetBoundsRect)
    TRect result;
    MySyscall(pPaintBox_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(PaintBox_SetBoundsRect)
void
PaintBox_SetBoundsRect(TPaintBox AObj, TRect AValue) {
    GET_FUNC_ADDR(PaintBox_SetBoundsRect)
    MySyscall(pPaintBox_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetClientHeight)
int32_t
PaintBox_GetClientHeight(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetClientHeight)
    return (int32_t)MySyscall(pPaintBox_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetClientHeight)
void
PaintBox_SetClientHeight(TPaintBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(PaintBox_SetClientHeight)
    MySyscall(pPaintBox_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetClientOrigin)
TPoint
PaintBox_GetClientOrigin(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetClientOrigin)
    TPoint result;
    MySyscall(pPaintBox_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(PaintBox_GetClientRect)
TRect
PaintBox_GetClientRect(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetClientRect)
    TRect result;
    MySyscall(pPaintBox_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(PaintBox_GetClientWidth)
int32_t
PaintBox_GetClientWidth(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetClientWidth)
    return (int32_t)MySyscall(pPaintBox_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetClientWidth)
void
PaintBox_SetClientWidth(TPaintBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(PaintBox_SetClientWidth)
    MySyscall(pPaintBox_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetControlState)
TControlState
PaintBox_GetControlState(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetControlState)
    return (TControlState)MySyscall(pPaintBox_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetControlState)
void
PaintBox_SetControlState(TPaintBox AObj, TControlState AValue) {
    GET_FUNC_ADDR(PaintBox_SetControlState)
    MySyscall(pPaintBox_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetControlStyle)
TControlStyle
PaintBox_GetControlStyle(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetControlStyle)
    return (TControlStyle)MySyscall(pPaintBox_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetControlStyle)
void
PaintBox_SetControlStyle(TPaintBox AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(PaintBox_SetControlStyle)
    MySyscall(pPaintBox_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetFloating)
BOOL
PaintBox_GetFloating(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetFloating)
    return (BOOL)MySyscall(pPaintBox_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetParent)
TWinControl
PaintBox_GetParent(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetParent)
    return (TWinControl)MySyscall(pPaintBox_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetParent)
void
PaintBox_SetParent(TPaintBox AObj, TWinControl AValue) {
    GET_FUNC_ADDR(PaintBox_SetParent)
    MySyscall(pPaintBox_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetLeft)
int32_t
PaintBox_GetLeft(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetLeft)
    return (int32_t)MySyscall(pPaintBox_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetLeft)
void
PaintBox_SetLeft(TPaintBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(PaintBox_SetLeft)
    MySyscall(pPaintBox_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetTop)
int32_t
PaintBox_GetTop(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetTop)
    return (int32_t)MySyscall(pPaintBox_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetTop)
void
PaintBox_SetTop(TPaintBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(PaintBox_SetTop)
    MySyscall(pPaintBox_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetWidth)
int32_t
PaintBox_GetWidth(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetWidth)
    return (int32_t)MySyscall(pPaintBox_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetWidth)
void
PaintBox_SetWidth(TPaintBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(PaintBox_SetWidth)
    MySyscall(pPaintBox_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetHeight)
int32_t
PaintBox_GetHeight(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetHeight)
    return (int32_t)MySyscall(pPaintBox_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetHeight)
void
PaintBox_SetHeight(TPaintBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(PaintBox_SetHeight)
    MySyscall(pPaintBox_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetCursor)
TCursor
PaintBox_GetCursor(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetCursor)
    return (TCursor)MySyscall(pPaintBox_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetCursor)
void
PaintBox_SetCursor(TPaintBox AObj, TCursor AValue) {
    GET_FUNC_ADDR(PaintBox_SetCursor)
    MySyscall(pPaintBox_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetHint)
char*
PaintBox_GetHint(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetHint)
    return (char*)MySyscall(pPaintBox_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetHint)
void
PaintBox_SetHint(TPaintBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(PaintBox_SetHint)
    MySyscall(pPaintBox_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetComponentCount)
int32_t
PaintBox_GetComponentCount(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetComponentCount)
    return (int32_t)MySyscall(pPaintBox_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetComponentIndex)
int32_t
PaintBox_GetComponentIndex(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetComponentIndex)
    return (int32_t)MySyscall(pPaintBox_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetComponentIndex)
void
PaintBox_SetComponentIndex(TPaintBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(PaintBox_SetComponentIndex)
    MySyscall(pPaintBox_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetOwner)
TComponent
PaintBox_GetOwner(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetOwner)
    return (TComponent)MySyscall(pPaintBox_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetName)
char*
PaintBox_GetName(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetName)
    return (char*)MySyscall(pPaintBox_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetName)
void
PaintBox_SetName(TPaintBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(PaintBox_SetName)
    MySyscall(pPaintBox_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetTag)
intptr_t
PaintBox_GetTag(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetTag)
    return (intptr_t)MySyscall(pPaintBox_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetTag)
void
PaintBox_SetTag(TPaintBox AObj, intptr_t AValue) {
    GET_FUNC_ADDR(PaintBox_SetTag)
    MySyscall(pPaintBox_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetAnchorSideLeft)
TAnchorSide
PaintBox_GetAnchorSideLeft(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pPaintBox_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetAnchorSideLeft)
void
PaintBox_SetAnchorSideLeft(TPaintBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(PaintBox_SetAnchorSideLeft)
    MySyscall(pPaintBox_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetAnchorSideTop)
TAnchorSide
PaintBox_GetAnchorSideTop(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pPaintBox_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetAnchorSideTop)
void
PaintBox_SetAnchorSideTop(TPaintBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(PaintBox_SetAnchorSideTop)
    MySyscall(pPaintBox_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetAnchorSideRight)
TAnchorSide
PaintBox_GetAnchorSideRight(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pPaintBox_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetAnchorSideRight)
void
PaintBox_SetAnchorSideRight(TPaintBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(PaintBox_SetAnchorSideRight)
    MySyscall(pPaintBox_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetAnchorSideBottom)
TAnchorSide
PaintBox_GetAnchorSideBottom(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pPaintBox_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetAnchorSideBottom)
void
PaintBox_SetAnchorSideBottom(TPaintBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(PaintBox_SetAnchorSideBottom)
    MySyscall(pPaintBox_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetBorderSpacing)
TControlBorderSpacing
PaintBox_GetBorderSpacing(TPaintBox AObj) {
    GET_FUNC_ADDR(PaintBox_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pPaintBox_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_SetBorderSpacing)
void
PaintBox_SetBorderSpacing(TPaintBox AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(PaintBox_SetBorderSpacing)
    MySyscall(pPaintBox_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetComponents)
TComponent
PaintBox_GetComponents(TPaintBox AObj, int32_t AIndex) {
    GET_FUNC_ADDR(PaintBox_GetComponents)
    return (TComponent)MySyscall(pPaintBox_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_GetAnchorSide)
TAnchorSide
PaintBox_GetAnchorSide(TPaintBox AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(PaintBox_GetAnchorSide)
    return (TAnchorSide)MySyscall(pPaintBox_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PaintBox_StaticClassType)
TClass
PaintBox_StaticClassType() {
    GET_FUNC_ADDR(PaintBox_StaticClassType)
    return (TClass)MySyscall(pPaintBox_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TTimer-------------------

DEFINE_FUNC_PTR(Timer_Create)
TTimer
Timer_Create(TComponent AOwner) {
    GET_FUNC_ADDR(Timer_Create)
    return (TTimer)MySyscall(pTimer_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_Free)
void
Timer_Free(TTimer AObj) {
    GET_FUNC_ADDR(Timer_Free)
    MySyscall(pTimer_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_FindComponent)
TComponent
Timer_FindComponent(TTimer AObj, CChar char* AName) {
    GET_FUNC_ADDR(Timer_FindComponent)
    return (TComponent)MySyscall(pTimer_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_GetNamePath)
char*
Timer_GetNamePath(TTimer AObj) {
    GET_FUNC_ADDR(Timer_GetNamePath)
    return (char*)MySyscall(pTimer_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_HasParent)
BOOL
Timer_HasParent(TTimer AObj) {
    GET_FUNC_ADDR(Timer_HasParent)
    return (BOOL)MySyscall(pTimer_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_Assign)
void
Timer_Assign(TTimer AObj, TObject Source) {
    GET_FUNC_ADDR(Timer_Assign)
    MySyscall(pTimer_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_ClassType)
TClass
Timer_ClassType(TTimer AObj) {
    GET_FUNC_ADDR(Timer_ClassType)
    return (TClass)MySyscall(pTimer_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_ClassName)
char*
Timer_ClassName(TTimer AObj) {
    GET_FUNC_ADDR(Timer_ClassName)
    return (char*)MySyscall(pTimer_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_InstanceSize)
int32_t
Timer_InstanceSize(TTimer AObj) {
    GET_FUNC_ADDR(Timer_InstanceSize)
    return (int32_t)MySyscall(pTimer_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_InheritsFrom)
BOOL
Timer_InheritsFrom(TTimer AObj, TClass AClass) {
    GET_FUNC_ADDR(Timer_InheritsFrom)
    return (BOOL)MySyscall(pTimer_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_Equals)
BOOL
Timer_Equals(TTimer AObj, TObject Obj) {
    GET_FUNC_ADDR(Timer_Equals)
    return (BOOL)MySyscall(pTimer_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_GetHashCode)
int32_t
Timer_GetHashCode(TTimer AObj) {
    GET_FUNC_ADDR(Timer_GetHashCode)
    return (int32_t)MySyscall(pTimer_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_ToString)
char*
Timer_ToString(TTimer AObj) {
    GET_FUNC_ADDR(Timer_ToString)
    return (char*)MySyscall(pTimer_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_GetEnabled)
BOOL
Timer_GetEnabled(TTimer AObj) {
    GET_FUNC_ADDR(Timer_GetEnabled)
    return (BOOL)MySyscall(pTimer_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_SetEnabled)
void
Timer_SetEnabled(TTimer AObj, BOOL AValue) {
    GET_FUNC_ADDR(Timer_SetEnabled)
    MySyscall(pTimer_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_GetInterval)
uint32_t
Timer_GetInterval(TTimer AObj) {
    GET_FUNC_ADDR(Timer_GetInterval)
    return (uint32_t)MySyscall(pTimer_GetInterval, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_SetInterval)
void
Timer_SetInterval(TTimer AObj, uint32_t AValue) {
    GET_FUNC_ADDR(Timer_SetInterval)
    MySyscall(pTimer_SetInterval, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_SetOnTimer)
void
Timer_SetOnTimer(TTimer AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Timer_SetOnTimer)
    MySyscall(pTimer_SetOnTimer, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_GetComponentCount)
int32_t
Timer_GetComponentCount(TTimer AObj) {
    GET_FUNC_ADDR(Timer_GetComponentCount)
    return (int32_t)MySyscall(pTimer_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_GetComponentIndex)
int32_t
Timer_GetComponentIndex(TTimer AObj) {
    GET_FUNC_ADDR(Timer_GetComponentIndex)
    return (int32_t)MySyscall(pTimer_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_SetComponentIndex)
void
Timer_SetComponentIndex(TTimer AObj, int32_t AValue) {
    GET_FUNC_ADDR(Timer_SetComponentIndex)
    MySyscall(pTimer_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_GetOwner)
TComponent
Timer_GetOwner(TTimer AObj) {
    GET_FUNC_ADDR(Timer_GetOwner)
    return (TComponent)MySyscall(pTimer_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_GetName)
char*
Timer_GetName(TTimer AObj) {
    GET_FUNC_ADDR(Timer_GetName)
    return (char*)MySyscall(pTimer_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_SetName)
void
Timer_SetName(TTimer AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Timer_SetName)
    MySyscall(pTimer_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_GetTag)
intptr_t
Timer_GetTag(TTimer AObj) {
    GET_FUNC_ADDR(Timer_GetTag)
    return (intptr_t)MySyscall(pTimer_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_SetTag)
void
Timer_SetTag(TTimer AObj, intptr_t AValue) {
    GET_FUNC_ADDR(Timer_SetTag)
    MySyscall(pTimer_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_GetComponents)
TComponent
Timer_GetComponents(TTimer AObj, int32_t AIndex) {
    GET_FUNC_ADDR(Timer_GetComponents)
    return (TComponent)MySyscall(pTimer_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Timer_StaticClassType)
TClass
Timer_StaticClassType() {
    GET_FUNC_ADDR(Timer_StaticClassType)
    return (TClass)MySyscall(pTimer_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TList-------------------

DEFINE_FUNC_PTR(List_Create)
TList
List_Create() {
    GET_FUNC_ADDR(List_Create)
    return (TList)MySyscall(pList_Create, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(List_Free)
void
List_Free(TList AObj) {
    GET_FUNC_ADDR(List_Free)
    MySyscall(pList_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(List_Add)
int32_t
List_Add(TList AObj, void* Item) {
    GET_FUNC_ADDR(List_Add)
    return (int32_t)MySyscall(pList_Add, 2, AObj, Item ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(List_Clear)
void
List_Clear(TList AObj) {
    GET_FUNC_ADDR(List_Clear)
    MySyscall(pList_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(List_Delete)
void
List_Delete(TList AObj, int32_t Index) {
    GET_FUNC_ADDR(List_Delete)
    MySyscall(pList_Delete, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(List_Exchange)
void
List_Exchange(TList AObj, int32_t Index1, int32_t Index2) {
    GET_FUNC_ADDR(List_Exchange)
    MySyscall(pList_Exchange, 3, AObj, Index1, Index2 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(List_Expand)
TList
List_Expand(TList AObj) {
    GET_FUNC_ADDR(List_Expand)
    return (TList)MySyscall(pList_Expand, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(List_IndexOf)
int32_t
List_IndexOf(TList AObj, void* Item) {
    GET_FUNC_ADDR(List_IndexOf)
    return (int32_t)MySyscall(pList_IndexOf, 2, AObj, Item ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(List_Insert)
void
List_Insert(TList AObj, int32_t Index, void* Item) {
    GET_FUNC_ADDR(List_Insert)
    MySyscall(pList_Insert, 3, AObj, Index, Item ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(List_Move)
void
List_Move(TList AObj, int32_t CurIndex, int32_t NewIndex) {
    GET_FUNC_ADDR(List_Move)
    MySyscall(pList_Move, 3, AObj, CurIndex, NewIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(List_ClassType)
TClass
List_ClassType(TList AObj) {
    GET_FUNC_ADDR(List_ClassType)
    return (TClass)MySyscall(pList_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(List_ClassName)
char*
List_ClassName(TList AObj) {
    GET_FUNC_ADDR(List_ClassName)
    return (char*)MySyscall(pList_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(List_InstanceSize)
int32_t
List_InstanceSize(TList AObj) {
    GET_FUNC_ADDR(List_InstanceSize)
    return (int32_t)MySyscall(pList_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(List_InheritsFrom)
BOOL
List_InheritsFrom(TList AObj, TClass AClass) {
    GET_FUNC_ADDR(List_InheritsFrom)
    return (BOOL)MySyscall(pList_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(List_Equals)
BOOL
List_Equals(TList AObj, TObject Obj) {
    GET_FUNC_ADDR(List_Equals)
    return (BOOL)MySyscall(pList_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(List_GetHashCode)
int32_t
List_GetHashCode(TList AObj) {
    GET_FUNC_ADDR(List_GetHashCode)
    return (int32_t)MySyscall(pList_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(List_ToString)
char*
List_ToString(TList AObj) {
    GET_FUNC_ADDR(List_ToString)
    return (char*)MySyscall(pList_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(List_GetCapacity)
int32_t
List_GetCapacity(TList AObj) {
    GET_FUNC_ADDR(List_GetCapacity)
    return (int32_t)MySyscall(pList_GetCapacity, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(List_SetCapacity)
void
List_SetCapacity(TList AObj, int32_t AValue) {
    GET_FUNC_ADDR(List_SetCapacity)
    MySyscall(pList_SetCapacity, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(List_GetCount)
int32_t
List_GetCount(TList AObj) {
    GET_FUNC_ADDR(List_GetCount)
    return (int32_t)MySyscall(pList_GetCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(List_SetCount)
void
List_SetCount(TList AObj, int32_t AValue) {
    GET_FUNC_ADDR(List_SetCount)
    MySyscall(pList_SetCount, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(List_GetList)
void*
List_GetList(TList AObj) {
    GET_FUNC_ADDR(List_GetList)
    return (void*)MySyscall(pList_GetList, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(List_GetItems)
void*
List_GetItems(TList AObj, int32_t Index) {
    GET_FUNC_ADDR(List_GetItems)
    return (void*)MySyscall(pList_GetItems, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(List_SetItems)
void
List_SetItems(TList AObj, int32_t Index, void* AValue) {
    GET_FUNC_ADDR(List_SetItems)
    MySyscall(pList_SetItems, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(List_StaticClassType)
TClass
List_StaticClassType() {
    GET_FUNC_ADDR(List_StaticClassType)
    return (TClass)MySyscall(pList_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TForm-------------------

DEFINE_FUNC_PTR(Form_Create)
TForm
Form_Create(TComponent AOwner) {
    GET_FUNC_ADDR(Form_Create)
    return (TForm)MySyscall(pForm_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_Free)
void
Form_Free(TForm AObj) {
    GET_FUNC_ADDR(Form_Free)
    MySyscall(pForm_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_InheritedWndProc)
void
Form_InheritedWndProc(TForm AObj, TMessage* TheMessage) {
    GET_FUNC_ADDR(Form_InheritedWndProc)
    MySyscall(pForm_InheritedWndProc, 2, AObj, TheMessage ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_EnabledMaximize)
void
Form_EnabledMaximize(TForm AObj, BOOL AValue) {
    GET_FUNC_ADDR(Form_EnabledMaximize)
    MySyscall(pForm_EnabledMaximize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_EnabledMinimize)
void
Form_EnabledMinimize(TForm AObj, BOOL AValue) {
    GET_FUNC_ADDR(Form_EnabledMinimize)
    MySyscall(pForm_EnabledMinimize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_EnabledSystemMenu)
void
Form_EnabledSystemMenu(TForm AObj, BOOL AValue) {
    GET_FUNC_ADDR(Form_EnabledSystemMenu)
    MySyscall(pForm_EnabledSystemMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_ScaleForCurrentDpi)
void
Form_ScaleForCurrentDpi(TForm AObj) {
    GET_FUNC_ADDR(Form_ScaleForCurrentDpi)
    MySyscall(pForm_ScaleForCurrentDpi, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_ScaleForPPI)
void
Form_ScaleForPPI(TForm AObj, int32_t ANewPPI) {
    GET_FUNC_ADDR(Form_ScaleForPPI)
    MySyscall(pForm_ScaleForPPI, 2, AObj, ANewPPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_ScreenCenter)
void
Form_ScreenCenter(TForm AObj) {
    GET_FUNC_ADDR(Form_ScreenCenter)
    MySyscall(pForm_ScreenCenter, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_WorkAreaCenter)
void
Form_WorkAreaCenter(TForm AObj) {
    GET_FUNC_ADDR(Form_WorkAreaCenter)
    MySyscall(pForm_WorkAreaCenter, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_Cascade)
void
Form_Cascade(TForm AObj) {
    GET_FUNC_ADDR(Form_Cascade)
    MySyscall(pForm_Cascade, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_Close)
void
Form_Close(TForm AObj) {
    GET_FUNC_ADDR(Form_Close)
    MySyscall(pForm_Close, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_FocusControl)
void
Form_FocusControl(TForm AObj, TWinControl Control) {
    GET_FUNC_ADDR(Form_FocusControl)
    MySyscall(pForm_FocusControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_Hide)
void
Form_Hide(TForm AObj) {
    GET_FUNC_ADDR(Form_Hide)
    MySyscall(pForm_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetFocus)
void
Form_SetFocus(TForm AObj) {
    GET_FUNC_ADDR(Form_SetFocus)
    MySyscall(pForm_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_Show)
void
Form_Show(TForm AObj) {
    GET_FUNC_ADDR(Form_Show)
    MySyscall(pForm_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_ShowModal)
int32_t
Form_ShowModal(TForm AObj) {
    GET_FUNC_ADDR(Form_ShowModal)
    return (int32_t)MySyscall(pForm_ShowModal, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_ScrollInView)
void
Form_ScrollInView(TForm AObj, TControl AControl) {
    GET_FUNC_ADDR(Form_ScrollInView)
    MySyscall(pForm_ScrollInView, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_CanFocus)
BOOL
Form_CanFocus(TForm AObj) {
    GET_FUNC_ADDR(Form_CanFocus)
    return (BOOL)MySyscall(pForm_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_ContainsControl)
BOOL
Form_ContainsControl(TForm AObj, TControl Control) {
    GET_FUNC_ADDR(Form_ContainsControl)
    return (BOOL)MySyscall(pForm_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_ControlAtPos)
TControl
Form_ControlAtPos(TForm AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(Form_ControlAtPos)
    return (TControl)MySyscall(pForm_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_DisableAlign)
void
Form_DisableAlign(TForm AObj) {
    GET_FUNC_ADDR(Form_DisableAlign)
    MySyscall(pForm_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_EnableAlign)
void
Form_EnableAlign(TForm AObj) {
    GET_FUNC_ADDR(Form_EnableAlign)
    MySyscall(pForm_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_FindChildControl)
TControl
Form_FindChildControl(TForm AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(Form_FindChildControl)
    return (TControl)MySyscall(pForm_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_FlipChildren)
void
Form_FlipChildren(TForm AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(Form_FlipChildren)
    MySyscall(pForm_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_Focused)
BOOL
Form_Focused(TForm AObj) {
    GET_FUNC_ADDR(Form_Focused)
    return (BOOL)MySyscall(pForm_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_HandleAllocated)
BOOL
Form_HandleAllocated(TForm AObj) {
    GET_FUNC_ADDR(Form_HandleAllocated)
    return (BOOL)MySyscall(pForm_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_InsertControl)
void
Form_InsertControl(TForm AObj, TControl AControl) {
    GET_FUNC_ADDR(Form_InsertControl)
    MySyscall(pForm_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_Invalidate)
void
Form_Invalidate(TForm AObj) {
    GET_FUNC_ADDR(Form_Invalidate)
    MySyscall(pForm_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_PaintTo)
void
Form_PaintTo(TForm AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(Form_PaintTo)
    MySyscall(pForm_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_RemoveControl)
void
Form_RemoveControl(TForm AObj, TControl AControl) {
    GET_FUNC_ADDR(Form_RemoveControl)
    MySyscall(pForm_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_Realign)
void
Form_Realign(TForm AObj) {
    GET_FUNC_ADDR(Form_Realign)
    MySyscall(pForm_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_Repaint)
void
Form_Repaint(TForm AObj) {
    GET_FUNC_ADDR(Form_Repaint)
    MySyscall(pForm_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_ScaleBy)
void
Form_ScaleBy(TForm AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(Form_ScaleBy)
    MySyscall(pForm_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_ScrollBy)
void
Form_ScrollBy(TForm AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(Form_ScrollBy)
    MySyscall(pForm_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetBounds)
void
Form_SetBounds(TForm AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(Form_SetBounds)
    MySyscall(pForm_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_Update)
void
Form_Update(TForm AObj) {
    GET_FUNC_ADDR(Form_Update)
    MySyscall(pForm_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_BringToFront)
void
Form_BringToFront(TForm AObj) {
    GET_FUNC_ADDR(Form_BringToFront)
    MySyscall(pForm_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_ClientToScreen)
TPoint
Form_ClientToScreen(TForm AObj, TPoint Point) {
    GET_FUNC_ADDR(Form_ClientToScreen)
    TPoint result;
    MySyscall(pForm_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Form_ClientToParent)
TPoint
Form_ClientToParent(TForm AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Form_ClientToParent)
    TPoint result;
    MySyscall(pForm_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Form_Dragging)
BOOL
Form_Dragging(TForm AObj) {
    GET_FUNC_ADDR(Form_Dragging)
    return (BOOL)MySyscall(pForm_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_HasParent)
BOOL
Form_HasParent(TForm AObj) {
    GET_FUNC_ADDR(Form_HasParent)
    return (BOOL)MySyscall(pForm_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_Perform)
intptr_t
Form_Perform(TForm AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(Form_Perform)
    return (intptr_t)MySyscall(pForm_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_Refresh)
void
Form_Refresh(TForm AObj) {
    GET_FUNC_ADDR(Form_Refresh)
    MySyscall(pForm_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_ScreenToClient)
TPoint
Form_ScreenToClient(TForm AObj, TPoint Point) {
    GET_FUNC_ADDR(Form_ScreenToClient)
    TPoint result;
    MySyscall(pForm_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Form_ParentToClient)
TPoint
Form_ParentToClient(TForm AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Form_ParentToClient)
    TPoint result;
    MySyscall(pForm_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Form_SendToBack)
void
Form_SendToBack(TForm AObj) {
    GET_FUNC_ADDR(Form_SendToBack)
    MySyscall(pForm_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetTextBuf)
int32_t
Form_GetTextBuf(TForm AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(Form_GetTextBuf)
    return (int32_t)MySyscall(pForm_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetTextLen)
int32_t
Form_GetTextLen(TForm AObj) {
    GET_FUNC_ADDR(Form_GetTextLen)
    return (int32_t)MySyscall(pForm_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetTextBuf)
void
Form_SetTextBuf(TForm AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(Form_SetTextBuf)
    MySyscall(pForm_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_FindComponent)
TComponent
Form_FindComponent(TForm AObj, CChar char* AName) {
    GET_FUNC_ADDR(Form_FindComponent)
    return (TComponent)MySyscall(pForm_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetNamePath)
char*
Form_GetNamePath(TForm AObj) {
    GET_FUNC_ADDR(Form_GetNamePath)
    return (char*)MySyscall(pForm_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_Assign)
void
Form_Assign(TForm AObj, TObject Source) {
    GET_FUNC_ADDR(Form_Assign)
    MySyscall(pForm_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_ClassType)
TClass
Form_ClassType(TForm AObj) {
    GET_FUNC_ADDR(Form_ClassType)
    return (TClass)MySyscall(pForm_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_ClassName)
char*
Form_ClassName(TForm AObj) {
    GET_FUNC_ADDR(Form_ClassName)
    return (char*)MySyscall(pForm_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_InstanceSize)
int32_t
Form_InstanceSize(TForm AObj) {
    GET_FUNC_ADDR(Form_InstanceSize)
    return (int32_t)MySyscall(pForm_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_InheritsFrom)
BOOL
Form_InheritsFrom(TForm AObj, TClass AClass) {
    GET_FUNC_ADDR(Form_InheritsFrom)
    return (BOOL)MySyscall(pForm_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_Equals)
BOOL
Form_Equals(TForm AObj, TObject Obj) {
    GET_FUNC_ADDR(Form_Equals)
    return (BOOL)MySyscall(pForm_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetHashCode)
int32_t
Form_GetHashCode(TForm AObj) {
    GET_FUNC_ADDR(Form_GetHashCode)
    return (int32_t)MySyscall(pForm_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_ToString)
char*
Form_ToString(TForm AObj) {
    GET_FUNC_ADDR(Form_ToString)
    return (char*)MySyscall(pForm_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_AnchorToNeighbour)
void
Form_AnchorToNeighbour(TForm AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Form_AnchorToNeighbour)
    MySyscall(pForm_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_AnchorParallel)
void
Form_AnchorParallel(TForm AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Form_AnchorParallel)
    MySyscall(pForm_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_AnchorHorizontalCenterTo)
void
Form_AnchorHorizontalCenterTo(TForm AObj, TControl ASibling) {
    GET_FUNC_ADDR(Form_AnchorHorizontalCenterTo)
    MySyscall(pForm_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_AnchorVerticalCenterTo)
void
Form_AnchorVerticalCenterTo(TForm AObj, TControl ASibling) {
    GET_FUNC_ADDR(Form_AnchorVerticalCenterTo)
    MySyscall(pForm_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_AnchorSame)
void
Form_AnchorSame(TForm AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(Form_AnchorSame)
    MySyscall(pForm_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_AnchorAsAlign)
void
Form_AnchorAsAlign(TForm AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(Form_AnchorAsAlign)
    MySyscall(pForm_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_AnchorClient)
void
Form_AnchorClient(TForm AObj, int32_t ASpace) {
    GET_FUNC_ADDR(Form_AnchorClient)
    MySyscall(pForm_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_ScaleDesignToForm)
int32_t
Form_ScaleDesignToForm(TForm AObj, int32_t ASize) {
    GET_FUNC_ADDR(Form_ScaleDesignToForm)
    return (int32_t)MySyscall(pForm_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_ScaleFormToDesign)
int32_t
Form_ScaleFormToDesign(TForm AObj, int32_t ASize) {
    GET_FUNC_ADDR(Form_ScaleFormToDesign)
    return (int32_t)MySyscall(pForm_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_Scale96ToForm)
int32_t
Form_Scale96ToForm(TForm AObj, int32_t ASize) {
    GET_FUNC_ADDR(Form_Scale96ToForm)
    return (int32_t)MySyscall(pForm_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_ScaleFormTo96)
int32_t
Form_ScaleFormTo96(TForm AObj, int32_t ASize) {
    GET_FUNC_ADDR(Form_ScaleFormTo96)
    return (int32_t)MySyscall(pForm_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_Scale96ToFont)
int32_t
Form_Scale96ToFont(TForm AObj, int32_t ASize) {
    GET_FUNC_ADDR(Form_Scale96ToFont)
    return (int32_t)MySyscall(pForm_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_ScaleFontTo96)
int32_t
Form_ScaleFontTo96(TForm AObj, int32_t ASize) {
    GET_FUNC_ADDR(Form_ScaleFontTo96)
    return (int32_t)MySyscall(pForm_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_ScaleScreenToFont)
int32_t
Form_ScaleScreenToFont(TForm AObj, int32_t ASize) {
    GET_FUNC_ADDR(Form_ScaleScreenToFont)
    return (int32_t)MySyscall(pForm_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_ScaleFontToScreen)
int32_t
Form_ScaleFontToScreen(TForm AObj, int32_t ASize) {
    GET_FUNC_ADDR(Form_ScaleFontToScreen)
    return (int32_t)MySyscall(pForm_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_Scale96ToScreen)
int32_t
Form_Scale96ToScreen(TForm AObj, int32_t ASize) {
    GET_FUNC_ADDR(Form_Scale96ToScreen)
    return (int32_t)MySyscall(pForm_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_ScaleScreenTo96)
int32_t
Form_ScaleScreenTo96(TForm AObj, int32_t ASize) {
    GET_FUNC_ADDR(Form_ScaleScreenTo96)
    return (int32_t)MySyscall(pForm_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_AutoAdjustLayout)
void
Form_AutoAdjustLayout(TForm AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(Form_AutoAdjustLayout)
    MySyscall(pForm_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_FixDesignFontsPPI)
void
Form_FixDesignFontsPPI(TForm AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(Form_FixDesignFontsPPI)
    MySyscall(pForm_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_ScaleFontsPPI)
void
Form_ScaleFontsPPI(TForm AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(Form_ScaleFontsPPI)
    MySyscall(pForm_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetAllowDropFiles)
BOOL
Form_GetAllowDropFiles(TForm AObj) {
    GET_FUNC_ADDR(Form_GetAllowDropFiles)
    return (BOOL)MySyscall(pForm_GetAllowDropFiles, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetAllowDropFiles)
void
Form_SetAllowDropFiles(TForm AObj, BOOL AValue) {
    GET_FUNC_ADDR(Form_SetAllowDropFiles)
    MySyscall(pForm_SetAllowDropFiles, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnDropFiles)
void
Form_SetOnDropFiles(TForm AObj, TDropFilesEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnDropFiles)
    MySyscall(pForm_SetOnDropFiles, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetShowInTaskBar)
TShowInTaskbar
Form_GetShowInTaskBar(TForm AObj) {
    GET_FUNC_ADDR(Form_GetShowInTaskBar)
    return (TShowInTaskbar)MySyscall(pForm_GetShowInTaskBar, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetShowInTaskBar)
void
Form_SetShowInTaskBar(TForm AObj, TShowInTaskbar AValue) {
    GET_FUNC_ADDR(Form_SetShowInTaskBar)
    MySyscall(pForm_SetShowInTaskBar, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetDesignTimePPI)
int32_t
Form_GetDesignTimePPI(TForm AObj) {
    GET_FUNC_ADDR(Form_GetDesignTimePPI)
    return (int32_t)MySyscall(pForm_GetDesignTimePPI, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetDesignTimePPI)
void
Form_SetDesignTimePPI(TForm AObj, int32_t AValue) {
    GET_FUNC_ADDR(Form_SetDesignTimePPI)
    MySyscall(pForm_SetDesignTimePPI, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnUTF8KeyPress)
void
Form_SetOnUTF8KeyPress(TForm AObj, TUTF8KeyPressEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnUTF8KeyPress)
    MySyscall(pForm_SetOnUTF8KeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetAction)
TAction
Form_GetAction(TForm AObj) {
    GET_FUNC_ADDR(Form_GetAction)
    return (TAction)MySyscall(pForm_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetAction)
void
Form_SetAction(TForm AObj, TAction AValue) {
    GET_FUNC_ADDR(Form_SetAction)
    MySyscall(pForm_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetActiveControl)
TWinControl
Form_GetActiveControl(TForm AObj) {
    GET_FUNC_ADDR(Form_GetActiveControl)
    return (TWinControl)MySyscall(pForm_GetActiveControl, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetActiveControl)
void
Form_SetActiveControl(TForm AObj, TWinControl AValue) {
    GET_FUNC_ADDR(Form_SetActiveControl)
    MySyscall(pForm_SetActiveControl, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetAlign)
TAlign
Form_GetAlign(TForm AObj) {
    GET_FUNC_ADDR(Form_GetAlign)
    return (TAlign)MySyscall(pForm_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetAlign)
void
Form_SetAlign(TForm AObj, TAlign AValue) {
    GET_FUNC_ADDR(Form_SetAlign)
    MySyscall(pForm_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetAlphaBlend)
BOOL
Form_GetAlphaBlend(TForm AObj) {
    GET_FUNC_ADDR(Form_GetAlphaBlend)
    return (BOOL)MySyscall(pForm_GetAlphaBlend, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetAlphaBlend)
void
Form_SetAlphaBlend(TForm AObj, BOOL AValue) {
    GET_FUNC_ADDR(Form_SetAlphaBlend)
    MySyscall(pForm_SetAlphaBlend, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetAlphaBlendValue)
int8_t
Form_GetAlphaBlendValue(TForm AObj) {
    GET_FUNC_ADDR(Form_GetAlphaBlendValue)
    return (int8_t)MySyscall(pForm_GetAlphaBlendValue, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetAlphaBlendValue)
void
Form_SetAlphaBlendValue(TForm AObj, int8_t AValue) {
    GET_FUNC_ADDR(Form_SetAlphaBlendValue)
    MySyscall(pForm_SetAlphaBlendValue, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetAnchors)
TAnchors
Form_GetAnchors(TForm AObj) {
    GET_FUNC_ADDR(Form_GetAnchors)
    return (TAnchors)MySyscall(pForm_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetAnchors)
void
Form_SetAnchors(TForm AObj, TAnchors AValue) {
    GET_FUNC_ADDR(Form_SetAnchors)
    MySyscall(pForm_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetAutoScroll)
BOOL
Form_GetAutoScroll(TForm AObj) {
    GET_FUNC_ADDR(Form_GetAutoScroll)
    return (BOOL)MySyscall(pForm_GetAutoScroll, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetAutoScroll)
void
Form_SetAutoScroll(TForm AObj, BOOL AValue) {
    GET_FUNC_ADDR(Form_SetAutoScroll)
    MySyscall(pForm_SetAutoScroll, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetAutoSize)
BOOL
Form_GetAutoSize(TForm AObj) {
    GET_FUNC_ADDR(Form_GetAutoSize)
    return (BOOL)MySyscall(pForm_GetAutoSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetAutoSize)
void
Form_SetAutoSize(TForm AObj, BOOL AValue) {
    GET_FUNC_ADDR(Form_SetAutoSize)
    MySyscall(pForm_SetAutoSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetBiDiMode)
TBiDiMode
Form_GetBiDiMode(TForm AObj) {
    GET_FUNC_ADDR(Form_GetBiDiMode)
    return (TBiDiMode)MySyscall(pForm_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetBiDiMode)
void
Form_SetBiDiMode(TForm AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(Form_SetBiDiMode)
    MySyscall(pForm_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetBorderIcons)
TBorderIcons
Form_GetBorderIcons(TForm AObj) {
    GET_FUNC_ADDR(Form_GetBorderIcons)
    return (TBorderIcons)MySyscall(pForm_GetBorderIcons, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetBorderIcons)
void
Form_SetBorderIcons(TForm AObj, TBorderIcons AValue) {
    GET_FUNC_ADDR(Form_SetBorderIcons)
    MySyscall(pForm_SetBorderIcons, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetBorderStyle)
TFormBorderStyle
Form_GetBorderStyle(TForm AObj) {
    GET_FUNC_ADDR(Form_GetBorderStyle)
    return (TFormBorderStyle)MySyscall(pForm_GetBorderStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetBorderStyle)
void
Form_SetBorderStyle(TForm AObj, TFormBorderStyle AValue) {
    GET_FUNC_ADDR(Form_SetBorderStyle)
    MySyscall(pForm_SetBorderStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetBorderWidth)
int32_t
Form_GetBorderWidth(TForm AObj) {
    GET_FUNC_ADDR(Form_GetBorderWidth)
    return (int32_t)MySyscall(pForm_GetBorderWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetBorderWidth)
void
Form_SetBorderWidth(TForm AObj, int32_t AValue) {
    GET_FUNC_ADDR(Form_SetBorderWidth)
    MySyscall(pForm_SetBorderWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetCaption)
char*
Form_GetCaption(TForm AObj) {
    GET_FUNC_ADDR(Form_GetCaption)
    return (char*)MySyscall(pForm_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetCaption)
void
Form_SetCaption(TForm AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Form_SetCaption)
    MySyscall(pForm_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetClientHeight)
int32_t
Form_GetClientHeight(TForm AObj) {
    GET_FUNC_ADDR(Form_GetClientHeight)
    return (int32_t)MySyscall(pForm_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetClientHeight)
void
Form_SetClientHeight(TForm AObj, int32_t AValue) {
    GET_FUNC_ADDR(Form_SetClientHeight)
    MySyscall(pForm_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetClientWidth)
int32_t
Form_GetClientWidth(TForm AObj) {
    GET_FUNC_ADDR(Form_GetClientWidth)
    return (int32_t)MySyscall(pForm_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetClientWidth)
void
Form_SetClientWidth(TForm AObj, int32_t AValue) {
    GET_FUNC_ADDR(Form_SetClientWidth)
    MySyscall(pForm_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetColor)
TColor
Form_GetColor(TForm AObj) {
    GET_FUNC_ADDR(Form_GetColor)
    return (TColor)MySyscall(pForm_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetColor)
void
Form_SetColor(TForm AObj, TColor AValue) {
    GET_FUNC_ADDR(Form_SetColor)
    MySyscall(pForm_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetConstraints)
TSizeConstraints
Form_GetConstraints(TForm AObj) {
    GET_FUNC_ADDR(Form_GetConstraints)
    return (TSizeConstraints)MySyscall(pForm_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetConstraints)
void
Form_SetConstraints(TForm AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(Form_SetConstraints)
    MySyscall(pForm_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetUseDockManager)
BOOL
Form_GetUseDockManager(TForm AObj) {
    GET_FUNC_ADDR(Form_GetUseDockManager)
    return (BOOL)MySyscall(pForm_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetUseDockManager)
void
Form_SetUseDockManager(TForm AObj, BOOL AValue) {
    GET_FUNC_ADDR(Form_SetUseDockManager)
    MySyscall(pForm_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetDefaultMonitor)
TDefaultMonitor
Form_GetDefaultMonitor(TForm AObj) {
    GET_FUNC_ADDR(Form_GetDefaultMonitor)
    return (TDefaultMonitor)MySyscall(pForm_GetDefaultMonitor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetDefaultMonitor)
void
Form_SetDefaultMonitor(TForm AObj, TDefaultMonitor AValue) {
    GET_FUNC_ADDR(Form_SetDefaultMonitor)
    MySyscall(pForm_SetDefaultMonitor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetDockSite)
BOOL
Form_GetDockSite(TForm AObj) {
    GET_FUNC_ADDR(Form_GetDockSite)
    return (BOOL)MySyscall(pForm_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetDockSite)
void
Form_SetDockSite(TForm AObj, BOOL AValue) {
    GET_FUNC_ADDR(Form_SetDockSite)
    MySyscall(pForm_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetDoubleBuffered)
BOOL
Form_GetDoubleBuffered(TForm AObj) {
    GET_FUNC_ADDR(Form_GetDoubleBuffered)
    return (BOOL)MySyscall(pForm_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetDoubleBuffered)
void
Form_SetDoubleBuffered(TForm AObj, BOOL AValue) {
    GET_FUNC_ADDR(Form_SetDoubleBuffered)
    MySyscall(pForm_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetDragKind)
TDragKind
Form_GetDragKind(TForm AObj) {
    GET_FUNC_ADDR(Form_GetDragKind)
    return (TDragKind)MySyscall(pForm_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetDragKind)
void
Form_SetDragKind(TForm AObj, TDragKind AValue) {
    GET_FUNC_ADDR(Form_SetDragKind)
    MySyscall(pForm_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetDragMode)
TDragMode
Form_GetDragMode(TForm AObj) {
    GET_FUNC_ADDR(Form_GetDragMode)
    return (TDragMode)MySyscall(pForm_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetDragMode)
void
Form_SetDragMode(TForm AObj, TDragMode AValue) {
    GET_FUNC_ADDR(Form_SetDragMode)
    MySyscall(pForm_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetEnabled)
BOOL
Form_GetEnabled(TForm AObj) {
    GET_FUNC_ADDR(Form_GetEnabled)
    return (BOOL)MySyscall(pForm_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetEnabled)
void
Form_SetEnabled(TForm AObj, BOOL AValue) {
    GET_FUNC_ADDR(Form_SetEnabled)
    MySyscall(pForm_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetParentFont)
BOOL
Form_GetParentFont(TForm AObj) {
    GET_FUNC_ADDR(Form_GetParentFont)
    return (BOOL)MySyscall(pForm_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetParentFont)
void
Form_SetParentFont(TForm AObj, BOOL AValue) {
    GET_FUNC_ADDR(Form_SetParentFont)
    MySyscall(pForm_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetFont)
TFont
Form_GetFont(TForm AObj) {
    GET_FUNC_ADDR(Form_GetFont)
    return (TFont)MySyscall(pForm_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetFont)
void
Form_SetFont(TForm AObj, TFont AValue) {
    GET_FUNC_ADDR(Form_SetFont)
    MySyscall(pForm_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetFormStyle)
TFormStyle
Form_GetFormStyle(TForm AObj) {
    GET_FUNC_ADDR(Form_GetFormStyle)
    return (TFormStyle)MySyscall(pForm_GetFormStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetFormStyle)
void
Form_SetFormStyle(TForm AObj, TFormStyle AValue) {
    GET_FUNC_ADDR(Form_SetFormStyle)
    MySyscall(pForm_SetFormStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetHeight)
int32_t
Form_GetHeight(TForm AObj) {
    GET_FUNC_ADDR(Form_GetHeight)
    return (int32_t)MySyscall(pForm_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetHeight)
void
Form_SetHeight(TForm AObj, int32_t AValue) {
    GET_FUNC_ADDR(Form_SetHeight)
    MySyscall(pForm_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetHorzScrollBar)
TControlScrollBar
Form_GetHorzScrollBar(TForm AObj) {
    GET_FUNC_ADDR(Form_GetHorzScrollBar)
    return (TControlScrollBar)MySyscall(pForm_GetHorzScrollBar, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetHorzScrollBar)
void
Form_SetHorzScrollBar(TForm AObj, TControlScrollBar AValue) {
    GET_FUNC_ADDR(Form_SetHorzScrollBar)
    MySyscall(pForm_SetHorzScrollBar, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetIcon)
TIcon
Form_GetIcon(TForm AObj) {
    GET_FUNC_ADDR(Form_GetIcon)
    return (TIcon)MySyscall(pForm_GetIcon, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetIcon)
void
Form_SetIcon(TForm AObj, TIcon AValue) {
    GET_FUNC_ADDR(Form_SetIcon)
    MySyscall(pForm_SetIcon, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetKeyPreview)
BOOL
Form_GetKeyPreview(TForm AObj) {
    GET_FUNC_ADDR(Form_GetKeyPreview)
    return (BOOL)MySyscall(pForm_GetKeyPreview, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetKeyPreview)
void
Form_SetKeyPreview(TForm AObj, BOOL AValue) {
    GET_FUNC_ADDR(Form_SetKeyPreview)
    MySyscall(pForm_SetKeyPreview, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetMenu)
TMainMenu
Form_GetMenu(TForm AObj) {
    GET_FUNC_ADDR(Form_GetMenu)
    return (TMainMenu)MySyscall(pForm_GetMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetMenu)
void
Form_SetMenu(TForm AObj, TMainMenu AValue) {
    GET_FUNC_ADDR(Form_SetMenu)
    MySyscall(pForm_SetMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetPixelsPerInch)
int32_t
Form_GetPixelsPerInch(TForm AObj) {
    GET_FUNC_ADDR(Form_GetPixelsPerInch)
    return (int32_t)MySyscall(pForm_GetPixelsPerInch, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetPixelsPerInch)
void
Form_SetPixelsPerInch(TForm AObj, int32_t AValue) {
    GET_FUNC_ADDR(Form_SetPixelsPerInch)
    MySyscall(pForm_SetPixelsPerInch, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetPopupMenu)
TPopupMenu
Form_GetPopupMenu(TForm AObj) {
    GET_FUNC_ADDR(Form_GetPopupMenu)
    return (TPopupMenu)MySyscall(pForm_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetPopupMenu)
void
Form_SetPopupMenu(TForm AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(Form_SetPopupMenu)
    MySyscall(pForm_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetPosition)
TPosition
Form_GetPosition(TForm AObj) {
    GET_FUNC_ADDR(Form_GetPosition)
    return (TPosition)MySyscall(pForm_GetPosition, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetPosition)
void
Form_SetPosition(TForm AObj, TPosition AValue) {
    GET_FUNC_ADDR(Form_SetPosition)
    MySyscall(pForm_SetPosition, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetScaled)
BOOL
Form_GetScaled(TForm AObj) {
    GET_FUNC_ADDR(Form_GetScaled)
    return (BOOL)MySyscall(pForm_GetScaled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetScaled)
void
Form_SetScaled(TForm AObj, BOOL AValue) {
    GET_FUNC_ADDR(Form_SetScaled)
    MySyscall(pForm_SetScaled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetShowHint)
BOOL
Form_GetShowHint(TForm AObj) {
    GET_FUNC_ADDR(Form_GetShowHint)
    return (BOOL)MySyscall(pForm_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetShowHint)
void
Form_SetShowHint(TForm AObj, BOOL AValue) {
    GET_FUNC_ADDR(Form_SetShowHint)
    MySyscall(pForm_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetVertScrollBar)
TControlScrollBar
Form_GetVertScrollBar(TForm AObj) {
    GET_FUNC_ADDR(Form_GetVertScrollBar)
    return (TControlScrollBar)MySyscall(pForm_GetVertScrollBar, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetVertScrollBar)
void
Form_SetVertScrollBar(TForm AObj, TControlScrollBar AValue) {
    GET_FUNC_ADDR(Form_SetVertScrollBar)
    MySyscall(pForm_SetVertScrollBar, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetVisible)
BOOL
Form_GetVisible(TForm AObj) {
    GET_FUNC_ADDR(Form_GetVisible)
    return (BOOL)MySyscall(pForm_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetVisible)
void
Form_SetVisible(TForm AObj, BOOL AValue) {
    GET_FUNC_ADDR(Form_SetVisible)
    MySyscall(pForm_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetWidth)
int32_t
Form_GetWidth(TForm AObj) {
    GET_FUNC_ADDR(Form_GetWidth)
    return (int32_t)MySyscall(pForm_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetWidth)
void
Form_SetWidth(TForm AObj, int32_t AValue) {
    GET_FUNC_ADDR(Form_SetWidth)
    MySyscall(pForm_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetWindowState)
TWindowState
Form_GetWindowState(TForm AObj) {
    GET_FUNC_ADDR(Form_GetWindowState)
    return (TWindowState)MySyscall(pForm_GetWindowState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetWindowState)
void
Form_SetWindowState(TForm AObj, TWindowState AValue) {
    GET_FUNC_ADDR(Form_SetWindowState)
    MySyscall(pForm_SetWindowState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnActivate)
void
Form_SetOnActivate(TForm AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnActivate)
    MySyscall(pForm_SetOnActivate, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnAlignPosition)
void
Form_SetOnAlignPosition(TForm AObj, TAlignPositionEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnAlignPosition)
    MySyscall(pForm_SetOnAlignPosition, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnClick)
void
Form_SetOnClick(TForm AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnClick)
    MySyscall(pForm_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnClose)
void
Form_SetOnClose(TForm AObj, TCloseEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnClose)
    MySyscall(pForm_SetOnClose, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnCloseQuery)
void
Form_SetOnCloseQuery(TForm AObj, TCloseQueryEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnCloseQuery)
    MySyscall(pForm_SetOnCloseQuery, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnConstrainedResize)
void
Form_SetOnConstrainedResize(TForm AObj, TConstrainedResizeEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnConstrainedResize)
    MySyscall(pForm_SetOnConstrainedResize, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnContextPopup)
void
Form_SetOnContextPopup(TForm AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnContextPopup)
    MySyscall(pForm_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnDblClick)
void
Form_SetOnDblClick(TForm AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnDblClick)
    MySyscall(pForm_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnDestroy)
void
Form_SetOnDestroy(TForm AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnDestroy)
    MySyscall(pForm_SetOnDestroy, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnDeactivate)
void
Form_SetOnDeactivate(TForm AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnDeactivate)
    MySyscall(pForm_SetOnDeactivate, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnDockDrop)
void
Form_SetOnDockDrop(TForm AObj, TDockDropEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnDockDrop)
    MySyscall(pForm_SetOnDockDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnDragDrop)
void
Form_SetOnDragDrop(TForm AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnDragDrop)
    MySyscall(pForm_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnDragOver)
void
Form_SetOnDragOver(TForm AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnDragOver)
    MySyscall(pForm_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnEndDock)
void
Form_SetOnEndDock(TForm AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnEndDock)
    MySyscall(pForm_SetOnEndDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnGetSiteInfo)
void
Form_SetOnGetSiteInfo(TForm AObj, TGetSiteInfoEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnGetSiteInfo)
    MySyscall(pForm_SetOnGetSiteInfo, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnHide)
void
Form_SetOnHide(TForm AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnHide)
    MySyscall(pForm_SetOnHide, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnHelp)
void
Form_SetOnHelp(TForm AObj, THelpEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnHelp)
    MySyscall(pForm_SetOnHelp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnKeyDown)
void
Form_SetOnKeyDown(TForm AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnKeyDown)
    MySyscall(pForm_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnKeyPress)
void
Form_SetOnKeyPress(TForm AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnKeyPress)
    MySyscall(pForm_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnKeyUp)
void
Form_SetOnKeyUp(TForm AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnKeyUp)
    MySyscall(pForm_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnMouseDown)
void
Form_SetOnMouseDown(TForm AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnMouseDown)
    MySyscall(pForm_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnMouseEnter)
void
Form_SetOnMouseEnter(TForm AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnMouseEnter)
    MySyscall(pForm_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnMouseLeave)
void
Form_SetOnMouseLeave(TForm AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnMouseLeave)
    MySyscall(pForm_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnMouseMove)
void
Form_SetOnMouseMove(TForm AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnMouseMove)
    MySyscall(pForm_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnMouseUp)
void
Form_SetOnMouseUp(TForm AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnMouseUp)
    MySyscall(pForm_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnMouseWheel)
void
Form_SetOnMouseWheel(TForm AObj, TMouseWheelEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnMouseWheel)
    MySyscall(pForm_SetOnMouseWheel, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnMouseWheelDown)
void
Form_SetOnMouseWheelDown(TForm AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnMouseWheelDown)
    MySyscall(pForm_SetOnMouseWheelDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnMouseWheelUp)
void
Form_SetOnMouseWheelUp(TForm AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnMouseWheelUp)
    MySyscall(pForm_SetOnMouseWheelUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnPaint)
void
Form_SetOnPaint(TForm AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnPaint)
    MySyscall(pForm_SetOnPaint, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnResize)
void
Form_SetOnResize(TForm AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnResize)
    MySyscall(pForm_SetOnResize, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnShortCut)
void
Form_SetOnShortCut(TForm AObj, TShortCutEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnShortCut)
    MySyscall(pForm_SetOnShortCut, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnShow)
void
Form_SetOnShow(TForm AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnShow)
    MySyscall(pForm_SetOnShow, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnStartDock)
void
Form_SetOnStartDock(TForm AObj, TStartDockEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnStartDock)
    MySyscall(pForm_SetOnStartDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnUnDock)
void
Form_SetOnUnDock(TForm AObj, TUnDockEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnUnDock)
    MySyscall(pForm_SetOnUnDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetCanvas)
TCanvas
Form_GetCanvas(TForm AObj) {
    GET_FUNC_ADDR(Form_GetCanvas)
    return (TCanvas)MySyscall(pForm_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetModalResult)
TModalResult
Form_GetModalResult(TForm AObj) {
    GET_FUNC_ADDR(Form_GetModalResult)
    return (TModalResult)MySyscall(pForm_GetModalResult, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetModalResult)
void
Form_SetModalResult(TForm AObj, TModalResult AValue) {
    GET_FUNC_ADDR(Form_SetModalResult)
    MySyscall(pForm_SetModalResult, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetMonitor)
TMonitor
Form_GetMonitor(TForm AObj) {
    GET_FUNC_ADDR(Form_GetMonitor)
    return (TMonitor)MySyscall(pForm_GetMonitor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetLeft)
int32_t
Form_GetLeft(TForm AObj) {
    GET_FUNC_ADDR(Form_GetLeft)
    return (int32_t)MySyscall(pForm_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetLeft)
void
Form_SetLeft(TForm AObj, int32_t AValue) {
    GET_FUNC_ADDR(Form_SetLeft)
    MySyscall(pForm_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetTop)
int32_t
Form_GetTop(TForm AObj) {
    GET_FUNC_ADDR(Form_GetTop)
    return (int32_t)MySyscall(pForm_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetTop)
void
Form_SetTop(TForm AObj, int32_t AValue) {
    GET_FUNC_ADDR(Form_SetTop)
    MySyscall(pForm_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetDockClientCount)
int32_t
Form_GetDockClientCount(TForm AObj) {
    GET_FUNC_ADDR(Form_GetDockClientCount)
    return (int32_t)MySyscall(pForm_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetMouseInClient)
BOOL
Form_GetMouseInClient(TForm AObj) {
    GET_FUNC_ADDR(Form_GetMouseInClient)
    return (BOOL)MySyscall(pForm_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetVisibleDockClientCount)
int32_t
Form_GetVisibleDockClientCount(TForm AObj) {
    GET_FUNC_ADDR(Form_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pForm_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetBrush)
TBrush
Form_GetBrush(TForm AObj) {
    GET_FUNC_ADDR(Form_GetBrush)
    return (TBrush)MySyscall(pForm_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetControlCount)
int32_t
Form_GetControlCount(TForm AObj) {
    GET_FUNC_ADDR(Form_GetControlCount)
    return (int32_t)MySyscall(pForm_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetHandle)
HWND
Form_GetHandle(TForm AObj) {
    GET_FUNC_ADDR(Form_GetHandle)
    return (HWND)MySyscall(pForm_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetParentDoubleBuffered)
BOOL
Form_GetParentDoubleBuffered(TForm AObj) {
    GET_FUNC_ADDR(Form_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pForm_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetParentDoubleBuffered)
void
Form_SetParentDoubleBuffered(TForm AObj, BOOL AValue) {
    GET_FUNC_ADDR(Form_SetParentDoubleBuffered)
    MySyscall(pForm_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetParentWindow)
HWND
Form_GetParentWindow(TForm AObj) {
    GET_FUNC_ADDR(Form_GetParentWindow)
    return (HWND)MySyscall(pForm_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetParentWindow)
void
Form_SetParentWindow(TForm AObj, HWND AValue) {
    GET_FUNC_ADDR(Form_SetParentWindow)
    MySyscall(pForm_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetShowing)
BOOL
Form_GetShowing(TForm AObj) {
    GET_FUNC_ADDR(Form_GetShowing)
    return (BOOL)MySyscall(pForm_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetTabOrder)
TTabOrder
Form_GetTabOrder(TForm AObj) {
    GET_FUNC_ADDR(Form_GetTabOrder)
    return (TTabOrder)MySyscall(pForm_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetTabOrder)
void
Form_SetTabOrder(TForm AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(Form_SetTabOrder)
    MySyscall(pForm_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetTabStop)
BOOL
Form_GetTabStop(TForm AObj) {
    GET_FUNC_ADDR(Form_GetTabStop)
    return (BOOL)MySyscall(pForm_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetTabStop)
void
Form_SetTabStop(TForm AObj, BOOL AValue) {
    GET_FUNC_ADDR(Form_SetTabStop)
    MySyscall(pForm_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetBoundsRect)
TRect
Form_GetBoundsRect(TForm AObj) {
    GET_FUNC_ADDR(Form_GetBoundsRect)
    TRect result;
    MySyscall(pForm_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Form_SetBoundsRect)
void
Form_SetBoundsRect(TForm AObj, TRect AValue) {
    GET_FUNC_ADDR(Form_SetBoundsRect)
    MySyscall(pForm_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetClientOrigin)
TPoint
Form_GetClientOrigin(TForm AObj) {
    GET_FUNC_ADDR(Form_GetClientOrigin)
    TPoint result;
    MySyscall(pForm_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Form_GetClientRect)
TRect
Form_GetClientRect(TForm AObj) {
    GET_FUNC_ADDR(Form_GetClientRect)
    TRect result;
    MySyscall(pForm_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Form_GetControlState)
TControlState
Form_GetControlState(TForm AObj) {
    GET_FUNC_ADDR(Form_GetControlState)
    return (TControlState)MySyscall(pForm_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetControlState)
void
Form_SetControlState(TForm AObj, TControlState AValue) {
    GET_FUNC_ADDR(Form_SetControlState)
    MySyscall(pForm_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetControlStyle)
TControlStyle
Form_GetControlStyle(TForm AObj) {
    GET_FUNC_ADDR(Form_GetControlStyle)
    return (TControlStyle)MySyscall(pForm_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetControlStyle)
void
Form_SetControlStyle(TForm AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(Form_SetControlStyle)
    MySyscall(pForm_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetFloating)
BOOL
Form_GetFloating(TForm AObj) {
    GET_FUNC_ADDR(Form_GetFloating)
    return (BOOL)MySyscall(pForm_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetParent)
TWinControl
Form_GetParent(TForm AObj) {
    GET_FUNC_ADDR(Form_GetParent)
    return (TWinControl)MySyscall(pForm_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetParent)
void
Form_SetParent(TForm AObj, TWinControl AValue) {
    GET_FUNC_ADDR(Form_SetParent)
    MySyscall(pForm_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetCursor)
TCursor
Form_GetCursor(TForm AObj) {
    GET_FUNC_ADDR(Form_GetCursor)
    return (TCursor)MySyscall(pForm_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetCursor)
void
Form_SetCursor(TForm AObj, TCursor AValue) {
    GET_FUNC_ADDR(Form_SetCursor)
    MySyscall(pForm_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetHint)
char*
Form_GetHint(TForm AObj) {
    GET_FUNC_ADDR(Form_GetHint)
    return (char*)MySyscall(pForm_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetHint)
void
Form_SetHint(TForm AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Form_SetHint)
    MySyscall(pForm_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetComponentCount)
int32_t
Form_GetComponentCount(TForm AObj) {
    GET_FUNC_ADDR(Form_GetComponentCount)
    return (int32_t)MySyscall(pForm_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetComponentIndex)
int32_t
Form_GetComponentIndex(TForm AObj) {
    GET_FUNC_ADDR(Form_GetComponentIndex)
    return (int32_t)MySyscall(pForm_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetComponentIndex)
void
Form_SetComponentIndex(TForm AObj, int32_t AValue) {
    GET_FUNC_ADDR(Form_SetComponentIndex)
    MySyscall(pForm_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetOwner)
TComponent
Form_GetOwner(TForm AObj) {
    GET_FUNC_ADDR(Form_GetOwner)
    return (TComponent)MySyscall(pForm_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetName)
char*
Form_GetName(TForm AObj) {
    GET_FUNC_ADDR(Form_GetName)
    return (char*)MySyscall(pForm_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetName)
void
Form_SetName(TForm AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Form_SetName)
    MySyscall(pForm_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetTag)
intptr_t
Form_GetTag(TForm AObj) {
    GET_FUNC_ADDR(Form_GetTag)
    return (intptr_t)MySyscall(pForm_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetTag)
void
Form_SetTag(TForm AObj, intptr_t AValue) {
    GET_FUNC_ADDR(Form_SetTag)
    MySyscall(pForm_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetAnchorSideLeft)
TAnchorSide
Form_GetAnchorSideLeft(TForm AObj) {
    GET_FUNC_ADDR(Form_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pForm_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetAnchorSideLeft)
void
Form_SetAnchorSideLeft(TForm AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Form_SetAnchorSideLeft)
    MySyscall(pForm_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetAnchorSideTop)
TAnchorSide
Form_GetAnchorSideTop(TForm AObj) {
    GET_FUNC_ADDR(Form_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pForm_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetAnchorSideTop)
void
Form_SetAnchorSideTop(TForm AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Form_SetAnchorSideTop)
    MySyscall(pForm_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetAnchorSideRight)
TAnchorSide
Form_GetAnchorSideRight(TForm AObj) {
    GET_FUNC_ADDR(Form_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pForm_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetAnchorSideRight)
void
Form_SetAnchorSideRight(TForm AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Form_SetAnchorSideRight)
    MySyscall(pForm_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetAnchorSideBottom)
TAnchorSide
Form_GetAnchorSideBottom(TForm AObj) {
    GET_FUNC_ADDR(Form_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pForm_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetAnchorSideBottom)
void
Form_SetAnchorSideBottom(TForm AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Form_SetAnchorSideBottom)
    MySyscall(pForm_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetChildSizing)
TControlChildSizing
Form_GetChildSizing(TForm AObj) {
    GET_FUNC_ADDR(Form_GetChildSizing)
    return (TControlChildSizing)MySyscall(pForm_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetChildSizing)
void
Form_SetChildSizing(TForm AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(Form_SetChildSizing)
    MySyscall(pForm_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetBorderSpacing)
TControlBorderSpacing
Form_GetBorderSpacing(TForm AObj) {
    GET_FUNC_ADDR(Form_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pForm_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetBorderSpacing)
void
Form_SetBorderSpacing(TForm AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(Form_SetBorderSpacing)
    MySyscall(pForm_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetDockClients)
TControl
Form_GetDockClients(TForm AObj, int32_t Index) {
    GET_FUNC_ADDR(Form_GetDockClients)
    return (TControl)MySyscall(pForm_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetControls)
TControl
Form_GetControls(TForm AObj, int32_t Index) {
    GET_FUNC_ADDR(Form_GetControls)
    return (TControl)MySyscall(pForm_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetComponents)
TComponent
Form_GetComponents(TForm AObj, int32_t AIndex) {
    GET_FUNC_ADDR(Form_GetComponents)
    return (TComponent)MySyscall(pForm_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_GetAnchorSide)
TAnchorSide
Form_GetAnchorSide(TForm AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(Form_GetAnchorSide)
    return (TAnchorSide)MySyscall(pForm_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_StaticClassType)
TClass
Form_StaticClassType() {
    GET_FUNC_ADDR(Form_StaticClassType)
    return (TClass)MySyscall(pForm_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_Create2)
TForm
Form_Create2(TComponent AOwner, BOOL AInitScale) {
    GET_FUNC_ADDR(Form_Create2)
    return (TForm)MySyscall(pForm_Create2, 2, AOwner, AInitScale ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetOnWndProc)
void
Form_SetOnWndProc(TForm AObj, TWndProcEvent AEventData) {
    GET_FUNC_ADDR(Form_SetOnWndProc)
    MySyscall(pForm_SetOnWndProc, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Form_SetGoPtr)
void
Form_SetGoPtr(TForm AObj, void* APtr) {
    GET_FUNC_ADDR(Form_SetGoPtr)
    MySyscall(pForm_SetGoPtr, 2, AObj, APtr ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TParaAttributes-------------------

DEFINE_FUNC_PTR(ParaAttributes_Assign)
void
ParaAttributes_Assign(TParaAttributes AObj, TObject Source) {
    GET_FUNC_ADDR(ParaAttributes_Assign)
    MySyscall(pParaAttributes_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ParaAttributes_GetNamePath)
char*
ParaAttributes_GetNamePath(TParaAttributes AObj) {
    GET_FUNC_ADDR(ParaAttributes_GetNamePath)
    return (char*)MySyscall(pParaAttributes_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ParaAttributes_ClassType)
TClass
ParaAttributes_ClassType(TParaAttributes AObj) {
    GET_FUNC_ADDR(ParaAttributes_ClassType)
    return (TClass)MySyscall(pParaAttributes_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ParaAttributes_ClassName)
char*
ParaAttributes_ClassName(TParaAttributes AObj) {
    GET_FUNC_ADDR(ParaAttributes_ClassName)
    return (char*)MySyscall(pParaAttributes_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ParaAttributes_InstanceSize)
int32_t
ParaAttributes_InstanceSize(TParaAttributes AObj) {
    GET_FUNC_ADDR(ParaAttributes_InstanceSize)
    return (int32_t)MySyscall(pParaAttributes_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ParaAttributes_InheritsFrom)
BOOL
ParaAttributes_InheritsFrom(TParaAttributes AObj, TClass AClass) {
    GET_FUNC_ADDR(ParaAttributes_InheritsFrom)
    return (BOOL)MySyscall(pParaAttributes_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ParaAttributes_Equals)
BOOL
ParaAttributes_Equals(TParaAttributes AObj, TObject Obj) {
    GET_FUNC_ADDR(ParaAttributes_Equals)
    return (BOOL)MySyscall(pParaAttributes_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ParaAttributes_GetHashCode)
int32_t
ParaAttributes_GetHashCode(TParaAttributes AObj) {
    GET_FUNC_ADDR(ParaAttributes_GetHashCode)
    return (int32_t)MySyscall(pParaAttributes_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ParaAttributes_ToString)
char*
ParaAttributes_ToString(TParaAttributes AObj) {
    GET_FUNC_ADDR(ParaAttributes_ToString)
    return (char*)MySyscall(pParaAttributes_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ParaAttributes_GetAlignment)
TAlignment
ParaAttributes_GetAlignment(TParaAttributes AObj) {
    GET_FUNC_ADDR(ParaAttributes_GetAlignment)
    return (TAlignment)MySyscall(pParaAttributes_GetAlignment, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ParaAttributes_SetAlignment)
void
ParaAttributes_SetAlignment(TParaAttributes AObj, TAlignment AValue) {
    GET_FUNC_ADDR(ParaAttributes_SetAlignment)
    MySyscall(pParaAttributes_SetAlignment, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ParaAttributes_GetFirstIndent)
int32_t
ParaAttributes_GetFirstIndent(TParaAttributes AObj) {
    GET_FUNC_ADDR(ParaAttributes_GetFirstIndent)
    return (int32_t)MySyscall(pParaAttributes_GetFirstIndent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ParaAttributes_SetFirstIndent)
void
ParaAttributes_SetFirstIndent(TParaAttributes AObj, int32_t AValue) {
    GET_FUNC_ADDR(ParaAttributes_SetFirstIndent)
    MySyscall(pParaAttributes_SetFirstIndent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ParaAttributes_GetLeftIndent)
int32_t
ParaAttributes_GetLeftIndent(TParaAttributes AObj) {
    GET_FUNC_ADDR(ParaAttributes_GetLeftIndent)
    return (int32_t)MySyscall(pParaAttributes_GetLeftIndent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ParaAttributes_SetLeftIndent)
void
ParaAttributes_SetLeftIndent(TParaAttributes AObj, int32_t AValue) {
    GET_FUNC_ADDR(ParaAttributes_SetLeftIndent)
    MySyscall(pParaAttributes_SetLeftIndent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ParaAttributes_GetNumbering)
TNumberingStyle
ParaAttributes_GetNumbering(TParaAttributes AObj) {
    GET_FUNC_ADDR(ParaAttributes_GetNumbering)
    return (TNumberingStyle)MySyscall(pParaAttributes_GetNumbering, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ParaAttributes_SetNumbering)
void
ParaAttributes_SetNumbering(TParaAttributes AObj, TNumberingStyle AValue) {
    GET_FUNC_ADDR(ParaAttributes_SetNumbering)
    MySyscall(pParaAttributes_SetNumbering, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ParaAttributes_GetRightIndent)
int32_t
ParaAttributes_GetRightIndent(TParaAttributes AObj) {
    GET_FUNC_ADDR(ParaAttributes_GetRightIndent)
    return (int32_t)MySyscall(pParaAttributes_GetRightIndent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ParaAttributes_SetRightIndent)
void
ParaAttributes_SetRightIndent(TParaAttributes AObj, int32_t AValue) {
    GET_FUNC_ADDR(ParaAttributes_SetRightIndent)
    MySyscall(pParaAttributes_SetRightIndent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ParaAttributes_GetTabCount)
int32_t
ParaAttributes_GetTabCount(TParaAttributes AObj) {
    GET_FUNC_ADDR(ParaAttributes_GetTabCount)
    return (int32_t)MySyscall(pParaAttributes_GetTabCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ParaAttributes_SetTabCount)
void
ParaAttributes_SetTabCount(TParaAttributes AObj, int32_t AValue) {
    GET_FUNC_ADDR(ParaAttributes_SetTabCount)
    MySyscall(pParaAttributes_SetTabCount, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ParaAttributes_GetTab)
int32_t
ParaAttributes_GetTab(TParaAttributes AObj, int8_t Index) {
    GET_FUNC_ADDR(ParaAttributes_GetTab)
    return (int32_t)MySyscall(pParaAttributes_GetTab, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ParaAttributes_SetTab)
void
ParaAttributes_SetTab(TParaAttributes AObj, int8_t Index, int32_t AValue) {
    GET_FUNC_ADDR(ParaAttributes_SetTab)
    MySyscall(pParaAttributes_SetTab, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ParaAttributes_StaticClassType)
TClass
ParaAttributes_StaticClassType() {
    GET_FUNC_ADDR(ParaAttributes_StaticClassType)
    return (TClass)MySyscall(pParaAttributes_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TTextAttributes-------------------

DEFINE_FUNC_PTR(TextAttributes_Assign)
void
TextAttributes_Assign(TTextAttributes AObj, TObject Source) {
    GET_FUNC_ADDR(TextAttributes_Assign)
    MySyscall(pTextAttributes_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TextAttributes_GetNamePath)
char*
TextAttributes_GetNamePath(TTextAttributes AObj) {
    GET_FUNC_ADDR(TextAttributes_GetNamePath)
    return (char*)MySyscall(pTextAttributes_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TextAttributes_ClassType)
TClass
TextAttributes_ClassType(TTextAttributes AObj) {
    GET_FUNC_ADDR(TextAttributes_ClassType)
    return (TClass)MySyscall(pTextAttributes_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TextAttributes_ClassName)
char*
TextAttributes_ClassName(TTextAttributes AObj) {
    GET_FUNC_ADDR(TextAttributes_ClassName)
    return (char*)MySyscall(pTextAttributes_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TextAttributes_InstanceSize)
int32_t
TextAttributes_InstanceSize(TTextAttributes AObj) {
    GET_FUNC_ADDR(TextAttributes_InstanceSize)
    return (int32_t)MySyscall(pTextAttributes_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TextAttributes_InheritsFrom)
BOOL
TextAttributes_InheritsFrom(TTextAttributes AObj, TClass AClass) {
    GET_FUNC_ADDR(TextAttributes_InheritsFrom)
    return (BOOL)MySyscall(pTextAttributes_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TextAttributes_Equals)
BOOL
TextAttributes_Equals(TTextAttributes AObj, TObject Obj) {
    GET_FUNC_ADDR(TextAttributes_Equals)
    return (BOOL)MySyscall(pTextAttributes_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TextAttributes_GetHashCode)
int32_t
TextAttributes_GetHashCode(TTextAttributes AObj) {
    GET_FUNC_ADDR(TextAttributes_GetHashCode)
    return (int32_t)MySyscall(pTextAttributes_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TextAttributes_ToString)
char*
TextAttributes_ToString(TTextAttributes AObj) {
    GET_FUNC_ADDR(TextAttributes_ToString)
    return (char*)MySyscall(pTextAttributes_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TextAttributes_GetCharset)
TFontCharset
TextAttributes_GetCharset(TTextAttributes AObj) {
    GET_FUNC_ADDR(TextAttributes_GetCharset)
    return (TFontCharset)MySyscall(pTextAttributes_GetCharset, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TextAttributes_SetCharset)
void
TextAttributes_SetCharset(TTextAttributes AObj, TFontCharset AValue) {
    GET_FUNC_ADDR(TextAttributes_SetCharset)
    MySyscall(pTextAttributes_SetCharset, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TextAttributes_GetColor)
TColor
TextAttributes_GetColor(TTextAttributes AObj) {
    GET_FUNC_ADDR(TextAttributes_GetColor)
    return (TColor)MySyscall(pTextAttributes_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TextAttributes_SetColor)
void
TextAttributes_SetColor(TTextAttributes AObj, TColor AValue) {
    GET_FUNC_ADDR(TextAttributes_SetColor)
    MySyscall(pTextAttributes_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TextAttributes_GetName)
char*
TextAttributes_GetName(TTextAttributes AObj) {
    GET_FUNC_ADDR(TextAttributes_GetName)
    return (char*)MySyscall(pTextAttributes_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TextAttributes_SetName)
void
TextAttributes_SetName(TTextAttributes AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TextAttributes_SetName)
    MySyscall(pTextAttributes_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TextAttributes_GetPitch)
TFontPitch
TextAttributes_GetPitch(TTextAttributes AObj) {
    GET_FUNC_ADDR(TextAttributes_GetPitch)
    return (TFontPitch)MySyscall(pTextAttributes_GetPitch, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TextAttributes_SetPitch)
void
TextAttributes_SetPitch(TTextAttributes AObj, TFontPitch AValue) {
    GET_FUNC_ADDR(TextAttributes_SetPitch)
    MySyscall(pTextAttributes_SetPitch, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TextAttributes_GetSize)
int32_t
TextAttributes_GetSize(TTextAttributes AObj) {
    GET_FUNC_ADDR(TextAttributes_GetSize)
    return (int32_t)MySyscall(pTextAttributes_GetSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TextAttributes_SetSize)
void
TextAttributes_SetSize(TTextAttributes AObj, int32_t AValue) {
    GET_FUNC_ADDR(TextAttributes_SetSize)
    MySyscall(pTextAttributes_SetSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TextAttributes_GetStyle)
TFontStyles
TextAttributes_GetStyle(TTextAttributes AObj) {
    GET_FUNC_ADDR(TextAttributes_GetStyle)
    return (TFontStyles)MySyscall(pTextAttributes_GetStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TextAttributes_SetStyle)
void
TextAttributes_SetStyle(TTextAttributes AObj, TFontStyles AValue) {
    GET_FUNC_ADDR(TextAttributes_SetStyle)
    MySyscall(pTextAttributes_SetStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TextAttributes_GetHeight)
int32_t
TextAttributes_GetHeight(TTextAttributes AObj) {
    GET_FUNC_ADDR(TextAttributes_GetHeight)
    return (int32_t)MySyscall(pTextAttributes_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TextAttributes_SetHeight)
void
TextAttributes_SetHeight(TTextAttributes AObj, int32_t AValue) {
    GET_FUNC_ADDR(TextAttributes_SetHeight)
    MySyscall(pTextAttributes_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TextAttributes_StaticClassType)
TClass
TextAttributes_StaticClassType() {
    GET_FUNC_ADDR(TextAttributes_StaticClassType)
    return (TClass)MySyscall(pTextAttributes_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TIconOptions-------------------

DEFINE_FUNC_PTR(IconOptions_Assign)
void
IconOptions_Assign(TIconOptions AObj, TObject Source) {
    GET_FUNC_ADDR(IconOptions_Assign)
    MySyscall(pIconOptions_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IconOptions_GetNamePath)
char*
IconOptions_GetNamePath(TIconOptions AObj) {
    GET_FUNC_ADDR(IconOptions_GetNamePath)
    return (char*)MySyscall(pIconOptions_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IconOptions_ClassType)
TClass
IconOptions_ClassType(TIconOptions AObj) {
    GET_FUNC_ADDR(IconOptions_ClassType)
    return (TClass)MySyscall(pIconOptions_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IconOptions_ClassName)
char*
IconOptions_ClassName(TIconOptions AObj) {
    GET_FUNC_ADDR(IconOptions_ClassName)
    return (char*)MySyscall(pIconOptions_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IconOptions_InstanceSize)
int32_t
IconOptions_InstanceSize(TIconOptions AObj) {
    GET_FUNC_ADDR(IconOptions_InstanceSize)
    return (int32_t)MySyscall(pIconOptions_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IconOptions_InheritsFrom)
BOOL
IconOptions_InheritsFrom(TIconOptions AObj, TClass AClass) {
    GET_FUNC_ADDR(IconOptions_InheritsFrom)
    return (BOOL)MySyscall(pIconOptions_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IconOptions_Equals)
BOOL
IconOptions_Equals(TIconOptions AObj, TObject Obj) {
    GET_FUNC_ADDR(IconOptions_Equals)
    return (BOOL)MySyscall(pIconOptions_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IconOptions_GetHashCode)
int32_t
IconOptions_GetHashCode(TIconOptions AObj) {
    GET_FUNC_ADDR(IconOptions_GetHashCode)
    return (int32_t)MySyscall(pIconOptions_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IconOptions_ToString)
char*
IconOptions_ToString(TIconOptions AObj) {
    GET_FUNC_ADDR(IconOptions_ToString)
    return (char*)MySyscall(pIconOptions_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IconOptions_GetArrangement)
TIconArrangement
IconOptions_GetArrangement(TIconOptions AObj) {
    GET_FUNC_ADDR(IconOptions_GetArrangement)
    return (TIconArrangement)MySyscall(pIconOptions_GetArrangement, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IconOptions_SetArrangement)
void
IconOptions_SetArrangement(TIconOptions AObj, TIconArrangement AValue) {
    GET_FUNC_ADDR(IconOptions_SetArrangement)
    MySyscall(pIconOptions_SetArrangement, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IconOptions_GetAutoArrange)
BOOL
IconOptions_GetAutoArrange(TIconOptions AObj) {
    GET_FUNC_ADDR(IconOptions_GetAutoArrange)
    return (BOOL)MySyscall(pIconOptions_GetAutoArrange, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IconOptions_SetAutoArrange)
void
IconOptions_SetAutoArrange(TIconOptions AObj, BOOL AValue) {
    GET_FUNC_ADDR(IconOptions_SetAutoArrange)
    MySyscall(pIconOptions_SetAutoArrange, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(IconOptions_StaticClassType)
TClass
IconOptions_StaticClassType() {
    GET_FUNC_ADDR(IconOptions_StaticClassType)
    return (TClass)MySyscall(pIconOptions_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------Exception-------------------

DEFINE_FUNC_PTR(Exception_ToString)
char*
Exception_ToString(Exception AObj) {
    GET_FUNC_ADDR(Exception_ToString)
    return (char*)MySyscall(pException_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Exception_ClassType)
TClass
Exception_ClassType(Exception AObj) {
    GET_FUNC_ADDR(Exception_ClassType)
    return (TClass)MySyscall(pException_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Exception_ClassName)
char*
Exception_ClassName(Exception AObj) {
    GET_FUNC_ADDR(Exception_ClassName)
    return (char*)MySyscall(pException_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Exception_InstanceSize)
int32_t
Exception_InstanceSize(Exception AObj) {
    GET_FUNC_ADDR(Exception_InstanceSize)
    return (int32_t)MySyscall(pException_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Exception_InheritsFrom)
BOOL
Exception_InheritsFrom(Exception AObj, TClass AClass) {
    GET_FUNC_ADDR(Exception_InheritsFrom)
    return (BOOL)MySyscall(pException_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Exception_Equals)
BOOL
Exception_Equals(Exception AObj, TObject Obj) {
    GET_FUNC_ADDR(Exception_Equals)
    return (BOOL)MySyscall(pException_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Exception_GetHashCode)
int32_t
Exception_GetHashCode(Exception AObj) {
    GET_FUNC_ADDR(Exception_GetHashCode)
    return (int32_t)MySyscall(pException_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Exception_GetMessage)
char*
Exception_GetMessage(Exception AObj) {
    GET_FUNC_ADDR(Exception_GetMessage)
    return (char*)MySyscall(pException_GetMessage, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Exception_SetMessage)
void
Exception_SetMessage(Exception AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Exception_SetMessage)
    MySyscall(pException_SetMessage, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Exception_StaticClassType)
TClass
Exception_StaticClassType() {
    GET_FUNC_ADDR(Exception_StaticClassType)
    return (TClass)MySyscall(pException_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TScrollBar-------------------

DEFINE_FUNC_PTR(ScrollBar_Create)
TScrollBar
ScrollBar_Create(TComponent AOwner) {
    GET_FUNC_ADDR(ScrollBar_Create)
    return (TScrollBar)MySyscall(pScrollBar_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_Free)
void
ScrollBar_Free(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_Free)
    MySyscall(pScrollBar_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetParams)
void
ScrollBar_SetParams(TScrollBar AObj, int32_t APosition, int32_t AMin, int32_t AMax) {
    GET_FUNC_ADDR(ScrollBar_SetParams)
    MySyscall(pScrollBar_SetParams, 4, AObj, APosition, AMin, AMax ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_CanFocus)
BOOL
ScrollBar_CanFocus(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_CanFocus)
    return (BOOL)MySyscall(pScrollBar_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_ContainsControl)
BOOL
ScrollBar_ContainsControl(TScrollBar AObj, TControl Control) {
    GET_FUNC_ADDR(ScrollBar_ContainsControl)
    return (BOOL)MySyscall(pScrollBar_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_ControlAtPos)
TControl
ScrollBar_ControlAtPos(TScrollBar AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(ScrollBar_ControlAtPos)
    return (TControl)MySyscall(pScrollBar_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_DisableAlign)
void
ScrollBar_DisableAlign(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_DisableAlign)
    MySyscall(pScrollBar_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_EnableAlign)
void
ScrollBar_EnableAlign(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_EnableAlign)
    MySyscall(pScrollBar_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_FindChildControl)
TControl
ScrollBar_FindChildControl(TScrollBar AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(ScrollBar_FindChildControl)
    return (TControl)MySyscall(pScrollBar_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_FlipChildren)
void
ScrollBar_FlipChildren(TScrollBar AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(ScrollBar_FlipChildren)
    MySyscall(pScrollBar_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_Focused)
BOOL
ScrollBar_Focused(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_Focused)
    return (BOOL)MySyscall(pScrollBar_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_HandleAllocated)
BOOL
ScrollBar_HandleAllocated(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_HandleAllocated)
    return (BOOL)MySyscall(pScrollBar_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_InsertControl)
void
ScrollBar_InsertControl(TScrollBar AObj, TControl AControl) {
    GET_FUNC_ADDR(ScrollBar_InsertControl)
    MySyscall(pScrollBar_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_Invalidate)
void
ScrollBar_Invalidate(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_Invalidate)
    MySyscall(pScrollBar_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_PaintTo)
void
ScrollBar_PaintTo(TScrollBar AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(ScrollBar_PaintTo)
    MySyscall(pScrollBar_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_RemoveControl)
void
ScrollBar_RemoveControl(TScrollBar AObj, TControl AControl) {
    GET_FUNC_ADDR(ScrollBar_RemoveControl)
    MySyscall(pScrollBar_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_Realign)
void
ScrollBar_Realign(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_Realign)
    MySyscall(pScrollBar_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_Repaint)
void
ScrollBar_Repaint(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_Repaint)
    MySyscall(pScrollBar_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_ScaleBy)
void
ScrollBar_ScaleBy(TScrollBar AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(ScrollBar_ScaleBy)
    MySyscall(pScrollBar_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_ScrollBy)
void
ScrollBar_ScrollBy(TScrollBar AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(ScrollBar_ScrollBy)
    MySyscall(pScrollBar_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetBounds)
void
ScrollBar_SetBounds(TScrollBar AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(ScrollBar_SetBounds)
    MySyscall(pScrollBar_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetFocus)
void
ScrollBar_SetFocus(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_SetFocus)
    MySyscall(pScrollBar_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_Update)
void
ScrollBar_Update(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_Update)
    MySyscall(pScrollBar_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_BringToFront)
void
ScrollBar_BringToFront(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_BringToFront)
    MySyscall(pScrollBar_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_ClientToScreen)
TPoint
ScrollBar_ClientToScreen(TScrollBar AObj, TPoint Point) {
    GET_FUNC_ADDR(ScrollBar_ClientToScreen)
    TPoint result;
    MySyscall(pScrollBar_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ScrollBar_ClientToParent)
TPoint
ScrollBar_ClientToParent(TScrollBar AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ScrollBar_ClientToParent)
    TPoint result;
    MySyscall(pScrollBar_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ScrollBar_Dragging)
BOOL
ScrollBar_Dragging(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_Dragging)
    return (BOOL)MySyscall(pScrollBar_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_HasParent)
BOOL
ScrollBar_HasParent(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_HasParent)
    return (BOOL)MySyscall(pScrollBar_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_Hide)
void
ScrollBar_Hide(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_Hide)
    MySyscall(pScrollBar_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_Perform)
intptr_t
ScrollBar_Perform(TScrollBar AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(ScrollBar_Perform)
    return (intptr_t)MySyscall(pScrollBar_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_Refresh)
void
ScrollBar_Refresh(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_Refresh)
    MySyscall(pScrollBar_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_ScreenToClient)
TPoint
ScrollBar_ScreenToClient(TScrollBar AObj, TPoint Point) {
    GET_FUNC_ADDR(ScrollBar_ScreenToClient)
    TPoint result;
    MySyscall(pScrollBar_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ScrollBar_ParentToClient)
TPoint
ScrollBar_ParentToClient(TScrollBar AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ScrollBar_ParentToClient)
    TPoint result;
    MySyscall(pScrollBar_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ScrollBar_SendToBack)
void
ScrollBar_SendToBack(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_SendToBack)
    MySyscall(pScrollBar_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_Show)
void
ScrollBar_Show(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_Show)
    MySyscall(pScrollBar_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetTextBuf)
int32_t
ScrollBar_GetTextBuf(TScrollBar AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(ScrollBar_GetTextBuf)
    return (int32_t)MySyscall(pScrollBar_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetTextLen)
int32_t
ScrollBar_GetTextLen(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetTextLen)
    return (int32_t)MySyscall(pScrollBar_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetTextBuf)
void
ScrollBar_SetTextBuf(TScrollBar AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(ScrollBar_SetTextBuf)
    MySyscall(pScrollBar_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_FindComponent)
TComponent
ScrollBar_FindComponent(TScrollBar AObj, CChar char* AName) {
    GET_FUNC_ADDR(ScrollBar_FindComponent)
    return (TComponent)MySyscall(pScrollBar_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetNamePath)
char*
ScrollBar_GetNamePath(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetNamePath)
    return (char*)MySyscall(pScrollBar_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_Assign)
void
ScrollBar_Assign(TScrollBar AObj, TObject Source) {
    GET_FUNC_ADDR(ScrollBar_Assign)
    MySyscall(pScrollBar_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_ClassType)
TClass
ScrollBar_ClassType(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_ClassType)
    return (TClass)MySyscall(pScrollBar_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_ClassName)
char*
ScrollBar_ClassName(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_ClassName)
    return (char*)MySyscall(pScrollBar_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_InstanceSize)
int32_t
ScrollBar_InstanceSize(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_InstanceSize)
    return (int32_t)MySyscall(pScrollBar_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_InheritsFrom)
BOOL
ScrollBar_InheritsFrom(TScrollBar AObj, TClass AClass) {
    GET_FUNC_ADDR(ScrollBar_InheritsFrom)
    return (BOOL)MySyscall(pScrollBar_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_Equals)
BOOL
ScrollBar_Equals(TScrollBar AObj, TObject Obj) {
    GET_FUNC_ADDR(ScrollBar_Equals)
    return (BOOL)MySyscall(pScrollBar_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetHashCode)
int32_t
ScrollBar_GetHashCode(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetHashCode)
    return (int32_t)MySyscall(pScrollBar_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_ToString)
char*
ScrollBar_ToString(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_ToString)
    return (char*)MySyscall(pScrollBar_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_AnchorToNeighbour)
void
ScrollBar_AnchorToNeighbour(TScrollBar AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ScrollBar_AnchorToNeighbour)
    MySyscall(pScrollBar_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_AnchorParallel)
void
ScrollBar_AnchorParallel(TScrollBar AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ScrollBar_AnchorParallel)
    MySyscall(pScrollBar_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_AnchorHorizontalCenterTo)
void
ScrollBar_AnchorHorizontalCenterTo(TScrollBar AObj, TControl ASibling) {
    GET_FUNC_ADDR(ScrollBar_AnchorHorizontalCenterTo)
    MySyscall(pScrollBar_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_AnchorVerticalCenterTo)
void
ScrollBar_AnchorVerticalCenterTo(TScrollBar AObj, TControl ASibling) {
    GET_FUNC_ADDR(ScrollBar_AnchorVerticalCenterTo)
    MySyscall(pScrollBar_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_AnchorSame)
void
ScrollBar_AnchorSame(TScrollBar AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(ScrollBar_AnchorSame)
    MySyscall(pScrollBar_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_AnchorAsAlign)
void
ScrollBar_AnchorAsAlign(TScrollBar AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(ScrollBar_AnchorAsAlign)
    MySyscall(pScrollBar_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_AnchorClient)
void
ScrollBar_AnchorClient(TScrollBar AObj, int32_t ASpace) {
    GET_FUNC_ADDR(ScrollBar_AnchorClient)
    MySyscall(pScrollBar_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_ScaleDesignToForm)
int32_t
ScrollBar_ScaleDesignToForm(TScrollBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ScrollBar_ScaleDesignToForm)
    return (int32_t)MySyscall(pScrollBar_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_ScaleFormToDesign)
int32_t
ScrollBar_ScaleFormToDesign(TScrollBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ScrollBar_ScaleFormToDesign)
    return (int32_t)MySyscall(pScrollBar_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_Scale96ToForm)
int32_t
ScrollBar_Scale96ToForm(TScrollBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ScrollBar_Scale96ToForm)
    return (int32_t)MySyscall(pScrollBar_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_ScaleFormTo96)
int32_t
ScrollBar_ScaleFormTo96(TScrollBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ScrollBar_ScaleFormTo96)
    return (int32_t)MySyscall(pScrollBar_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_Scale96ToFont)
int32_t
ScrollBar_Scale96ToFont(TScrollBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ScrollBar_Scale96ToFont)
    return (int32_t)MySyscall(pScrollBar_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_ScaleFontTo96)
int32_t
ScrollBar_ScaleFontTo96(TScrollBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ScrollBar_ScaleFontTo96)
    return (int32_t)MySyscall(pScrollBar_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_ScaleScreenToFont)
int32_t
ScrollBar_ScaleScreenToFont(TScrollBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ScrollBar_ScaleScreenToFont)
    return (int32_t)MySyscall(pScrollBar_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_ScaleFontToScreen)
int32_t
ScrollBar_ScaleFontToScreen(TScrollBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ScrollBar_ScaleFontToScreen)
    return (int32_t)MySyscall(pScrollBar_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_Scale96ToScreen)
int32_t
ScrollBar_Scale96ToScreen(TScrollBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ScrollBar_Scale96ToScreen)
    return (int32_t)MySyscall(pScrollBar_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_ScaleScreenTo96)
int32_t
ScrollBar_ScaleScreenTo96(TScrollBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(ScrollBar_ScaleScreenTo96)
    return (int32_t)MySyscall(pScrollBar_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_AutoAdjustLayout)
void
ScrollBar_AutoAdjustLayout(TScrollBar AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(ScrollBar_AutoAdjustLayout)
    MySyscall(pScrollBar_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_FixDesignFontsPPI)
void
ScrollBar_FixDesignFontsPPI(TScrollBar AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(ScrollBar_FixDesignFontsPPI)
    MySyscall(pScrollBar_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_ScaleFontsPPI)
void
ScrollBar_ScaleFontsPPI(TScrollBar AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(ScrollBar_ScaleFontsPPI)
    MySyscall(pScrollBar_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetAlign)
TAlign
ScrollBar_GetAlign(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetAlign)
    return (TAlign)MySyscall(pScrollBar_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetAlign)
void
ScrollBar_SetAlign(TScrollBar AObj, TAlign AValue) {
    GET_FUNC_ADDR(ScrollBar_SetAlign)
    MySyscall(pScrollBar_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetAnchors)
TAnchors
ScrollBar_GetAnchors(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetAnchors)
    return (TAnchors)MySyscall(pScrollBar_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetAnchors)
void
ScrollBar_SetAnchors(TScrollBar AObj, TAnchors AValue) {
    GET_FUNC_ADDR(ScrollBar_SetAnchors)
    MySyscall(pScrollBar_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetBiDiMode)
TBiDiMode
ScrollBar_GetBiDiMode(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetBiDiMode)
    return (TBiDiMode)MySyscall(pScrollBar_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetBiDiMode)
void
ScrollBar_SetBiDiMode(TScrollBar AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(ScrollBar_SetBiDiMode)
    MySyscall(pScrollBar_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetConstraints)
TSizeConstraints
ScrollBar_GetConstraints(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetConstraints)
    return (TSizeConstraints)MySyscall(pScrollBar_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetConstraints)
void
ScrollBar_SetConstraints(TScrollBar AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(ScrollBar_SetConstraints)
    MySyscall(pScrollBar_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetDoubleBuffered)
BOOL
ScrollBar_GetDoubleBuffered(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetDoubleBuffered)
    return (BOOL)MySyscall(pScrollBar_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetDoubleBuffered)
void
ScrollBar_SetDoubleBuffered(TScrollBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ScrollBar_SetDoubleBuffered)
    MySyscall(pScrollBar_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetDragCursor)
TCursor
ScrollBar_GetDragCursor(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetDragCursor)
    return (TCursor)MySyscall(pScrollBar_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetDragCursor)
void
ScrollBar_SetDragCursor(TScrollBar AObj, TCursor AValue) {
    GET_FUNC_ADDR(ScrollBar_SetDragCursor)
    MySyscall(pScrollBar_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetDragKind)
TDragKind
ScrollBar_GetDragKind(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetDragKind)
    return (TDragKind)MySyscall(pScrollBar_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetDragKind)
void
ScrollBar_SetDragKind(TScrollBar AObj, TDragKind AValue) {
    GET_FUNC_ADDR(ScrollBar_SetDragKind)
    MySyscall(pScrollBar_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetDragMode)
TDragMode
ScrollBar_GetDragMode(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetDragMode)
    return (TDragMode)MySyscall(pScrollBar_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetDragMode)
void
ScrollBar_SetDragMode(TScrollBar AObj, TDragMode AValue) {
    GET_FUNC_ADDR(ScrollBar_SetDragMode)
    MySyscall(pScrollBar_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetEnabled)
BOOL
ScrollBar_GetEnabled(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetEnabled)
    return (BOOL)MySyscall(pScrollBar_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetEnabled)
void
ScrollBar_SetEnabled(TScrollBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ScrollBar_SetEnabled)
    MySyscall(pScrollBar_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetKind)
TScrollBarKind
ScrollBar_GetKind(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetKind)
    return (TScrollBarKind)MySyscall(pScrollBar_GetKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetKind)
void
ScrollBar_SetKind(TScrollBar AObj, TScrollBarKind AValue) {
    GET_FUNC_ADDR(ScrollBar_SetKind)
    MySyscall(pScrollBar_SetKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetLargeChange)
TScrollBarInc
ScrollBar_GetLargeChange(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetLargeChange)
    return (TScrollBarInc)MySyscall(pScrollBar_GetLargeChange, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetLargeChange)
void
ScrollBar_SetLargeChange(TScrollBar AObj, TScrollBarInc AValue) {
    GET_FUNC_ADDR(ScrollBar_SetLargeChange)
    MySyscall(pScrollBar_SetLargeChange, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetMax)
int32_t
ScrollBar_GetMax(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetMax)
    return (int32_t)MySyscall(pScrollBar_GetMax, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetMax)
void
ScrollBar_SetMax(TScrollBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ScrollBar_SetMax)
    MySyscall(pScrollBar_SetMax, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetMin)
int32_t
ScrollBar_GetMin(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetMin)
    return (int32_t)MySyscall(pScrollBar_GetMin, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetMin)
void
ScrollBar_SetMin(TScrollBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ScrollBar_SetMin)
    MySyscall(pScrollBar_SetMin, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetPageSize)
int32_t
ScrollBar_GetPageSize(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetPageSize)
    return (int32_t)MySyscall(pScrollBar_GetPageSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetPageSize)
void
ScrollBar_SetPageSize(TScrollBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ScrollBar_SetPageSize)
    MySyscall(pScrollBar_SetPageSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetParentDoubleBuffered)
BOOL
ScrollBar_GetParentDoubleBuffered(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pScrollBar_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetParentDoubleBuffered)
void
ScrollBar_SetParentDoubleBuffered(TScrollBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ScrollBar_SetParentDoubleBuffered)
    MySyscall(pScrollBar_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetParentShowHint)
BOOL
ScrollBar_GetParentShowHint(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetParentShowHint)
    return (BOOL)MySyscall(pScrollBar_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetParentShowHint)
void
ScrollBar_SetParentShowHint(TScrollBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ScrollBar_SetParentShowHint)
    MySyscall(pScrollBar_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetPopupMenu)
TPopupMenu
ScrollBar_GetPopupMenu(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetPopupMenu)
    return (TPopupMenu)MySyscall(pScrollBar_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetPopupMenu)
void
ScrollBar_SetPopupMenu(TScrollBar AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(ScrollBar_SetPopupMenu)
    MySyscall(pScrollBar_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetPosition)
int32_t
ScrollBar_GetPosition(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetPosition)
    return (int32_t)MySyscall(pScrollBar_GetPosition, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetPosition)
void
ScrollBar_SetPosition(TScrollBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ScrollBar_SetPosition)
    MySyscall(pScrollBar_SetPosition, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetShowHint)
BOOL
ScrollBar_GetShowHint(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetShowHint)
    return (BOOL)MySyscall(pScrollBar_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetShowHint)
void
ScrollBar_SetShowHint(TScrollBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ScrollBar_SetShowHint)
    MySyscall(pScrollBar_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetSmallChange)
TScrollBarInc
ScrollBar_GetSmallChange(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetSmallChange)
    return (TScrollBarInc)MySyscall(pScrollBar_GetSmallChange, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetSmallChange)
void
ScrollBar_SetSmallChange(TScrollBar AObj, TScrollBarInc AValue) {
    GET_FUNC_ADDR(ScrollBar_SetSmallChange)
    MySyscall(pScrollBar_SetSmallChange, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetTabOrder)
TTabOrder
ScrollBar_GetTabOrder(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetTabOrder)
    return (TTabOrder)MySyscall(pScrollBar_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetTabOrder)
void
ScrollBar_SetTabOrder(TScrollBar AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(ScrollBar_SetTabOrder)
    MySyscall(pScrollBar_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetTabStop)
BOOL
ScrollBar_GetTabStop(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetTabStop)
    return (BOOL)MySyscall(pScrollBar_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetTabStop)
void
ScrollBar_SetTabStop(TScrollBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ScrollBar_SetTabStop)
    MySyscall(pScrollBar_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetVisible)
BOOL
ScrollBar_GetVisible(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetVisible)
    return (BOOL)MySyscall(pScrollBar_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetVisible)
void
ScrollBar_SetVisible(TScrollBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ScrollBar_SetVisible)
    MySyscall(pScrollBar_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetOnContextPopup)
void
ScrollBar_SetOnContextPopup(TScrollBar AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(ScrollBar_SetOnContextPopup)
    MySyscall(pScrollBar_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetOnChange)
void
ScrollBar_SetOnChange(TScrollBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ScrollBar_SetOnChange)
    MySyscall(pScrollBar_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetOnDragDrop)
void
ScrollBar_SetOnDragDrop(TScrollBar AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(ScrollBar_SetOnDragDrop)
    MySyscall(pScrollBar_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetOnDragOver)
void
ScrollBar_SetOnDragOver(TScrollBar AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(ScrollBar_SetOnDragOver)
    MySyscall(pScrollBar_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetOnEndDrag)
void
ScrollBar_SetOnEndDrag(TScrollBar AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(ScrollBar_SetOnEndDrag)
    MySyscall(pScrollBar_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetOnEnter)
void
ScrollBar_SetOnEnter(TScrollBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ScrollBar_SetOnEnter)
    MySyscall(pScrollBar_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetOnExit)
void
ScrollBar_SetOnExit(TScrollBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ScrollBar_SetOnExit)
    MySyscall(pScrollBar_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetOnKeyDown)
void
ScrollBar_SetOnKeyDown(TScrollBar AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(ScrollBar_SetOnKeyDown)
    MySyscall(pScrollBar_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetOnKeyPress)
void
ScrollBar_SetOnKeyPress(TScrollBar AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(ScrollBar_SetOnKeyPress)
    MySyscall(pScrollBar_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetOnKeyUp)
void
ScrollBar_SetOnKeyUp(TScrollBar AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(ScrollBar_SetOnKeyUp)
    MySyscall(pScrollBar_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetDockClientCount)
int32_t
ScrollBar_GetDockClientCount(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetDockClientCount)
    return (int32_t)MySyscall(pScrollBar_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetDockSite)
BOOL
ScrollBar_GetDockSite(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetDockSite)
    return (BOOL)MySyscall(pScrollBar_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetDockSite)
void
ScrollBar_SetDockSite(TScrollBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ScrollBar_SetDockSite)
    MySyscall(pScrollBar_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetMouseInClient)
BOOL
ScrollBar_GetMouseInClient(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetMouseInClient)
    return (BOOL)MySyscall(pScrollBar_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetVisibleDockClientCount)
int32_t
ScrollBar_GetVisibleDockClientCount(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pScrollBar_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetBrush)
TBrush
ScrollBar_GetBrush(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetBrush)
    return (TBrush)MySyscall(pScrollBar_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetControlCount)
int32_t
ScrollBar_GetControlCount(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetControlCount)
    return (int32_t)MySyscall(pScrollBar_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetHandle)
HWND
ScrollBar_GetHandle(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetHandle)
    return (HWND)MySyscall(pScrollBar_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetParentWindow)
HWND
ScrollBar_GetParentWindow(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetParentWindow)
    return (HWND)MySyscall(pScrollBar_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetParentWindow)
void
ScrollBar_SetParentWindow(TScrollBar AObj, HWND AValue) {
    GET_FUNC_ADDR(ScrollBar_SetParentWindow)
    MySyscall(pScrollBar_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetShowing)
BOOL
ScrollBar_GetShowing(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetShowing)
    return (BOOL)MySyscall(pScrollBar_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetUseDockManager)
BOOL
ScrollBar_GetUseDockManager(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetUseDockManager)
    return (BOOL)MySyscall(pScrollBar_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetUseDockManager)
void
ScrollBar_SetUseDockManager(TScrollBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ScrollBar_SetUseDockManager)
    MySyscall(pScrollBar_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetAction)
TAction
ScrollBar_GetAction(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetAction)
    return (TAction)MySyscall(pScrollBar_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetAction)
void
ScrollBar_SetAction(TScrollBar AObj, TAction AValue) {
    GET_FUNC_ADDR(ScrollBar_SetAction)
    MySyscall(pScrollBar_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetBoundsRect)
TRect
ScrollBar_GetBoundsRect(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetBoundsRect)
    TRect result;
    MySyscall(pScrollBar_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ScrollBar_SetBoundsRect)
void
ScrollBar_SetBoundsRect(TScrollBar AObj, TRect AValue) {
    GET_FUNC_ADDR(ScrollBar_SetBoundsRect)
    MySyscall(pScrollBar_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetClientHeight)
int32_t
ScrollBar_GetClientHeight(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetClientHeight)
    return (int32_t)MySyscall(pScrollBar_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetClientHeight)
void
ScrollBar_SetClientHeight(TScrollBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ScrollBar_SetClientHeight)
    MySyscall(pScrollBar_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetClientOrigin)
TPoint
ScrollBar_GetClientOrigin(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetClientOrigin)
    TPoint result;
    MySyscall(pScrollBar_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ScrollBar_GetClientRect)
TRect
ScrollBar_GetClientRect(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetClientRect)
    TRect result;
    MySyscall(pScrollBar_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ScrollBar_GetClientWidth)
int32_t
ScrollBar_GetClientWidth(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetClientWidth)
    return (int32_t)MySyscall(pScrollBar_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetClientWidth)
void
ScrollBar_SetClientWidth(TScrollBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ScrollBar_SetClientWidth)
    MySyscall(pScrollBar_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetControlState)
TControlState
ScrollBar_GetControlState(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetControlState)
    return (TControlState)MySyscall(pScrollBar_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetControlState)
void
ScrollBar_SetControlState(TScrollBar AObj, TControlState AValue) {
    GET_FUNC_ADDR(ScrollBar_SetControlState)
    MySyscall(pScrollBar_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetControlStyle)
TControlStyle
ScrollBar_GetControlStyle(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetControlStyle)
    return (TControlStyle)MySyscall(pScrollBar_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetControlStyle)
void
ScrollBar_SetControlStyle(TScrollBar AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(ScrollBar_SetControlStyle)
    MySyscall(pScrollBar_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetFloating)
BOOL
ScrollBar_GetFloating(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetFloating)
    return (BOOL)MySyscall(pScrollBar_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetParent)
TWinControl
ScrollBar_GetParent(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetParent)
    return (TWinControl)MySyscall(pScrollBar_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetParent)
void
ScrollBar_SetParent(TScrollBar AObj, TWinControl AValue) {
    GET_FUNC_ADDR(ScrollBar_SetParent)
    MySyscall(pScrollBar_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetLeft)
int32_t
ScrollBar_GetLeft(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetLeft)
    return (int32_t)MySyscall(pScrollBar_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetLeft)
void
ScrollBar_SetLeft(TScrollBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ScrollBar_SetLeft)
    MySyscall(pScrollBar_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetTop)
int32_t
ScrollBar_GetTop(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetTop)
    return (int32_t)MySyscall(pScrollBar_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetTop)
void
ScrollBar_SetTop(TScrollBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ScrollBar_SetTop)
    MySyscall(pScrollBar_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetWidth)
int32_t
ScrollBar_GetWidth(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetWidth)
    return (int32_t)MySyscall(pScrollBar_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetWidth)
void
ScrollBar_SetWidth(TScrollBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ScrollBar_SetWidth)
    MySyscall(pScrollBar_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetHeight)
int32_t
ScrollBar_GetHeight(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetHeight)
    return (int32_t)MySyscall(pScrollBar_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetHeight)
void
ScrollBar_SetHeight(TScrollBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ScrollBar_SetHeight)
    MySyscall(pScrollBar_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetCursor)
TCursor
ScrollBar_GetCursor(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetCursor)
    return (TCursor)MySyscall(pScrollBar_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetCursor)
void
ScrollBar_SetCursor(TScrollBar AObj, TCursor AValue) {
    GET_FUNC_ADDR(ScrollBar_SetCursor)
    MySyscall(pScrollBar_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetHint)
char*
ScrollBar_GetHint(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetHint)
    return (char*)MySyscall(pScrollBar_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetHint)
void
ScrollBar_SetHint(TScrollBar AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ScrollBar_SetHint)
    MySyscall(pScrollBar_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetComponentCount)
int32_t
ScrollBar_GetComponentCount(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetComponentCount)
    return (int32_t)MySyscall(pScrollBar_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetComponentIndex)
int32_t
ScrollBar_GetComponentIndex(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetComponentIndex)
    return (int32_t)MySyscall(pScrollBar_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetComponentIndex)
void
ScrollBar_SetComponentIndex(TScrollBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ScrollBar_SetComponentIndex)
    MySyscall(pScrollBar_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetOwner)
TComponent
ScrollBar_GetOwner(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetOwner)
    return (TComponent)MySyscall(pScrollBar_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetName)
char*
ScrollBar_GetName(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetName)
    return (char*)MySyscall(pScrollBar_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetName)
void
ScrollBar_SetName(TScrollBar AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ScrollBar_SetName)
    MySyscall(pScrollBar_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetTag)
intptr_t
ScrollBar_GetTag(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetTag)
    return (intptr_t)MySyscall(pScrollBar_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetTag)
void
ScrollBar_SetTag(TScrollBar AObj, intptr_t AValue) {
    GET_FUNC_ADDR(ScrollBar_SetTag)
    MySyscall(pScrollBar_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetAnchorSideLeft)
TAnchorSide
ScrollBar_GetAnchorSideLeft(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pScrollBar_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetAnchorSideLeft)
void
ScrollBar_SetAnchorSideLeft(TScrollBar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ScrollBar_SetAnchorSideLeft)
    MySyscall(pScrollBar_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetAnchorSideTop)
TAnchorSide
ScrollBar_GetAnchorSideTop(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pScrollBar_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetAnchorSideTop)
void
ScrollBar_SetAnchorSideTop(TScrollBar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ScrollBar_SetAnchorSideTop)
    MySyscall(pScrollBar_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetAnchorSideRight)
TAnchorSide
ScrollBar_GetAnchorSideRight(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pScrollBar_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetAnchorSideRight)
void
ScrollBar_SetAnchorSideRight(TScrollBar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ScrollBar_SetAnchorSideRight)
    MySyscall(pScrollBar_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetAnchorSideBottom)
TAnchorSide
ScrollBar_GetAnchorSideBottom(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pScrollBar_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetAnchorSideBottom)
void
ScrollBar_SetAnchorSideBottom(TScrollBar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ScrollBar_SetAnchorSideBottom)
    MySyscall(pScrollBar_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetChildSizing)
TControlChildSizing
ScrollBar_GetChildSizing(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetChildSizing)
    return (TControlChildSizing)MySyscall(pScrollBar_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetChildSizing)
void
ScrollBar_SetChildSizing(TScrollBar AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(ScrollBar_SetChildSizing)
    MySyscall(pScrollBar_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetBorderSpacing)
TControlBorderSpacing
ScrollBar_GetBorderSpacing(TScrollBar AObj) {
    GET_FUNC_ADDR(ScrollBar_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pScrollBar_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_SetBorderSpacing)
void
ScrollBar_SetBorderSpacing(TScrollBar AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(ScrollBar_SetBorderSpacing)
    MySyscall(pScrollBar_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetDockClients)
TControl
ScrollBar_GetDockClients(TScrollBar AObj, int32_t Index) {
    GET_FUNC_ADDR(ScrollBar_GetDockClients)
    return (TControl)MySyscall(pScrollBar_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetControls)
TControl
ScrollBar_GetControls(TScrollBar AObj, int32_t Index) {
    GET_FUNC_ADDR(ScrollBar_GetControls)
    return (TControl)MySyscall(pScrollBar_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetComponents)
TComponent
ScrollBar_GetComponents(TScrollBar AObj, int32_t AIndex) {
    GET_FUNC_ADDR(ScrollBar_GetComponents)
    return (TComponent)MySyscall(pScrollBar_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_GetAnchorSide)
TAnchorSide
ScrollBar_GetAnchorSide(TScrollBar AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(ScrollBar_GetAnchorSide)
    return (TAnchorSide)MySyscall(pScrollBar_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBar_StaticClassType)
TClass
ScrollBar_StaticClassType() {
    GET_FUNC_ADDR(ScrollBar_StaticClassType)
    return (TClass)MySyscall(pScrollBar_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TMaskEdit-------------------

DEFINE_FUNC_PTR(MaskEdit_Create)
TMaskEdit
MaskEdit_Create(TComponent AOwner) {
    GET_FUNC_ADDR(MaskEdit_Create)
    return (TMaskEdit)MySyscall(pMaskEdit_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_Free)
void
MaskEdit_Free(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_Free)
    MySyscall(pMaskEdit_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_ValidateEdit)
void
MaskEdit_ValidateEdit(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_ValidateEdit)
    MySyscall(pMaskEdit_ValidateEdit, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_Clear)
void
MaskEdit_Clear(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_Clear)
    MySyscall(pMaskEdit_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetTextLen)
int32_t
MaskEdit_GetTextLen(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetTextLen)
    return (int32_t)MySyscall(pMaskEdit_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_ClearSelection)
void
MaskEdit_ClearSelection(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_ClearSelection)
    MySyscall(pMaskEdit_ClearSelection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_CopyToClipboard)
void
MaskEdit_CopyToClipboard(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_CopyToClipboard)
    MySyscall(pMaskEdit_CopyToClipboard, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_CutToClipboard)
void
MaskEdit_CutToClipboard(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_CutToClipboard)
    MySyscall(pMaskEdit_CutToClipboard, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_PasteFromClipboard)
void
MaskEdit_PasteFromClipboard(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_PasteFromClipboard)
    MySyscall(pMaskEdit_PasteFromClipboard, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_Undo)
void
MaskEdit_Undo(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_Undo)
    MySyscall(pMaskEdit_Undo, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SelectAll)
void
MaskEdit_SelectAll(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_SelectAll)
    MySyscall(pMaskEdit_SelectAll, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_CanFocus)
BOOL
MaskEdit_CanFocus(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_CanFocus)
    return (BOOL)MySyscall(pMaskEdit_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_ContainsControl)
BOOL
MaskEdit_ContainsControl(TMaskEdit AObj, TControl Control) {
    GET_FUNC_ADDR(MaskEdit_ContainsControl)
    return (BOOL)MySyscall(pMaskEdit_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_ControlAtPos)
TControl
MaskEdit_ControlAtPos(TMaskEdit AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(MaskEdit_ControlAtPos)
    return (TControl)MySyscall(pMaskEdit_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_DisableAlign)
void
MaskEdit_DisableAlign(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_DisableAlign)
    MySyscall(pMaskEdit_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_EnableAlign)
void
MaskEdit_EnableAlign(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_EnableAlign)
    MySyscall(pMaskEdit_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_FindChildControl)
TControl
MaskEdit_FindChildControl(TMaskEdit AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(MaskEdit_FindChildControl)
    return (TControl)MySyscall(pMaskEdit_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_FlipChildren)
void
MaskEdit_FlipChildren(TMaskEdit AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(MaskEdit_FlipChildren)
    MySyscall(pMaskEdit_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_Focused)
BOOL
MaskEdit_Focused(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_Focused)
    return (BOOL)MySyscall(pMaskEdit_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_HandleAllocated)
BOOL
MaskEdit_HandleAllocated(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_HandleAllocated)
    return (BOOL)MySyscall(pMaskEdit_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_InsertControl)
void
MaskEdit_InsertControl(TMaskEdit AObj, TControl AControl) {
    GET_FUNC_ADDR(MaskEdit_InsertControl)
    MySyscall(pMaskEdit_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_Invalidate)
void
MaskEdit_Invalidate(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_Invalidate)
    MySyscall(pMaskEdit_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_PaintTo)
void
MaskEdit_PaintTo(TMaskEdit AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(MaskEdit_PaintTo)
    MySyscall(pMaskEdit_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_RemoveControl)
void
MaskEdit_RemoveControl(TMaskEdit AObj, TControl AControl) {
    GET_FUNC_ADDR(MaskEdit_RemoveControl)
    MySyscall(pMaskEdit_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_Realign)
void
MaskEdit_Realign(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_Realign)
    MySyscall(pMaskEdit_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_Repaint)
void
MaskEdit_Repaint(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_Repaint)
    MySyscall(pMaskEdit_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_ScaleBy)
void
MaskEdit_ScaleBy(TMaskEdit AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(MaskEdit_ScaleBy)
    MySyscall(pMaskEdit_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_ScrollBy)
void
MaskEdit_ScrollBy(TMaskEdit AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(MaskEdit_ScrollBy)
    MySyscall(pMaskEdit_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetBounds)
void
MaskEdit_SetBounds(TMaskEdit AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(MaskEdit_SetBounds)
    MySyscall(pMaskEdit_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetFocus)
void
MaskEdit_SetFocus(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_SetFocus)
    MySyscall(pMaskEdit_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_Update)
void
MaskEdit_Update(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_Update)
    MySyscall(pMaskEdit_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_BringToFront)
void
MaskEdit_BringToFront(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_BringToFront)
    MySyscall(pMaskEdit_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_ClientToScreen)
TPoint
MaskEdit_ClientToScreen(TMaskEdit AObj, TPoint Point) {
    GET_FUNC_ADDR(MaskEdit_ClientToScreen)
    TPoint result;
    MySyscall(pMaskEdit_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MaskEdit_ClientToParent)
TPoint
MaskEdit_ClientToParent(TMaskEdit AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(MaskEdit_ClientToParent)
    TPoint result;
    MySyscall(pMaskEdit_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MaskEdit_Dragging)
BOOL
MaskEdit_Dragging(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_Dragging)
    return (BOOL)MySyscall(pMaskEdit_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_HasParent)
BOOL
MaskEdit_HasParent(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_HasParent)
    return (BOOL)MySyscall(pMaskEdit_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_Hide)
void
MaskEdit_Hide(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_Hide)
    MySyscall(pMaskEdit_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_Perform)
intptr_t
MaskEdit_Perform(TMaskEdit AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(MaskEdit_Perform)
    return (intptr_t)MySyscall(pMaskEdit_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_Refresh)
void
MaskEdit_Refresh(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_Refresh)
    MySyscall(pMaskEdit_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_ScreenToClient)
TPoint
MaskEdit_ScreenToClient(TMaskEdit AObj, TPoint Point) {
    GET_FUNC_ADDR(MaskEdit_ScreenToClient)
    TPoint result;
    MySyscall(pMaskEdit_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MaskEdit_ParentToClient)
TPoint
MaskEdit_ParentToClient(TMaskEdit AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(MaskEdit_ParentToClient)
    TPoint result;
    MySyscall(pMaskEdit_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MaskEdit_SendToBack)
void
MaskEdit_SendToBack(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_SendToBack)
    MySyscall(pMaskEdit_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_Show)
void
MaskEdit_Show(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_Show)
    MySyscall(pMaskEdit_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetTextBuf)
int32_t
MaskEdit_GetTextBuf(TMaskEdit AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(MaskEdit_GetTextBuf)
    return (int32_t)MySyscall(pMaskEdit_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetTextBuf)
void
MaskEdit_SetTextBuf(TMaskEdit AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(MaskEdit_SetTextBuf)
    MySyscall(pMaskEdit_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_FindComponent)
TComponent
MaskEdit_FindComponent(TMaskEdit AObj, CChar char* AName) {
    GET_FUNC_ADDR(MaskEdit_FindComponent)
    return (TComponent)MySyscall(pMaskEdit_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetNamePath)
char*
MaskEdit_GetNamePath(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetNamePath)
    return (char*)MySyscall(pMaskEdit_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_Assign)
void
MaskEdit_Assign(TMaskEdit AObj, TObject Source) {
    GET_FUNC_ADDR(MaskEdit_Assign)
    MySyscall(pMaskEdit_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_ClassType)
TClass
MaskEdit_ClassType(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_ClassType)
    return (TClass)MySyscall(pMaskEdit_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_ClassName)
char*
MaskEdit_ClassName(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_ClassName)
    return (char*)MySyscall(pMaskEdit_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_InstanceSize)
int32_t
MaskEdit_InstanceSize(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_InstanceSize)
    return (int32_t)MySyscall(pMaskEdit_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_InheritsFrom)
BOOL
MaskEdit_InheritsFrom(TMaskEdit AObj, TClass AClass) {
    GET_FUNC_ADDR(MaskEdit_InheritsFrom)
    return (BOOL)MySyscall(pMaskEdit_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_Equals)
BOOL
MaskEdit_Equals(TMaskEdit AObj, TObject Obj) {
    GET_FUNC_ADDR(MaskEdit_Equals)
    return (BOOL)MySyscall(pMaskEdit_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetHashCode)
int32_t
MaskEdit_GetHashCode(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetHashCode)
    return (int32_t)MySyscall(pMaskEdit_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_ToString)
char*
MaskEdit_ToString(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_ToString)
    return (char*)MySyscall(pMaskEdit_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_AnchorToNeighbour)
void
MaskEdit_AnchorToNeighbour(TMaskEdit AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(MaskEdit_AnchorToNeighbour)
    MySyscall(pMaskEdit_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_AnchorParallel)
void
MaskEdit_AnchorParallel(TMaskEdit AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(MaskEdit_AnchorParallel)
    MySyscall(pMaskEdit_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_AnchorHorizontalCenterTo)
void
MaskEdit_AnchorHorizontalCenterTo(TMaskEdit AObj, TControl ASibling) {
    GET_FUNC_ADDR(MaskEdit_AnchorHorizontalCenterTo)
    MySyscall(pMaskEdit_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_AnchorVerticalCenterTo)
void
MaskEdit_AnchorVerticalCenterTo(TMaskEdit AObj, TControl ASibling) {
    GET_FUNC_ADDR(MaskEdit_AnchorVerticalCenterTo)
    MySyscall(pMaskEdit_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_AnchorSame)
void
MaskEdit_AnchorSame(TMaskEdit AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(MaskEdit_AnchorSame)
    MySyscall(pMaskEdit_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_AnchorAsAlign)
void
MaskEdit_AnchorAsAlign(TMaskEdit AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(MaskEdit_AnchorAsAlign)
    MySyscall(pMaskEdit_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_AnchorClient)
void
MaskEdit_AnchorClient(TMaskEdit AObj, int32_t ASpace) {
    GET_FUNC_ADDR(MaskEdit_AnchorClient)
    MySyscall(pMaskEdit_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_ScaleDesignToForm)
int32_t
MaskEdit_ScaleDesignToForm(TMaskEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(MaskEdit_ScaleDesignToForm)
    return (int32_t)MySyscall(pMaskEdit_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_ScaleFormToDesign)
int32_t
MaskEdit_ScaleFormToDesign(TMaskEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(MaskEdit_ScaleFormToDesign)
    return (int32_t)MySyscall(pMaskEdit_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_Scale96ToForm)
int32_t
MaskEdit_Scale96ToForm(TMaskEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(MaskEdit_Scale96ToForm)
    return (int32_t)MySyscall(pMaskEdit_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_ScaleFormTo96)
int32_t
MaskEdit_ScaleFormTo96(TMaskEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(MaskEdit_ScaleFormTo96)
    return (int32_t)MySyscall(pMaskEdit_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_Scale96ToFont)
int32_t
MaskEdit_Scale96ToFont(TMaskEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(MaskEdit_Scale96ToFont)
    return (int32_t)MySyscall(pMaskEdit_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_ScaleFontTo96)
int32_t
MaskEdit_ScaleFontTo96(TMaskEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(MaskEdit_ScaleFontTo96)
    return (int32_t)MySyscall(pMaskEdit_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_ScaleScreenToFont)
int32_t
MaskEdit_ScaleScreenToFont(TMaskEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(MaskEdit_ScaleScreenToFont)
    return (int32_t)MySyscall(pMaskEdit_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_ScaleFontToScreen)
int32_t
MaskEdit_ScaleFontToScreen(TMaskEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(MaskEdit_ScaleFontToScreen)
    return (int32_t)MySyscall(pMaskEdit_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_Scale96ToScreen)
int32_t
MaskEdit_Scale96ToScreen(TMaskEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(MaskEdit_Scale96ToScreen)
    return (int32_t)MySyscall(pMaskEdit_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_ScaleScreenTo96)
int32_t
MaskEdit_ScaleScreenTo96(TMaskEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(MaskEdit_ScaleScreenTo96)
    return (int32_t)MySyscall(pMaskEdit_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_AutoAdjustLayout)
void
MaskEdit_AutoAdjustLayout(TMaskEdit AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(MaskEdit_AutoAdjustLayout)
    MySyscall(pMaskEdit_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_FixDesignFontsPPI)
void
MaskEdit_FixDesignFontsPPI(TMaskEdit AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(MaskEdit_FixDesignFontsPPI)
    MySyscall(pMaskEdit_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_ScaleFontsPPI)
void
MaskEdit_ScaleFontsPPI(TMaskEdit AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(MaskEdit_ScaleFontsPPI)
    MySyscall(pMaskEdit_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetAlign)
TAlign
MaskEdit_GetAlign(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetAlign)
    return (TAlign)MySyscall(pMaskEdit_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetAlign)
void
MaskEdit_SetAlign(TMaskEdit AObj, TAlign AValue) {
    GET_FUNC_ADDR(MaskEdit_SetAlign)
    MySyscall(pMaskEdit_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetAlignment)
TAlignment
MaskEdit_GetAlignment(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetAlignment)
    return (TAlignment)MySyscall(pMaskEdit_GetAlignment, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetAlignment)
void
MaskEdit_SetAlignment(TMaskEdit AObj, TAlignment AValue) {
    GET_FUNC_ADDR(MaskEdit_SetAlignment)
    MySyscall(pMaskEdit_SetAlignment, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetAnchors)
TAnchors
MaskEdit_GetAnchors(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetAnchors)
    return (TAnchors)MySyscall(pMaskEdit_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetAnchors)
void
MaskEdit_SetAnchors(TMaskEdit AObj, TAnchors AValue) {
    GET_FUNC_ADDR(MaskEdit_SetAnchors)
    MySyscall(pMaskEdit_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetAutoSelect)
BOOL
MaskEdit_GetAutoSelect(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetAutoSelect)
    return (BOOL)MySyscall(pMaskEdit_GetAutoSelect, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetAutoSelect)
void
MaskEdit_SetAutoSelect(TMaskEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(MaskEdit_SetAutoSelect)
    MySyscall(pMaskEdit_SetAutoSelect, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetAutoSize)
BOOL
MaskEdit_GetAutoSize(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetAutoSize)
    return (BOOL)MySyscall(pMaskEdit_GetAutoSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetAutoSize)
void
MaskEdit_SetAutoSize(TMaskEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(MaskEdit_SetAutoSize)
    MySyscall(pMaskEdit_SetAutoSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetBiDiMode)
TBiDiMode
MaskEdit_GetBiDiMode(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetBiDiMode)
    return (TBiDiMode)MySyscall(pMaskEdit_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetBiDiMode)
void
MaskEdit_SetBiDiMode(TMaskEdit AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(MaskEdit_SetBiDiMode)
    MySyscall(pMaskEdit_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetBorderStyle)
TBorderStyle
MaskEdit_GetBorderStyle(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetBorderStyle)
    return (TBorderStyle)MySyscall(pMaskEdit_GetBorderStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetBorderStyle)
void
MaskEdit_SetBorderStyle(TMaskEdit AObj, TBorderStyle AValue) {
    GET_FUNC_ADDR(MaskEdit_SetBorderStyle)
    MySyscall(pMaskEdit_SetBorderStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetCharCase)
TEditCharCase
MaskEdit_GetCharCase(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetCharCase)
    return (TEditCharCase)MySyscall(pMaskEdit_GetCharCase, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetCharCase)
void
MaskEdit_SetCharCase(TMaskEdit AObj, TEditCharCase AValue) {
    GET_FUNC_ADDR(MaskEdit_SetCharCase)
    MySyscall(pMaskEdit_SetCharCase, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetColor)
TColor
MaskEdit_GetColor(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetColor)
    return (TColor)MySyscall(pMaskEdit_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetColor)
void
MaskEdit_SetColor(TMaskEdit AObj, TColor AValue) {
    GET_FUNC_ADDR(MaskEdit_SetColor)
    MySyscall(pMaskEdit_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetConstraints)
TSizeConstraints
MaskEdit_GetConstraints(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetConstraints)
    return (TSizeConstraints)MySyscall(pMaskEdit_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetConstraints)
void
MaskEdit_SetConstraints(TMaskEdit AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(MaskEdit_SetConstraints)
    MySyscall(pMaskEdit_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetDoubleBuffered)
BOOL
MaskEdit_GetDoubleBuffered(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetDoubleBuffered)
    return (BOOL)MySyscall(pMaskEdit_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetDoubleBuffered)
void
MaskEdit_SetDoubleBuffered(TMaskEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(MaskEdit_SetDoubleBuffered)
    MySyscall(pMaskEdit_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetDragCursor)
TCursor
MaskEdit_GetDragCursor(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetDragCursor)
    return (TCursor)MySyscall(pMaskEdit_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetDragCursor)
void
MaskEdit_SetDragCursor(TMaskEdit AObj, TCursor AValue) {
    GET_FUNC_ADDR(MaskEdit_SetDragCursor)
    MySyscall(pMaskEdit_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetDragKind)
TDragKind
MaskEdit_GetDragKind(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetDragKind)
    return (TDragKind)MySyscall(pMaskEdit_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetDragKind)
void
MaskEdit_SetDragKind(TMaskEdit AObj, TDragKind AValue) {
    GET_FUNC_ADDR(MaskEdit_SetDragKind)
    MySyscall(pMaskEdit_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetDragMode)
TDragMode
MaskEdit_GetDragMode(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetDragMode)
    return (TDragMode)MySyscall(pMaskEdit_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetDragMode)
void
MaskEdit_SetDragMode(TMaskEdit AObj, TDragMode AValue) {
    GET_FUNC_ADDR(MaskEdit_SetDragMode)
    MySyscall(pMaskEdit_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetEnabled)
BOOL
MaskEdit_GetEnabled(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetEnabled)
    return (BOOL)MySyscall(pMaskEdit_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetEnabled)
void
MaskEdit_SetEnabled(TMaskEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(MaskEdit_SetEnabled)
    MySyscall(pMaskEdit_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetFont)
TFont
MaskEdit_GetFont(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetFont)
    return (TFont)MySyscall(pMaskEdit_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetFont)
void
MaskEdit_SetFont(TMaskEdit AObj, TFont AValue) {
    GET_FUNC_ADDR(MaskEdit_SetFont)
    MySyscall(pMaskEdit_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetMaxLength)
int32_t
MaskEdit_GetMaxLength(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetMaxLength)
    return (int32_t)MySyscall(pMaskEdit_GetMaxLength, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetMaxLength)
void
MaskEdit_SetMaxLength(TMaskEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(MaskEdit_SetMaxLength)
    MySyscall(pMaskEdit_SetMaxLength, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetParentColor)
BOOL
MaskEdit_GetParentColor(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetParentColor)
    return (BOOL)MySyscall(pMaskEdit_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetParentColor)
void
MaskEdit_SetParentColor(TMaskEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(MaskEdit_SetParentColor)
    MySyscall(pMaskEdit_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetParentDoubleBuffered)
BOOL
MaskEdit_GetParentDoubleBuffered(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pMaskEdit_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetParentDoubleBuffered)
void
MaskEdit_SetParentDoubleBuffered(TMaskEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(MaskEdit_SetParentDoubleBuffered)
    MySyscall(pMaskEdit_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetParentFont)
BOOL
MaskEdit_GetParentFont(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetParentFont)
    return (BOOL)MySyscall(pMaskEdit_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetParentFont)
void
MaskEdit_SetParentFont(TMaskEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(MaskEdit_SetParentFont)
    MySyscall(pMaskEdit_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetParentShowHint)
BOOL
MaskEdit_GetParentShowHint(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetParentShowHint)
    return (BOOL)MySyscall(pMaskEdit_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetParentShowHint)
void
MaskEdit_SetParentShowHint(TMaskEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(MaskEdit_SetParentShowHint)
    MySyscall(pMaskEdit_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetPasswordChar)
Char
MaskEdit_GetPasswordChar(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetPasswordChar)
    return (Char)MySyscall(pMaskEdit_GetPasswordChar, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetPasswordChar)
void
MaskEdit_SetPasswordChar(TMaskEdit AObj, Char AValue) {
    GET_FUNC_ADDR(MaskEdit_SetPasswordChar)
    MySyscall(pMaskEdit_SetPasswordChar, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetPopupMenu)
TPopupMenu
MaskEdit_GetPopupMenu(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetPopupMenu)
    return (TPopupMenu)MySyscall(pMaskEdit_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetPopupMenu)
void
MaskEdit_SetPopupMenu(TMaskEdit AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(MaskEdit_SetPopupMenu)
    MySyscall(pMaskEdit_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetReadOnly)
BOOL
MaskEdit_GetReadOnly(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetReadOnly)
    return (BOOL)MySyscall(pMaskEdit_GetReadOnly, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetReadOnly)
void
MaskEdit_SetReadOnly(TMaskEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(MaskEdit_SetReadOnly)
    MySyscall(pMaskEdit_SetReadOnly, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetShowHint)
BOOL
MaskEdit_GetShowHint(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetShowHint)
    return (BOOL)MySyscall(pMaskEdit_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetShowHint)
void
MaskEdit_SetShowHint(TMaskEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(MaskEdit_SetShowHint)
    MySyscall(pMaskEdit_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetTabOrder)
TTabOrder
MaskEdit_GetTabOrder(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetTabOrder)
    return (TTabOrder)MySyscall(pMaskEdit_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetTabOrder)
void
MaskEdit_SetTabOrder(TMaskEdit AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(MaskEdit_SetTabOrder)
    MySyscall(pMaskEdit_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetTabStop)
BOOL
MaskEdit_GetTabStop(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetTabStop)
    return (BOOL)MySyscall(pMaskEdit_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetTabStop)
void
MaskEdit_SetTabStop(TMaskEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(MaskEdit_SetTabStop)
    MySyscall(pMaskEdit_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetText)
char*
MaskEdit_GetText(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetText)
    return (char*)MySyscall(pMaskEdit_GetText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetText)
void
MaskEdit_SetText(TMaskEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(MaskEdit_SetText)
    MySyscall(pMaskEdit_SetText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetTextHint)
char*
MaskEdit_GetTextHint(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetTextHint)
    return (char*)MySyscall(pMaskEdit_GetTextHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetTextHint)
void
MaskEdit_SetTextHint(TMaskEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(MaskEdit_SetTextHint)
    MySyscall(pMaskEdit_SetTextHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetVisible)
BOOL
MaskEdit_GetVisible(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetVisible)
    return (BOOL)MySyscall(pMaskEdit_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetVisible)
void
MaskEdit_SetVisible(TMaskEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(MaskEdit_SetVisible)
    MySyscall(pMaskEdit_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetOnChange)
void
MaskEdit_SetOnChange(TMaskEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(MaskEdit_SetOnChange)
    MySyscall(pMaskEdit_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetOnClick)
void
MaskEdit_SetOnClick(TMaskEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(MaskEdit_SetOnClick)
    MySyscall(pMaskEdit_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetOnDblClick)
void
MaskEdit_SetOnDblClick(TMaskEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(MaskEdit_SetOnDblClick)
    MySyscall(pMaskEdit_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetOnDragDrop)
void
MaskEdit_SetOnDragDrop(TMaskEdit AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(MaskEdit_SetOnDragDrop)
    MySyscall(pMaskEdit_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetOnDragOver)
void
MaskEdit_SetOnDragOver(TMaskEdit AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(MaskEdit_SetOnDragOver)
    MySyscall(pMaskEdit_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetOnEndDock)
void
MaskEdit_SetOnEndDock(TMaskEdit AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(MaskEdit_SetOnEndDock)
    MySyscall(pMaskEdit_SetOnEndDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetOnEndDrag)
void
MaskEdit_SetOnEndDrag(TMaskEdit AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(MaskEdit_SetOnEndDrag)
    MySyscall(pMaskEdit_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetOnEnter)
void
MaskEdit_SetOnEnter(TMaskEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(MaskEdit_SetOnEnter)
    MySyscall(pMaskEdit_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetOnExit)
void
MaskEdit_SetOnExit(TMaskEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(MaskEdit_SetOnExit)
    MySyscall(pMaskEdit_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetOnKeyDown)
void
MaskEdit_SetOnKeyDown(TMaskEdit AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(MaskEdit_SetOnKeyDown)
    MySyscall(pMaskEdit_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetOnKeyPress)
void
MaskEdit_SetOnKeyPress(TMaskEdit AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(MaskEdit_SetOnKeyPress)
    MySyscall(pMaskEdit_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetOnKeyUp)
void
MaskEdit_SetOnKeyUp(TMaskEdit AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(MaskEdit_SetOnKeyUp)
    MySyscall(pMaskEdit_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetOnMouseDown)
void
MaskEdit_SetOnMouseDown(TMaskEdit AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(MaskEdit_SetOnMouseDown)
    MySyscall(pMaskEdit_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetOnMouseEnter)
void
MaskEdit_SetOnMouseEnter(TMaskEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(MaskEdit_SetOnMouseEnter)
    MySyscall(pMaskEdit_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetOnMouseLeave)
void
MaskEdit_SetOnMouseLeave(TMaskEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(MaskEdit_SetOnMouseLeave)
    MySyscall(pMaskEdit_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetOnMouseMove)
void
MaskEdit_SetOnMouseMove(TMaskEdit AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(MaskEdit_SetOnMouseMove)
    MySyscall(pMaskEdit_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetOnMouseUp)
void
MaskEdit_SetOnMouseUp(TMaskEdit AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(MaskEdit_SetOnMouseUp)
    MySyscall(pMaskEdit_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetOnStartDock)
void
MaskEdit_SetOnStartDock(TMaskEdit AObj, TStartDockEvent AEventData) {
    GET_FUNC_ADDR(MaskEdit_SetOnStartDock)
    MySyscall(pMaskEdit_SetOnStartDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetIsMasked)
BOOL
MaskEdit_GetIsMasked(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetIsMasked)
    return (BOOL)MySyscall(pMaskEdit_GetIsMasked, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetEditText)
char*
MaskEdit_GetEditText(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetEditText)
    return (char*)MySyscall(pMaskEdit_GetEditText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetEditText)
void
MaskEdit_SetEditText(TMaskEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(MaskEdit_SetEditText)
    MySyscall(pMaskEdit_SetEditText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetCanUndo)
BOOL
MaskEdit_GetCanUndo(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetCanUndo)
    return (BOOL)MySyscall(pMaskEdit_GetCanUndo, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetModified)
BOOL
MaskEdit_GetModified(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetModified)
    return (BOOL)MySyscall(pMaskEdit_GetModified, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetModified)
void
MaskEdit_SetModified(TMaskEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(MaskEdit_SetModified)
    MySyscall(pMaskEdit_SetModified, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetSelLength)
int32_t
MaskEdit_GetSelLength(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetSelLength)
    return (int32_t)MySyscall(pMaskEdit_GetSelLength, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetSelLength)
void
MaskEdit_SetSelLength(TMaskEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(MaskEdit_SetSelLength)
    MySyscall(pMaskEdit_SetSelLength, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetSelStart)
int32_t
MaskEdit_GetSelStart(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetSelStart)
    return (int32_t)MySyscall(pMaskEdit_GetSelStart, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetSelStart)
void
MaskEdit_SetSelStart(TMaskEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(MaskEdit_SetSelStart)
    MySyscall(pMaskEdit_SetSelStart, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetSelText)
char*
MaskEdit_GetSelText(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetSelText)
    return (char*)MySyscall(pMaskEdit_GetSelText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetSelText)
void
MaskEdit_SetSelText(TMaskEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(MaskEdit_SetSelText)
    MySyscall(pMaskEdit_SetSelText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetDockClientCount)
int32_t
MaskEdit_GetDockClientCount(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetDockClientCount)
    return (int32_t)MySyscall(pMaskEdit_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetDockSite)
BOOL
MaskEdit_GetDockSite(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetDockSite)
    return (BOOL)MySyscall(pMaskEdit_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetDockSite)
void
MaskEdit_SetDockSite(TMaskEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(MaskEdit_SetDockSite)
    MySyscall(pMaskEdit_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetMouseInClient)
BOOL
MaskEdit_GetMouseInClient(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetMouseInClient)
    return (BOOL)MySyscall(pMaskEdit_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetVisibleDockClientCount)
int32_t
MaskEdit_GetVisibleDockClientCount(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pMaskEdit_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetBrush)
TBrush
MaskEdit_GetBrush(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetBrush)
    return (TBrush)MySyscall(pMaskEdit_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetControlCount)
int32_t
MaskEdit_GetControlCount(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetControlCount)
    return (int32_t)MySyscall(pMaskEdit_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetHandle)
HWND
MaskEdit_GetHandle(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetHandle)
    return (HWND)MySyscall(pMaskEdit_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetParentWindow)
HWND
MaskEdit_GetParentWindow(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetParentWindow)
    return (HWND)MySyscall(pMaskEdit_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetParentWindow)
void
MaskEdit_SetParentWindow(TMaskEdit AObj, HWND AValue) {
    GET_FUNC_ADDR(MaskEdit_SetParentWindow)
    MySyscall(pMaskEdit_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetShowing)
BOOL
MaskEdit_GetShowing(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetShowing)
    return (BOOL)MySyscall(pMaskEdit_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetUseDockManager)
BOOL
MaskEdit_GetUseDockManager(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetUseDockManager)
    return (BOOL)MySyscall(pMaskEdit_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetUseDockManager)
void
MaskEdit_SetUseDockManager(TMaskEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(MaskEdit_SetUseDockManager)
    MySyscall(pMaskEdit_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetAction)
TAction
MaskEdit_GetAction(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetAction)
    return (TAction)MySyscall(pMaskEdit_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetAction)
void
MaskEdit_SetAction(TMaskEdit AObj, TAction AValue) {
    GET_FUNC_ADDR(MaskEdit_SetAction)
    MySyscall(pMaskEdit_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetBoundsRect)
TRect
MaskEdit_GetBoundsRect(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetBoundsRect)
    TRect result;
    MySyscall(pMaskEdit_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MaskEdit_SetBoundsRect)
void
MaskEdit_SetBoundsRect(TMaskEdit AObj, TRect AValue) {
    GET_FUNC_ADDR(MaskEdit_SetBoundsRect)
    MySyscall(pMaskEdit_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetClientHeight)
int32_t
MaskEdit_GetClientHeight(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetClientHeight)
    return (int32_t)MySyscall(pMaskEdit_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetClientHeight)
void
MaskEdit_SetClientHeight(TMaskEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(MaskEdit_SetClientHeight)
    MySyscall(pMaskEdit_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetClientOrigin)
TPoint
MaskEdit_GetClientOrigin(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetClientOrigin)
    TPoint result;
    MySyscall(pMaskEdit_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MaskEdit_GetClientRect)
TRect
MaskEdit_GetClientRect(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetClientRect)
    TRect result;
    MySyscall(pMaskEdit_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(MaskEdit_GetClientWidth)
int32_t
MaskEdit_GetClientWidth(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetClientWidth)
    return (int32_t)MySyscall(pMaskEdit_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetClientWidth)
void
MaskEdit_SetClientWidth(TMaskEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(MaskEdit_SetClientWidth)
    MySyscall(pMaskEdit_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetControlState)
TControlState
MaskEdit_GetControlState(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetControlState)
    return (TControlState)MySyscall(pMaskEdit_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetControlState)
void
MaskEdit_SetControlState(TMaskEdit AObj, TControlState AValue) {
    GET_FUNC_ADDR(MaskEdit_SetControlState)
    MySyscall(pMaskEdit_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetControlStyle)
TControlStyle
MaskEdit_GetControlStyle(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetControlStyle)
    return (TControlStyle)MySyscall(pMaskEdit_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetControlStyle)
void
MaskEdit_SetControlStyle(TMaskEdit AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(MaskEdit_SetControlStyle)
    MySyscall(pMaskEdit_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetFloating)
BOOL
MaskEdit_GetFloating(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetFloating)
    return (BOOL)MySyscall(pMaskEdit_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetParent)
TWinControl
MaskEdit_GetParent(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetParent)
    return (TWinControl)MySyscall(pMaskEdit_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetParent)
void
MaskEdit_SetParent(TMaskEdit AObj, TWinControl AValue) {
    GET_FUNC_ADDR(MaskEdit_SetParent)
    MySyscall(pMaskEdit_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetLeft)
int32_t
MaskEdit_GetLeft(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetLeft)
    return (int32_t)MySyscall(pMaskEdit_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetLeft)
void
MaskEdit_SetLeft(TMaskEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(MaskEdit_SetLeft)
    MySyscall(pMaskEdit_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetTop)
int32_t
MaskEdit_GetTop(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetTop)
    return (int32_t)MySyscall(pMaskEdit_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetTop)
void
MaskEdit_SetTop(TMaskEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(MaskEdit_SetTop)
    MySyscall(pMaskEdit_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetWidth)
int32_t
MaskEdit_GetWidth(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetWidth)
    return (int32_t)MySyscall(pMaskEdit_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetWidth)
void
MaskEdit_SetWidth(TMaskEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(MaskEdit_SetWidth)
    MySyscall(pMaskEdit_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetHeight)
int32_t
MaskEdit_GetHeight(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetHeight)
    return (int32_t)MySyscall(pMaskEdit_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetHeight)
void
MaskEdit_SetHeight(TMaskEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(MaskEdit_SetHeight)
    MySyscall(pMaskEdit_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetCursor)
TCursor
MaskEdit_GetCursor(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetCursor)
    return (TCursor)MySyscall(pMaskEdit_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetCursor)
void
MaskEdit_SetCursor(TMaskEdit AObj, TCursor AValue) {
    GET_FUNC_ADDR(MaskEdit_SetCursor)
    MySyscall(pMaskEdit_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetHint)
char*
MaskEdit_GetHint(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetHint)
    return (char*)MySyscall(pMaskEdit_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetHint)
void
MaskEdit_SetHint(TMaskEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(MaskEdit_SetHint)
    MySyscall(pMaskEdit_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetComponentCount)
int32_t
MaskEdit_GetComponentCount(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetComponentCount)
    return (int32_t)MySyscall(pMaskEdit_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetComponentIndex)
int32_t
MaskEdit_GetComponentIndex(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetComponentIndex)
    return (int32_t)MySyscall(pMaskEdit_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetComponentIndex)
void
MaskEdit_SetComponentIndex(TMaskEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(MaskEdit_SetComponentIndex)
    MySyscall(pMaskEdit_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetOwner)
TComponent
MaskEdit_GetOwner(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetOwner)
    return (TComponent)MySyscall(pMaskEdit_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetName)
char*
MaskEdit_GetName(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetName)
    return (char*)MySyscall(pMaskEdit_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetName)
void
MaskEdit_SetName(TMaskEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(MaskEdit_SetName)
    MySyscall(pMaskEdit_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetTag)
intptr_t
MaskEdit_GetTag(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetTag)
    return (intptr_t)MySyscall(pMaskEdit_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetTag)
void
MaskEdit_SetTag(TMaskEdit AObj, intptr_t AValue) {
    GET_FUNC_ADDR(MaskEdit_SetTag)
    MySyscall(pMaskEdit_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetAnchorSideLeft)
TAnchorSide
MaskEdit_GetAnchorSideLeft(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pMaskEdit_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetAnchorSideLeft)
void
MaskEdit_SetAnchorSideLeft(TMaskEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(MaskEdit_SetAnchorSideLeft)
    MySyscall(pMaskEdit_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetAnchorSideTop)
TAnchorSide
MaskEdit_GetAnchorSideTop(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pMaskEdit_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetAnchorSideTop)
void
MaskEdit_SetAnchorSideTop(TMaskEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(MaskEdit_SetAnchorSideTop)
    MySyscall(pMaskEdit_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetAnchorSideRight)
TAnchorSide
MaskEdit_GetAnchorSideRight(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pMaskEdit_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetAnchorSideRight)
void
MaskEdit_SetAnchorSideRight(TMaskEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(MaskEdit_SetAnchorSideRight)
    MySyscall(pMaskEdit_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetAnchorSideBottom)
TAnchorSide
MaskEdit_GetAnchorSideBottom(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pMaskEdit_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetAnchorSideBottom)
void
MaskEdit_SetAnchorSideBottom(TMaskEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(MaskEdit_SetAnchorSideBottom)
    MySyscall(pMaskEdit_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetChildSizing)
TControlChildSizing
MaskEdit_GetChildSizing(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetChildSizing)
    return (TControlChildSizing)MySyscall(pMaskEdit_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetChildSizing)
void
MaskEdit_SetChildSizing(TMaskEdit AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(MaskEdit_SetChildSizing)
    MySyscall(pMaskEdit_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetBorderSpacing)
TControlBorderSpacing
MaskEdit_GetBorderSpacing(TMaskEdit AObj) {
    GET_FUNC_ADDR(MaskEdit_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pMaskEdit_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_SetBorderSpacing)
void
MaskEdit_SetBorderSpacing(TMaskEdit AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(MaskEdit_SetBorderSpacing)
    MySyscall(pMaskEdit_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetDockClients)
TControl
MaskEdit_GetDockClients(TMaskEdit AObj, int32_t Index) {
    GET_FUNC_ADDR(MaskEdit_GetDockClients)
    return (TControl)MySyscall(pMaskEdit_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetControls)
TControl
MaskEdit_GetControls(TMaskEdit AObj, int32_t Index) {
    GET_FUNC_ADDR(MaskEdit_GetControls)
    return (TControl)MySyscall(pMaskEdit_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetComponents)
TComponent
MaskEdit_GetComponents(TMaskEdit AObj, int32_t AIndex) {
    GET_FUNC_ADDR(MaskEdit_GetComponents)
    return (TComponent)MySyscall(pMaskEdit_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_GetAnchorSide)
TAnchorSide
MaskEdit_GetAnchorSide(TMaskEdit AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(MaskEdit_GetAnchorSide)
    return (TAnchorSide)MySyscall(pMaskEdit_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(MaskEdit_StaticClassType)
TClass
MaskEdit_StaticClassType() {
    GET_FUNC_ADDR(MaskEdit_StaticClassType)
    return (TClass)MySyscall(pMaskEdit_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TShape-------------------

DEFINE_FUNC_PTR(Shape_Create)
TShape
Shape_Create(TComponent AOwner) {
    GET_FUNC_ADDR(Shape_Create)
    return (TShape)MySyscall(pShape_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_Free)
void
Shape_Free(TShape AObj) {
    GET_FUNC_ADDR(Shape_Free)
    MySyscall(pShape_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_BringToFront)
void
Shape_BringToFront(TShape AObj) {
    GET_FUNC_ADDR(Shape_BringToFront)
    MySyscall(pShape_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_ClientToScreen)
TPoint
Shape_ClientToScreen(TShape AObj, TPoint Point) {
    GET_FUNC_ADDR(Shape_ClientToScreen)
    TPoint result;
    MySyscall(pShape_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Shape_ClientToParent)
TPoint
Shape_ClientToParent(TShape AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Shape_ClientToParent)
    TPoint result;
    MySyscall(pShape_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Shape_Dragging)
BOOL
Shape_Dragging(TShape AObj) {
    GET_FUNC_ADDR(Shape_Dragging)
    return (BOOL)MySyscall(pShape_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_HasParent)
BOOL
Shape_HasParent(TShape AObj) {
    GET_FUNC_ADDR(Shape_HasParent)
    return (BOOL)MySyscall(pShape_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_Hide)
void
Shape_Hide(TShape AObj) {
    GET_FUNC_ADDR(Shape_Hide)
    MySyscall(pShape_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_Invalidate)
void
Shape_Invalidate(TShape AObj) {
    GET_FUNC_ADDR(Shape_Invalidate)
    MySyscall(pShape_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_Perform)
intptr_t
Shape_Perform(TShape AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(Shape_Perform)
    return (intptr_t)MySyscall(pShape_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_Refresh)
void
Shape_Refresh(TShape AObj) {
    GET_FUNC_ADDR(Shape_Refresh)
    MySyscall(pShape_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_Repaint)
void
Shape_Repaint(TShape AObj) {
    GET_FUNC_ADDR(Shape_Repaint)
    MySyscall(pShape_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_ScreenToClient)
TPoint
Shape_ScreenToClient(TShape AObj, TPoint Point) {
    GET_FUNC_ADDR(Shape_ScreenToClient)
    TPoint result;
    MySyscall(pShape_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Shape_ParentToClient)
TPoint
Shape_ParentToClient(TShape AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Shape_ParentToClient)
    TPoint result;
    MySyscall(pShape_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Shape_SendToBack)
void
Shape_SendToBack(TShape AObj) {
    GET_FUNC_ADDR(Shape_SendToBack)
    MySyscall(pShape_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetBounds)
void
Shape_SetBounds(TShape AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(Shape_SetBounds)
    MySyscall(pShape_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_Show)
void
Shape_Show(TShape AObj) {
    GET_FUNC_ADDR(Shape_Show)
    MySyscall(pShape_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_Update)
void
Shape_Update(TShape AObj) {
    GET_FUNC_ADDR(Shape_Update)
    MySyscall(pShape_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetTextBuf)
int32_t
Shape_GetTextBuf(TShape AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(Shape_GetTextBuf)
    return (int32_t)MySyscall(pShape_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetTextLen)
int32_t
Shape_GetTextLen(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetTextLen)
    return (int32_t)MySyscall(pShape_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetTextBuf)
void
Shape_SetTextBuf(TShape AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(Shape_SetTextBuf)
    MySyscall(pShape_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_FindComponent)
TComponent
Shape_FindComponent(TShape AObj, CChar char* AName) {
    GET_FUNC_ADDR(Shape_FindComponent)
    return (TComponent)MySyscall(pShape_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetNamePath)
char*
Shape_GetNamePath(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetNamePath)
    return (char*)MySyscall(pShape_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_Assign)
void
Shape_Assign(TShape AObj, TObject Source) {
    GET_FUNC_ADDR(Shape_Assign)
    MySyscall(pShape_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_ClassType)
TClass
Shape_ClassType(TShape AObj) {
    GET_FUNC_ADDR(Shape_ClassType)
    return (TClass)MySyscall(pShape_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_ClassName)
char*
Shape_ClassName(TShape AObj) {
    GET_FUNC_ADDR(Shape_ClassName)
    return (char*)MySyscall(pShape_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_InstanceSize)
int32_t
Shape_InstanceSize(TShape AObj) {
    GET_FUNC_ADDR(Shape_InstanceSize)
    return (int32_t)MySyscall(pShape_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_InheritsFrom)
BOOL
Shape_InheritsFrom(TShape AObj, TClass AClass) {
    GET_FUNC_ADDR(Shape_InheritsFrom)
    return (BOOL)MySyscall(pShape_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_Equals)
BOOL
Shape_Equals(TShape AObj, TObject Obj) {
    GET_FUNC_ADDR(Shape_Equals)
    return (BOOL)MySyscall(pShape_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetHashCode)
int32_t
Shape_GetHashCode(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetHashCode)
    return (int32_t)MySyscall(pShape_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_ToString)
char*
Shape_ToString(TShape AObj) {
    GET_FUNC_ADDR(Shape_ToString)
    return (char*)MySyscall(pShape_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_AnchorToNeighbour)
void
Shape_AnchorToNeighbour(TShape AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Shape_AnchorToNeighbour)
    MySyscall(pShape_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_AnchorParallel)
void
Shape_AnchorParallel(TShape AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Shape_AnchorParallel)
    MySyscall(pShape_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_AnchorHorizontalCenterTo)
void
Shape_AnchorHorizontalCenterTo(TShape AObj, TControl ASibling) {
    GET_FUNC_ADDR(Shape_AnchorHorizontalCenterTo)
    MySyscall(pShape_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_AnchorVerticalCenterTo)
void
Shape_AnchorVerticalCenterTo(TShape AObj, TControl ASibling) {
    GET_FUNC_ADDR(Shape_AnchorVerticalCenterTo)
    MySyscall(pShape_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_AnchorSame)
void
Shape_AnchorSame(TShape AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(Shape_AnchorSame)
    MySyscall(pShape_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_AnchorAsAlign)
void
Shape_AnchorAsAlign(TShape AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(Shape_AnchorAsAlign)
    MySyscall(pShape_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_AnchorClient)
void
Shape_AnchorClient(TShape AObj, int32_t ASpace) {
    GET_FUNC_ADDR(Shape_AnchorClient)
    MySyscall(pShape_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_ScaleDesignToForm)
int32_t
Shape_ScaleDesignToForm(TShape AObj, int32_t ASize) {
    GET_FUNC_ADDR(Shape_ScaleDesignToForm)
    return (int32_t)MySyscall(pShape_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_ScaleFormToDesign)
int32_t
Shape_ScaleFormToDesign(TShape AObj, int32_t ASize) {
    GET_FUNC_ADDR(Shape_ScaleFormToDesign)
    return (int32_t)MySyscall(pShape_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_Scale96ToForm)
int32_t
Shape_Scale96ToForm(TShape AObj, int32_t ASize) {
    GET_FUNC_ADDR(Shape_Scale96ToForm)
    return (int32_t)MySyscall(pShape_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_ScaleFormTo96)
int32_t
Shape_ScaleFormTo96(TShape AObj, int32_t ASize) {
    GET_FUNC_ADDR(Shape_ScaleFormTo96)
    return (int32_t)MySyscall(pShape_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_Scale96ToFont)
int32_t
Shape_Scale96ToFont(TShape AObj, int32_t ASize) {
    GET_FUNC_ADDR(Shape_Scale96ToFont)
    return (int32_t)MySyscall(pShape_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_ScaleFontTo96)
int32_t
Shape_ScaleFontTo96(TShape AObj, int32_t ASize) {
    GET_FUNC_ADDR(Shape_ScaleFontTo96)
    return (int32_t)MySyscall(pShape_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_ScaleScreenToFont)
int32_t
Shape_ScaleScreenToFont(TShape AObj, int32_t ASize) {
    GET_FUNC_ADDR(Shape_ScaleScreenToFont)
    return (int32_t)MySyscall(pShape_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_ScaleFontToScreen)
int32_t
Shape_ScaleFontToScreen(TShape AObj, int32_t ASize) {
    GET_FUNC_ADDR(Shape_ScaleFontToScreen)
    return (int32_t)MySyscall(pShape_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_Scale96ToScreen)
int32_t
Shape_Scale96ToScreen(TShape AObj, int32_t ASize) {
    GET_FUNC_ADDR(Shape_Scale96ToScreen)
    return (int32_t)MySyscall(pShape_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_ScaleScreenTo96)
int32_t
Shape_ScaleScreenTo96(TShape AObj, int32_t ASize) {
    GET_FUNC_ADDR(Shape_ScaleScreenTo96)
    return (int32_t)MySyscall(pShape_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_AutoAdjustLayout)
void
Shape_AutoAdjustLayout(TShape AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(Shape_AutoAdjustLayout)
    MySyscall(pShape_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_FixDesignFontsPPI)
void
Shape_FixDesignFontsPPI(TShape AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(Shape_FixDesignFontsPPI)
    MySyscall(pShape_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_ScaleFontsPPI)
void
Shape_ScaleFontsPPI(TShape AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(Shape_ScaleFontsPPI)
    MySyscall(pShape_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetAlign)
TAlign
Shape_GetAlign(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetAlign)
    return (TAlign)MySyscall(pShape_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetAlign)
void
Shape_SetAlign(TShape AObj, TAlign AValue) {
    GET_FUNC_ADDR(Shape_SetAlign)
    MySyscall(pShape_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetAnchors)
TAnchors
Shape_GetAnchors(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetAnchors)
    return (TAnchors)MySyscall(pShape_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetAnchors)
void
Shape_SetAnchors(TShape AObj, TAnchors AValue) {
    GET_FUNC_ADDR(Shape_SetAnchors)
    MySyscall(pShape_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetBrush)
TBrush
Shape_GetBrush(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetBrush)
    return (TBrush)MySyscall(pShape_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetBrush)
void
Shape_SetBrush(TShape AObj, TBrush AValue) {
    GET_FUNC_ADDR(Shape_SetBrush)
    MySyscall(pShape_SetBrush, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetDragCursor)
TCursor
Shape_GetDragCursor(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetDragCursor)
    return (TCursor)MySyscall(pShape_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetDragCursor)
void
Shape_SetDragCursor(TShape AObj, TCursor AValue) {
    GET_FUNC_ADDR(Shape_SetDragCursor)
    MySyscall(pShape_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetDragKind)
TDragKind
Shape_GetDragKind(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetDragKind)
    return (TDragKind)MySyscall(pShape_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetDragKind)
void
Shape_SetDragKind(TShape AObj, TDragKind AValue) {
    GET_FUNC_ADDR(Shape_SetDragKind)
    MySyscall(pShape_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetDragMode)
TDragMode
Shape_GetDragMode(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetDragMode)
    return (TDragMode)MySyscall(pShape_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetDragMode)
void
Shape_SetDragMode(TShape AObj, TDragMode AValue) {
    GET_FUNC_ADDR(Shape_SetDragMode)
    MySyscall(pShape_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetEnabled)
BOOL
Shape_GetEnabled(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetEnabled)
    return (BOOL)MySyscall(pShape_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetEnabled)
void
Shape_SetEnabled(TShape AObj, BOOL AValue) {
    GET_FUNC_ADDR(Shape_SetEnabled)
    MySyscall(pShape_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetConstraints)
TSizeConstraints
Shape_GetConstraints(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetConstraints)
    return (TSizeConstraints)MySyscall(pShape_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetConstraints)
void
Shape_SetConstraints(TShape AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(Shape_SetConstraints)
    MySyscall(pShape_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetParentShowHint)
BOOL
Shape_GetParentShowHint(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetParentShowHint)
    return (BOOL)MySyscall(pShape_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetParentShowHint)
void
Shape_SetParentShowHint(TShape AObj, BOOL AValue) {
    GET_FUNC_ADDR(Shape_SetParentShowHint)
    MySyscall(pShape_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetPen)
TPen
Shape_GetPen(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetPen)
    return (TPen)MySyscall(pShape_GetPen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetPen)
void
Shape_SetPen(TShape AObj, TPen AValue) {
    GET_FUNC_ADDR(Shape_SetPen)
    MySyscall(pShape_SetPen, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetShape)
TShapeType
Shape_GetShape(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetShape)
    return (TShapeType)MySyscall(pShape_GetShape, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetShape)
void
Shape_SetShape(TShape AObj, TShapeType AValue) {
    GET_FUNC_ADDR(Shape_SetShape)
    MySyscall(pShape_SetShape, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetShowHint)
BOOL
Shape_GetShowHint(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetShowHint)
    return (BOOL)MySyscall(pShape_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetShowHint)
void
Shape_SetShowHint(TShape AObj, BOOL AValue) {
    GET_FUNC_ADDR(Shape_SetShowHint)
    MySyscall(pShape_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetVisible)
BOOL
Shape_GetVisible(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetVisible)
    return (BOOL)MySyscall(pShape_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetVisible)
void
Shape_SetVisible(TShape AObj, BOOL AValue) {
    GET_FUNC_ADDR(Shape_SetVisible)
    MySyscall(pShape_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetOnDragDrop)
void
Shape_SetOnDragDrop(TShape AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(Shape_SetOnDragDrop)
    MySyscall(pShape_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetOnDragOver)
void
Shape_SetOnDragOver(TShape AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(Shape_SetOnDragOver)
    MySyscall(pShape_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetOnEndDrag)
void
Shape_SetOnEndDrag(TShape AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(Shape_SetOnEndDrag)
    MySyscall(pShape_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetOnMouseDown)
void
Shape_SetOnMouseDown(TShape AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(Shape_SetOnMouseDown)
    MySyscall(pShape_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetOnMouseEnter)
void
Shape_SetOnMouseEnter(TShape AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Shape_SetOnMouseEnter)
    MySyscall(pShape_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetOnMouseLeave)
void
Shape_SetOnMouseLeave(TShape AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Shape_SetOnMouseLeave)
    MySyscall(pShape_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetOnMouseMove)
void
Shape_SetOnMouseMove(TShape AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(Shape_SetOnMouseMove)
    MySyscall(pShape_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetOnMouseUp)
void
Shape_SetOnMouseUp(TShape AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(Shape_SetOnMouseUp)
    MySyscall(pShape_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetAction)
TAction
Shape_GetAction(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetAction)
    return (TAction)MySyscall(pShape_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetAction)
void
Shape_SetAction(TShape AObj, TAction AValue) {
    GET_FUNC_ADDR(Shape_SetAction)
    MySyscall(pShape_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetBiDiMode)
TBiDiMode
Shape_GetBiDiMode(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetBiDiMode)
    return (TBiDiMode)MySyscall(pShape_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetBiDiMode)
void
Shape_SetBiDiMode(TShape AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(Shape_SetBiDiMode)
    MySyscall(pShape_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetBoundsRect)
TRect
Shape_GetBoundsRect(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetBoundsRect)
    TRect result;
    MySyscall(pShape_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Shape_SetBoundsRect)
void
Shape_SetBoundsRect(TShape AObj, TRect AValue) {
    GET_FUNC_ADDR(Shape_SetBoundsRect)
    MySyscall(pShape_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetClientHeight)
int32_t
Shape_GetClientHeight(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetClientHeight)
    return (int32_t)MySyscall(pShape_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetClientHeight)
void
Shape_SetClientHeight(TShape AObj, int32_t AValue) {
    GET_FUNC_ADDR(Shape_SetClientHeight)
    MySyscall(pShape_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetClientOrigin)
TPoint
Shape_GetClientOrigin(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetClientOrigin)
    TPoint result;
    MySyscall(pShape_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Shape_GetClientRect)
TRect
Shape_GetClientRect(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetClientRect)
    TRect result;
    MySyscall(pShape_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Shape_GetClientWidth)
int32_t
Shape_GetClientWidth(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetClientWidth)
    return (int32_t)MySyscall(pShape_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetClientWidth)
void
Shape_SetClientWidth(TShape AObj, int32_t AValue) {
    GET_FUNC_ADDR(Shape_SetClientWidth)
    MySyscall(pShape_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetControlState)
TControlState
Shape_GetControlState(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetControlState)
    return (TControlState)MySyscall(pShape_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetControlState)
void
Shape_SetControlState(TShape AObj, TControlState AValue) {
    GET_FUNC_ADDR(Shape_SetControlState)
    MySyscall(pShape_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetControlStyle)
TControlStyle
Shape_GetControlStyle(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetControlStyle)
    return (TControlStyle)MySyscall(pShape_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetControlStyle)
void
Shape_SetControlStyle(TShape AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(Shape_SetControlStyle)
    MySyscall(pShape_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetFloating)
BOOL
Shape_GetFloating(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetFloating)
    return (BOOL)MySyscall(pShape_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetParent)
TWinControl
Shape_GetParent(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetParent)
    return (TWinControl)MySyscall(pShape_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetParent)
void
Shape_SetParent(TShape AObj, TWinControl AValue) {
    GET_FUNC_ADDR(Shape_SetParent)
    MySyscall(pShape_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetLeft)
int32_t
Shape_GetLeft(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetLeft)
    return (int32_t)MySyscall(pShape_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetLeft)
void
Shape_SetLeft(TShape AObj, int32_t AValue) {
    GET_FUNC_ADDR(Shape_SetLeft)
    MySyscall(pShape_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetTop)
int32_t
Shape_GetTop(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetTop)
    return (int32_t)MySyscall(pShape_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetTop)
void
Shape_SetTop(TShape AObj, int32_t AValue) {
    GET_FUNC_ADDR(Shape_SetTop)
    MySyscall(pShape_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetWidth)
int32_t
Shape_GetWidth(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetWidth)
    return (int32_t)MySyscall(pShape_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetWidth)
void
Shape_SetWidth(TShape AObj, int32_t AValue) {
    GET_FUNC_ADDR(Shape_SetWidth)
    MySyscall(pShape_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetHeight)
int32_t
Shape_GetHeight(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetHeight)
    return (int32_t)MySyscall(pShape_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetHeight)
void
Shape_SetHeight(TShape AObj, int32_t AValue) {
    GET_FUNC_ADDR(Shape_SetHeight)
    MySyscall(pShape_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetCursor)
TCursor
Shape_GetCursor(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetCursor)
    return (TCursor)MySyscall(pShape_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetCursor)
void
Shape_SetCursor(TShape AObj, TCursor AValue) {
    GET_FUNC_ADDR(Shape_SetCursor)
    MySyscall(pShape_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetHint)
char*
Shape_GetHint(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetHint)
    return (char*)MySyscall(pShape_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetHint)
void
Shape_SetHint(TShape AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Shape_SetHint)
    MySyscall(pShape_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetComponentCount)
int32_t
Shape_GetComponentCount(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetComponentCount)
    return (int32_t)MySyscall(pShape_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetComponentIndex)
int32_t
Shape_GetComponentIndex(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetComponentIndex)
    return (int32_t)MySyscall(pShape_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetComponentIndex)
void
Shape_SetComponentIndex(TShape AObj, int32_t AValue) {
    GET_FUNC_ADDR(Shape_SetComponentIndex)
    MySyscall(pShape_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetOwner)
TComponent
Shape_GetOwner(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetOwner)
    return (TComponent)MySyscall(pShape_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetName)
char*
Shape_GetName(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetName)
    return (char*)MySyscall(pShape_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetName)
void
Shape_SetName(TShape AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Shape_SetName)
    MySyscall(pShape_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetTag)
intptr_t
Shape_GetTag(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetTag)
    return (intptr_t)MySyscall(pShape_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetTag)
void
Shape_SetTag(TShape AObj, intptr_t AValue) {
    GET_FUNC_ADDR(Shape_SetTag)
    MySyscall(pShape_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetAnchorSideLeft)
TAnchorSide
Shape_GetAnchorSideLeft(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pShape_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetAnchorSideLeft)
void
Shape_SetAnchorSideLeft(TShape AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Shape_SetAnchorSideLeft)
    MySyscall(pShape_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetAnchorSideTop)
TAnchorSide
Shape_GetAnchorSideTop(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pShape_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetAnchorSideTop)
void
Shape_SetAnchorSideTop(TShape AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Shape_SetAnchorSideTop)
    MySyscall(pShape_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetAnchorSideRight)
TAnchorSide
Shape_GetAnchorSideRight(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pShape_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetAnchorSideRight)
void
Shape_SetAnchorSideRight(TShape AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Shape_SetAnchorSideRight)
    MySyscall(pShape_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetAnchorSideBottom)
TAnchorSide
Shape_GetAnchorSideBottom(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pShape_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetAnchorSideBottom)
void
Shape_SetAnchorSideBottom(TShape AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Shape_SetAnchorSideBottom)
    MySyscall(pShape_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetBorderSpacing)
TControlBorderSpacing
Shape_GetBorderSpacing(TShape AObj) {
    GET_FUNC_ADDR(Shape_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pShape_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_SetBorderSpacing)
void
Shape_SetBorderSpacing(TShape AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(Shape_SetBorderSpacing)
    MySyscall(pShape_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetComponents)
TComponent
Shape_GetComponents(TShape AObj, int32_t AIndex) {
    GET_FUNC_ADDR(Shape_GetComponents)
    return (TComponent)MySyscall(pShape_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_GetAnchorSide)
TAnchorSide
Shape_GetAnchorSide(TShape AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(Shape_GetAnchorSide)
    return (TAnchorSide)MySyscall(pShape_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Shape_StaticClassType)
TClass
Shape_StaticClassType() {
    GET_FUNC_ADDR(Shape_StaticClassType)
    return (TClass)MySyscall(pShape_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TBevel-------------------

DEFINE_FUNC_PTR(Bevel_Create)
TBevel
Bevel_Create(TComponent AOwner) {
    GET_FUNC_ADDR(Bevel_Create)
    return (TBevel)MySyscall(pBevel_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_Free)
void
Bevel_Free(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_Free)
    MySyscall(pBevel_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_BringToFront)
void
Bevel_BringToFront(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_BringToFront)
    MySyscall(pBevel_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_ClientToScreen)
TPoint
Bevel_ClientToScreen(TBevel AObj, TPoint Point) {
    GET_FUNC_ADDR(Bevel_ClientToScreen)
    TPoint result;
    MySyscall(pBevel_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Bevel_ClientToParent)
TPoint
Bevel_ClientToParent(TBevel AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Bevel_ClientToParent)
    TPoint result;
    MySyscall(pBevel_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Bevel_Dragging)
BOOL
Bevel_Dragging(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_Dragging)
    return (BOOL)MySyscall(pBevel_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_HasParent)
BOOL
Bevel_HasParent(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_HasParent)
    return (BOOL)MySyscall(pBevel_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_Hide)
void
Bevel_Hide(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_Hide)
    MySyscall(pBevel_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_Invalidate)
void
Bevel_Invalidate(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_Invalidate)
    MySyscall(pBevel_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_Perform)
intptr_t
Bevel_Perform(TBevel AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(Bevel_Perform)
    return (intptr_t)MySyscall(pBevel_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_Refresh)
void
Bevel_Refresh(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_Refresh)
    MySyscall(pBevel_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_Repaint)
void
Bevel_Repaint(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_Repaint)
    MySyscall(pBevel_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_ScreenToClient)
TPoint
Bevel_ScreenToClient(TBevel AObj, TPoint Point) {
    GET_FUNC_ADDR(Bevel_ScreenToClient)
    TPoint result;
    MySyscall(pBevel_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Bevel_ParentToClient)
TPoint
Bevel_ParentToClient(TBevel AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Bevel_ParentToClient)
    TPoint result;
    MySyscall(pBevel_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Bevel_SendToBack)
void
Bevel_SendToBack(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_SendToBack)
    MySyscall(pBevel_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetBounds)
void
Bevel_SetBounds(TBevel AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(Bevel_SetBounds)
    MySyscall(pBevel_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_Show)
void
Bevel_Show(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_Show)
    MySyscall(pBevel_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_Update)
void
Bevel_Update(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_Update)
    MySyscall(pBevel_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetTextBuf)
int32_t
Bevel_GetTextBuf(TBevel AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(Bevel_GetTextBuf)
    return (int32_t)MySyscall(pBevel_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetTextLen)
int32_t
Bevel_GetTextLen(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetTextLen)
    return (int32_t)MySyscall(pBevel_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetTextBuf)
void
Bevel_SetTextBuf(TBevel AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(Bevel_SetTextBuf)
    MySyscall(pBevel_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_FindComponent)
TComponent
Bevel_FindComponent(TBevel AObj, CChar char* AName) {
    GET_FUNC_ADDR(Bevel_FindComponent)
    return (TComponent)MySyscall(pBevel_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetNamePath)
char*
Bevel_GetNamePath(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetNamePath)
    return (char*)MySyscall(pBevel_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_Assign)
void
Bevel_Assign(TBevel AObj, TObject Source) {
    GET_FUNC_ADDR(Bevel_Assign)
    MySyscall(pBevel_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_ClassType)
TClass
Bevel_ClassType(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_ClassType)
    return (TClass)MySyscall(pBevel_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_ClassName)
char*
Bevel_ClassName(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_ClassName)
    return (char*)MySyscall(pBevel_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_InstanceSize)
int32_t
Bevel_InstanceSize(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_InstanceSize)
    return (int32_t)MySyscall(pBevel_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_InheritsFrom)
BOOL
Bevel_InheritsFrom(TBevel AObj, TClass AClass) {
    GET_FUNC_ADDR(Bevel_InheritsFrom)
    return (BOOL)MySyscall(pBevel_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_Equals)
BOOL
Bevel_Equals(TBevel AObj, TObject Obj) {
    GET_FUNC_ADDR(Bevel_Equals)
    return (BOOL)MySyscall(pBevel_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetHashCode)
int32_t
Bevel_GetHashCode(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetHashCode)
    return (int32_t)MySyscall(pBevel_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_ToString)
char*
Bevel_ToString(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_ToString)
    return (char*)MySyscall(pBevel_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_AnchorToNeighbour)
void
Bevel_AnchorToNeighbour(TBevel AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Bevel_AnchorToNeighbour)
    MySyscall(pBevel_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_AnchorParallel)
void
Bevel_AnchorParallel(TBevel AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Bevel_AnchorParallel)
    MySyscall(pBevel_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_AnchorHorizontalCenterTo)
void
Bevel_AnchorHorizontalCenterTo(TBevel AObj, TControl ASibling) {
    GET_FUNC_ADDR(Bevel_AnchorHorizontalCenterTo)
    MySyscall(pBevel_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_AnchorVerticalCenterTo)
void
Bevel_AnchorVerticalCenterTo(TBevel AObj, TControl ASibling) {
    GET_FUNC_ADDR(Bevel_AnchorVerticalCenterTo)
    MySyscall(pBevel_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_AnchorSame)
void
Bevel_AnchorSame(TBevel AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(Bevel_AnchorSame)
    MySyscall(pBevel_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_AnchorAsAlign)
void
Bevel_AnchorAsAlign(TBevel AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(Bevel_AnchorAsAlign)
    MySyscall(pBevel_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_AnchorClient)
void
Bevel_AnchorClient(TBevel AObj, int32_t ASpace) {
    GET_FUNC_ADDR(Bevel_AnchorClient)
    MySyscall(pBevel_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_ScaleDesignToForm)
int32_t
Bevel_ScaleDesignToForm(TBevel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Bevel_ScaleDesignToForm)
    return (int32_t)MySyscall(pBevel_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_ScaleFormToDesign)
int32_t
Bevel_ScaleFormToDesign(TBevel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Bevel_ScaleFormToDesign)
    return (int32_t)MySyscall(pBevel_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_Scale96ToForm)
int32_t
Bevel_Scale96ToForm(TBevel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Bevel_Scale96ToForm)
    return (int32_t)MySyscall(pBevel_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_ScaleFormTo96)
int32_t
Bevel_ScaleFormTo96(TBevel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Bevel_ScaleFormTo96)
    return (int32_t)MySyscall(pBevel_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_Scale96ToFont)
int32_t
Bevel_Scale96ToFont(TBevel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Bevel_Scale96ToFont)
    return (int32_t)MySyscall(pBevel_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_ScaleFontTo96)
int32_t
Bevel_ScaleFontTo96(TBevel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Bevel_ScaleFontTo96)
    return (int32_t)MySyscall(pBevel_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_ScaleScreenToFont)
int32_t
Bevel_ScaleScreenToFont(TBevel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Bevel_ScaleScreenToFont)
    return (int32_t)MySyscall(pBevel_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_ScaleFontToScreen)
int32_t
Bevel_ScaleFontToScreen(TBevel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Bevel_ScaleFontToScreen)
    return (int32_t)MySyscall(pBevel_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_Scale96ToScreen)
int32_t
Bevel_Scale96ToScreen(TBevel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Bevel_Scale96ToScreen)
    return (int32_t)MySyscall(pBevel_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_ScaleScreenTo96)
int32_t
Bevel_ScaleScreenTo96(TBevel AObj, int32_t ASize) {
    GET_FUNC_ADDR(Bevel_ScaleScreenTo96)
    return (int32_t)MySyscall(pBevel_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_AutoAdjustLayout)
void
Bevel_AutoAdjustLayout(TBevel AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(Bevel_AutoAdjustLayout)
    MySyscall(pBevel_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_FixDesignFontsPPI)
void
Bevel_FixDesignFontsPPI(TBevel AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(Bevel_FixDesignFontsPPI)
    MySyscall(pBevel_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_ScaleFontsPPI)
void
Bevel_ScaleFontsPPI(TBevel AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(Bevel_ScaleFontsPPI)
    MySyscall(pBevel_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetAlign)
TAlign
Bevel_GetAlign(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetAlign)
    return (TAlign)MySyscall(pBevel_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetAlign)
void
Bevel_SetAlign(TBevel AObj, TAlign AValue) {
    GET_FUNC_ADDR(Bevel_SetAlign)
    MySyscall(pBevel_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetAnchors)
TAnchors
Bevel_GetAnchors(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetAnchors)
    return (TAnchors)MySyscall(pBevel_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetAnchors)
void
Bevel_SetAnchors(TBevel AObj, TAnchors AValue) {
    GET_FUNC_ADDR(Bevel_SetAnchors)
    MySyscall(pBevel_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetConstraints)
TSizeConstraints
Bevel_GetConstraints(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetConstraints)
    return (TSizeConstraints)MySyscall(pBevel_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetConstraints)
void
Bevel_SetConstraints(TBevel AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(Bevel_SetConstraints)
    MySyscall(pBevel_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetParentShowHint)
BOOL
Bevel_GetParentShowHint(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetParentShowHint)
    return (BOOL)MySyscall(pBevel_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetParentShowHint)
void
Bevel_SetParentShowHint(TBevel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Bevel_SetParentShowHint)
    MySyscall(pBevel_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetShape)
TBevelShape
Bevel_GetShape(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetShape)
    return (TBevelShape)MySyscall(pBevel_GetShape, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetShape)
void
Bevel_SetShape(TBevel AObj, TBevelShape AValue) {
    GET_FUNC_ADDR(Bevel_SetShape)
    MySyscall(pBevel_SetShape, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetShowHint)
BOOL
Bevel_GetShowHint(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetShowHint)
    return (BOOL)MySyscall(pBevel_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetShowHint)
void
Bevel_SetShowHint(TBevel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Bevel_SetShowHint)
    MySyscall(pBevel_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetStyle)
TBevelStyle
Bevel_GetStyle(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetStyle)
    return (TBevelStyle)MySyscall(pBevel_GetStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetStyle)
void
Bevel_SetStyle(TBevel AObj, TBevelStyle AValue) {
    GET_FUNC_ADDR(Bevel_SetStyle)
    MySyscall(pBevel_SetStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetVisible)
BOOL
Bevel_GetVisible(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetVisible)
    return (BOOL)MySyscall(pBevel_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetVisible)
void
Bevel_SetVisible(TBevel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Bevel_SetVisible)
    MySyscall(pBevel_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetEnabled)
BOOL
Bevel_GetEnabled(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetEnabled)
    return (BOOL)MySyscall(pBevel_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetEnabled)
void
Bevel_SetEnabled(TBevel AObj, BOOL AValue) {
    GET_FUNC_ADDR(Bevel_SetEnabled)
    MySyscall(pBevel_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetAction)
TAction
Bevel_GetAction(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetAction)
    return (TAction)MySyscall(pBevel_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetAction)
void
Bevel_SetAction(TBevel AObj, TAction AValue) {
    GET_FUNC_ADDR(Bevel_SetAction)
    MySyscall(pBevel_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetBiDiMode)
TBiDiMode
Bevel_GetBiDiMode(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetBiDiMode)
    return (TBiDiMode)MySyscall(pBevel_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetBiDiMode)
void
Bevel_SetBiDiMode(TBevel AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(Bevel_SetBiDiMode)
    MySyscall(pBevel_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetBoundsRect)
TRect
Bevel_GetBoundsRect(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetBoundsRect)
    TRect result;
    MySyscall(pBevel_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Bevel_SetBoundsRect)
void
Bevel_SetBoundsRect(TBevel AObj, TRect AValue) {
    GET_FUNC_ADDR(Bevel_SetBoundsRect)
    MySyscall(pBevel_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetClientHeight)
int32_t
Bevel_GetClientHeight(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetClientHeight)
    return (int32_t)MySyscall(pBevel_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetClientHeight)
void
Bevel_SetClientHeight(TBevel AObj, int32_t AValue) {
    GET_FUNC_ADDR(Bevel_SetClientHeight)
    MySyscall(pBevel_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetClientOrigin)
TPoint
Bevel_GetClientOrigin(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetClientOrigin)
    TPoint result;
    MySyscall(pBevel_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Bevel_GetClientRect)
TRect
Bevel_GetClientRect(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetClientRect)
    TRect result;
    MySyscall(pBevel_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Bevel_GetClientWidth)
int32_t
Bevel_GetClientWidth(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetClientWidth)
    return (int32_t)MySyscall(pBevel_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetClientWidth)
void
Bevel_SetClientWidth(TBevel AObj, int32_t AValue) {
    GET_FUNC_ADDR(Bevel_SetClientWidth)
    MySyscall(pBevel_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetControlState)
TControlState
Bevel_GetControlState(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetControlState)
    return (TControlState)MySyscall(pBevel_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetControlState)
void
Bevel_SetControlState(TBevel AObj, TControlState AValue) {
    GET_FUNC_ADDR(Bevel_SetControlState)
    MySyscall(pBevel_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetControlStyle)
TControlStyle
Bevel_GetControlStyle(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetControlStyle)
    return (TControlStyle)MySyscall(pBevel_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetControlStyle)
void
Bevel_SetControlStyle(TBevel AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(Bevel_SetControlStyle)
    MySyscall(pBevel_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetFloating)
BOOL
Bevel_GetFloating(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetFloating)
    return (BOOL)MySyscall(pBevel_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetParent)
TWinControl
Bevel_GetParent(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetParent)
    return (TWinControl)MySyscall(pBevel_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetParent)
void
Bevel_SetParent(TBevel AObj, TWinControl AValue) {
    GET_FUNC_ADDR(Bevel_SetParent)
    MySyscall(pBevel_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetLeft)
int32_t
Bevel_GetLeft(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetLeft)
    return (int32_t)MySyscall(pBevel_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetLeft)
void
Bevel_SetLeft(TBevel AObj, int32_t AValue) {
    GET_FUNC_ADDR(Bevel_SetLeft)
    MySyscall(pBevel_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetTop)
int32_t
Bevel_GetTop(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetTop)
    return (int32_t)MySyscall(pBevel_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetTop)
void
Bevel_SetTop(TBevel AObj, int32_t AValue) {
    GET_FUNC_ADDR(Bevel_SetTop)
    MySyscall(pBevel_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetWidth)
int32_t
Bevel_GetWidth(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetWidth)
    return (int32_t)MySyscall(pBevel_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetWidth)
void
Bevel_SetWidth(TBevel AObj, int32_t AValue) {
    GET_FUNC_ADDR(Bevel_SetWidth)
    MySyscall(pBevel_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetHeight)
int32_t
Bevel_GetHeight(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetHeight)
    return (int32_t)MySyscall(pBevel_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetHeight)
void
Bevel_SetHeight(TBevel AObj, int32_t AValue) {
    GET_FUNC_ADDR(Bevel_SetHeight)
    MySyscall(pBevel_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetCursor)
TCursor
Bevel_GetCursor(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetCursor)
    return (TCursor)MySyscall(pBevel_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetCursor)
void
Bevel_SetCursor(TBevel AObj, TCursor AValue) {
    GET_FUNC_ADDR(Bevel_SetCursor)
    MySyscall(pBevel_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetHint)
char*
Bevel_GetHint(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetHint)
    return (char*)MySyscall(pBevel_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetHint)
void
Bevel_SetHint(TBevel AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Bevel_SetHint)
    MySyscall(pBevel_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetComponentCount)
int32_t
Bevel_GetComponentCount(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetComponentCount)
    return (int32_t)MySyscall(pBevel_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetComponentIndex)
int32_t
Bevel_GetComponentIndex(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetComponentIndex)
    return (int32_t)MySyscall(pBevel_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetComponentIndex)
void
Bevel_SetComponentIndex(TBevel AObj, int32_t AValue) {
    GET_FUNC_ADDR(Bevel_SetComponentIndex)
    MySyscall(pBevel_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetOwner)
TComponent
Bevel_GetOwner(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetOwner)
    return (TComponent)MySyscall(pBevel_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetName)
char*
Bevel_GetName(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetName)
    return (char*)MySyscall(pBevel_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetName)
void
Bevel_SetName(TBevel AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Bevel_SetName)
    MySyscall(pBevel_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetTag)
intptr_t
Bevel_GetTag(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetTag)
    return (intptr_t)MySyscall(pBevel_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetTag)
void
Bevel_SetTag(TBevel AObj, intptr_t AValue) {
    GET_FUNC_ADDR(Bevel_SetTag)
    MySyscall(pBevel_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetAnchorSideLeft)
TAnchorSide
Bevel_GetAnchorSideLeft(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pBevel_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetAnchorSideLeft)
void
Bevel_SetAnchorSideLeft(TBevel AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Bevel_SetAnchorSideLeft)
    MySyscall(pBevel_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetAnchorSideTop)
TAnchorSide
Bevel_GetAnchorSideTop(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pBevel_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetAnchorSideTop)
void
Bevel_SetAnchorSideTop(TBevel AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Bevel_SetAnchorSideTop)
    MySyscall(pBevel_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetAnchorSideRight)
TAnchorSide
Bevel_GetAnchorSideRight(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pBevel_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetAnchorSideRight)
void
Bevel_SetAnchorSideRight(TBevel AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Bevel_SetAnchorSideRight)
    MySyscall(pBevel_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetAnchorSideBottom)
TAnchorSide
Bevel_GetAnchorSideBottom(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pBevel_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetAnchorSideBottom)
void
Bevel_SetAnchorSideBottom(TBevel AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Bevel_SetAnchorSideBottom)
    MySyscall(pBevel_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetBorderSpacing)
TControlBorderSpacing
Bevel_GetBorderSpacing(TBevel AObj) {
    GET_FUNC_ADDR(Bevel_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pBevel_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_SetBorderSpacing)
void
Bevel_SetBorderSpacing(TBevel AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(Bevel_SetBorderSpacing)
    MySyscall(pBevel_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetComponents)
TComponent
Bevel_GetComponents(TBevel AObj, int32_t AIndex) {
    GET_FUNC_ADDR(Bevel_GetComponents)
    return (TComponent)MySyscall(pBevel_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_GetAnchorSide)
TAnchorSide
Bevel_GetAnchorSide(TBevel AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(Bevel_GetAnchorSide)
    return (TAnchorSide)MySyscall(pBevel_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Bevel_StaticClassType)
TClass
Bevel_StaticClassType() {
    GET_FUNC_ADDR(Bevel_StaticClassType)
    return (TClass)MySyscall(pBevel_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TScrollBox-------------------

DEFINE_FUNC_PTR(ScrollBox_Create)
TScrollBox
ScrollBox_Create(TComponent AOwner) {
    GET_FUNC_ADDR(ScrollBox_Create)
    return (TScrollBox)MySyscall(pScrollBox_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_Free)
void
ScrollBox_Free(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_Free)
    MySyscall(pScrollBox_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_ScrollInView)
void
ScrollBox_ScrollInView(TScrollBox AObj, TControl AControl) {
    GET_FUNC_ADDR(ScrollBox_ScrollInView)
    MySyscall(pScrollBox_ScrollInView, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_CanFocus)
BOOL
ScrollBox_CanFocus(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_CanFocus)
    return (BOOL)MySyscall(pScrollBox_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_ContainsControl)
BOOL
ScrollBox_ContainsControl(TScrollBox AObj, TControl Control) {
    GET_FUNC_ADDR(ScrollBox_ContainsControl)
    return (BOOL)MySyscall(pScrollBox_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_ControlAtPos)
TControl
ScrollBox_ControlAtPos(TScrollBox AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(ScrollBox_ControlAtPos)
    return (TControl)MySyscall(pScrollBox_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_DisableAlign)
void
ScrollBox_DisableAlign(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_DisableAlign)
    MySyscall(pScrollBox_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_EnableAlign)
void
ScrollBox_EnableAlign(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_EnableAlign)
    MySyscall(pScrollBox_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_FindChildControl)
TControl
ScrollBox_FindChildControl(TScrollBox AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(ScrollBox_FindChildControl)
    return (TControl)MySyscall(pScrollBox_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_FlipChildren)
void
ScrollBox_FlipChildren(TScrollBox AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(ScrollBox_FlipChildren)
    MySyscall(pScrollBox_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_Focused)
BOOL
ScrollBox_Focused(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_Focused)
    return (BOOL)MySyscall(pScrollBox_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_HandleAllocated)
BOOL
ScrollBox_HandleAllocated(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_HandleAllocated)
    return (BOOL)MySyscall(pScrollBox_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_InsertControl)
void
ScrollBox_InsertControl(TScrollBox AObj, TControl AControl) {
    GET_FUNC_ADDR(ScrollBox_InsertControl)
    MySyscall(pScrollBox_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_Invalidate)
void
ScrollBox_Invalidate(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_Invalidate)
    MySyscall(pScrollBox_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_PaintTo)
void
ScrollBox_PaintTo(TScrollBox AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(ScrollBox_PaintTo)
    MySyscall(pScrollBox_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_RemoveControl)
void
ScrollBox_RemoveControl(TScrollBox AObj, TControl AControl) {
    GET_FUNC_ADDR(ScrollBox_RemoveControl)
    MySyscall(pScrollBox_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_Realign)
void
ScrollBox_Realign(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_Realign)
    MySyscall(pScrollBox_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_Repaint)
void
ScrollBox_Repaint(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_Repaint)
    MySyscall(pScrollBox_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_ScaleBy)
void
ScrollBox_ScaleBy(TScrollBox AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(ScrollBox_ScaleBy)
    MySyscall(pScrollBox_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_ScrollBy)
void
ScrollBox_ScrollBy(TScrollBox AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(ScrollBox_ScrollBy)
    MySyscall(pScrollBox_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetBounds)
void
ScrollBox_SetBounds(TScrollBox AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(ScrollBox_SetBounds)
    MySyscall(pScrollBox_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetFocus)
void
ScrollBox_SetFocus(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_SetFocus)
    MySyscall(pScrollBox_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_Update)
void
ScrollBox_Update(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_Update)
    MySyscall(pScrollBox_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_BringToFront)
void
ScrollBox_BringToFront(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_BringToFront)
    MySyscall(pScrollBox_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_ClientToScreen)
TPoint
ScrollBox_ClientToScreen(TScrollBox AObj, TPoint Point) {
    GET_FUNC_ADDR(ScrollBox_ClientToScreen)
    TPoint result;
    MySyscall(pScrollBox_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ScrollBox_ClientToParent)
TPoint
ScrollBox_ClientToParent(TScrollBox AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ScrollBox_ClientToParent)
    TPoint result;
    MySyscall(pScrollBox_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ScrollBox_Dragging)
BOOL
ScrollBox_Dragging(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_Dragging)
    return (BOOL)MySyscall(pScrollBox_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_HasParent)
BOOL
ScrollBox_HasParent(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_HasParent)
    return (BOOL)MySyscall(pScrollBox_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_Hide)
void
ScrollBox_Hide(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_Hide)
    MySyscall(pScrollBox_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_Perform)
intptr_t
ScrollBox_Perform(TScrollBox AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(ScrollBox_Perform)
    return (intptr_t)MySyscall(pScrollBox_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_Refresh)
void
ScrollBox_Refresh(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_Refresh)
    MySyscall(pScrollBox_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_ScreenToClient)
TPoint
ScrollBox_ScreenToClient(TScrollBox AObj, TPoint Point) {
    GET_FUNC_ADDR(ScrollBox_ScreenToClient)
    TPoint result;
    MySyscall(pScrollBox_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ScrollBox_ParentToClient)
TPoint
ScrollBox_ParentToClient(TScrollBox AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ScrollBox_ParentToClient)
    TPoint result;
    MySyscall(pScrollBox_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ScrollBox_SendToBack)
void
ScrollBox_SendToBack(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_SendToBack)
    MySyscall(pScrollBox_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_Show)
void
ScrollBox_Show(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_Show)
    MySyscall(pScrollBox_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetTextBuf)
int32_t
ScrollBox_GetTextBuf(TScrollBox AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(ScrollBox_GetTextBuf)
    return (int32_t)MySyscall(pScrollBox_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetTextLen)
int32_t
ScrollBox_GetTextLen(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetTextLen)
    return (int32_t)MySyscall(pScrollBox_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetTextBuf)
void
ScrollBox_SetTextBuf(TScrollBox AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(ScrollBox_SetTextBuf)
    MySyscall(pScrollBox_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_FindComponent)
TComponent
ScrollBox_FindComponent(TScrollBox AObj, CChar char* AName) {
    GET_FUNC_ADDR(ScrollBox_FindComponent)
    return (TComponent)MySyscall(pScrollBox_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetNamePath)
char*
ScrollBox_GetNamePath(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetNamePath)
    return (char*)MySyscall(pScrollBox_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_Assign)
void
ScrollBox_Assign(TScrollBox AObj, TObject Source) {
    GET_FUNC_ADDR(ScrollBox_Assign)
    MySyscall(pScrollBox_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_ClassType)
TClass
ScrollBox_ClassType(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_ClassType)
    return (TClass)MySyscall(pScrollBox_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_ClassName)
char*
ScrollBox_ClassName(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_ClassName)
    return (char*)MySyscall(pScrollBox_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_InstanceSize)
int32_t
ScrollBox_InstanceSize(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_InstanceSize)
    return (int32_t)MySyscall(pScrollBox_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_InheritsFrom)
BOOL
ScrollBox_InheritsFrom(TScrollBox AObj, TClass AClass) {
    GET_FUNC_ADDR(ScrollBox_InheritsFrom)
    return (BOOL)MySyscall(pScrollBox_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_Equals)
BOOL
ScrollBox_Equals(TScrollBox AObj, TObject Obj) {
    GET_FUNC_ADDR(ScrollBox_Equals)
    return (BOOL)MySyscall(pScrollBox_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetHashCode)
int32_t
ScrollBox_GetHashCode(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetHashCode)
    return (int32_t)MySyscall(pScrollBox_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_ToString)
char*
ScrollBox_ToString(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_ToString)
    return (char*)MySyscall(pScrollBox_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_AnchorToNeighbour)
void
ScrollBox_AnchorToNeighbour(TScrollBox AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ScrollBox_AnchorToNeighbour)
    MySyscall(pScrollBox_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_AnchorParallel)
void
ScrollBox_AnchorParallel(TScrollBox AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ScrollBox_AnchorParallel)
    MySyscall(pScrollBox_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_AnchorHorizontalCenterTo)
void
ScrollBox_AnchorHorizontalCenterTo(TScrollBox AObj, TControl ASibling) {
    GET_FUNC_ADDR(ScrollBox_AnchorHorizontalCenterTo)
    MySyscall(pScrollBox_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_AnchorVerticalCenterTo)
void
ScrollBox_AnchorVerticalCenterTo(TScrollBox AObj, TControl ASibling) {
    GET_FUNC_ADDR(ScrollBox_AnchorVerticalCenterTo)
    MySyscall(pScrollBox_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_AnchorSame)
void
ScrollBox_AnchorSame(TScrollBox AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(ScrollBox_AnchorSame)
    MySyscall(pScrollBox_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_AnchorAsAlign)
void
ScrollBox_AnchorAsAlign(TScrollBox AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(ScrollBox_AnchorAsAlign)
    MySyscall(pScrollBox_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_AnchorClient)
void
ScrollBox_AnchorClient(TScrollBox AObj, int32_t ASpace) {
    GET_FUNC_ADDR(ScrollBox_AnchorClient)
    MySyscall(pScrollBox_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_ScaleDesignToForm)
int32_t
ScrollBox_ScaleDesignToForm(TScrollBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ScrollBox_ScaleDesignToForm)
    return (int32_t)MySyscall(pScrollBox_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_ScaleFormToDesign)
int32_t
ScrollBox_ScaleFormToDesign(TScrollBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ScrollBox_ScaleFormToDesign)
    return (int32_t)MySyscall(pScrollBox_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_Scale96ToForm)
int32_t
ScrollBox_Scale96ToForm(TScrollBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ScrollBox_Scale96ToForm)
    return (int32_t)MySyscall(pScrollBox_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_ScaleFormTo96)
int32_t
ScrollBox_ScaleFormTo96(TScrollBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ScrollBox_ScaleFormTo96)
    return (int32_t)MySyscall(pScrollBox_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_Scale96ToFont)
int32_t
ScrollBox_Scale96ToFont(TScrollBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ScrollBox_Scale96ToFont)
    return (int32_t)MySyscall(pScrollBox_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_ScaleFontTo96)
int32_t
ScrollBox_ScaleFontTo96(TScrollBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ScrollBox_ScaleFontTo96)
    return (int32_t)MySyscall(pScrollBox_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_ScaleScreenToFont)
int32_t
ScrollBox_ScaleScreenToFont(TScrollBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ScrollBox_ScaleScreenToFont)
    return (int32_t)MySyscall(pScrollBox_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_ScaleFontToScreen)
int32_t
ScrollBox_ScaleFontToScreen(TScrollBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ScrollBox_ScaleFontToScreen)
    return (int32_t)MySyscall(pScrollBox_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_Scale96ToScreen)
int32_t
ScrollBox_Scale96ToScreen(TScrollBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ScrollBox_Scale96ToScreen)
    return (int32_t)MySyscall(pScrollBox_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_ScaleScreenTo96)
int32_t
ScrollBox_ScaleScreenTo96(TScrollBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ScrollBox_ScaleScreenTo96)
    return (int32_t)MySyscall(pScrollBox_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_AutoAdjustLayout)
void
ScrollBox_AutoAdjustLayout(TScrollBox AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(ScrollBox_AutoAdjustLayout)
    MySyscall(pScrollBox_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_FixDesignFontsPPI)
void
ScrollBox_FixDesignFontsPPI(TScrollBox AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(ScrollBox_FixDesignFontsPPI)
    MySyscall(pScrollBox_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_ScaleFontsPPI)
void
ScrollBox_ScaleFontsPPI(TScrollBox AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(ScrollBox_ScaleFontsPPI)
    MySyscall(pScrollBox_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetAlign)
TAlign
ScrollBox_GetAlign(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetAlign)
    return (TAlign)MySyscall(pScrollBox_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetAlign)
void
ScrollBox_SetAlign(TScrollBox AObj, TAlign AValue) {
    GET_FUNC_ADDR(ScrollBox_SetAlign)
    MySyscall(pScrollBox_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetAnchors)
TAnchors
ScrollBox_GetAnchors(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetAnchors)
    return (TAnchors)MySyscall(pScrollBox_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetAnchors)
void
ScrollBox_SetAnchors(TScrollBox AObj, TAnchors AValue) {
    GET_FUNC_ADDR(ScrollBox_SetAnchors)
    MySyscall(pScrollBox_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetAutoScroll)
BOOL
ScrollBox_GetAutoScroll(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetAutoScroll)
    return (BOOL)MySyscall(pScrollBox_GetAutoScroll, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetAutoScroll)
void
ScrollBox_SetAutoScroll(TScrollBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ScrollBox_SetAutoScroll)
    MySyscall(pScrollBox_SetAutoScroll, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetAutoSize)
BOOL
ScrollBox_GetAutoSize(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetAutoSize)
    return (BOOL)MySyscall(pScrollBox_GetAutoSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetAutoSize)
void
ScrollBox_SetAutoSize(TScrollBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ScrollBox_SetAutoSize)
    MySyscall(pScrollBox_SetAutoSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetBiDiMode)
TBiDiMode
ScrollBox_GetBiDiMode(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetBiDiMode)
    return (TBiDiMode)MySyscall(pScrollBox_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetBiDiMode)
void
ScrollBox_SetBiDiMode(TScrollBox AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(ScrollBox_SetBiDiMode)
    MySyscall(pScrollBox_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetBorderStyle)
TBorderStyle
ScrollBox_GetBorderStyle(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetBorderStyle)
    return (TBorderStyle)MySyscall(pScrollBox_GetBorderStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetBorderStyle)
void
ScrollBox_SetBorderStyle(TScrollBox AObj, TBorderStyle AValue) {
    GET_FUNC_ADDR(ScrollBox_SetBorderStyle)
    MySyscall(pScrollBox_SetBorderStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetConstraints)
TSizeConstraints
ScrollBox_GetConstraints(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetConstraints)
    return (TSizeConstraints)MySyscall(pScrollBox_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetConstraints)
void
ScrollBox_SetConstraints(TScrollBox AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(ScrollBox_SetConstraints)
    MySyscall(pScrollBox_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetDockSite)
BOOL
ScrollBox_GetDockSite(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetDockSite)
    return (BOOL)MySyscall(pScrollBox_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetDockSite)
void
ScrollBox_SetDockSite(TScrollBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ScrollBox_SetDockSite)
    MySyscall(pScrollBox_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetDoubleBuffered)
BOOL
ScrollBox_GetDoubleBuffered(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetDoubleBuffered)
    return (BOOL)MySyscall(pScrollBox_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetDoubleBuffered)
void
ScrollBox_SetDoubleBuffered(TScrollBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ScrollBox_SetDoubleBuffered)
    MySyscall(pScrollBox_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetDragCursor)
TCursor
ScrollBox_GetDragCursor(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetDragCursor)
    return (TCursor)MySyscall(pScrollBox_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetDragCursor)
void
ScrollBox_SetDragCursor(TScrollBox AObj, TCursor AValue) {
    GET_FUNC_ADDR(ScrollBox_SetDragCursor)
    MySyscall(pScrollBox_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetDragKind)
TDragKind
ScrollBox_GetDragKind(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetDragKind)
    return (TDragKind)MySyscall(pScrollBox_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetDragKind)
void
ScrollBox_SetDragKind(TScrollBox AObj, TDragKind AValue) {
    GET_FUNC_ADDR(ScrollBox_SetDragKind)
    MySyscall(pScrollBox_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetDragMode)
TDragMode
ScrollBox_GetDragMode(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetDragMode)
    return (TDragMode)MySyscall(pScrollBox_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetDragMode)
void
ScrollBox_SetDragMode(TScrollBox AObj, TDragMode AValue) {
    GET_FUNC_ADDR(ScrollBox_SetDragMode)
    MySyscall(pScrollBox_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetEnabled)
BOOL
ScrollBox_GetEnabled(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetEnabled)
    return (BOOL)MySyscall(pScrollBox_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetEnabled)
void
ScrollBox_SetEnabled(TScrollBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ScrollBox_SetEnabled)
    MySyscall(pScrollBox_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetColor)
TColor
ScrollBox_GetColor(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetColor)
    return (TColor)MySyscall(pScrollBox_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetColor)
void
ScrollBox_SetColor(TScrollBox AObj, TColor AValue) {
    GET_FUNC_ADDR(ScrollBox_SetColor)
    MySyscall(pScrollBox_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetFont)
TFont
ScrollBox_GetFont(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetFont)
    return (TFont)MySyscall(pScrollBox_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetFont)
void
ScrollBox_SetFont(TScrollBox AObj, TFont AValue) {
    GET_FUNC_ADDR(ScrollBox_SetFont)
    MySyscall(pScrollBox_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetParentBackground)
BOOL
ScrollBox_GetParentBackground(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetParentBackground)
    return (BOOL)MySyscall(pScrollBox_GetParentBackground, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetParentBackground)
void
ScrollBox_SetParentBackground(TScrollBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ScrollBox_SetParentBackground)
    MySyscall(pScrollBox_SetParentBackground, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetParentColor)
BOOL
ScrollBox_GetParentColor(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetParentColor)
    return (BOOL)MySyscall(pScrollBox_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetParentColor)
void
ScrollBox_SetParentColor(TScrollBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ScrollBox_SetParentColor)
    MySyscall(pScrollBox_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetParentDoubleBuffered)
BOOL
ScrollBox_GetParentDoubleBuffered(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pScrollBox_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetParentDoubleBuffered)
void
ScrollBox_SetParentDoubleBuffered(TScrollBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ScrollBox_SetParentDoubleBuffered)
    MySyscall(pScrollBox_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetParentFont)
BOOL
ScrollBox_GetParentFont(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetParentFont)
    return (BOOL)MySyscall(pScrollBox_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetParentFont)
void
ScrollBox_SetParentFont(TScrollBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ScrollBox_SetParentFont)
    MySyscall(pScrollBox_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetParentShowHint)
BOOL
ScrollBox_GetParentShowHint(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetParentShowHint)
    return (BOOL)MySyscall(pScrollBox_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetParentShowHint)
void
ScrollBox_SetParentShowHint(TScrollBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ScrollBox_SetParentShowHint)
    MySyscall(pScrollBox_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetPopupMenu)
TPopupMenu
ScrollBox_GetPopupMenu(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetPopupMenu)
    return (TPopupMenu)MySyscall(pScrollBox_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetPopupMenu)
void
ScrollBox_SetPopupMenu(TScrollBox AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(ScrollBox_SetPopupMenu)
    MySyscall(pScrollBox_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetShowHint)
BOOL
ScrollBox_GetShowHint(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetShowHint)
    return (BOOL)MySyscall(pScrollBox_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetShowHint)
void
ScrollBox_SetShowHint(TScrollBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ScrollBox_SetShowHint)
    MySyscall(pScrollBox_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetTabOrder)
TTabOrder
ScrollBox_GetTabOrder(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetTabOrder)
    return (TTabOrder)MySyscall(pScrollBox_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetTabOrder)
void
ScrollBox_SetTabOrder(TScrollBox AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(ScrollBox_SetTabOrder)
    MySyscall(pScrollBox_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetTabStop)
BOOL
ScrollBox_GetTabStop(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetTabStop)
    return (BOOL)MySyscall(pScrollBox_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetTabStop)
void
ScrollBox_SetTabStop(TScrollBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ScrollBox_SetTabStop)
    MySyscall(pScrollBox_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetVisible)
BOOL
ScrollBox_GetVisible(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetVisible)
    return (BOOL)MySyscall(pScrollBox_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetVisible)
void
ScrollBox_SetVisible(TScrollBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ScrollBox_SetVisible)
    MySyscall(pScrollBox_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetOnClick)
void
ScrollBox_SetOnClick(TScrollBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ScrollBox_SetOnClick)
    MySyscall(pScrollBox_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetOnConstrainedResize)
void
ScrollBox_SetOnConstrainedResize(TScrollBox AObj, TConstrainedResizeEvent AEventData) {
    GET_FUNC_ADDR(ScrollBox_SetOnConstrainedResize)
    MySyscall(pScrollBox_SetOnConstrainedResize, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetOnDblClick)
void
ScrollBox_SetOnDblClick(TScrollBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ScrollBox_SetOnDblClick)
    MySyscall(pScrollBox_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetOnDockDrop)
void
ScrollBox_SetOnDockDrop(TScrollBox AObj, TDockDropEvent AEventData) {
    GET_FUNC_ADDR(ScrollBox_SetOnDockDrop)
    MySyscall(pScrollBox_SetOnDockDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetOnDragDrop)
void
ScrollBox_SetOnDragDrop(TScrollBox AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(ScrollBox_SetOnDragDrop)
    MySyscall(pScrollBox_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetOnDragOver)
void
ScrollBox_SetOnDragOver(TScrollBox AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(ScrollBox_SetOnDragOver)
    MySyscall(pScrollBox_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetOnEndDrag)
void
ScrollBox_SetOnEndDrag(TScrollBox AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(ScrollBox_SetOnEndDrag)
    MySyscall(pScrollBox_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetOnEnter)
void
ScrollBox_SetOnEnter(TScrollBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ScrollBox_SetOnEnter)
    MySyscall(pScrollBox_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetOnExit)
void
ScrollBox_SetOnExit(TScrollBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ScrollBox_SetOnExit)
    MySyscall(pScrollBox_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetOnGetSiteInfo)
void
ScrollBox_SetOnGetSiteInfo(TScrollBox AObj, TGetSiteInfoEvent AEventData) {
    GET_FUNC_ADDR(ScrollBox_SetOnGetSiteInfo)
    MySyscall(pScrollBox_SetOnGetSiteInfo, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetOnMouseDown)
void
ScrollBox_SetOnMouseDown(TScrollBox AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(ScrollBox_SetOnMouseDown)
    MySyscall(pScrollBox_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetOnMouseEnter)
void
ScrollBox_SetOnMouseEnter(TScrollBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ScrollBox_SetOnMouseEnter)
    MySyscall(pScrollBox_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetOnMouseLeave)
void
ScrollBox_SetOnMouseLeave(TScrollBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ScrollBox_SetOnMouseLeave)
    MySyscall(pScrollBox_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetOnMouseMove)
void
ScrollBox_SetOnMouseMove(TScrollBox AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(ScrollBox_SetOnMouseMove)
    MySyscall(pScrollBox_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetOnMouseUp)
void
ScrollBox_SetOnMouseUp(TScrollBox AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(ScrollBox_SetOnMouseUp)
    MySyscall(pScrollBox_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetOnMouseWheel)
void
ScrollBox_SetOnMouseWheel(TScrollBox AObj, TMouseWheelEvent AEventData) {
    GET_FUNC_ADDR(ScrollBox_SetOnMouseWheel)
    MySyscall(pScrollBox_SetOnMouseWheel, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetOnMouseWheelDown)
void
ScrollBox_SetOnMouseWheelDown(TScrollBox AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(ScrollBox_SetOnMouseWheelDown)
    MySyscall(pScrollBox_SetOnMouseWheelDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetOnMouseWheelUp)
void
ScrollBox_SetOnMouseWheelUp(TScrollBox AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(ScrollBox_SetOnMouseWheelUp)
    MySyscall(pScrollBox_SetOnMouseWheelUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetOnResize)
void
ScrollBox_SetOnResize(TScrollBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ScrollBox_SetOnResize)
    MySyscall(pScrollBox_SetOnResize, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetOnUnDock)
void
ScrollBox_SetOnUnDock(TScrollBox AObj, TUnDockEvent AEventData) {
    GET_FUNC_ADDR(ScrollBox_SetOnUnDock)
    MySyscall(pScrollBox_SetOnUnDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetOnAlignPosition)
void
ScrollBox_SetOnAlignPosition(TScrollBox AObj, TAlignPositionEvent AEventData) {
    GET_FUNC_ADDR(ScrollBox_SetOnAlignPosition)
    MySyscall(pScrollBox_SetOnAlignPosition, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetHorzScrollBar)
TControlScrollBar
ScrollBox_GetHorzScrollBar(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetHorzScrollBar)
    return (TControlScrollBar)MySyscall(pScrollBox_GetHorzScrollBar, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetHorzScrollBar)
void
ScrollBox_SetHorzScrollBar(TScrollBox AObj, TControlScrollBar AValue) {
    GET_FUNC_ADDR(ScrollBox_SetHorzScrollBar)
    MySyscall(pScrollBox_SetHorzScrollBar, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetVertScrollBar)
TControlScrollBar
ScrollBox_GetVertScrollBar(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetVertScrollBar)
    return (TControlScrollBar)MySyscall(pScrollBox_GetVertScrollBar, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetVertScrollBar)
void
ScrollBox_SetVertScrollBar(TScrollBox AObj, TControlScrollBar AValue) {
    GET_FUNC_ADDR(ScrollBox_SetVertScrollBar)
    MySyscall(pScrollBox_SetVertScrollBar, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetDockClientCount)
int32_t
ScrollBox_GetDockClientCount(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetDockClientCount)
    return (int32_t)MySyscall(pScrollBox_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetMouseInClient)
BOOL
ScrollBox_GetMouseInClient(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetMouseInClient)
    return (BOOL)MySyscall(pScrollBox_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetVisibleDockClientCount)
int32_t
ScrollBox_GetVisibleDockClientCount(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pScrollBox_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetBrush)
TBrush
ScrollBox_GetBrush(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetBrush)
    return (TBrush)MySyscall(pScrollBox_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetControlCount)
int32_t
ScrollBox_GetControlCount(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetControlCount)
    return (int32_t)MySyscall(pScrollBox_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetHandle)
HWND
ScrollBox_GetHandle(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetHandle)
    return (HWND)MySyscall(pScrollBox_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetParentWindow)
HWND
ScrollBox_GetParentWindow(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetParentWindow)
    return (HWND)MySyscall(pScrollBox_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetParentWindow)
void
ScrollBox_SetParentWindow(TScrollBox AObj, HWND AValue) {
    GET_FUNC_ADDR(ScrollBox_SetParentWindow)
    MySyscall(pScrollBox_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetShowing)
BOOL
ScrollBox_GetShowing(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetShowing)
    return (BOOL)MySyscall(pScrollBox_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetUseDockManager)
BOOL
ScrollBox_GetUseDockManager(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetUseDockManager)
    return (BOOL)MySyscall(pScrollBox_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetUseDockManager)
void
ScrollBox_SetUseDockManager(TScrollBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ScrollBox_SetUseDockManager)
    MySyscall(pScrollBox_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetAction)
TAction
ScrollBox_GetAction(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetAction)
    return (TAction)MySyscall(pScrollBox_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetAction)
void
ScrollBox_SetAction(TScrollBox AObj, TAction AValue) {
    GET_FUNC_ADDR(ScrollBox_SetAction)
    MySyscall(pScrollBox_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetBoundsRect)
TRect
ScrollBox_GetBoundsRect(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetBoundsRect)
    TRect result;
    MySyscall(pScrollBox_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ScrollBox_SetBoundsRect)
void
ScrollBox_SetBoundsRect(TScrollBox AObj, TRect AValue) {
    GET_FUNC_ADDR(ScrollBox_SetBoundsRect)
    MySyscall(pScrollBox_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetClientHeight)
int32_t
ScrollBox_GetClientHeight(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetClientHeight)
    return (int32_t)MySyscall(pScrollBox_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetClientHeight)
void
ScrollBox_SetClientHeight(TScrollBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ScrollBox_SetClientHeight)
    MySyscall(pScrollBox_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetClientOrigin)
TPoint
ScrollBox_GetClientOrigin(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetClientOrigin)
    TPoint result;
    MySyscall(pScrollBox_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ScrollBox_GetClientRect)
TRect
ScrollBox_GetClientRect(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetClientRect)
    TRect result;
    MySyscall(pScrollBox_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ScrollBox_GetClientWidth)
int32_t
ScrollBox_GetClientWidth(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetClientWidth)
    return (int32_t)MySyscall(pScrollBox_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetClientWidth)
void
ScrollBox_SetClientWidth(TScrollBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ScrollBox_SetClientWidth)
    MySyscall(pScrollBox_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetControlState)
TControlState
ScrollBox_GetControlState(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetControlState)
    return (TControlState)MySyscall(pScrollBox_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetControlState)
void
ScrollBox_SetControlState(TScrollBox AObj, TControlState AValue) {
    GET_FUNC_ADDR(ScrollBox_SetControlState)
    MySyscall(pScrollBox_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetControlStyle)
TControlStyle
ScrollBox_GetControlStyle(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetControlStyle)
    return (TControlStyle)MySyscall(pScrollBox_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetControlStyle)
void
ScrollBox_SetControlStyle(TScrollBox AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(ScrollBox_SetControlStyle)
    MySyscall(pScrollBox_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetFloating)
BOOL
ScrollBox_GetFloating(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetFloating)
    return (BOOL)MySyscall(pScrollBox_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetParent)
TWinControl
ScrollBox_GetParent(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetParent)
    return (TWinControl)MySyscall(pScrollBox_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetParent)
void
ScrollBox_SetParent(TScrollBox AObj, TWinControl AValue) {
    GET_FUNC_ADDR(ScrollBox_SetParent)
    MySyscall(pScrollBox_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetLeft)
int32_t
ScrollBox_GetLeft(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetLeft)
    return (int32_t)MySyscall(pScrollBox_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetLeft)
void
ScrollBox_SetLeft(TScrollBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ScrollBox_SetLeft)
    MySyscall(pScrollBox_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetTop)
int32_t
ScrollBox_GetTop(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetTop)
    return (int32_t)MySyscall(pScrollBox_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetTop)
void
ScrollBox_SetTop(TScrollBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ScrollBox_SetTop)
    MySyscall(pScrollBox_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetWidth)
int32_t
ScrollBox_GetWidth(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetWidth)
    return (int32_t)MySyscall(pScrollBox_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetWidth)
void
ScrollBox_SetWidth(TScrollBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ScrollBox_SetWidth)
    MySyscall(pScrollBox_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetHeight)
int32_t
ScrollBox_GetHeight(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetHeight)
    return (int32_t)MySyscall(pScrollBox_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetHeight)
void
ScrollBox_SetHeight(TScrollBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ScrollBox_SetHeight)
    MySyscall(pScrollBox_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetCursor)
TCursor
ScrollBox_GetCursor(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetCursor)
    return (TCursor)MySyscall(pScrollBox_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetCursor)
void
ScrollBox_SetCursor(TScrollBox AObj, TCursor AValue) {
    GET_FUNC_ADDR(ScrollBox_SetCursor)
    MySyscall(pScrollBox_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetHint)
char*
ScrollBox_GetHint(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetHint)
    return (char*)MySyscall(pScrollBox_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetHint)
void
ScrollBox_SetHint(TScrollBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ScrollBox_SetHint)
    MySyscall(pScrollBox_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetComponentCount)
int32_t
ScrollBox_GetComponentCount(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetComponentCount)
    return (int32_t)MySyscall(pScrollBox_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetComponentIndex)
int32_t
ScrollBox_GetComponentIndex(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetComponentIndex)
    return (int32_t)MySyscall(pScrollBox_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetComponentIndex)
void
ScrollBox_SetComponentIndex(TScrollBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ScrollBox_SetComponentIndex)
    MySyscall(pScrollBox_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetOwner)
TComponent
ScrollBox_GetOwner(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetOwner)
    return (TComponent)MySyscall(pScrollBox_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetName)
char*
ScrollBox_GetName(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetName)
    return (char*)MySyscall(pScrollBox_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetName)
void
ScrollBox_SetName(TScrollBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ScrollBox_SetName)
    MySyscall(pScrollBox_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetTag)
intptr_t
ScrollBox_GetTag(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetTag)
    return (intptr_t)MySyscall(pScrollBox_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetTag)
void
ScrollBox_SetTag(TScrollBox AObj, intptr_t AValue) {
    GET_FUNC_ADDR(ScrollBox_SetTag)
    MySyscall(pScrollBox_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetAnchorSideLeft)
TAnchorSide
ScrollBox_GetAnchorSideLeft(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pScrollBox_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetAnchorSideLeft)
void
ScrollBox_SetAnchorSideLeft(TScrollBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ScrollBox_SetAnchorSideLeft)
    MySyscall(pScrollBox_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetAnchorSideTop)
TAnchorSide
ScrollBox_GetAnchorSideTop(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pScrollBox_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetAnchorSideTop)
void
ScrollBox_SetAnchorSideTop(TScrollBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ScrollBox_SetAnchorSideTop)
    MySyscall(pScrollBox_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetAnchorSideRight)
TAnchorSide
ScrollBox_GetAnchorSideRight(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pScrollBox_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetAnchorSideRight)
void
ScrollBox_SetAnchorSideRight(TScrollBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ScrollBox_SetAnchorSideRight)
    MySyscall(pScrollBox_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetAnchorSideBottom)
TAnchorSide
ScrollBox_GetAnchorSideBottom(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pScrollBox_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetAnchorSideBottom)
void
ScrollBox_SetAnchorSideBottom(TScrollBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ScrollBox_SetAnchorSideBottom)
    MySyscall(pScrollBox_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetChildSizing)
TControlChildSizing
ScrollBox_GetChildSizing(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetChildSizing)
    return (TControlChildSizing)MySyscall(pScrollBox_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetChildSizing)
void
ScrollBox_SetChildSizing(TScrollBox AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(ScrollBox_SetChildSizing)
    MySyscall(pScrollBox_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetBorderSpacing)
TControlBorderSpacing
ScrollBox_GetBorderSpacing(TScrollBox AObj) {
    GET_FUNC_ADDR(ScrollBox_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pScrollBox_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_SetBorderSpacing)
void
ScrollBox_SetBorderSpacing(TScrollBox AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(ScrollBox_SetBorderSpacing)
    MySyscall(pScrollBox_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetDockClients)
TControl
ScrollBox_GetDockClients(TScrollBox AObj, int32_t Index) {
    GET_FUNC_ADDR(ScrollBox_GetDockClients)
    return (TControl)MySyscall(pScrollBox_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetControls)
TControl
ScrollBox_GetControls(TScrollBox AObj, int32_t Index) {
    GET_FUNC_ADDR(ScrollBox_GetControls)
    return (TControl)MySyscall(pScrollBox_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetComponents)
TComponent
ScrollBox_GetComponents(TScrollBox AObj, int32_t AIndex) {
    GET_FUNC_ADDR(ScrollBox_GetComponents)
    return (TComponent)MySyscall(pScrollBox_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_GetAnchorSide)
TAnchorSide
ScrollBox_GetAnchorSide(TScrollBox AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(ScrollBox_GetAnchorSide)
    return (TAnchorSide)MySyscall(pScrollBox_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ScrollBox_StaticClassType)
TClass
ScrollBox_StaticClassType() {
    GET_FUNC_ADDR(ScrollBox_StaticClassType)
    return (TClass)MySyscall(pScrollBox_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TCheckListBox-------------------

DEFINE_FUNC_PTR(CheckListBox_Create)
TCheckListBox
CheckListBox_Create(TComponent AOwner) {
    GET_FUNC_ADDR(CheckListBox_Create)
    return (TCheckListBox)MySyscall(pCheckListBox_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_Free)
void
CheckListBox_Free(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_Free)
    MySyscall(pCheckListBox_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_CheckAll)
void
CheckListBox_CheckAll(TCheckListBox AObj, TCheckBoxState AState, BOOL AllowGrayed, BOOL AllowDisabled) {
    GET_FUNC_ADDR(CheckListBox_CheckAll)
    MySyscall(pCheckListBox_CheckAll, 4, AObj, AState, AllowGrayed, AllowDisabled ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_AddItem)
void
CheckListBox_AddItem(TCheckListBox AObj, CChar char* Item, TObject AObject) {
    GET_FUNC_ADDR(CheckListBox_AddItem)
    MySyscall(pCheckListBox_AddItem, 3, AObj, Item, AObject ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_Clear)
void
CheckListBox_Clear(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_Clear)
    MySyscall(pCheckListBox_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_ClearSelection)
void
CheckListBox_ClearSelection(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_ClearSelection)
    MySyscall(pCheckListBox_ClearSelection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_DeleteSelected)
void
CheckListBox_DeleteSelected(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_DeleteSelected)
    MySyscall(pCheckListBox_DeleteSelected, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_ItemAtPos)
int32_t
CheckListBox_ItemAtPos(TCheckListBox AObj, TPoint Pos, BOOL Existing) {
    GET_FUNC_ADDR(CheckListBox_ItemAtPos)
    return (int32_t)MySyscall(pCheckListBox_ItemAtPos, 3, AObj, &Pos, Existing ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_ItemRect)
TRect
CheckListBox_ItemRect(TCheckListBox AObj, int32_t Index) {
    GET_FUNC_ADDR(CheckListBox_ItemRect)
    TRect result;
    MySyscall(pCheckListBox_ItemRect, 3, AObj, Index, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckListBox_SelectAll)
void
CheckListBox_SelectAll(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_SelectAll)
    MySyscall(pCheckListBox_SelectAll, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_CanFocus)
BOOL
CheckListBox_CanFocus(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_CanFocus)
    return (BOOL)MySyscall(pCheckListBox_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_ContainsControl)
BOOL
CheckListBox_ContainsControl(TCheckListBox AObj, TControl Control) {
    GET_FUNC_ADDR(CheckListBox_ContainsControl)
    return (BOOL)MySyscall(pCheckListBox_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_ControlAtPos)
TControl
CheckListBox_ControlAtPos(TCheckListBox AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(CheckListBox_ControlAtPos)
    return (TControl)MySyscall(pCheckListBox_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_DisableAlign)
void
CheckListBox_DisableAlign(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_DisableAlign)
    MySyscall(pCheckListBox_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_EnableAlign)
void
CheckListBox_EnableAlign(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_EnableAlign)
    MySyscall(pCheckListBox_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_FindChildControl)
TControl
CheckListBox_FindChildControl(TCheckListBox AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(CheckListBox_FindChildControl)
    return (TControl)MySyscall(pCheckListBox_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_FlipChildren)
void
CheckListBox_FlipChildren(TCheckListBox AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(CheckListBox_FlipChildren)
    MySyscall(pCheckListBox_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_Focused)
BOOL
CheckListBox_Focused(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_Focused)
    return (BOOL)MySyscall(pCheckListBox_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_HandleAllocated)
BOOL
CheckListBox_HandleAllocated(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_HandleAllocated)
    return (BOOL)MySyscall(pCheckListBox_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_InsertControl)
void
CheckListBox_InsertControl(TCheckListBox AObj, TControl AControl) {
    GET_FUNC_ADDR(CheckListBox_InsertControl)
    MySyscall(pCheckListBox_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_Invalidate)
void
CheckListBox_Invalidate(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_Invalidate)
    MySyscall(pCheckListBox_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_PaintTo)
void
CheckListBox_PaintTo(TCheckListBox AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(CheckListBox_PaintTo)
    MySyscall(pCheckListBox_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_RemoveControl)
void
CheckListBox_RemoveControl(TCheckListBox AObj, TControl AControl) {
    GET_FUNC_ADDR(CheckListBox_RemoveControl)
    MySyscall(pCheckListBox_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_Realign)
void
CheckListBox_Realign(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_Realign)
    MySyscall(pCheckListBox_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_Repaint)
void
CheckListBox_Repaint(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_Repaint)
    MySyscall(pCheckListBox_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_ScaleBy)
void
CheckListBox_ScaleBy(TCheckListBox AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(CheckListBox_ScaleBy)
    MySyscall(pCheckListBox_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_ScrollBy)
void
CheckListBox_ScrollBy(TCheckListBox AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(CheckListBox_ScrollBy)
    MySyscall(pCheckListBox_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetBounds)
void
CheckListBox_SetBounds(TCheckListBox AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(CheckListBox_SetBounds)
    MySyscall(pCheckListBox_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetFocus)
void
CheckListBox_SetFocus(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_SetFocus)
    MySyscall(pCheckListBox_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_Update)
void
CheckListBox_Update(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_Update)
    MySyscall(pCheckListBox_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_BringToFront)
void
CheckListBox_BringToFront(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_BringToFront)
    MySyscall(pCheckListBox_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_ClientToScreen)
TPoint
CheckListBox_ClientToScreen(TCheckListBox AObj, TPoint Point) {
    GET_FUNC_ADDR(CheckListBox_ClientToScreen)
    TPoint result;
    MySyscall(pCheckListBox_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckListBox_ClientToParent)
TPoint
CheckListBox_ClientToParent(TCheckListBox AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(CheckListBox_ClientToParent)
    TPoint result;
    MySyscall(pCheckListBox_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckListBox_Dragging)
BOOL
CheckListBox_Dragging(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_Dragging)
    return (BOOL)MySyscall(pCheckListBox_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_HasParent)
BOOL
CheckListBox_HasParent(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_HasParent)
    return (BOOL)MySyscall(pCheckListBox_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_Hide)
void
CheckListBox_Hide(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_Hide)
    MySyscall(pCheckListBox_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_Perform)
intptr_t
CheckListBox_Perform(TCheckListBox AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(CheckListBox_Perform)
    return (intptr_t)MySyscall(pCheckListBox_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_Refresh)
void
CheckListBox_Refresh(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_Refresh)
    MySyscall(pCheckListBox_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_ScreenToClient)
TPoint
CheckListBox_ScreenToClient(TCheckListBox AObj, TPoint Point) {
    GET_FUNC_ADDR(CheckListBox_ScreenToClient)
    TPoint result;
    MySyscall(pCheckListBox_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckListBox_ParentToClient)
TPoint
CheckListBox_ParentToClient(TCheckListBox AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(CheckListBox_ParentToClient)
    TPoint result;
    MySyscall(pCheckListBox_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckListBox_SendToBack)
void
CheckListBox_SendToBack(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_SendToBack)
    MySyscall(pCheckListBox_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_Show)
void
CheckListBox_Show(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_Show)
    MySyscall(pCheckListBox_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetTextBuf)
int32_t
CheckListBox_GetTextBuf(TCheckListBox AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(CheckListBox_GetTextBuf)
    return (int32_t)MySyscall(pCheckListBox_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetTextLen)
int32_t
CheckListBox_GetTextLen(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetTextLen)
    return (int32_t)MySyscall(pCheckListBox_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetTextBuf)
void
CheckListBox_SetTextBuf(TCheckListBox AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(CheckListBox_SetTextBuf)
    MySyscall(pCheckListBox_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_FindComponent)
TComponent
CheckListBox_FindComponent(TCheckListBox AObj, CChar char* AName) {
    GET_FUNC_ADDR(CheckListBox_FindComponent)
    return (TComponent)MySyscall(pCheckListBox_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetNamePath)
char*
CheckListBox_GetNamePath(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetNamePath)
    return (char*)MySyscall(pCheckListBox_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_Assign)
void
CheckListBox_Assign(TCheckListBox AObj, TObject Source) {
    GET_FUNC_ADDR(CheckListBox_Assign)
    MySyscall(pCheckListBox_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_ClassType)
TClass
CheckListBox_ClassType(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_ClassType)
    return (TClass)MySyscall(pCheckListBox_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_ClassName)
char*
CheckListBox_ClassName(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_ClassName)
    return (char*)MySyscall(pCheckListBox_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_InstanceSize)
int32_t
CheckListBox_InstanceSize(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_InstanceSize)
    return (int32_t)MySyscall(pCheckListBox_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_InheritsFrom)
BOOL
CheckListBox_InheritsFrom(TCheckListBox AObj, TClass AClass) {
    GET_FUNC_ADDR(CheckListBox_InheritsFrom)
    return (BOOL)MySyscall(pCheckListBox_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_Equals)
BOOL
CheckListBox_Equals(TCheckListBox AObj, TObject Obj) {
    GET_FUNC_ADDR(CheckListBox_Equals)
    return (BOOL)MySyscall(pCheckListBox_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetHashCode)
int32_t
CheckListBox_GetHashCode(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetHashCode)
    return (int32_t)MySyscall(pCheckListBox_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_ToString)
char*
CheckListBox_ToString(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_ToString)
    return (char*)MySyscall(pCheckListBox_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_AnchorToNeighbour)
void
CheckListBox_AnchorToNeighbour(TCheckListBox AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(CheckListBox_AnchorToNeighbour)
    MySyscall(pCheckListBox_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_AnchorParallel)
void
CheckListBox_AnchorParallel(TCheckListBox AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(CheckListBox_AnchorParallel)
    MySyscall(pCheckListBox_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_AnchorHorizontalCenterTo)
void
CheckListBox_AnchorHorizontalCenterTo(TCheckListBox AObj, TControl ASibling) {
    GET_FUNC_ADDR(CheckListBox_AnchorHorizontalCenterTo)
    MySyscall(pCheckListBox_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_AnchorVerticalCenterTo)
void
CheckListBox_AnchorVerticalCenterTo(TCheckListBox AObj, TControl ASibling) {
    GET_FUNC_ADDR(CheckListBox_AnchorVerticalCenterTo)
    MySyscall(pCheckListBox_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_AnchorSame)
void
CheckListBox_AnchorSame(TCheckListBox AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(CheckListBox_AnchorSame)
    MySyscall(pCheckListBox_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_AnchorAsAlign)
void
CheckListBox_AnchorAsAlign(TCheckListBox AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(CheckListBox_AnchorAsAlign)
    MySyscall(pCheckListBox_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_AnchorClient)
void
CheckListBox_AnchorClient(TCheckListBox AObj, int32_t ASpace) {
    GET_FUNC_ADDR(CheckListBox_AnchorClient)
    MySyscall(pCheckListBox_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_ScaleDesignToForm)
int32_t
CheckListBox_ScaleDesignToForm(TCheckListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckListBox_ScaleDesignToForm)
    return (int32_t)MySyscall(pCheckListBox_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_ScaleFormToDesign)
int32_t
CheckListBox_ScaleFormToDesign(TCheckListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckListBox_ScaleFormToDesign)
    return (int32_t)MySyscall(pCheckListBox_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_Scale96ToForm)
int32_t
CheckListBox_Scale96ToForm(TCheckListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckListBox_Scale96ToForm)
    return (int32_t)MySyscall(pCheckListBox_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_ScaleFormTo96)
int32_t
CheckListBox_ScaleFormTo96(TCheckListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckListBox_ScaleFormTo96)
    return (int32_t)MySyscall(pCheckListBox_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_Scale96ToFont)
int32_t
CheckListBox_Scale96ToFont(TCheckListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckListBox_Scale96ToFont)
    return (int32_t)MySyscall(pCheckListBox_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_ScaleFontTo96)
int32_t
CheckListBox_ScaleFontTo96(TCheckListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckListBox_ScaleFontTo96)
    return (int32_t)MySyscall(pCheckListBox_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_ScaleScreenToFont)
int32_t
CheckListBox_ScaleScreenToFont(TCheckListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckListBox_ScaleScreenToFont)
    return (int32_t)MySyscall(pCheckListBox_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_ScaleFontToScreen)
int32_t
CheckListBox_ScaleFontToScreen(TCheckListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckListBox_ScaleFontToScreen)
    return (int32_t)MySyscall(pCheckListBox_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_Scale96ToScreen)
int32_t
CheckListBox_Scale96ToScreen(TCheckListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckListBox_Scale96ToScreen)
    return (int32_t)MySyscall(pCheckListBox_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_ScaleScreenTo96)
int32_t
CheckListBox_ScaleScreenTo96(TCheckListBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckListBox_ScaleScreenTo96)
    return (int32_t)MySyscall(pCheckListBox_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_AutoAdjustLayout)
void
CheckListBox_AutoAdjustLayout(TCheckListBox AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(CheckListBox_AutoAdjustLayout)
    MySyscall(pCheckListBox_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_FixDesignFontsPPI)
void
CheckListBox_FixDesignFontsPPI(TCheckListBox AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(CheckListBox_FixDesignFontsPPI)
    MySyscall(pCheckListBox_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_ScaleFontsPPI)
void
CheckListBox_ScaleFontsPPI(TCheckListBox AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(CheckListBox_ScaleFontsPPI)
    MySyscall(pCheckListBox_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetOnClickCheck)
void
CheckListBox_SetOnClickCheck(TCheckListBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckListBox_SetOnClickCheck)
    MySyscall(pCheckListBox_SetOnClickCheck, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetAlign)
TAlign
CheckListBox_GetAlign(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetAlign)
    return (TAlign)MySyscall(pCheckListBox_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetAlign)
void
CheckListBox_SetAlign(TCheckListBox AObj, TAlign AValue) {
    GET_FUNC_ADDR(CheckListBox_SetAlign)
    MySyscall(pCheckListBox_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetAllowGrayed)
BOOL
CheckListBox_GetAllowGrayed(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetAllowGrayed)
    return (BOOL)MySyscall(pCheckListBox_GetAllowGrayed, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetAllowGrayed)
void
CheckListBox_SetAllowGrayed(TCheckListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckListBox_SetAllowGrayed)
    MySyscall(pCheckListBox_SetAllowGrayed, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetAnchors)
TAnchors
CheckListBox_GetAnchors(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetAnchors)
    return (TAnchors)MySyscall(pCheckListBox_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetAnchors)
void
CheckListBox_SetAnchors(TCheckListBox AObj, TAnchors AValue) {
    GET_FUNC_ADDR(CheckListBox_SetAnchors)
    MySyscall(pCheckListBox_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetBiDiMode)
TBiDiMode
CheckListBox_GetBiDiMode(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetBiDiMode)
    return (TBiDiMode)MySyscall(pCheckListBox_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetBiDiMode)
void
CheckListBox_SetBiDiMode(TCheckListBox AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(CheckListBox_SetBiDiMode)
    MySyscall(pCheckListBox_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetBorderStyle)
TBorderStyle
CheckListBox_GetBorderStyle(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetBorderStyle)
    return (TBorderStyle)MySyscall(pCheckListBox_GetBorderStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetBorderStyle)
void
CheckListBox_SetBorderStyle(TCheckListBox AObj, TBorderStyle AValue) {
    GET_FUNC_ADDR(CheckListBox_SetBorderStyle)
    MySyscall(pCheckListBox_SetBorderStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetColor)
TColor
CheckListBox_GetColor(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetColor)
    return (TColor)MySyscall(pCheckListBox_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetColor)
void
CheckListBox_SetColor(TCheckListBox AObj, TColor AValue) {
    GET_FUNC_ADDR(CheckListBox_SetColor)
    MySyscall(pCheckListBox_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetColumns)
int32_t
CheckListBox_GetColumns(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetColumns)
    return (int32_t)MySyscall(pCheckListBox_GetColumns, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetColumns)
void
CheckListBox_SetColumns(TCheckListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckListBox_SetColumns)
    MySyscall(pCheckListBox_SetColumns, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetConstraints)
TSizeConstraints
CheckListBox_GetConstraints(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetConstraints)
    return (TSizeConstraints)MySyscall(pCheckListBox_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetConstraints)
void
CheckListBox_SetConstraints(TCheckListBox AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(CheckListBox_SetConstraints)
    MySyscall(pCheckListBox_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetDoubleBuffered)
BOOL
CheckListBox_GetDoubleBuffered(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetDoubleBuffered)
    return (BOOL)MySyscall(pCheckListBox_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetDoubleBuffered)
void
CheckListBox_SetDoubleBuffered(TCheckListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckListBox_SetDoubleBuffered)
    MySyscall(pCheckListBox_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetDragCursor)
TCursor
CheckListBox_GetDragCursor(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetDragCursor)
    return (TCursor)MySyscall(pCheckListBox_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetDragCursor)
void
CheckListBox_SetDragCursor(TCheckListBox AObj, TCursor AValue) {
    GET_FUNC_ADDR(CheckListBox_SetDragCursor)
    MySyscall(pCheckListBox_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetDragMode)
TDragMode
CheckListBox_GetDragMode(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetDragMode)
    return (TDragMode)MySyscall(pCheckListBox_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetDragMode)
void
CheckListBox_SetDragMode(TCheckListBox AObj, TDragMode AValue) {
    GET_FUNC_ADDR(CheckListBox_SetDragMode)
    MySyscall(pCheckListBox_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetEnabled)
BOOL
CheckListBox_GetEnabled(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetEnabled)
    return (BOOL)MySyscall(pCheckListBox_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetEnabled)
void
CheckListBox_SetEnabled(TCheckListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckListBox_SetEnabled)
    MySyscall(pCheckListBox_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetFont)
TFont
CheckListBox_GetFont(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetFont)
    return (TFont)MySyscall(pCheckListBox_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetFont)
void
CheckListBox_SetFont(TCheckListBox AObj, TFont AValue) {
    GET_FUNC_ADDR(CheckListBox_SetFont)
    MySyscall(pCheckListBox_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetItemHeight)
int32_t
CheckListBox_GetItemHeight(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetItemHeight)
    return (int32_t)MySyscall(pCheckListBox_GetItemHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetItemHeight)
void
CheckListBox_SetItemHeight(TCheckListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckListBox_SetItemHeight)
    MySyscall(pCheckListBox_SetItemHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetItems)
TStrings
CheckListBox_GetItems(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetItems)
    return (TStrings)MySyscall(pCheckListBox_GetItems, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetItems)
void
CheckListBox_SetItems(TCheckListBox AObj, TStrings AValue) {
    GET_FUNC_ADDR(CheckListBox_SetItems)
    MySyscall(pCheckListBox_SetItems, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetParentColor)
BOOL
CheckListBox_GetParentColor(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetParentColor)
    return (BOOL)MySyscall(pCheckListBox_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetParentColor)
void
CheckListBox_SetParentColor(TCheckListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckListBox_SetParentColor)
    MySyscall(pCheckListBox_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetParentDoubleBuffered)
BOOL
CheckListBox_GetParentDoubleBuffered(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pCheckListBox_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetParentDoubleBuffered)
void
CheckListBox_SetParentDoubleBuffered(TCheckListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckListBox_SetParentDoubleBuffered)
    MySyscall(pCheckListBox_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetParentFont)
BOOL
CheckListBox_GetParentFont(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetParentFont)
    return (BOOL)MySyscall(pCheckListBox_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetParentFont)
void
CheckListBox_SetParentFont(TCheckListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckListBox_SetParentFont)
    MySyscall(pCheckListBox_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetParentShowHint)
BOOL
CheckListBox_GetParentShowHint(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetParentShowHint)
    return (BOOL)MySyscall(pCheckListBox_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetParentShowHint)
void
CheckListBox_SetParentShowHint(TCheckListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckListBox_SetParentShowHint)
    MySyscall(pCheckListBox_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetPopupMenu)
TPopupMenu
CheckListBox_GetPopupMenu(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetPopupMenu)
    return (TPopupMenu)MySyscall(pCheckListBox_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetPopupMenu)
void
CheckListBox_SetPopupMenu(TCheckListBox AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(CheckListBox_SetPopupMenu)
    MySyscall(pCheckListBox_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetShowHint)
BOOL
CheckListBox_GetShowHint(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetShowHint)
    return (BOOL)MySyscall(pCheckListBox_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetShowHint)
void
CheckListBox_SetShowHint(TCheckListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckListBox_SetShowHint)
    MySyscall(pCheckListBox_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetSorted)
BOOL
CheckListBox_GetSorted(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetSorted)
    return (BOOL)MySyscall(pCheckListBox_GetSorted, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetSorted)
void
CheckListBox_SetSorted(TCheckListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckListBox_SetSorted)
    MySyscall(pCheckListBox_SetSorted, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetStyle)
TListBoxStyle
CheckListBox_GetStyle(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetStyle)
    return (TListBoxStyle)MySyscall(pCheckListBox_GetStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetStyle)
void
CheckListBox_SetStyle(TCheckListBox AObj, TListBoxStyle AValue) {
    GET_FUNC_ADDR(CheckListBox_SetStyle)
    MySyscall(pCheckListBox_SetStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetTabOrder)
TTabOrder
CheckListBox_GetTabOrder(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetTabOrder)
    return (TTabOrder)MySyscall(pCheckListBox_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetTabOrder)
void
CheckListBox_SetTabOrder(TCheckListBox AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(CheckListBox_SetTabOrder)
    MySyscall(pCheckListBox_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetTabStop)
BOOL
CheckListBox_GetTabStop(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetTabStop)
    return (BOOL)MySyscall(pCheckListBox_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetTabStop)
void
CheckListBox_SetTabStop(TCheckListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckListBox_SetTabStop)
    MySyscall(pCheckListBox_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetVisible)
BOOL
CheckListBox_GetVisible(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetVisible)
    return (BOOL)MySyscall(pCheckListBox_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetVisible)
void
CheckListBox_SetVisible(TCheckListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckListBox_SetVisible)
    MySyscall(pCheckListBox_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetOnClick)
void
CheckListBox_SetOnClick(TCheckListBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckListBox_SetOnClick)
    MySyscall(pCheckListBox_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetOnContextPopup)
void
CheckListBox_SetOnContextPopup(TCheckListBox AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(CheckListBox_SetOnContextPopup)
    MySyscall(pCheckListBox_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetOnDblClick)
void
CheckListBox_SetOnDblClick(TCheckListBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckListBox_SetOnDblClick)
    MySyscall(pCheckListBox_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetOnDragDrop)
void
CheckListBox_SetOnDragDrop(TCheckListBox AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(CheckListBox_SetOnDragDrop)
    MySyscall(pCheckListBox_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetOnDragOver)
void
CheckListBox_SetOnDragOver(TCheckListBox AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(CheckListBox_SetOnDragOver)
    MySyscall(pCheckListBox_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetOnEndDrag)
void
CheckListBox_SetOnEndDrag(TCheckListBox AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(CheckListBox_SetOnEndDrag)
    MySyscall(pCheckListBox_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetOnEnter)
void
CheckListBox_SetOnEnter(TCheckListBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckListBox_SetOnEnter)
    MySyscall(pCheckListBox_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetOnExit)
void
CheckListBox_SetOnExit(TCheckListBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckListBox_SetOnExit)
    MySyscall(pCheckListBox_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetOnKeyDown)
void
CheckListBox_SetOnKeyDown(TCheckListBox AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(CheckListBox_SetOnKeyDown)
    MySyscall(pCheckListBox_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetOnKeyPress)
void
CheckListBox_SetOnKeyPress(TCheckListBox AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(CheckListBox_SetOnKeyPress)
    MySyscall(pCheckListBox_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetOnKeyUp)
void
CheckListBox_SetOnKeyUp(TCheckListBox AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(CheckListBox_SetOnKeyUp)
    MySyscall(pCheckListBox_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetOnMeasureItem)
void
CheckListBox_SetOnMeasureItem(TCheckListBox AObj, TMeasureItemEvent AEventData) {
    GET_FUNC_ADDR(CheckListBox_SetOnMeasureItem)
    MySyscall(pCheckListBox_SetOnMeasureItem, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetOnMouseDown)
void
CheckListBox_SetOnMouseDown(TCheckListBox AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(CheckListBox_SetOnMouseDown)
    MySyscall(pCheckListBox_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetOnMouseEnter)
void
CheckListBox_SetOnMouseEnter(TCheckListBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckListBox_SetOnMouseEnter)
    MySyscall(pCheckListBox_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetOnMouseLeave)
void
CheckListBox_SetOnMouseLeave(TCheckListBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckListBox_SetOnMouseLeave)
    MySyscall(pCheckListBox_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetOnMouseMove)
void
CheckListBox_SetOnMouseMove(TCheckListBox AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(CheckListBox_SetOnMouseMove)
    MySyscall(pCheckListBox_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetOnMouseUp)
void
CheckListBox_SetOnMouseUp(TCheckListBox AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(CheckListBox_SetOnMouseUp)
    MySyscall(pCheckListBox_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetCanvas)
TCanvas
CheckListBox_GetCanvas(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetCanvas)
    return (TCanvas)MySyscall(pCheckListBox_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetCount)
int32_t
CheckListBox_GetCount(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetCount)
    return (int32_t)MySyscall(pCheckListBox_GetCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetTopIndex)
int32_t
CheckListBox_GetTopIndex(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetTopIndex)
    return (int32_t)MySyscall(pCheckListBox_GetTopIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetTopIndex)
void
CheckListBox_SetTopIndex(TCheckListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckListBox_SetTopIndex)
    MySyscall(pCheckListBox_SetTopIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetMultiSelect)
BOOL
CheckListBox_GetMultiSelect(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetMultiSelect)
    return (BOOL)MySyscall(pCheckListBox_GetMultiSelect, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetMultiSelect)
void
CheckListBox_SetMultiSelect(TCheckListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckListBox_SetMultiSelect)
    MySyscall(pCheckListBox_SetMultiSelect, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetSelCount)
int32_t
CheckListBox_GetSelCount(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetSelCount)
    return (int32_t)MySyscall(pCheckListBox_GetSelCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetItemIndex)
int32_t
CheckListBox_GetItemIndex(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetItemIndex)
    return (int32_t)MySyscall(pCheckListBox_GetItemIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetItemIndex)
void
CheckListBox_SetItemIndex(TCheckListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckListBox_SetItemIndex)
    MySyscall(pCheckListBox_SetItemIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetDockClientCount)
int32_t
CheckListBox_GetDockClientCount(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetDockClientCount)
    return (int32_t)MySyscall(pCheckListBox_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetDockSite)
BOOL
CheckListBox_GetDockSite(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetDockSite)
    return (BOOL)MySyscall(pCheckListBox_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetDockSite)
void
CheckListBox_SetDockSite(TCheckListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckListBox_SetDockSite)
    MySyscall(pCheckListBox_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetMouseInClient)
BOOL
CheckListBox_GetMouseInClient(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetMouseInClient)
    return (BOOL)MySyscall(pCheckListBox_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetVisibleDockClientCount)
int32_t
CheckListBox_GetVisibleDockClientCount(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pCheckListBox_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetBrush)
TBrush
CheckListBox_GetBrush(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetBrush)
    return (TBrush)MySyscall(pCheckListBox_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetControlCount)
int32_t
CheckListBox_GetControlCount(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetControlCount)
    return (int32_t)MySyscall(pCheckListBox_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetHandle)
HWND
CheckListBox_GetHandle(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetHandle)
    return (HWND)MySyscall(pCheckListBox_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetParentWindow)
HWND
CheckListBox_GetParentWindow(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetParentWindow)
    return (HWND)MySyscall(pCheckListBox_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetParentWindow)
void
CheckListBox_SetParentWindow(TCheckListBox AObj, HWND AValue) {
    GET_FUNC_ADDR(CheckListBox_SetParentWindow)
    MySyscall(pCheckListBox_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetShowing)
BOOL
CheckListBox_GetShowing(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetShowing)
    return (BOOL)MySyscall(pCheckListBox_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetUseDockManager)
BOOL
CheckListBox_GetUseDockManager(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetUseDockManager)
    return (BOOL)MySyscall(pCheckListBox_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetUseDockManager)
void
CheckListBox_SetUseDockManager(TCheckListBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckListBox_SetUseDockManager)
    MySyscall(pCheckListBox_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetAction)
TAction
CheckListBox_GetAction(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetAction)
    return (TAction)MySyscall(pCheckListBox_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetAction)
void
CheckListBox_SetAction(TCheckListBox AObj, TAction AValue) {
    GET_FUNC_ADDR(CheckListBox_SetAction)
    MySyscall(pCheckListBox_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetBoundsRect)
TRect
CheckListBox_GetBoundsRect(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetBoundsRect)
    TRect result;
    MySyscall(pCheckListBox_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckListBox_SetBoundsRect)
void
CheckListBox_SetBoundsRect(TCheckListBox AObj, TRect AValue) {
    GET_FUNC_ADDR(CheckListBox_SetBoundsRect)
    MySyscall(pCheckListBox_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetClientHeight)
int32_t
CheckListBox_GetClientHeight(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetClientHeight)
    return (int32_t)MySyscall(pCheckListBox_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetClientHeight)
void
CheckListBox_SetClientHeight(TCheckListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckListBox_SetClientHeight)
    MySyscall(pCheckListBox_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetClientOrigin)
TPoint
CheckListBox_GetClientOrigin(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetClientOrigin)
    TPoint result;
    MySyscall(pCheckListBox_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckListBox_GetClientRect)
TRect
CheckListBox_GetClientRect(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetClientRect)
    TRect result;
    MySyscall(pCheckListBox_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckListBox_GetClientWidth)
int32_t
CheckListBox_GetClientWidth(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetClientWidth)
    return (int32_t)MySyscall(pCheckListBox_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetClientWidth)
void
CheckListBox_SetClientWidth(TCheckListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckListBox_SetClientWidth)
    MySyscall(pCheckListBox_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetControlState)
TControlState
CheckListBox_GetControlState(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetControlState)
    return (TControlState)MySyscall(pCheckListBox_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetControlState)
void
CheckListBox_SetControlState(TCheckListBox AObj, TControlState AValue) {
    GET_FUNC_ADDR(CheckListBox_SetControlState)
    MySyscall(pCheckListBox_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetControlStyle)
TControlStyle
CheckListBox_GetControlStyle(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetControlStyle)
    return (TControlStyle)MySyscall(pCheckListBox_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetControlStyle)
void
CheckListBox_SetControlStyle(TCheckListBox AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(CheckListBox_SetControlStyle)
    MySyscall(pCheckListBox_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetFloating)
BOOL
CheckListBox_GetFloating(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetFloating)
    return (BOOL)MySyscall(pCheckListBox_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetParent)
TWinControl
CheckListBox_GetParent(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetParent)
    return (TWinControl)MySyscall(pCheckListBox_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetParent)
void
CheckListBox_SetParent(TCheckListBox AObj, TWinControl AValue) {
    GET_FUNC_ADDR(CheckListBox_SetParent)
    MySyscall(pCheckListBox_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetLeft)
int32_t
CheckListBox_GetLeft(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetLeft)
    return (int32_t)MySyscall(pCheckListBox_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetLeft)
void
CheckListBox_SetLeft(TCheckListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckListBox_SetLeft)
    MySyscall(pCheckListBox_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetTop)
int32_t
CheckListBox_GetTop(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetTop)
    return (int32_t)MySyscall(pCheckListBox_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetTop)
void
CheckListBox_SetTop(TCheckListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckListBox_SetTop)
    MySyscall(pCheckListBox_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetWidth)
int32_t
CheckListBox_GetWidth(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetWidth)
    return (int32_t)MySyscall(pCheckListBox_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetWidth)
void
CheckListBox_SetWidth(TCheckListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckListBox_SetWidth)
    MySyscall(pCheckListBox_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetHeight)
int32_t
CheckListBox_GetHeight(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetHeight)
    return (int32_t)MySyscall(pCheckListBox_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetHeight)
void
CheckListBox_SetHeight(TCheckListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckListBox_SetHeight)
    MySyscall(pCheckListBox_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetCursor)
TCursor
CheckListBox_GetCursor(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetCursor)
    return (TCursor)MySyscall(pCheckListBox_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetCursor)
void
CheckListBox_SetCursor(TCheckListBox AObj, TCursor AValue) {
    GET_FUNC_ADDR(CheckListBox_SetCursor)
    MySyscall(pCheckListBox_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetHint)
char*
CheckListBox_GetHint(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetHint)
    return (char*)MySyscall(pCheckListBox_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetHint)
void
CheckListBox_SetHint(TCheckListBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(CheckListBox_SetHint)
    MySyscall(pCheckListBox_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetComponentCount)
int32_t
CheckListBox_GetComponentCount(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetComponentCount)
    return (int32_t)MySyscall(pCheckListBox_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetComponentIndex)
int32_t
CheckListBox_GetComponentIndex(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetComponentIndex)
    return (int32_t)MySyscall(pCheckListBox_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetComponentIndex)
void
CheckListBox_SetComponentIndex(TCheckListBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckListBox_SetComponentIndex)
    MySyscall(pCheckListBox_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetOwner)
TComponent
CheckListBox_GetOwner(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetOwner)
    return (TComponent)MySyscall(pCheckListBox_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetName)
char*
CheckListBox_GetName(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetName)
    return (char*)MySyscall(pCheckListBox_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetName)
void
CheckListBox_SetName(TCheckListBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(CheckListBox_SetName)
    MySyscall(pCheckListBox_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetTag)
intptr_t
CheckListBox_GetTag(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetTag)
    return (intptr_t)MySyscall(pCheckListBox_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetTag)
void
CheckListBox_SetTag(TCheckListBox AObj, intptr_t AValue) {
    GET_FUNC_ADDR(CheckListBox_SetTag)
    MySyscall(pCheckListBox_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetAnchorSideLeft)
TAnchorSide
CheckListBox_GetAnchorSideLeft(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pCheckListBox_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetAnchorSideLeft)
void
CheckListBox_SetAnchorSideLeft(TCheckListBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(CheckListBox_SetAnchorSideLeft)
    MySyscall(pCheckListBox_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetAnchorSideTop)
TAnchorSide
CheckListBox_GetAnchorSideTop(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pCheckListBox_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetAnchorSideTop)
void
CheckListBox_SetAnchorSideTop(TCheckListBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(CheckListBox_SetAnchorSideTop)
    MySyscall(pCheckListBox_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetAnchorSideRight)
TAnchorSide
CheckListBox_GetAnchorSideRight(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pCheckListBox_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetAnchorSideRight)
void
CheckListBox_SetAnchorSideRight(TCheckListBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(CheckListBox_SetAnchorSideRight)
    MySyscall(pCheckListBox_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetAnchorSideBottom)
TAnchorSide
CheckListBox_GetAnchorSideBottom(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pCheckListBox_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetAnchorSideBottom)
void
CheckListBox_SetAnchorSideBottom(TCheckListBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(CheckListBox_SetAnchorSideBottom)
    MySyscall(pCheckListBox_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetChildSizing)
TControlChildSizing
CheckListBox_GetChildSizing(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetChildSizing)
    return (TControlChildSizing)MySyscall(pCheckListBox_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetChildSizing)
void
CheckListBox_SetChildSizing(TCheckListBox AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(CheckListBox_SetChildSizing)
    MySyscall(pCheckListBox_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetBorderSpacing)
TControlBorderSpacing
CheckListBox_GetBorderSpacing(TCheckListBox AObj) {
    GET_FUNC_ADDR(CheckListBox_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pCheckListBox_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetBorderSpacing)
void
CheckListBox_SetBorderSpacing(TCheckListBox AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(CheckListBox_SetBorderSpacing)
    MySyscall(pCheckListBox_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetChecked)
BOOL
CheckListBox_GetChecked(TCheckListBox AObj, int32_t Index) {
    GET_FUNC_ADDR(CheckListBox_GetChecked)
    return (BOOL)MySyscall(pCheckListBox_GetChecked, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetChecked)
void
CheckListBox_SetChecked(TCheckListBox AObj, int32_t Index, BOOL AValue) {
    GET_FUNC_ADDR(CheckListBox_SetChecked)
    MySyscall(pCheckListBox_SetChecked, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetItemEnabled)
BOOL
CheckListBox_GetItemEnabled(TCheckListBox AObj, int32_t Index) {
    GET_FUNC_ADDR(CheckListBox_GetItemEnabled)
    return (BOOL)MySyscall(pCheckListBox_GetItemEnabled, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetItemEnabled)
void
CheckListBox_SetItemEnabled(TCheckListBox AObj, int32_t Index, BOOL AValue) {
    GET_FUNC_ADDR(CheckListBox_SetItemEnabled)
    MySyscall(pCheckListBox_SetItemEnabled, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetState)
TCheckBoxState
CheckListBox_GetState(TCheckListBox AObj, int32_t Index) {
    GET_FUNC_ADDR(CheckListBox_GetState)
    return (TCheckBoxState)MySyscall(pCheckListBox_GetState, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetState)
void
CheckListBox_SetState(TCheckListBox AObj, int32_t Index, TCheckBoxState AValue) {
    GET_FUNC_ADDR(CheckListBox_SetState)
    MySyscall(pCheckListBox_SetState, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetHeader)
BOOL
CheckListBox_GetHeader(TCheckListBox AObj, int32_t Index) {
    GET_FUNC_ADDR(CheckListBox_GetHeader)
    return (BOOL)MySyscall(pCheckListBox_GetHeader, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetHeader)
void
CheckListBox_SetHeader(TCheckListBox AObj, int32_t Index, BOOL AValue) {
    GET_FUNC_ADDR(CheckListBox_SetHeader)
    MySyscall(pCheckListBox_SetHeader, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetSelected)
BOOL
CheckListBox_GetSelected(TCheckListBox AObj, int32_t Index) {
    GET_FUNC_ADDR(CheckListBox_GetSelected)
    return (BOOL)MySyscall(pCheckListBox_GetSelected, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_SetSelected)
void
CheckListBox_SetSelected(TCheckListBox AObj, int32_t Index, BOOL AValue) {
    GET_FUNC_ADDR(CheckListBox_SetSelected)
    MySyscall(pCheckListBox_SetSelected, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetDockClients)
TControl
CheckListBox_GetDockClients(TCheckListBox AObj, int32_t Index) {
    GET_FUNC_ADDR(CheckListBox_GetDockClients)
    return (TControl)MySyscall(pCheckListBox_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetControls)
TControl
CheckListBox_GetControls(TCheckListBox AObj, int32_t Index) {
    GET_FUNC_ADDR(CheckListBox_GetControls)
    return (TControl)MySyscall(pCheckListBox_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetComponents)
TComponent
CheckListBox_GetComponents(TCheckListBox AObj, int32_t AIndex) {
    GET_FUNC_ADDR(CheckListBox_GetComponents)
    return (TComponent)MySyscall(pCheckListBox_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_GetAnchorSide)
TAnchorSide
CheckListBox_GetAnchorSide(TCheckListBox AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(CheckListBox_GetAnchorSide)
    return (TAnchorSide)MySyscall(pCheckListBox_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckListBox_StaticClassType)
TClass
CheckListBox_StaticClassType() {
    GET_FUNC_ADDR(CheckListBox_StaticClassType)
    return (TClass)MySyscall(pCheckListBox_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TGauge-------------------

DEFINE_FUNC_PTR(Gauge_Create)
TGauge
Gauge_Create(TComponent AOwner) {
    GET_FUNC_ADDR(Gauge_Create)
    return (TGauge)MySyscall(pGauge_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_Free)
void
Gauge_Free(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_Free)
    MySyscall(pGauge_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_AddProgress)
void
Gauge_AddProgress(TGauge AObj, int32_t Value) {
    GET_FUNC_ADDR(Gauge_AddProgress)
    MySyscall(pGauge_AddProgress, 2, AObj, Value ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_BringToFront)
void
Gauge_BringToFront(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_BringToFront)
    MySyscall(pGauge_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_ClientToScreen)
TPoint
Gauge_ClientToScreen(TGauge AObj, TPoint Point) {
    GET_FUNC_ADDR(Gauge_ClientToScreen)
    TPoint result;
    MySyscall(pGauge_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Gauge_ClientToParent)
TPoint
Gauge_ClientToParent(TGauge AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Gauge_ClientToParent)
    TPoint result;
    MySyscall(pGauge_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Gauge_Dragging)
BOOL
Gauge_Dragging(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_Dragging)
    return (BOOL)MySyscall(pGauge_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_HasParent)
BOOL
Gauge_HasParent(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_HasParent)
    return (BOOL)MySyscall(pGauge_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_Hide)
void
Gauge_Hide(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_Hide)
    MySyscall(pGauge_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_Invalidate)
void
Gauge_Invalidate(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_Invalidate)
    MySyscall(pGauge_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_Perform)
intptr_t
Gauge_Perform(TGauge AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(Gauge_Perform)
    return (intptr_t)MySyscall(pGauge_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_Refresh)
void
Gauge_Refresh(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_Refresh)
    MySyscall(pGauge_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_Repaint)
void
Gauge_Repaint(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_Repaint)
    MySyscall(pGauge_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_ScreenToClient)
TPoint
Gauge_ScreenToClient(TGauge AObj, TPoint Point) {
    GET_FUNC_ADDR(Gauge_ScreenToClient)
    TPoint result;
    MySyscall(pGauge_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Gauge_ParentToClient)
TPoint
Gauge_ParentToClient(TGauge AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Gauge_ParentToClient)
    TPoint result;
    MySyscall(pGauge_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Gauge_SendToBack)
void
Gauge_SendToBack(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_SendToBack)
    MySyscall(pGauge_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetBounds)
void
Gauge_SetBounds(TGauge AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(Gauge_SetBounds)
    MySyscall(pGauge_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_Show)
void
Gauge_Show(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_Show)
    MySyscall(pGauge_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_Update)
void
Gauge_Update(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_Update)
    MySyscall(pGauge_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetTextBuf)
int32_t
Gauge_GetTextBuf(TGauge AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(Gauge_GetTextBuf)
    return (int32_t)MySyscall(pGauge_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetTextLen)
int32_t
Gauge_GetTextLen(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetTextLen)
    return (int32_t)MySyscall(pGauge_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetTextBuf)
void
Gauge_SetTextBuf(TGauge AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(Gauge_SetTextBuf)
    MySyscall(pGauge_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_FindComponent)
TComponent
Gauge_FindComponent(TGauge AObj, CChar char* AName) {
    GET_FUNC_ADDR(Gauge_FindComponent)
    return (TComponent)MySyscall(pGauge_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetNamePath)
char*
Gauge_GetNamePath(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetNamePath)
    return (char*)MySyscall(pGauge_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_Assign)
void
Gauge_Assign(TGauge AObj, TObject Source) {
    GET_FUNC_ADDR(Gauge_Assign)
    MySyscall(pGauge_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_ClassType)
TClass
Gauge_ClassType(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_ClassType)
    return (TClass)MySyscall(pGauge_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_ClassName)
char*
Gauge_ClassName(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_ClassName)
    return (char*)MySyscall(pGauge_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_InstanceSize)
int32_t
Gauge_InstanceSize(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_InstanceSize)
    return (int32_t)MySyscall(pGauge_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_InheritsFrom)
BOOL
Gauge_InheritsFrom(TGauge AObj, TClass AClass) {
    GET_FUNC_ADDR(Gauge_InheritsFrom)
    return (BOOL)MySyscall(pGauge_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_Equals)
BOOL
Gauge_Equals(TGauge AObj, TObject Obj) {
    GET_FUNC_ADDR(Gauge_Equals)
    return (BOOL)MySyscall(pGauge_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetHashCode)
int32_t
Gauge_GetHashCode(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetHashCode)
    return (int32_t)MySyscall(pGauge_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_ToString)
char*
Gauge_ToString(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_ToString)
    return (char*)MySyscall(pGauge_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_AnchorToNeighbour)
void
Gauge_AnchorToNeighbour(TGauge AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Gauge_AnchorToNeighbour)
    MySyscall(pGauge_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_AnchorParallel)
void
Gauge_AnchorParallel(TGauge AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Gauge_AnchorParallel)
    MySyscall(pGauge_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_AnchorHorizontalCenterTo)
void
Gauge_AnchorHorizontalCenterTo(TGauge AObj, TControl ASibling) {
    GET_FUNC_ADDR(Gauge_AnchorHorizontalCenterTo)
    MySyscall(pGauge_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_AnchorVerticalCenterTo)
void
Gauge_AnchorVerticalCenterTo(TGauge AObj, TControl ASibling) {
    GET_FUNC_ADDR(Gauge_AnchorVerticalCenterTo)
    MySyscall(pGauge_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_AnchorSame)
void
Gauge_AnchorSame(TGauge AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(Gauge_AnchorSame)
    MySyscall(pGauge_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_AnchorAsAlign)
void
Gauge_AnchorAsAlign(TGauge AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(Gauge_AnchorAsAlign)
    MySyscall(pGauge_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_AnchorClient)
void
Gauge_AnchorClient(TGauge AObj, int32_t ASpace) {
    GET_FUNC_ADDR(Gauge_AnchorClient)
    MySyscall(pGauge_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_ScaleDesignToForm)
int32_t
Gauge_ScaleDesignToForm(TGauge AObj, int32_t ASize) {
    GET_FUNC_ADDR(Gauge_ScaleDesignToForm)
    return (int32_t)MySyscall(pGauge_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_ScaleFormToDesign)
int32_t
Gauge_ScaleFormToDesign(TGauge AObj, int32_t ASize) {
    GET_FUNC_ADDR(Gauge_ScaleFormToDesign)
    return (int32_t)MySyscall(pGauge_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_Scale96ToForm)
int32_t
Gauge_Scale96ToForm(TGauge AObj, int32_t ASize) {
    GET_FUNC_ADDR(Gauge_Scale96ToForm)
    return (int32_t)MySyscall(pGauge_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_ScaleFormTo96)
int32_t
Gauge_ScaleFormTo96(TGauge AObj, int32_t ASize) {
    GET_FUNC_ADDR(Gauge_ScaleFormTo96)
    return (int32_t)MySyscall(pGauge_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_Scale96ToFont)
int32_t
Gauge_Scale96ToFont(TGauge AObj, int32_t ASize) {
    GET_FUNC_ADDR(Gauge_Scale96ToFont)
    return (int32_t)MySyscall(pGauge_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_ScaleFontTo96)
int32_t
Gauge_ScaleFontTo96(TGauge AObj, int32_t ASize) {
    GET_FUNC_ADDR(Gauge_ScaleFontTo96)
    return (int32_t)MySyscall(pGauge_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_ScaleScreenToFont)
int32_t
Gauge_ScaleScreenToFont(TGauge AObj, int32_t ASize) {
    GET_FUNC_ADDR(Gauge_ScaleScreenToFont)
    return (int32_t)MySyscall(pGauge_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_ScaleFontToScreen)
int32_t
Gauge_ScaleFontToScreen(TGauge AObj, int32_t ASize) {
    GET_FUNC_ADDR(Gauge_ScaleFontToScreen)
    return (int32_t)MySyscall(pGauge_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_Scale96ToScreen)
int32_t
Gauge_Scale96ToScreen(TGauge AObj, int32_t ASize) {
    GET_FUNC_ADDR(Gauge_Scale96ToScreen)
    return (int32_t)MySyscall(pGauge_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_ScaleScreenTo96)
int32_t
Gauge_ScaleScreenTo96(TGauge AObj, int32_t ASize) {
    GET_FUNC_ADDR(Gauge_ScaleScreenTo96)
    return (int32_t)MySyscall(pGauge_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_AutoAdjustLayout)
void
Gauge_AutoAdjustLayout(TGauge AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(Gauge_AutoAdjustLayout)
    MySyscall(pGauge_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_FixDesignFontsPPI)
void
Gauge_FixDesignFontsPPI(TGauge AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(Gauge_FixDesignFontsPPI)
    MySyscall(pGauge_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_ScaleFontsPPI)
void
Gauge_ScaleFontsPPI(TGauge AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(Gauge_ScaleFontsPPI)
    MySyscall(pGauge_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetPercentDone)
int32_t
Gauge_GetPercentDone(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetPercentDone)
    return (int32_t)MySyscall(pGauge_GetPercentDone, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetAlign)
TAlign
Gauge_GetAlign(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetAlign)
    return (TAlign)MySyscall(pGauge_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetAlign)
void
Gauge_SetAlign(TGauge AObj, TAlign AValue) {
    GET_FUNC_ADDR(Gauge_SetAlign)
    MySyscall(pGauge_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetAnchors)
TAnchors
Gauge_GetAnchors(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetAnchors)
    return (TAnchors)MySyscall(pGauge_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetAnchors)
void
Gauge_SetAnchors(TGauge AObj, TAnchors AValue) {
    GET_FUNC_ADDR(Gauge_SetAnchors)
    MySyscall(pGauge_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetBackColor)
TColor
Gauge_GetBackColor(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetBackColor)
    return (TColor)MySyscall(pGauge_GetBackColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetBackColor)
void
Gauge_SetBackColor(TGauge AObj, TColor AValue) {
    GET_FUNC_ADDR(Gauge_SetBackColor)
    MySyscall(pGauge_SetBackColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetBorderStyle)
TBorderStyle
Gauge_GetBorderStyle(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetBorderStyle)
    return (TBorderStyle)MySyscall(pGauge_GetBorderStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetBorderStyle)
void
Gauge_SetBorderStyle(TGauge AObj, TBorderStyle AValue) {
    GET_FUNC_ADDR(Gauge_SetBorderStyle)
    MySyscall(pGauge_SetBorderStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetColor)
TColor
Gauge_GetColor(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetColor)
    return (TColor)MySyscall(pGauge_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetColor)
void
Gauge_SetColor(TGauge AObj, TColor AValue) {
    GET_FUNC_ADDR(Gauge_SetColor)
    MySyscall(pGauge_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetConstraints)
TSizeConstraints
Gauge_GetConstraints(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetConstraints)
    return (TSizeConstraints)MySyscall(pGauge_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetConstraints)
void
Gauge_SetConstraints(TGauge AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(Gauge_SetConstraints)
    MySyscall(pGauge_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetEnabled)
BOOL
Gauge_GetEnabled(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetEnabled)
    return (BOOL)MySyscall(pGauge_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetEnabled)
void
Gauge_SetEnabled(TGauge AObj, BOOL AValue) {
    GET_FUNC_ADDR(Gauge_SetEnabled)
    MySyscall(pGauge_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetForeColor)
TColor
Gauge_GetForeColor(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetForeColor)
    return (TColor)MySyscall(pGauge_GetForeColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetForeColor)
void
Gauge_SetForeColor(TGauge AObj, TColor AValue) {
    GET_FUNC_ADDR(Gauge_SetForeColor)
    MySyscall(pGauge_SetForeColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetFont)
TFont
Gauge_GetFont(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetFont)
    return (TFont)MySyscall(pGauge_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetFont)
void
Gauge_SetFont(TGauge AObj, TFont AValue) {
    GET_FUNC_ADDR(Gauge_SetFont)
    MySyscall(pGauge_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetKind)
TGaugeKind
Gauge_GetKind(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetKind)
    return (TGaugeKind)MySyscall(pGauge_GetKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetKind)
void
Gauge_SetKind(TGauge AObj, TGaugeKind AValue) {
    GET_FUNC_ADDR(Gauge_SetKind)
    MySyscall(pGauge_SetKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetMinValue)
int32_t
Gauge_GetMinValue(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetMinValue)
    return (int32_t)MySyscall(pGauge_GetMinValue, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetMinValue)
void
Gauge_SetMinValue(TGauge AObj, int32_t AValue) {
    GET_FUNC_ADDR(Gauge_SetMinValue)
    MySyscall(pGauge_SetMinValue, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetMaxValue)
int32_t
Gauge_GetMaxValue(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetMaxValue)
    return (int32_t)MySyscall(pGauge_GetMaxValue, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetMaxValue)
void
Gauge_SetMaxValue(TGauge AObj, int32_t AValue) {
    GET_FUNC_ADDR(Gauge_SetMaxValue)
    MySyscall(pGauge_SetMaxValue, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetParentColor)
BOOL
Gauge_GetParentColor(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetParentColor)
    return (BOOL)MySyscall(pGauge_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetParentColor)
void
Gauge_SetParentColor(TGauge AObj, BOOL AValue) {
    GET_FUNC_ADDR(Gauge_SetParentColor)
    MySyscall(pGauge_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetParentFont)
BOOL
Gauge_GetParentFont(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetParentFont)
    return (BOOL)MySyscall(pGauge_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetParentFont)
void
Gauge_SetParentFont(TGauge AObj, BOOL AValue) {
    GET_FUNC_ADDR(Gauge_SetParentFont)
    MySyscall(pGauge_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetParentShowHint)
BOOL
Gauge_GetParentShowHint(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetParentShowHint)
    return (BOOL)MySyscall(pGauge_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetParentShowHint)
void
Gauge_SetParentShowHint(TGauge AObj, BOOL AValue) {
    GET_FUNC_ADDR(Gauge_SetParentShowHint)
    MySyscall(pGauge_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetPopupMenu)
TPopupMenu
Gauge_GetPopupMenu(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetPopupMenu)
    return (TPopupMenu)MySyscall(pGauge_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetPopupMenu)
void
Gauge_SetPopupMenu(TGauge AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(Gauge_SetPopupMenu)
    MySyscall(pGauge_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetProgress)
int32_t
Gauge_GetProgress(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetProgress)
    return (int32_t)MySyscall(pGauge_GetProgress, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetProgress)
void
Gauge_SetProgress(TGauge AObj, int32_t AValue) {
    GET_FUNC_ADDR(Gauge_SetProgress)
    MySyscall(pGauge_SetProgress, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetShowHint)
BOOL
Gauge_GetShowHint(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetShowHint)
    return (BOOL)MySyscall(pGauge_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetShowHint)
void
Gauge_SetShowHint(TGauge AObj, BOOL AValue) {
    GET_FUNC_ADDR(Gauge_SetShowHint)
    MySyscall(pGauge_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetShowText)
BOOL
Gauge_GetShowText(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetShowText)
    return (BOOL)MySyscall(pGauge_GetShowText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetShowText)
void
Gauge_SetShowText(TGauge AObj, BOOL AValue) {
    GET_FUNC_ADDR(Gauge_SetShowText)
    MySyscall(pGauge_SetShowText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetVisible)
BOOL
Gauge_GetVisible(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetVisible)
    return (BOOL)MySyscall(pGauge_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetVisible)
void
Gauge_SetVisible(TGauge AObj, BOOL AValue) {
    GET_FUNC_ADDR(Gauge_SetVisible)
    MySyscall(pGauge_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetAction)
TAction
Gauge_GetAction(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetAction)
    return (TAction)MySyscall(pGauge_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetAction)
void
Gauge_SetAction(TGauge AObj, TAction AValue) {
    GET_FUNC_ADDR(Gauge_SetAction)
    MySyscall(pGauge_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetBiDiMode)
TBiDiMode
Gauge_GetBiDiMode(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetBiDiMode)
    return (TBiDiMode)MySyscall(pGauge_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetBiDiMode)
void
Gauge_SetBiDiMode(TGauge AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(Gauge_SetBiDiMode)
    MySyscall(pGauge_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetBoundsRect)
TRect
Gauge_GetBoundsRect(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetBoundsRect)
    TRect result;
    MySyscall(pGauge_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Gauge_SetBoundsRect)
void
Gauge_SetBoundsRect(TGauge AObj, TRect AValue) {
    GET_FUNC_ADDR(Gauge_SetBoundsRect)
    MySyscall(pGauge_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetClientHeight)
int32_t
Gauge_GetClientHeight(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetClientHeight)
    return (int32_t)MySyscall(pGauge_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetClientHeight)
void
Gauge_SetClientHeight(TGauge AObj, int32_t AValue) {
    GET_FUNC_ADDR(Gauge_SetClientHeight)
    MySyscall(pGauge_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetClientOrigin)
TPoint
Gauge_GetClientOrigin(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetClientOrigin)
    TPoint result;
    MySyscall(pGauge_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Gauge_GetClientRect)
TRect
Gauge_GetClientRect(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetClientRect)
    TRect result;
    MySyscall(pGauge_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Gauge_GetClientWidth)
int32_t
Gauge_GetClientWidth(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetClientWidth)
    return (int32_t)MySyscall(pGauge_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetClientWidth)
void
Gauge_SetClientWidth(TGauge AObj, int32_t AValue) {
    GET_FUNC_ADDR(Gauge_SetClientWidth)
    MySyscall(pGauge_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetControlState)
TControlState
Gauge_GetControlState(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetControlState)
    return (TControlState)MySyscall(pGauge_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetControlState)
void
Gauge_SetControlState(TGauge AObj, TControlState AValue) {
    GET_FUNC_ADDR(Gauge_SetControlState)
    MySyscall(pGauge_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetControlStyle)
TControlStyle
Gauge_GetControlStyle(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetControlStyle)
    return (TControlStyle)MySyscall(pGauge_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetControlStyle)
void
Gauge_SetControlStyle(TGauge AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(Gauge_SetControlStyle)
    MySyscall(pGauge_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetFloating)
BOOL
Gauge_GetFloating(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetFloating)
    return (BOOL)MySyscall(pGauge_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetParent)
TWinControl
Gauge_GetParent(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetParent)
    return (TWinControl)MySyscall(pGauge_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetParent)
void
Gauge_SetParent(TGauge AObj, TWinControl AValue) {
    GET_FUNC_ADDR(Gauge_SetParent)
    MySyscall(pGauge_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetLeft)
int32_t
Gauge_GetLeft(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetLeft)
    return (int32_t)MySyscall(pGauge_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetLeft)
void
Gauge_SetLeft(TGauge AObj, int32_t AValue) {
    GET_FUNC_ADDR(Gauge_SetLeft)
    MySyscall(pGauge_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetTop)
int32_t
Gauge_GetTop(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetTop)
    return (int32_t)MySyscall(pGauge_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetTop)
void
Gauge_SetTop(TGauge AObj, int32_t AValue) {
    GET_FUNC_ADDR(Gauge_SetTop)
    MySyscall(pGauge_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetWidth)
int32_t
Gauge_GetWidth(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetWidth)
    return (int32_t)MySyscall(pGauge_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetWidth)
void
Gauge_SetWidth(TGauge AObj, int32_t AValue) {
    GET_FUNC_ADDR(Gauge_SetWidth)
    MySyscall(pGauge_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetHeight)
int32_t
Gauge_GetHeight(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetHeight)
    return (int32_t)MySyscall(pGauge_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetHeight)
void
Gauge_SetHeight(TGauge AObj, int32_t AValue) {
    GET_FUNC_ADDR(Gauge_SetHeight)
    MySyscall(pGauge_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetCursor)
TCursor
Gauge_GetCursor(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetCursor)
    return (TCursor)MySyscall(pGauge_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetCursor)
void
Gauge_SetCursor(TGauge AObj, TCursor AValue) {
    GET_FUNC_ADDR(Gauge_SetCursor)
    MySyscall(pGauge_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetHint)
char*
Gauge_GetHint(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetHint)
    return (char*)MySyscall(pGauge_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetHint)
void
Gauge_SetHint(TGauge AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Gauge_SetHint)
    MySyscall(pGauge_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetComponentCount)
int32_t
Gauge_GetComponentCount(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetComponentCount)
    return (int32_t)MySyscall(pGauge_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetComponentIndex)
int32_t
Gauge_GetComponentIndex(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetComponentIndex)
    return (int32_t)MySyscall(pGauge_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetComponentIndex)
void
Gauge_SetComponentIndex(TGauge AObj, int32_t AValue) {
    GET_FUNC_ADDR(Gauge_SetComponentIndex)
    MySyscall(pGauge_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetOwner)
TComponent
Gauge_GetOwner(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetOwner)
    return (TComponent)MySyscall(pGauge_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetName)
char*
Gauge_GetName(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetName)
    return (char*)MySyscall(pGauge_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetName)
void
Gauge_SetName(TGauge AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Gauge_SetName)
    MySyscall(pGauge_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetTag)
intptr_t
Gauge_GetTag(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetTag)
    return (intptr_t)MySyscall(pGauge_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetTag)
void
Gauge_SetTag(TGauge AObj, intptr_t AValue) {
    GET_FUNC_ADDR(Gauge_SetTag)
    MySyscall(pGauge_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetAnchorSideLeft)
TAnchorSide
Gauge_GetAnchorSideLeft(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pGauge_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetAnchorSideLeft)
void
Gauge_SetAnchorSideLeft(TGauge AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Gauge_SetAnchorSideLeft)
    MySyscall(pGauge_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetAnchorSideTop)
TAnchorSide
Gauge_GetAnchorSideTop(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pGauge_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetAnchorSideTop)
void
Gauge_SetAnchorSideTop(TGauge AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Gauge_SetAnchorSideTop)
    MySyscall(pGauge_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetAnchorSideRight)
TAnchorSide
Gauge_GetAnchorSideRight(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pGauge_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetAnchorSideRight)
void
Gauge_SetAnchorSideRight(TGauge AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Gauge_SetAnchorSideRight)
    MySyscall(pGauge_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetAnchorSideBottom)
TAnchorSide
Gauge_GetAnchorSideBottom(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pGauge_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetAnchorSideBottom)
void
Gauge_SetAnchorSideBottom(TGauge AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Gauge_SetAnchorSideBottom)
    MySyscall(pGauge_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetBorderSpacing)
TControlBorderSpacing
Gauge_GetBorderSpacing(TGauge AObj) {
    GET_FUNC_ADDR(Gauge_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pGauge_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_SetBorderSpacing)
void
Gauge_SetBorderSpacing(TGauge AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(Gauge_SetBorderSpacing)
    MySyscall(pGauge_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetComponents)
TComponent
Gauge_GetComponents(TGauge AObj, int32_t AIndex) {
    GET_FUNC_ADDR(Gauge_GetComponents)
    return (TComponent)MySyscall(pGauge_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_GetAnchorSide)
TAnchorSide
Gauge_GetAnchorSide(TGauge AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(Gauge_GetAnchorSide)
    return (TAnchorSide)MySyscall(pGauge_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Gauge_StaticClassType)
TClass
Gauge_StaticClassType() {
    GET_FUNC_ADDR(Gauge_StaticClassType)
    return (TClass)MySyscall(pGauge_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TImageButton-------------------

DEFINE_FUNC_PTR(ImageButton_Create)
TImageButton
ImageButton_Create(TComponent AOwner) {
    GET_FUNC_ADDR(ImageButton_Create)
    return (TImageButton)MySyscall(pImageButton_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_Free)
void
ImageButton_Free(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_Free)
    MySyscall(pImageButton_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_Click)
void
ImageButton_Click(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_Click)
    MySyscall(pImageButton_Click, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_BringToFront)
void
ImageButton_BringToFront(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_BringToFront)
    MySyscall(pImageButton_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_ClientToScreen)
TPoint
ImageButton_ClientToScreen(TImageButton AObj, TPoint Point) {
    GET_FUNC_ADDR(ImageButton_ClientToScreen)
    TPoint result;
    MySyscall(pImageButton_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ImageButton_ClientToParent)
TPoint
ImageButton_ClientToParent(TImageButton AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ImageButton_ClientToParent)
    TPoint result;
    MySyscall(pImageButton_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ImageButton_Dragging)
BOOL
ImageButton_Dragging(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_Dragging)
    return (BOOL)MySyscall(pImageButton_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_HasParent)
BOOL
ImageButton_HasParent(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_HasParent)
    return (BOOL)MySyscall(pImageButton_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_Hide)
void
ImageButton_Hide(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_Hide)
    MySyscall(pImageButton_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_Invalidate)
void
ImageButton_Invalidate(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_Invalidate)
    MySyscall(pImageButton_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_Perform)
intptr_t
ImageButton_Perform(TImageButton AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(ImageButton_Perform)
    return (intptr_t)MySyscall(pImageButton_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_Refresh)
void
ImageButton_Refresh(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_Refresh)
    MySyscall(pImageButton_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_Repaint)
void
ImageButton_Repaint(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_Repaint)
    MySyscall(pImageButton_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_ScreenToClient)
TPoint
ImageButton_ScreenToClient(TImageButton AObj, TPoint Point) {
    GET_FUNC_ADDR(ImageButton_ScreenToClient)
    TPoint result;
    MySyscall(pImageButton_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ImageButton_ParentToClient)
TPoint
ImageButton_ParentToClient(TImageButton AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ImageButton_ParentToClient)
    TPoint result;
    MySyscall(pImageButton_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ImageButton_SendToBack)
void
ImageButton_SendToBack(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_SendToBack)
    MySyscall(pImageButton_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetBounds)
void
ImageButton_SetBounds(TImageButton AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(ImageButton_SetBounds)
    MySyscall(pImageButton_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_Show)
void
ImageButton_Show(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_Show)
    MySyscall(pImageButton_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_Update)
void
ImageButton_Update(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_Update)
    MySyscall(pImageButton_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetTextBuf)
int32_t
ImageButton_GetTextBuf(TImageButton AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(ImageButton_GetTextBuf)
    return (int32_t)MySyscall(pImageButton_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetTextLen)
int32_t
ImageButton_GetTextLen(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetTextLen)
    return (int32_t)MySyscall(pImageButton_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetTextBuf)
void
ImageButton_SetTextBuf(TImageButton AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(ImageButton_SetTextBuf)
    MySyscall(pImageButton_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_FindComponent)
TComponent
ImageButton_FindComponent(TImageButton AObj, CChar char* AName) {
    GET_FUNC_ADDR(ImageButton_FindComponent)
    return (TComponent)MySyscall(pImageButton_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetNamePath)
char*
ImageButton_GetNamePath(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetNamePath)
    return (char*)MySyscall(pImageButton_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_Assign)
void
ImageButton_Assign(TImageButton AObj, TObject Source) {
    GET_FUNC_ADDR(ImageButton_Assign)
    MySyscall(pImageButton_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_ClassType)
TClass
ImageButton_ClassType(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_ClassType)
    return (TClass)MySyscall(pImageButton_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_ClassName)
char*
ImageButton_ClassName(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_ClassName)
    return (char*)MySyscall(pImageButton_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_InstanceSize)
int32_t
ImageButton_InstanceSize(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_InstanceSize)
    return (int32_t)MySyscall(pImageButton_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_InheritsFrom)
BOOL
ImageButton_InheritsFrom(TImageButton AObj, TClass AClass) {
    GET_FUNC_ADDR(ImageButton_InheritsFrom)
    return (BOOL)MySyscall(pImageButton_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_Equals)
BOOL
ImageButton_Equals(TImageButton AObj, TObject Obj) {
    GET_FUNC_ADDR(ImageButton_Equals)
    return (BOOL)MySyscall(pImageButton_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetHashCode)
int32_t
ImageButton_GetHashCode(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetHashCode)
    return (int32_t)MySyscall(pImageButton_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_ToString)
char*
ImageButton_ToString(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_ToString)
    return (char*)MySyscall(pImageButton_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_AnchorToNeighbour)
void
ImageButton_AnchorToNeighbour(TImageButton AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ImageButton_AnchorToNeighbour)
    MySyscall(pImageButton_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_AnchorParallel)
void
ImageButton_AnchorParallel(TImageButton AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ImageButton_AnchorParallel)
    MySyscall(pImageButton_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_AnchorHorizontalCenterTo)
void
ImageButton_AnchorHorizontalCenterTo(TImageButton AObj, TControl ASibling) {
    GET_FUNC_ADDR(ImageButton_AnchorHorizontalCenterTo)
    MySyscall(pImageButton_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_AnchorVerticalCenterTo)
void
ImageButton_AnchorVerticalCenterTo(TImageButton AObj, TControl ASibling) {
    GET_FUNC_ADDR(ImageButton_AnchorVerticalCenterTo)
    MySyscall(pImageButton_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_AnchorSame)
void
ImageButton_AnchorSame(TImageButton AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(ImageButton_AnchorSame)
    MySyscall(pImageButton_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_AnchorAsAlign)
void
ImageButton_AnchorAsAlign(TImageButton AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(ImageButton_AnchorAsAlign)
    MySyscall(pImageButton_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_AnchorClient)
void
ImageButton_AnchorClient(TImageButton AObj, int32_t ASpace) {
    GET_FUNC_ADDR(ImageButton_AnchorClient)
    MySyscall(pImageButton_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_ScaleDesignToForm)
int32_t
ImageButton_ScaleDesignToForm(TImageButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ImageButton_ScaleDesignToForm)
    return (int32_t)MySyscall(pImageButton_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_ScaleFormToDesign)
int32_t
ImageButton_ScaleFormToDesign(TImageButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ImageButton_ScaleFormToDesign)
    return (int32_t)MySyscall(pImageButton_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_Scale96ToForm)
int32_t
ImageButton_Scale96ToForm(TImageButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ImageButton_Scale96ToForm)
    return (int32_t)MySyscall(pImageButton_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_ScaleFormTo96)
int32_t
ImageButton_ScaleFormTo96(TImageButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ImageButton_ScaleFormTo96)
    return (int32_t)MySyscall(pImageButton_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_Scale96ToFont)
int32_t
ImageButton_Scale96ToFont(TImageButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ImageButton_Scale96ToFont)
    return (int32_t)MySyscall(pImageButton_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_ScaleFontTo96)
int32_t
ImageButton_ScaleFontTo96(TImageButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ImageButton_ScaleFontTo96)
    return (int32_t)MySyscall(pImageButton_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_ScaleScreenToFont)
int32_t
ImageButton_ScaleScreenToFont(TImageButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ImageButton_ScaleScreenToFont)
    return (int32_t)MySyscall(pImageButton_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_ScaleFontToScreen)
int32_t
ImageButton_ScaleFontToScreen(TImageButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ImageButton_ScaleFontToScreen)
    return (int32_t)MySyscall(pImageButton_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_Scale96ToScreen)
int32_t
ImageButton_Scale96ToScreen(TImageButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ImageButton_Scale96ToScreen)
    return (int32_t)MySyscall(pImageButton_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_ScaleScreenTo96)
int32_t
ImageButton_ScaleScreenTo96(TImageButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(ImageButton_ScaleScreenTo96)
    return (int32_t)MySyscall(pImageButton_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_AutoAdjustLayout)
void
ImageButton_AutoAdjustLayout(TImageButton AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(ImageButton_AutoAdjustLayout)
    MySyscall(pImageButton_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_FixDesignFontsPPI)
void
ImageButton_FixDesignFontsPPI(TImageButton AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(ImageButton_FixDesignFontsPPI)
    MySyscall(pImageButton_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_ScaleFontsPPI)
void
ImageButton_ScaleFontsPPI(TImageButton AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(ImageButton_ScaleFontsPPI)
    MySyscall(pImageButton_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetAction)
TAction
ImageButton_GetAction(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetAction)
    return (TAction)MySyscall(pImageButton_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetAction)
void
ImageButton_SetAction(TImageButton AObj, TAction AValue) {
    GET_FUNC_ADDR(ImageButton_SetAction)
    MySyscall(pImageButton_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetAlign)
TAlign
ImageButton_GetAlign(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetAlign)
    return (TAlign)MySyscall(pImageButton_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetAlign)
void
ImageButton_SetAlign(TImageButton AObj, TAlign AValue) {
    GET_FUNC_ADDR(ImageButton_SetAlign)
    MySyscall(pImageButton_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetAnchors)
TAnchors
ImageButton_GetAnchors(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetAnchors)
    return (TAnchors)MySyscall(pImageButton_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetAnchors)
void
ImageButton_SetAnchors(TImageButton AObj, TAnchors AValue) {
    GET_FUNC_ADDR(ImageButton_SetAnchors)
    MySyscall(pImageButton_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetAutoSize)
BOOL
ImageButton_GetAutoSize(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetAutoSize)
    return (BOOL)MySyscall(pImageButton_GetAutoSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetAutoSize)
void
ImageButton_SetAutoSize(TImageButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ImageButton_SetAutoSize)
    MySyscall(pImageButton_SetAutoSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetConstraints)
TSizeConstraints
ImageButton_GetConstraints(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetConstraints)
    return (TSizeConstraints)MySyscall(pImageButton_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetConstraints)
void
ImageButton_SetConstraints(TImageButton AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(ImageButton_SetConstraints)
    MySyscall(pImageButton_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetCaption)
char*
ImageButton_GetCaption(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetCaption)
    return (char*)MySyscall(pImageButton_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetCaption)
void
ImageButton_SetCaption(TImageButton AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ImageButton_SetCaption)
    MySyscall(pImageButton_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetDragCursor)
TCursor
ImageButton_GetDragCursor(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetDragCursor)
    return (TCursor)MySyscall(pImageButton_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetDragCursor)
void
ImageButton_SetDragCursor(TImageButton AObj, TCursor AValue) {
    GET_FUNC_ADDR(ImageButton_SetDragCursor)
    MySyscall(pImageButton_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetDragKind)
TDragKind
ImageButton_GetDragKind(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetDragKind)
    return (TDragKind)MySyscall(pImageButton_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetDragKind)
void
ImageButton_SetDragKind(TImageButton AObj, TDragKind AValue) {
    GET_FUNC_ADDR(ImageButton_SetDragKind)
    MySyscall(pImageButton_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetDragMode)
TDragMode
ImageButton_GetDragMode(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetDragMode)
    return (TDragMode)MySyscall(pImageButton_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetDragMode)
void
ImageButton_SetDragMode(TImageButton AObj, TDragMode AValue) {
    GET_FUNC_ADDR(ImageButton_SetDragMode)
    MySyscall(pImageButton_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetEnabled)
BOOL
ImageButton_GetEnabled(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetEnabled)
    return (BOOL)MySyscall(pImageButton_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetEnabled)
void
ImageButton_SetEnabled(TImageButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ImageButton_SetEnabled)
    MySyscall(pImageButton_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetFont)
TFont
ImageButton_GetFont(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetFont)
    return (TFont)MySyscall(pImageButton_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetFont)
void
ImageButton_SetFont(TImageButton AObj, TFont AValue) {
    GET_FUNC_ADDR(ImageButton_SetFont)
    MySyscall(pImageButton_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetImageCount)
int32_t
ImageButton_GetImageCount(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetImageCount)
    return (int32_t)MySyscall(pImageButton_GetImageCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetImageCount)
void
ImageButton_SetImageCount(TImageButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ImageButton_SetImageCount)
    MySyscall(pImageButton_SetImageCount, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetOrientation)
TImageOrientation
ImageButton_GetOrientation(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetOrientation)
    return (TImageOrientation)MySyscall(pImageButton_GetOrientation, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetOrientation)
void
ImageButton_SetOrientation(TImageButton AObj, TImageOrientation AValue) {
    GET_FUNC_ADDR(ImageButton_SetOrientation)
    MySyscall(pImageButton_SetOrientation, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetModalResult)
TModalResult
ImageButton_GetModalResult(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetModalResult)
    return (TModalResult)MySyscall(pImageButton_GetModalResult, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetModalResult)
void
ImageButton_SetModalResult(TImageButton AObj, TModalResult AValue) {
    GET_FUNC_ADDR(ImageButton_SetModalResult)
    MySyscall(pImageButton_SetModalResult, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetParentShowHint)
BOOL
ImageButton_GetParentShowHint(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetParentShowHint)
    return (BOOL)MySyscall(pImageButton_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetParentShowHint)
void
ImageButton_SetParentShowHint(TImageButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ImageButton_SetParentShowHint)
    MySyscall(pImageButton_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetParentFont)
BOOL
ImageButton_GetParentFont(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetParentFont)
    return (BOOL)MySyscall(pImageButton_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetParentFont)
void
ImageButton_SetParentFont(TImageButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ImageButton_SetParentFont)
    MySyscall(pImageButton_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetPicture)
TPicture
ImageButton_GetPicture(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetPicture)
    return (TPicture)MySyscall(pImageButton_GetPicture, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetPicture)
void
ImageButton_SetPicture(TImageButton AObj, TPicture AValue) {
    GET_FUNC_ADDR(ImageButton_SetPicture)
    MySyscall(pImageButton_SetPicture, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetPopupMenu)
TPopupMenu
ImageButton_GetPopupMenu(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetPopupMenu)
    return (TPopupMenu)MySyscall(pImageButton_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetPopupMenu)
void
ImageButton_SetPopupMenu(TImageButton AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(ImageButton_SetPopupMenu)
    MySyscall(pImageButton_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetShowHint)
BOOL
ImageButton_GetShowHint(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetShowHint)
    return (BOOL)MySyscall(pImageButton_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetShowHint)
void
ImageButton_SetShowHint(TImageButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ImageButton_SetShowHint)
    MySyscall(pImageButton_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetShowCaption)
BOOL
ImageButton_GetShowCaption(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetShowCaption)
    return (BOOL)MySyscall(pImageButton_GetShowCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetShowCaption)
void
ImageButton_SetShowCaption(TImageButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ImageButton_SetShowCaption)
    MySyscall(pImageButton_SetShowCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetVisible)
BOOL
ImageButton_GetVisible(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetVisible)
    return (BOOL)MySyscall(pImageButton_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetVisible)
void
ImageButton_SetVisible(TImageButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(ImageButton_SetVisible)
    MySyscall(pImageButton_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetOnClick)
void
ImageButton_SetOnClick(TImageButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ImageButton_SetOnClick)
    MySyscall(pImageButton_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetOnContextPopup)
void
ImageButton_SetOnContextPopup(TImageButton AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(ImageButton_SetOnContextPopup)
    MySyscall(pImageButton_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetOnDblClick)
void
ImageButton_SetOnDblClick(TImageButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ImageButton_SetOnDblClick)
    MySyscall(pImageButton_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetOnDragDrop)
void
ImageButton_SetOnDragDrop(TImageButton AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(ImageButton_SetOnDragDrop)
    MySyscall(pImageButton_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetOnDragOver)
void
ImageButton_SetOnDragOver(TImageButton AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(ImageButton_SetOnDragOver)
    MySyscall(pImageButton_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetOnEndDock)
void
ImageButton_SetOnEndDock(TImageButton AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(ImageButton_SetOnEndDock)
    MySyscall(pImageButton_SetOnEndDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetOnEndDrag)
void
ImageButton_SetOnEndDrag(TImageButton AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(ImageButton_SetOnEndDrag)
    MySyscall(pImageButton_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetOnMouseDown)
void
ImageButton_SetOnMouseDown(TImageButton AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(ImageButton_SetOnMouseDown)
    MySyscall(pImageButton_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetOnMouseEnter)
void
ImageButton_SetOnMouseEnter(TImageButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ImageButton_SetOnMouseEnter)
    MySyscall(pImageButton_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetOnMouseLeave)
void
ImageButton_SetOnMouseLeave(TImageButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ImageButton_SetOnMouseLeave)
    MySyscall(pImageButton_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetOnMouseMove)
void
ImageButton_SetOnMouseMove(TImageButton AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(ImageButton_SetOnMouseMove)
    MySyscall(pImageButton_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetOnMouseUp)
void
ImageButton_SetOnMouseUp(TImageButton AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(ImageButton_SetOnMouseUp)
    MySyscall(pImageButton_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetBiDiMode)
TBiDiMode
ImageButton_GetBiDiMode(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetBiDiMode)
    return (TBiDiMode)MySyscall(pImageButton_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetBiDiMode)
void
ImageButton_SetBiDiMode(TImageButton AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(ImageButton_SetBiDiMode)
    MySyscall(pImageButton_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetBoundsRect)
TRect
ImageButton_GetBoundsRect(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetBoundsRect)
    TRect result;
    MySyscall(pImageButton_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ImageButton_SetBoundsRect)
void
ImageButton_SetBoundsRect(TImageButton AObj, TRect AValue) {
    GET_FUNC_ADDR(ImageButton_SetBoundsRect)
    MySyscall(pImageButton_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetClientHeight)
int32_t
ImageButton_GetClientHeight(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetClientHeight)
    return (int32_t)MySyscall(pImageButton_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetClientHeight)
void
ImageButton_SetClientHeight(TImageButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ImageButton_SetClientHeight)
    MySyscall(pImageButton_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetClientOrigin)
TPoint
ImageButton_GetClientOrigin(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetClientOrigin)
    TPoint result;
    MySyscall(pImageButton_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ImageButton_GetClientRect)
TRect
ImageButton_GetClientRect(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetClientRect)
    TRect result;
    MySyscall(pImageButton_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ImageButton_GetClientWidth)
int32_t
ImageButton_GetClientWidth(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetClientWidth)
    return (int32_t)MySyscall(pImageButton_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetClientWidth)
void
ImageButton_SetClientWidth(TImageButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ImageButton_SetClientWidth)
    MySyscall(pImageButton_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetControlState)
TControlState
ImageButton_GetControlState(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetControlState)
    return (TControlState)MySyscall(pImageButton_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetControlState)
void
ImageButton_SetControlState(TImageButton AObj, TControlState AValue) {
    GET_FUNC_ADDR(ImageButton_SetControlState)
    MySyscall(pImageButton_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetControlStyle)
TControlStyle
ImageButton_GetControlStyle(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetControlStyle)
    return (TControlStyle)MySyscall(pImageButton_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetControlStyle)
void
ImageButton_SetControlStyle(TImageButton AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(ImageButton_SetControlStyle)
    MySyscall(pImageButton_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetFloating)
BOOL
ImageButton_GetFloating(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetFloating)
    return (BOOL)MySyscall(pImageButton_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetParent)
TWinControl
ImageButton_GetParent(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetParent)
    return (TWinControl)MySyscall(pImageButton_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetParent)
void
ImageButton_SetParent(TImageButton AObj, TWinControl AValue) {
    GET_FUNC_ADDR(ImageButton_SetParent)
    MySyscall(pImageButton_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetLeft)
int32_t
ImageButton_GetLeft(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetLeft)
    return (int32_t)MySyscall(pImageButton_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetLeft)
void
ImageButton_SetLeft(TImageButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ImageButton_SetLeft)
    MySyscall(pImageButton_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetTop)
int32_t
ImageButton_GetTop(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetTop)
    return (int32_t)MySyscall(pImageButton_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetTop)
void
ImageButton_SetTop(TImageButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ImageButton_SetTop)
    MySyscall(pImageButton_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetWidth)
int32_t
ImageButton_GetWidth(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetWidth)
    return (int32_t)MySyscall(pImageButton_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetWidth)
void
ImageButton_SetWidth(TImageButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ImageButton_SetWidth)
    MySyscall(pImageButton_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetHeight)
int32_t
ImageButton_GetHeight(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetHeight)
    return (int32_t)MySyscall(pImageButton_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetHeight)
void
ImageButton_SetHeight(TImageButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ImageButton_SetHeight)
    MySyscall(pImageButton_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetCursor)
TCursor
ImageButton_GetCursor(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetCursor)
    return (TCursor)MySyscall(pImageButton_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetCursor)
void
ImageButton_SetCursor(TImageButton AObj, TCursor AValue) {
    GET_FUNC_ADDR(ImageButton_SetCursor)
    MySyscall(pImageButton_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetHint)
char*
ImageButton_GetHint(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetHint)
    return (char*)MySyscall(pImageButton_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetHint)
void
ImageButton_SetHint(TImageButton AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ImageButton_SetHint)
    MySyscall(pImageButton_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetComponentCount)
int32_t
ImageButton_GetComponentCount(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetComponentCount)
    return (int32_t)MySyscall(pImageButton_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetComponentIndex)
int32_t
ImageButton_GetComponentIndex(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetComponentIndex)
    return (int32_t)MySyscall(pImageButton_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetComponentIndex)
void
ImageButton_SetComponentIndex(TImageButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(ImageButton_SetComponentIndex)
    MySyscall(pImageButton_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetOwner)
TComponent
ImageButton_GetOwner(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetOwner)
    return (TComponent)MySyscall(pImageButton_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetName)
char*
ImageButton_GetName(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetName)
    return (char*)MySyscall(pImageButton_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetName)
void
ImageButton_SetName(TImageButton AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ImageButton_SetName)
    MySyscall(pImageButton_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetTag)
intptr_t
ImageButton_GetTag(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetTag)
    return (intptr_t)MySyscall(pImageButton_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetTag)
void
ImageButton_SetTag(TImageButton AObj, intptr_t AValue) {
    GET_FUNC_ADDR(ImageButton_SetTag)
    MySyscall(pImageButton_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetAnchorSideLeft)
TAnchorSide
ImageButton_GetAnchorSideLeft(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pImageButton_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetAnchorSideLeft)
void
ImageButton_SetAnchorSideLeft(TImageButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ImageButton_SetAnchorSideLeft)
    MySyscall(pImageButton_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetAnchorSideTop)
TAnchorSide
ImageButton_GetAnchorSideTop(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pImageButton_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetAnchorSideTop)
void
ImageButton_SetAnchorSideTop(TImageButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ImageButton_SetAnchorSideTop)
    MySyscall(pImageButton_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetAnchorSideRight)
TAnchorSide
ImageButton_GetAnchorSideRight(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pImageButton_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetAnchorSideRight)
void
ImageButton_SetAnchorSideRight(TImageButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ImageButton_SetAnchorSideRight)
    MySyscall(pImageButton_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetAnchorSideBottom)
TAnchorSide
ImageButton_GetAnchorSideBottom(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pImageButton_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetAnchorSideBottom)
void
ImageButton_SetAnchorSideBottom(TImageButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ImageButton_SetAnchorSideBottom)
    MySyscall(pImageButton_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetBorderSpacing)
TControlBorderSpacing
ImageButton_GetBorderSpacing(TImageButton AObj) {
    GET_FUNC_ADDR(ImageButton_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pImageButton_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_SetBorderSpacing)
void
ImageButton_SetBorderSpacing(TImageButton AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(ImageButton_SetBorderSpacing)
    MySyscall(pImageButton_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetComponents)
TComponent
ImageButton_GetComponents(TImageButton AObj, int32_t AIndex) {
    GET_FUNC_ADDR(ImageButton_GetComponents)
    return (TComponent)MySyscall(pImageButton_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_GetAnchorSide)
TAnchorSide
ImageButton_GetAnchorSide(TImageButton AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(ImageButton_GetAnchorSide)
    return (TAnchorSide)MySyscall(pImageButton_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ImageButton_StaticClassType)
TClass
ImageButton_StaticClassType() {
    GET_FUNC_ADDR(ImageButton_StaticClassType)
    return (TClass)MySyscall(pImageButton_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TFindDialog-------------------

DEFINE_FUNC_PTR(FindDialog_Create)
TFindDialog
FindDialog_Create(TComponent AOwner) {
    GET_FUNC_ADDR(FindDialog_Create)
    return (TFindDialog)MySyscall(pFindDialog_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_Free)
void
FindDialog_Free(TFindDialog AObj) {
    GET_FUNC_ADDR(FindDialog_Free)
    MySyscall(pFindDialog_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_CloseDialog)
void
FindDialog_CloseDialog(TFindDialog AObj) {
    GET_FUNC_ADDR(FindDialog_CloseDialog)
    MySyscall(pFindDialog_CloseDialog, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_Execute)
BOOL
FindDialog_Execute(TFindDialog AObj) {
    GET_FUNC_ADDR(FindDialog_Execute)
    return (BOOL)MySyscall(pFindDialog_Execute, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_FindComponent)
TComponent
FindDialog_FindComponent(TFindDialog AObj, CChar char* AName) {
    GET_FUNC_ADDR(FindDialog_FindComponent)
    return (TComponent)MySyscall(pFindDialog_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_GetNamePath)
char*
FindDialog_GetNamePath(TFindDialog AObj) {
    GET_FUNC_ADDR(FindDialog_GetNamePath)
    return (char*)MySyscall(pFindDialog_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_HasParent)
BOOL
FindDialog_HasParent(TFindDialog AObj) {
    GET_FUNC_ADDR(FindDialog_HasParent)
    return (BOOL)MySyscall(pFindDialog_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_Assign)
void
FindDialog_Assign(TFindDialog AObj, TObject Source) {
    GET_FUNC_ADDR(FindDialog_Assign)
    MySyscall(pFindDialog_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_ClassType)
TClass
FindDialog_ClassType(TFindDialog AObj) {
    GET_FUNC_ADDR(FindDialog_ClassType)
    return (TClass)MySyscall(pFindDialog_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_ClassName)
char*
FindDialog_ClassName(TFindDialog AObj) {
    GET_FUNC_ADDR(FindDialog_ClassName)
    return (char*)MySyscall(pFindDialog_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_InstanceSize)
int32_t
FindDialog_InstanceSize(TFindDialog AObj) {
    GET_FUNC_ADDR(FindDialog_InstanceSize)
    return (int32_t)MySyscall(pFindDialog_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_InheritsFrom)
BOOL
FindDialog_InheritsFrom(TFindDialog AObj, TClass AClass) {
    GET_FUNC_ADDR(FindDialog_InheritsFrom)
    return (BOOL)MySyscall(pFindDialog_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_Equals)
BOOL
FindDialog_Equals(TFindDialog AObj, TObject Obj) {
    GET_FUNC_ADDR(FindDialog_Equals)
    return (BOOL)MySyscall(pFindDialog_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_GetHashCode)
int32_t
FindDialog_GetHashCode(TFindDialog AObj) {
    GET_FUNC_ADDR(FindDialog_GetHashCode)
    return (int32_t)MySyscall(pFindDialog_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_ToString)
char*
FindDialog_ToString(TFindDialog AObj) {
    GET_FUNC_ADDR(FindDialog_ToString)
    return (char*)MySyscall(pFindDialog_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_GetLeft)
int32_t
FindDialog_GetLeft(TFindDialog AObj) {
    GET_FUNC_ADDR(FindDialog_GetLeft)
    return (int32_t)MySyscall(pFindDialog_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_SetLeft)
void
FindDialog_SetLeft(TFindDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(FindDialog_SetLeft)
    MySyscall(pFindDialog_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_GetPosition)
TPoint
FindDialog_GetPosition(TFindDialog AObj) {
    GET_FUNC_ADDR(FindDialog_GetPosition)
    TPoint result;
    MySyscall(pFindDialog_GetPosition, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(FindDialog_SetPosition)
void
FindDialog_SetPosition(TFindDialog AObj, TPoint AValue) {
    GET_FUNC_ADDR(FindDialog_SetPosition)
    MySyscall(pFindDialog_SetPosition, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_GetTop)
int32_t
FindDialog_GetTop(TFindDialog AObj) {
    GET_FUNC_ADDR(FindDialog_GetTop)
    return (int32_t)MySyscall(pFindDialog_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_SetTop)
void
FindDialog_SetTop(TFindDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(FindDialog_SetTop)
    MySyscall(pFindDialog_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_GetFindText)
char*
FindDialog_GetFindText(TFindDialog AObj) {
    GET_FUNC_ADDR(FindDialog_GetFindText)
    return (char*)MySyscall(pFindDialog_GetFindText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_SetFindText)
void
FindDialog_SetFindText(TFindDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(FindDialog_SetFindText)
    MySyscall(pFindDialog_SetFindText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_GetOptions)
TFindOptions
FindDialog_GetOptions(TFindDialog AObj) {
    GET_FUNC_ADDR(FindDialog_GetOptions)
    return (TFindOptions)MySyscall(pFindDialog_GetOptions, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_SetOptions)
void
FindDialog_SetOptions(TFindDialog AObj, TFindOptions AValue) {
    GET_FUNC_ADDR(FindDialog_SetOptions)
    MySyscall(pFindDialog_SetOptions, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_SetOnFind)
void
FindDialog_SetOnFind(TFindDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(FindDialog_SetOnFind)
    MySyscall(pFindDialog_SetOnFind, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_GetHandle)
HWND
FindDialog_GetHandle(TFindDialog AObj) {
    GET_FUNC_ADDR(FindDialog_GetHandle)
    return (HWND)MySyscall(pFindDialog_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_SetOnClose)
void
FindDialog_SetOnClose(TFindDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(FindDialog_SetOnClose)
    MySyscall(pFindDialog_SetOnClose, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_SetOnShow)
void
FindDialog_SetOnShow(TFindDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(FindDialog_SetOnShow)
    MySyscall(pFindDialog_SetOnShow, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_GetComponentCount)
int32_t
FindDialog_GetComponentCount(TFindDialog AObj) {
    GET_FUNC_ADDR(FindDialog_GetComponentCount)
    return (int32_t)MySyscall(pFindDialog_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_GetComponentIndex)
int32_t
FindDialog_GetComponentIndex(TFindDialog AObj) {
    GET_FUNC_ADDR(FindDialog_GetComponentIndex)
    return (int32_t)MySyscall(pFindDialog_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_SetComponentIndex)
void
FindDialog_SetComponentIndex(TFindDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(FindDialog_SetComponentIndex)
    MySyscall(pFindDialog_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_GetOwner)
TComponent
FindDialog_GetOwner(TFindDialog AObj) {
    GET_FUNC_ADDR(FindDialog_GetOwner)
    return (TComponent)MySyscall(pFindDialog_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_GetName)
char*
FindDialog_GetName(TFindDialog AObj) {
    GET_FUNC_ADDR(FindDialog_GetName)
    return (char*)MySyscall(pFindDialog_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_SetName)
void
FindDialog_SetName(TFindDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(FindDialog_SetName)
    MySyscall(pFindDialog_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_GetTag)
intptr_t
FindDialog_GetTag(TFindDialog AObj) {
    GET_FUNC_ADDR(FindDialog_GetTag)
    return (intptr_t)MySyscall(pFindDialog_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_SetTag)
void
FindDialog_SetTag(TFindDialog AObj, intptr_t AValue) {
    GET_FUNC_ADDR(FindDialog_SetTag)
    MySyscall(pFindDialog_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_GetComponents)
TComponent
FindDialog_GetComponents(TFindDialog AObj, int32_t AIndex) {
    GET_FUNC_ADDR(FindDialog_GetComponents)
    return (TComponent)MySyscall(pFindDialog_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FindDialog_StaticClassType)
TClass
FindDialog_StaticClassType() {
    GET_FUNC_ADDR(FindDialog_StaticClassType)
    return (TClass)MySyscall(pFindDialog_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TReplaceDialog-------------------

DEFINE_FUNC_PTR(ReplaceDialog_Create)
TReplaceDialog
ReplaceDialog_Create(TComponent AOwner) {
    GET_FUNC_ADDR(ReplaceDialog_Create)
    return (TReplaceDialog)MySyscall(pReplaceDialog_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_Free)
void
ReplaceDialog_Free(TReplaceDialog AObj) {
    GET_FUNC_ADDR(ReplaceDialog_Free)
    MySyscall(pReplaceDialog_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_CloseDialog)
void
ReplaceDialog_CloseDialog(TReplaceDialog AObj) {
    GET_FUNC_ADDR(ReplaceDialog_CloseDialog)
    MySyscall(pReplaceDialog_CloseDialog, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_Execute)
BOOL
ReplaceDialog_Execute(TReplaceDialog AObj) {
    GET_FUNC_ADDR(ReplaceDialog_Execute)
    return (BOOL)MySyscall(pReplaceDialog_Execute, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_FindComponent)
TComponent
ReplaceDialog_FindComponent(TReplaceDialog AObj, CChar char* AName) {
    GET_FUNC_ADDR(ReplaceDialog_FindComponent)
    return (TComponent)MySyscall(pReplaceDialog_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_GetNamePath)
char*
ReplaceDialog_GetNamePath(TReplaceDialog AObj) {
    GET_FUNC_ADDR(ReplaceDialog_GetNamePath)
    return (char*)MySyscall(pReplaceDialog_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_HasParent)
BOOL
ReplaceDialog_HasParent(TReplaceDialog AObj) {
    GET_FUNC_ADDR(ReplaceDialog_HasParent)
    return (BOOL)MySyscall(pReplaceDialog_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_Assign)
void
ReplaceDialog_Assign(TReplaceDialog AObj, TObject Source) {
    GET_FUNC_ADDR(ReplaceDialog_Assign)
    MySyscall(pReplaceDialog_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_ClassType)
TClass
ReplaceDialog_ClassType(TReplaceDialog AObj) {
    GET_FUNC_ADDR(ReplaceDialog_ClassType)
    return (TClass)MySyscall(pReplaceDialog_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_ClassName)
char*
ReplaceDialog_ClassName(TReplaceDialog AObj) {
    GET_FUNC_ADDR(ReplaceDialog_ClassName)
    return (char*)MySyscall(pReplaceDialog_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_InstanceSize)
int32_t
ReplaceDialog_InstanceSize(TReplaceDialog AObj) {
    GET_FUNC_ADDR(ReplaceDialog_InstanceSize)
    return (int32_t)MySyscall(pReplaceDialog_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_InheritsFrom)
BOOL
ReplaceDialog_InheritsFrom(TReplaceDialog AObj, TClass AClass) {
    GET_FUNC_ADDR(ReplaceDialog_InheritsFrom)
    return (BOOL)MySyscall(pReplaceDialog_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_Equals)
BOOL
ReplaceDialog_Equals(TReplaceDialog AObj, TObject Obj) {
    GET_FUNC_ADDR(ReplaceDialog_Equals)
    return (BOOL)MySyscall(pReplaceDialog_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_GetHashCode)
int32_t
ReplaceDialog_GetHashCode(TReplaceDialog AObj) {
    GET_FUNC_ADDR(ReplaceDialog_GetHashCode)
    return (int32_t)MySyscall(pReplaceDialog_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_ToString)
char*
ReplaceDialog_ToString(TReplaceDialog AObj) {
    GET_FUNC_ADDR(ReplaceDialog_ToString)
    return (char*)MySyscall(pReplaceDialog_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_GetReplaceText)
char*
ReplaceDialog_GetReplaceText(TReplaceDialog AObj) {
    GET_FUNC_ADDR(ReplaceDialog_GetReplaceText)
    return (char*)MySyscall(pReplaceDialog_GetReplaceText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_SetReplaceText)
void
ReplaceDialog_SetReplaceText(TReplaceDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ReplaceDialog_SetReplaceText)
    MySyscall(pReplaceDialog_SetReplaceText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_SetOnReplace)
void
ReplaceDialog_SetOnReplace(TReplaceDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ReplaceDialog_SetOnReplace)
    MySyscall(pReplaceDialog_SetOnReplace, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_GetLeft)
int32_t
ReplaceDialog_GetLeft(TReplaceDialog AObj) {
    GET_FUNC_ADDR(ReplaceDialog_GetLeft)
    return (int32_t)MySyscall(pReplaceDialog_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_SetLeft)
void
ReplaceDialog_SetLeft(TReplaceDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(ReplaceDialog_SetLeft)
    MySyscall(pReplaceDialog_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_GetPosition)
TPoint
ReplaceDialog_GetPosition(TReplaceDialog AObj) {
    GET_FUNC_ADDR(ReplaceDialog_GetPosition)
    TPoint result;
    MySyscall(pReplaceDialog_GetPosition, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ReplaceDialog_SetPosition)
void
ReplaceDialog_SetPosition(TReplaceDialog AObj, TPoint AValue) {
    GET_FUNC_ADDR(ReplaceDialog_SetPosition)
    MySyscall(pReplaceDialog_SetPosition, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_GetTop)
int32_t
ReplaceDialog_GetTop(TReplaceDialog AObj) {
    GET_FUNC_ADDR(ReplaceDialog_GetTop)
    return (int32_t)MySyscall(pReplaceDialog_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_SetTop)
void
ReplaceDialog_SetTop(TReplaceDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(ReplaceDialog_SetTop)
    MySyscall(pReplaceDialog_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_GetFindText)
char*
ReplaceDialog_GetFindText(TReplaceDialog AObj) {
    GET_FUNC_ADDR(ReplaceDialog_GetFindText)
    return (char*)MySyscall(pReplaceDialog_GetFindText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_SetFindText)
void
ReplaceDialog_SetFindText(TReplaceDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ReplaceDialog_SetFindText)
    MySyscall(pReplaceDialog_SetFindText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_GetOptions)
TFindOptions
ReplaceDialog_GetOptions(TReplaceDialog AObj) {
    GET_FUNC_ADDR(ReplaceDialog_GetOptions)
    return (TFindOptions)MySyscall(pReplaceDialog_GetOptions, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_SetOptions)
void
ReplaceDialog_SetOptions(TReplaceDialog AObj, TFindOptions AValue) {
    GET_FUNC_ADDR(ReplaceDialog_SetOptions)
    MySyscall(pReplaceDialog_SetOptions, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_SetOnFind)
void
ReplaceDialog_SetOnFind(TReplaceDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ReplaceDialog_SetOnFind)
    MySyscall(pReplaceDialog_SetOnFind, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_GetHandle)
HWND
ReplaceDialog_GetHandle(TReplaceDialog AObj) {
    GET_FUNC_ADDR(ReplaceDialog_GetHandle)
    return (HWND)MySyscall(pReplaceDialog_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_SetOnClose)
void
ReplaceDialog_SetOnClose(TReplaceDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ReplaceDialog_SetOnClose)
    MySyscall(pReplaceDialog_SetOnClose, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_SetOnShow)
void
ReplaceDialog_SetOnShow(TReplaceDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ReplaceDialog_SetOnShow)
    MySyscall(pReplaceDialog_SetOnShow, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_GetComponentCount)
int32_t
ReplaceDialog_GetComponentCount(TReplaceDialog AObj) {
    GET_FUNC_ADDR(ReplaceDialog_GetComponentCount)
    return (int32_t)MySyscall(pReplaceDialog_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_GetComponentIndex)
int32_t
ReplaceDialog_GetComponentIndex(TReplaceDialog AObj) {
    GET_FUNC_ADDR(ReplaceDialog_GetComponentIndex)
    return (int32_t)MySyscall(pReplaceDialog_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_SetComponentIndex)
void
ReplaceDialog_SetComponentIndex(TReplaceDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(ReplaceDialog_SetComponentIndex)
    MySyscall(pReplaceDialog_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_GetOwner)
TComponent
ReplaceDialog_GetOwner(TReplaceDialog AObj) {
    GET_FUNC_ADDR(ReplaceDialog_GetOwner)
    return (TComponent)MySyscall(pReplaceDialog_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_GetName)
char*
ReplaceDialog_GetName(TReplaceDialog AObj) {
    GET_FUNC_ADDR(ReplaceDialog_GetName)
    return (char*)MySyscall(pReplaceDialog_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_SetName)
void
ReplaceDialog_SetName(TReplaceDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ReplaceDialog_SetName)
    MySyscall(pReplaceDialog_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_GetTag)
intptr_t
ReplaceDialog_GetTag(TReplaceDialog AObj) {
    GET_FUNC_ADDR(ReplaceDialog_GetTag)
    return (intptr_t)MySyscall(pReplaceDialog_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_SetTag)
void
ReplaceDialog_SetTag(TReplaceDialog AObj, intptr_t AValue) {
    GET_FUNC_ADDR(ReplaceDialog_SetTag)
    MySyscall(pReplaceDialog_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_GetComponents)
TComponent
ReplaceDialog_GetComponents(TReplaceDialog AObj, int32_t AIndex) {
    GET_FUNC_ADDR(ReplaceDialog_GetComponents)
    return (TComponent)MySyscall(pReplaceDialog_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ReplaceDialog_StaticClassType)
TClass
ReplaceDialog_StaticClassType() {
    GET_FUNC_ADDR(ReplaceDialog_StaticClassType)
    return (TClass)MySyscall(pReplaceDialog_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TPrinterSetupDialog-------------------

DEFINE_FUNC_PTR(PrinterSetupDialog_Create)
TPrinterSetupDialog
PrinterSetupDialog_Create(TComponent AOwner) {
    GET_FUNC_ADDR(PrinterSetupDialog_Create)
    return (TPrinterSetupDialog)MySyscall(pPrinterSetupDialog_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_Free)
void
PrinterSetupDialog_Free(TPrinterSetupDialog AObj) {
    GET_FUNC_ADDR(PrinterSetupDialog_Free)
    MySyscall(pPrinterSetupDialog_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_Execute)
BOOL
PrinterSetupDialog_Execute(TPrinterSetupDialog AObj) {
    GET_FUNC_ADDR(PrinterSetupDialog_Execute)
    return (BOOL)MySyscall(pPrinterSetupDialog_Execute, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_FindComponent)
TComponent
PrinterSetupDialog_FindComponent(TPrinterSetupDialog AObj, CChar char* AName) {
    GET_FUNC_ADDR(PrinterSetupDialog_FindComponent)
    return (TComponent)MySyscall(pPrinterSetupDialog_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_GetNamePath)
char*
PrinterSetupDialog_GetNamePath(TPrinterSetupDialog AObj) {
    GET_FUNC_ADDR(PrinterSetupDialog_GetNamePath)
    return (char*)MySyscall(pPrinterSetupDialog_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_HasParent)
BOOL
PrinterSetupDialog_HasParent(TPrinterSetupDialog AObj) {
    GET_FUNC_ADDR(PrinterSetupDialog_HasParent)
    return (BOOL)MySyscall(pPrinterSetupDialog_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_Assign)
void
PrinterSetupDialog_Assign(TPrinterSetupDialog AObj, TObject Source) {
    GET_FUNC_ADDR(PrinterSetupDialog_Assign)
    MySyscall(pPrinterSetupDialog_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_ClassType)
TClass
PrinterSetupDialog_ClassType(TPrinterSetupDialog AObj) {
    GET_FUNC_ADDR(PrinterSetupDialog_ClassType)
    return (TClass)MySyscall(pPrinterSetupDialog_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_ClassName)
char*
PrinterSetupDialog_ClassName(TPrinterSetupDialog AObj) {
    GET_FUNC_ADDR(PrinterSetupDialog_ClassName)
    return (char*)MySyscall(pPrinterSetupDialog_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_InstanceSize)
int32_t
PrinterSetupDialog_InstanceSize(TPrinterSetupDialog AObj) {
    GET_FUNC_ADDR(PrinterSetupDialog_InstanceSize)
    return (int32_t)MySyscall(pPrinterSetupDialog_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_InheritsFrom)
BOOL
PrinterSetupDialog_InheritsFrom(TPrinterSetupDialog AObj, TClass AClass) {
    GET_FUNC_ADDR(PrinterSetupDialog_InheritsFrom)
    return (BOOL)MySyscall(pPrinterSetupDialog_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_Equals)
BOOL
PrinterSetupDialog_Equals(TPrinterSetupDialog AObj, TObject Obj) {
    GET_FUNC_ADDR(PrinterSetupDialog_Equals)
    return (BOOL)MySyscall(pPrinterSetupDialog_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_GetHashCode)
int32_t
PrinterSetupDialog_GetHashCode(TPrinterSetupDialog AObj) {
    GET_FUNC_ADDR(PrinterSetupDialog_GetHashCode)
    return (int32_t)MySyscall(pPrinterSetupDialog_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_ToString)
char*
PrinterSetupDialog_ToString(TPrinterSetupDialog AObj) {
    GET_FUNC_ADDR(PrinterSetupDialog_ToString)
    return (char*)MySyscall(pPrinterSetupDialog_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_GetHandle)
HWND
PrinterSetupDialog_GetHandle(TPrinterSetupDialog AObj) {
    GET_FUNC_ADDR(PrinterSetupDialog_GetHandle)
    return (HWND)MySyscall(pPrinterSetupDialog_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_SetOnClose)
void
PrinterSetupDialog_SetOnClose(TPrinterSetupDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(PrinterSetupDialog_SetOnClose)
    MySyscall(pPrinterSetupDialog_SetOnClose, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_SetOnShow)
void
PrinterSetupDialog_SetOnShow(TPrinterSetupDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(PrinterSetupDialog_SetOnShow)
    MySyscall(pPrinterSetupDialog_SetOnShow, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_GetComponentCount)
int32_t
PrinterSetupDialog_GetComponentCount(TPrinterSetupDialog AObj) {
    GET_FUNC_ADDR(PrinterSetupDialog_GetComponentCount)
    return (int32_t)MySyscall(pPrinterSetupDialog_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_GetComponentIndex)
int32_t
PrinterSetupDialog_GetComponentIndex(TPrinterSetupDialog AObj) {
    GET_FUNC_ADDR(PrinterSetupDialog_GetComponentIndex)
    return (int32_t)MySyscall(pPrinterSetupDialog_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_SetComponentIndex)
void
PrinterSetupDialog_SetComponentIndex(TPrinterSetupDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(PrinterSetupDialog_SetComponentIndex)
    MySyscall(pPrinterSetupDialog_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_GetOwner)
TComponent
PrinterSetupDialog_GetOwner(TPrinterSetupDialog AObj) {
    GET_FUNC_ADDR(PrinterSetupDialog_GetOwner)
    return (TComponent)MySyscall(pPrinterSetupDialog_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_GetName)
char*
PrinterSetupDialog_GetName(TPrinterSetupDialog AObj) {
    GET_FUNC_ADDR(PrinterSetupDialog_GetName)
    return (char*)MySyscall(pPrinterSetupDialog_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_SetName)
void
PrinterSetupDialog_SetName(TPrinterSetupDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(PrinterSetupDialog_SetName)
    MySyscall(pPrinterSetupDialog_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_GetTag)
intptr_t
PrinterSetupDialog_GetTag(TPrinterSetupDialog AObj) {
    GET_FUNC_ADDR(PrinterSetupDialog_GetTag)
    return (intptr_t)MySyscall(pPrinterSetupDialog_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_SetTag)
void
PrinterSetupDialog_SetTag(TPrinterSetupDialog AObj, intptr_t AValue) {
    GET_FUNC_ADDR(PrinterSetupDialog_SetTag)
    MySyscall(pPrinterSetupDialog_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_GetComponents)
TComponent
PrinterSetupDialog_GetComponents(TPrinterSetupDialog AObj, int32_t AIndex) {
    GET_FUNC_ADDR(PrinterSetupDialog_GetComponents)
    return (TComponent)MySyscall(pPrinterSetupDialog_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PrinterSetupDialog_StaticClassType)
TClass
PrinterSetupDialog_StaticClassType() {
    GET_FUNC_ADDR(PrinterSetupDialog_StaticClassType)
    return (TClass)MySyscall(pPrinterSetupDialog_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TPageSetupDialog-------------------

DEFINE_FUNC_PTR(PageSetupDialog_Create)
TPageSetupDialog
PageSetupDialog_Create(TComponent AOwner) {
    GET_FUNC_ADDR(PageSetupDialog_Create)
    return (TPageSetupDialog)MySyscall(pPageSetupDialog_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_Free)
void
PageSetupDialog_Free(TPageSetupDialog AObj) {
    GET_FUNC_ADDR(PageSetupDialog_Free)
    MySyscall(pPageSetupDialog_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_Execute)
BOOL
PageSetupDialog_Execute(TPageSetupDialog AObj) {
    GET_FUNC_ADDR(PageSetupDialog_Execute)
    return (BOOL)MySyscall(pPageSetupDialog_Execute, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_FindComponent)
TComponent
PageSetupDialog_FindComponent(TPageSetupDialog AObj, CChar char* AName) {
    GET_FUNC_ADDR(PageSetupDialog_FindComponent)
    return (TComponent)MySyscall(pPageSetupDialog_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_GetNamePath)
char*
PageSetupDialog_GetNamePath(TPageSetupDialog AObj) {
    GET_FUNC_ADDR(PageSetupDialog_GetNamePath)
    return (char*)MySyscall(pPageSetupDialog_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_HasParent)
BOOL
PageSetupDialog_HasParent(TPageSetupDialog AObj) {
    GET_FUNC_ADDR(PageSetupDialog_HasParent)
    return (BOOL)MySyscall(pPageSetupDialog_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_Assign)
void
PageSetupDialog_Assign(TPageSetupDialog AObj, TObject Source) {
    GET_FUNC_ADDR(PageSetupDialog_Assign)
    MySyscall(pPageSetupDialog_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_ClassType)
TClass
PageSetupDialog_ClassType(TPageSetupDialog AObj) {
    GET_FUNC_ADDR(PageSetupDialog_ClassType)
    return (TClass)MySyscall(pPageSetupDialog_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_ClassName)
char*
PageSetupDialog_ClassName(TPageSetupDialog AObj) {
    GET_FUNC_ADDR(PageSetupDialog_ClassName)
    return (char*)MySyscall(pPageSetupDialog_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_InstanceSize)
int32_t
PageSetupDialog_InstanceSize(TPageSetupDialog AObj) {
    GET_FUNC_ADDR(PageSetupDialog_InstanceSize)
    return (int32_t)MySyscall(pPageSetupDialog_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_InheritsFrom)
BOOL
PageSetupDialog_InheritsFrom(TPageSetupDialog AObj, TClass AClass) {
    GET_FUNC_ADDR(PageSetupDialog_InheritsFrom)
    return (BOOL)MySyscall(pPageSetupDialog_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_Equals)
BOOL
PageSetupDialog_Equals(TPageSetupDialog AObj, TObject Obj) {
    GET_FUNC_ADDR(PageSetupDialog_Equals)
    return (BOOL)MySyscall(pPageSetupDialog_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_GetHashCode)
int32_t
PageSetupDialog_GetHashCode(TPageSetupDialog AObj) {
    GET_FUNC_ADDR(PageSetupDialog_GetHashCode)
    return (int32_t)MySyscall(pPageSetupDialog_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_ToString)
char*
PageSetupDialog_ToString(TPageSetupDialog AObj) {
    GET_FUNC_ADDR(PageSetupDialog_ToString)
    return (char*)MySyscall(pPageSetupDialog_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_GetMarginLeft)
int32_t
PageSetupDialog_GetMarginLeft(TPageSetupDialog AObj) {
    GET_FUNC_ADDR(PageSetupDialog_GetMarginLeft)
    return (int32_t)MySyscall(pPageSetupDialog_GetMarginLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_SetMarginLeft)
void
PageSetupDialog_SetMarginLeft(TPageSetupDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(PageSetupDialog_SetMarginLeft)
    MySyscall(pPageSetupDialog_SetMarginLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_GetMarginTop)
int32_t
PageSetupDialog_GetMarginTop(TPageSetupDialog AObj) {
    GET_FUNC_ADDR(PageSetupDialog_GetMarginTop)
    return (int32_t)MySyscall(pPageSetupDialog_GetMarginTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_SetMarginTop)
void
PageSetupDialog_SetMarginTop(TPageSetupDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(PageSetupDialog_SetMarginTop)
    MySyscall(pPageSetupDialog_SetMarginTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_GetMarginRight)
int32_t
PageSetupDialog_GetMarginRight(TPageSetupDialog AObj) {
    GET_FUNC_ADDR(PageSetupDialog_GetMarginRight)
    return (int32_t)MySyscall(pPageSetupDialog_GetMarginRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_SetMarginRight)
void
PageSetupDialog_SetMarginRight(TPageSetupDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(PageSetupDialog_SetMarginRight)
    MySyscall(pPageSetupDialog_SetMarginRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_GetMarginBottom)
int32_t
PageSetupDialog_GetMarginBottom(TPageSetupDialog AObj) {
    GET_FUNC_ADDR(PageSetupDialog_GetMarginBottom)
    return (int32_t)MySyscall(pPageSetupDialog_GetMarginBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_SetMarginBottom)
void
PageSetupDialog_SetMarginBottom(TPageSetupDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(PageSetupDialog_SetMarginBottom)
    MySyscall(pPageSetupDialog_SetMarginBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_GetOptions)
TPageSetupDialogOptions
PageSetupDialog_GetOptions(TPageSetupDialog AObj) {
    GET_FUNC_ADDR(PageSetupDialog_GetOptions)
    return (TPageSetupDialogOptions)MySyscall(pPageSetupDialog_GetOptions, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_SetOptions)
void
PageSetupDialog_SetOptions(TPageSetupDialog AObj, TPageSetupDialogOptions AValue) {
    GET_FUNC_ADDR(PageSetupDialog_SetOptions)
    MySyscall(pPageSetupDialog_SetOptions, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_GetPageWidth)
int32_t
PageSetupDialog_GetPageWidth(TPageSetupDialog AObj) {
    GET_FUNC_ADDR(PageSetupDialog_GetPageWidth)
    return (int32_t)MySyscall(pPageSetupDialog_GetPageWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_SetPageWidth)
void
PageSetupDialog_SetPageWidth(TPageSetupDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(PageSetupDialog_SetPageWidth)
    MySyscall(pPageSetupDialog_SetPageWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_GetPageHeight)
int32_t
PageSetupDialog_GetPageHeight(TPageSetupDialog AObj) {
    GET_FUNC_ADDR(PageSetupDialog_GetPageHeight)
    return (int32_t)MySyscall(pPageSetupDialog_GetPageHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_SetPageHeight)
void
PageSetupDialog_SetPageHeight(TPageSetupDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(PageSetupDialog_SetPageHeight)
    MySyscall(pPageSetupDialog_SetPageHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_GetUnits)
TPageMeasureUnits
PageSetupDialog_GetUnits(TPageSetupDialog AObj) {
    GET_FUNC_ADDR(PageSetupDialog_GetUnits)
    return (TPageMeasureUnits)MySyscall(pPageSetupDialog_GetUnits, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_GetHandle)
HWND
PageSetupDialog_GetHandle(TPageSetupDialog AObj) {
    GET_FUNC_ADDR(PageSetupDialog_GetHandle)
    return (HWND)MySyscall(pPageSetupDialog_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_SetOnClose)
void
PageSetupDialog_SetOnClose(TPageSetupDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(PageSetupDialog_SetOnClose)
    MySyscall(pPageSetupDialog_SetOnClose, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_SetOnShow)
void
PageSetupDialog_SetOnShow(TPageSetupDialog AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(PageSetupDialog_SetOnShow)
    MySyscall(pPageSetupDialog_SetOnShow, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_GetComponentCount)
int32_t
PageSetupDialog_GetComponentCount(TPageSetupDialog AObj) {
    GET_FUNC_ADDR(PageSetupDialog_GetComponentCount)
    return (int32_t)MySyscall(pPageSetupDialog_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_GetComponentIndex)
int32_t
PageSetupDialog_GetComponentIndex(TPageSetupDialog AObj) {
    GET_FUNC_ADDR(PageSetupDialog_GetComponentIndex)
    return (int32_t)MySyscall(pPageSetupDialog_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_SetComponentIndex)
void
PageSetupDialog_SetComponentIndex(TPageSetupDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(PageSetupDialog_SetComponentIndex)
    MySyscall(pPageSetupDialog_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_GetOwner)
TComponent
PageSetupDialog_GetOwner(TPageSetupDialog AObj) {
    GET_FUNC_ADDR(PageSetupDialog_GetOwner)
    return (TComponent)MySyscall(pPageSetupDialog_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_GetName)
char*
PageSetupDialog_GetName(TPageSetupDialog AObj) {
    GET_FUNC_ADDR(PageSetupDialog_GetName)
    return (char*)MySyscall(pPageSetupDialog_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_SetName)
void
PageSetupDialog_SetName(TPageSetupDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(PageSetupDialog_SetName)
    MySyscall(pPageSetupDialog_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_GetTag)
intptr_t
PageSetupDialog_GetTag(TPageSetupDialog AObj) {
    GET_FUNC_ADDR(PageSetupDialog_GetTag)
    return (intptr_t)MySyscall(pPageSetupDialog_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_SetTag)
void
PageSetupDialog_SetTag(TPageSetupDialog AObj, intptr_t AValue) {
    GET_FUNC_ADDR(PageSetupDialog_SetTag)
    MySyscall(pPageSetupDialog_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_GetComponents)
TComponent
PageSetupDialog_GetComponents(TPageSetupDialog AObj, int32_t AIndex) {
    GET_FUNC_ADDR(PageSetupDialog_GetComponents)
    return (TComponent)MySyscall(pPageSetupDialog_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(PageSetupDialog_StaticClassType)
TClass
PageSetupDialog_StaticClassType() {
    GET_FUNC_ADDR(PageSetupDialog_StaticClassType)
    return (TClass)MySyscall(pPageSetupDialog_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TDragObject-------------------

DEFINE_FUNC_PTR(DragObject_Create)
TDragObject
ragObject_Create(TControl AOwner) {
    GET_FUNC_ADDR(DragObject_Create)
    return (TDragObject)MySyscall(pDragObject_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragObject_Free)
void
ragObject_Free(TDragObject AObj) {
    GET_FUNC_ADDR(DragObject_Free)
    MySyscall(pDragObject_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragObject_Assign)
void
ragObject_Assign(TDragObject AObj, TDragObject Source) {
    GET_FUNC_ADDR(DragObject_Assign)
    MySyscall(pDragObject_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragObject_HideDragImage)
void
ragObject_HideDragImage(TDragObject AObj) {
    GET_FUNC_ADDR(DragObject_HideDragImage)
    MySyscall(pDragObject_HideDragImage, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragObject_ShowDragImage)
void
ragObject_ShowDragImage(TDragObject AObj) {
    GET_FUNC_ADDR(DragObject_ShowDragImage)
    MySyscall(pDragObject_ShowDragImage, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragObject_ClassType)
TClass
ragObject_ClassType(TDragObject AObj) {
    GET_FUNC_ADDR(DragObject_ClassType)
    return (TClass)MySyscall(pDragObject_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragObject_ClassName)
char*
ragObject_ClassName(TDragObject AObj) {
    GET_FUNC_ADDR(DragObject_ClassName)
    return (char*)MySyscall(pDragObject_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragObject_InstanceSize)
int32_t
DragObject_InstanceSize(TDragObject AObj) {
    GET_FUNC_ADDR(DragObject_InstanceSize)
    return (int32_t)MySyscall(pDragObject_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragObject_InheritsFrom)
BOOL
ragObject_InheritsFrom(TDragObject AObj, TClass AClass) {
    GET_FUNC_ADDR(DragObject_InheritsFrom)
    return (BOOL)MySyscall(pDragObject_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragObject_Equals)
BOOL
ragObject_Equals(TDragObject AObj, TObject Obj) {
    GET_FUNC_ADDR(DragObject_Equals)
    return (BOOL)MySyscall(pDragObject_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragObject_GetHashCode)
int32_t
ragObject_GetHashCode(TDragObject AObj) {
    GET_FUNC_ADDR(DragObject_GetHashCode)
    return (int32_t)MySyscall(pDragObject_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragObject_ToString)
char*
ragObject_ToString(TDragObject AObj) {
    GET_FUNC_ADDR(DragObject_ToString)
    return (char*)MySyscall(pDragObject_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragObject_GetAlwaysShowDragImages)
BOOL
ragObject_GetAlwaysShowDragImages(TDragObject AObj) {
    GET_FUNC_ADDR(DragObject_GetAlwaysShowDragImages)
    return (BOOL)MySyscall(pDragObject_GetAlwaysShowDragImages, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragObject_SetAlwaysShowDragImages)
void
ragObject_SetAlwaysShowDragImages(TDragObject AObj, BOOL AValue) {
    GET_FUNC_ADDR(DragObject_SetAlwaysShowDragImages)
    MySyscall(pDragObject_SetAlwaysShowDragImages, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragObject_GetDragPos)
TPoint
ragObject_GetDragPos(TDragObject AObj) {
    GET_FUNC_ADDR(DragObject_GetDragPos)
    TPoint result;
    MySyscall(pDragObject_GetDragPos, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DragObject_SetDragPos)
void
ragObject_SetDragPos(TDragObject AObj, TPoint AValue) {
    GET_FUNC_ADDR(DragObject_SetDragPos)
    MySyscall(pDragObject_SetDragPos, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragObject_GetDragTarget)
void*
ragObject_GetDragTarget(TDragObject AObj) {
    GET_FUNC_ADDR(DragObject_GetDragTarget)
    return (void*)MySyscall(pDragObject_GetDragTarget, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragObject_SetDragTarget)
void
ragObject_SetDragTarget(TDragObject AObj, void* AValue) {
    GET_FUNC_ADDR(DragObject_SetDragTarget)
    MySyscall(pDragObject_SetDragTarget, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragObject_GetDragTargetPos)
TPoint
ragObject_GetDragTargetPos(TDragObject AObj) {
    GET_FUNC_ADDR(DragObject_GetDragTargetPos)
    TPoint result;
    MySyscall(pDragObject_GetDragTargetPos, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DragObject_SetDragTargetPos)
void
ragObject_SetDragTargetPos(TDragObject AObj, TPoint AValue) {
    GET_FUNC_ADDR(DragObject_SetDragTargetPos)
    MySyscall(pDragObject_SetDragTargetPos, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragObject_GetDropped)
BOOL
ragObject_GetDropped(TDragObject AObj) {
    GET_FUNC_ADDR(DragObject_GetDropped)
    return (BOOL)MySyscall(pDragObject_GetDropped, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragObject_StaticClassType)
TClass
ragObject_StaticClassType() {
    GET_FUNC_ADDR(DragObject_StaticClassType)
    return (TClass)MySyscall(pDragObject_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TDragDockObject-------------------

DEFINE_FUNC_PTR(DragDockObject_Create)
TDragDockObject
ragDockObject_Create(TControl AOwner) {
    GET_FUNC_ADDR(DragDockObject_Create)
    return (TDragDockObject)MySyscall(pDragDockObject_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_Free)
void
ragDockObject_Free(TDragDockObject AObj) {
    GET_FUNC_ADDR(DragDockObject_Free)
    MySyscall(pDragDockObject_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_Assign)
void
ragDockObject_Assign(TDragDockObject AObj, TDragObject Source) {
    GET_FUNC_ADDR(DragDockObject_Assign)
    MySyscall(pDragDockObject_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_HideDragImage)
void
ragDockObject_HideDragImage(TDragDockObject AObj) {
    GET_FUNC_ADDR(DragDockObject_HideDragImage)
    MySyscall(pDragDockObject_HideDragImage, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_ShowDragImage)
void
ragDockObject_ShowDragImage(TDragDockObject AObj) {
    GET_FUNC_ADDR(DragDockObject_ShowDragImage)
    MySyscall(pDragDockObject_ShowDragImage, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_ClassType)
TClass
ragDockObject_ClassType(TDragDockObject AObj) {
    GET_FUNC_ADDR(DragDockObject_ClassType)
    return (TClass)MySyscall(pDragDockObject_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_ClassName)
char*
ragDockObject_ClassName(TDragDockObject AObj) {
    GET_FUNC_ADDR(DragDockObject_ClassName)
    return (char*)MySyscall(pDragDockObject_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_InstanceSize)
int32_t
DragDockObject_InstanceSize(TDragDockObject AObj) {
    GET_FUNC_ADDR(DragDockObject_InstanceSize)
    return (int32_t)MySyscall(pDragDockObject_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_InheritsFrom)
BOOL
ragDockObject_InheritsFrom(TDragDockObject AObj, TClass AClass) {
    GET_FUNC_ADDR(DragDockObject_InheritsFrom)
    return (BOOL)MySyscall(pDragDockObject_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_Equals)
BOOL
ragDockObject_Equals(TDragDockObject AObj, TObject Obj) {
    GET_FUNC_ADDR(DragDockObject_Equals)
    return (BOOL)MySyscall(pDragDockObject_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_GetHashCode)
int32_t
ragDockObject_GetHashCode(TDragDockObject AObj) {
    GET_FUNC_ADDR(DragDockObject_GetHashCode)
    return (int32_t)MySyscall(pDragDockObject_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_ToString)
char*
ragDockObject_ToString(TDragDockObject AObj) {
    GET_FUNC_ADDR(DragDockObject_ToString)
    return (char*)MySyscall(pDragDockObject_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_GetDockRect)
TRect
ragDockObject_GetDockRect(TDragDockObject AObj) {
    GET_FUNC_ADDR(DragDockObject_GetDockRect)
    TRect result;
    MySyscall(pDragDockObject_GetDockRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DragDockObject_SetDockRect)
void
ragDockObject_SetDockRect(TDragDockObject AObj, TRect AValue) {
    GET_FUNC_ADDR(DragDockObject_SetDockRect)
    MySyscall(pDragDockObject_SetDockRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_GetDropAlign)
TAlign
ragDockObject_GetDropAlign(TDragDockObject AObj) {
    GET_FUNC_ADDR(DragDockObject_GetDropAlign)
    return (TAlign)MySyscall(pDragDockObject_GetDropAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_GetDropOnControl)
TControl
ragDockObject_GetDropOnControl(TDragDockObject AObj) {
    GET_FUNC_ADDR(DragDockObject_GetDropOnControl)
    return (TControl)MySyscall(pDragDockObject_GetDropOnControl, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_GetEraseDockRect)
TRect
ragDockObject_GetEraseDockRect(TDragDockObject AObj) {
    GET_FUNC_ADDR(DragDockObject_GetEraseDockRect)
    TRect result;
    MySyscall(pDragDockObject_GetEraseDockRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DragDockObject_SetEraseDockRect)
void
ragDockObject_SetEraseDockRect(TDragDockObject AObj, TRect AValue) {
    GET_FUNC_ADDR(DragDockObject_SetEraseDockRect)
    MySyscall(pDragDockObject_SetEraseDockRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_GetFloating)
BOOL
ragDockObject_GetFloating(TDragDockObject AObj) {
    GET_FUNC_ADDR(DragDockObject_GetFloating)
    return (BOOL)MySyscall(pDragDockObject_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_SetFloating)
void
ragDockObject_SetFloating(TDragDockObject AObj, BOOL AValue) {
    GET_FUNC_ADDR(DragDockObject_SetFloating)
    MySyscall(pDragDockObject_SetFloating, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_GetControl)
TControl
ragDockObject_GetControl(TDragDockObject AObj) {
    GET_FUNC_ADDR(DragDockObject_GetControl)
    return (TControl)MySyscall(pDragDockObject_GetControl, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_SetControl)
void
ragDockObject_SetControl(TDragDockObject AObj, TControl AValue) {
    GET_FUNC_ADDR(DragDockObject_SetControl)
    MySyscall(pDragDockObject_SetControl, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_GetAlwaysShowDragImages)
BOOL
ragDockObject_GetAlwaysShowDragImages(TDragDockObject AObj) {
    GET_FUNC_ADDR(DragDockObject_GetAlwaysShowDragImages)
    return (BOOL)MySyscall(pDragDockObject_GetAlwaysShowDragImages, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_SetAlwaysShowDragImages)
void
ragDockObject_SetAlwaysShowDragImages(TDragDockObject AObj, BOOL AValue) {
    GET_FUNC_ADDR(DragDockObject_SetAlwaysShowDragImages)
    MySyscall(pDragDockObject_SetAlwaysShowDragImages, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_GetDragPos)
TPoint
ragDockObject_GetDragPos(TDragDockObject AObj) {
    GET_FUNC_ADDR(DragDockObject_GetDragPos)
    TPoint result;
    MySyscall(pDragDockObject_GetDragPos, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DragDockObject_SetDragPos)
void
ragDockObject_SetDragPos(TDragDockObject AObj, TPoint AValue) {
    GET_FUNC_ADDR(DragDockObject_SetDragPos)
    MySyscall(pDragDockObject_SetDragPos, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_GetDragTarget)
void*
ragDockObject_GetDragTarget(TDragDockObject AObj) {
    GET_FUNC_ADDR(DragDockObject_GetDragTarget)
    return (void*)MySyscall(pDragDockObject_GetDragTarget, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_SetDragTarget)
void
ragDockObject_SetDragTarget(TDragDockObject AObj, void* AValue) {
    GET_FUNC_ADDR(DragDockObject_SetDragTarget)
    MySyscall(pDragDockObject_SetDragTarget, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_GetDragTargetPos)
TPoint
ragDockObject_GetDragTargetPos(TDragDockObject AObj) {
    GET_FUNC_ADDR(DragDockObject_GetDragTargetPos)
    TPoint result;
    MySyscall(pDragDockObject_GetDragTargetPos, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DragDockObject_SetDragTargetPos)
void
ragDockObject_SetDragTargetPos(TDragDockObject AObj, TPoint AValue) {
    GET_FUNC_ADDR(DragDockObject_SetDragTargetPos)
    MySyscall(pDragDockObject_SetDragTargetPos, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_GetDropped)
BOOL
ragDockObject_GetDropped(TDragDockObject AObj) {
    GET_FUNC_ADDR(DragDockObject_GetDropped)
    return (BOOL)MySyscall(pDragDockObject_GetDropped, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DragDockObject_StaticClassType)
TClass
ragDockObject_StaticClassType() {
    GET_FUNC_ADDR(DragDockObject_StaticClassType)
    return (TClass)MySyscall(pDragDockObject_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TStringGrid-------------------

DEFINE_FUNC_PTR(StringGrid_Create)
TStringGrid
StringGrid_Create(TComponent AOwner) {
    GET_FUNC_ADDR(StringGrid_Create)
    return (TStringGrid)MySyscall(pStringGrid_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_Free)
void
StringGrid_Free(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_Free)
    MySyscall(pStringGrid_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_DeleteColRow)
void
StringGrid_DeleteColRow(TStringGrid AObj, BOOL IsColumn, int32_t index) {
    GET_FUNC_ADDR(StringGrid_DeleteColRow)
    MySyscall(pStringGrid_DeleteColRow, 3, AObj, IsColumn, index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_DeleteCol)
void
StringGrid_DeleteCol(TStringGrid AObj, int32_t Index) {
    GET_FUNC_ADDR(StringGrid_DeleteCol)
    MySyscall(pStringGrid_DeleteCol, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_DeleteRow)
void
StringGrid_DeleteRow(TStringGrid AObj, int32_t Index) {
    GET_FUNC_ADDR(StringGrid_DeleteRow)
    MySyscall(pStringGrid_DeleteRow, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_ExchangeColRow)
void
StringGrid_ExchangeColRow(TStringGrid AObj, BOOL IsColumn, int32_t index, int32_t WithIndex) {
    GET_FUNC_ADDR(StringGrid_ExchangeColRow)
    MySyscall(pStringGrid_ExchangeColRow, 4, AObj, IsColumn, index, WithIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_InsertColRow)
void
StringGrid_InsertColRow(TStringGrid AObj, BOOL IsColumn, int32_t index) {
    GET_FUNC_ADDR(StringGrid_InsertColRow)
    MySyscall(pStringGrid_InsertColRow, 3, AObj, IsColumn, index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_MoveColRow)
void
StringGrid_MoveColRow(TStringGrid AObj, BOOL IsColumn, int32_t FromIndex, int32_t ToIndex) {
    GET_FUNC_ADDR(StringGrid_MoveColRow)
    MySyscall(pStringGrid_MoveColRow, 4, AObj, IsColumn, FromIndex, ToIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SortColRow)
void
StringGrid_SortColRow(TStringGrid AObj, BOOL IsColumn, int32_t Index, int32_t FromIndex, int32_t ToIndex) {
    GET_FUNC_ADDR(StringGrid_SortColRow)
    MySyscall(pStringGrid_SortColRow, 5, AObj, IsColumn, Index, FromIndex, ToIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_EditorByStyle)
TWinControl
StringGrid_EditorByStyle(TStringGrid AObj, TColumnButtonStyle Style) {
    GET_FUNC_ADDR(StringGrid_EditorByStyle)
    return (TWinControl)MySyscall(pStringGrid_EditorByStyle, 2, AObj, Style ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_EditorKeyDown)
void
StringGrid_EditorKeyDown(TStringGrid AObj, TObject Sender, uint16_t* Key, TShiftState Shift) {
    GET_FUNC_ADDR(StringGrid_EditorKeyDown)
    MySyscall(pStringGrid_EditorKeyDown, 4, AObj, Sender, Key, Shift ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_EditorKeyPress)
void
StringGrid_EditorKeyPress(TStringGrid AObj, TObject Sender, Char* Key) {
    GET_FUNC_ADDR(StringGrid_EditorKeyPress)
    MySyscall(pStringGrid_EditorKeyPress, 3, AObj, Sender, Key ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_EditorKeyUp)
void
StringGrid_EditorKeyUp(TStringGrid AObj, TObject Sender, uint16_t* key, TShiftState shift) {
    GET_FUNC_ADDR(StringGrid_EditorKeyUp)
    MySyscall(pStringGrid_EditorKeyUp, 4, AObj, Sender, key, shift ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_EditorTextChanged)
void
StringGrid_EditorTextChanged(TStringGrid AObj, int32_t aCol, int32_t aRow, CChar char* aText) {
    GET_FUNC_ADDR(StringGrid_EditorTextChanged)
    MySyscall(pStringGrid_EditorTextChanged, 4, AObj, aCol, aRow, aText ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_EditingDone)
void
StringGrid_EditingDone(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_EditingDone)
    MySyscall(pStringGrid_EditingDone, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_AutoAdjustColumns)
void
StringGrid_AutoAdjustColumns(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_AutoAdjustColumns)
    MySyscall(pStringGrid_AutoAdjustColumns, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_CellRect)
TRect
StringGrid_CellRect(TStringGrid AObj, int32_t ACol, int32_t ARow) {
    GET_FUNC_ADDR(StringGrid_CellRect)
    TRect result;
    MySyscall(pStringGrid_CellRect, 4, AObj, ACol, ARow, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StringGrid_CellToGridZone)
TGridZone
StringGrid_CellToGridZone(TStringGrid AObj, int32_t aCol, int32_t aRow) {
    GET_FUNC_ADDR(StringGrid_CellToGridZone)
    return (TGridZone)MySyscall(pStringGrid_CellToGridZone, 3, AObj, aCol, aRow ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_CheckPosition)
void
StringGrid_CheckPosition(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_CheckPosition)
    MySyscall(pStringGrid_CheckPosition, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_ClearCols)
BOOL
StringGrid_ClearCols(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_ClearCols)
    return (BOOL)MySyscall(pStringGrid_ClearCols, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_ClearRows)
BOOL
StringGrid_ClearRows(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_ClearRows)
    return (BOOL)MySyscall(pStringGrid_ClearRows, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_Clear)
void
StringGrid_Clear(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_Clear)
    MySyscall(pStringGrid_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_ClearSelections)
void
StringGrid_ClearSelections(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_ClearSelections)
    MySyscall(pStringGrid_ClearSelections, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_HasMultiSelection)
BOOL
StringGrid_HasMultiSelection(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_HasMultiSelection)
    return (BOOL)MySyscall(pStringGrid_HasMultiSelection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_InvalidateCell)
void
StringGrid_InvalidateCell(TStringGrid AObj, int32_t aCol, int32_t aRow) {
    GET_FUNC_ADDR(StringGrid_InvalidateCell)
    MySyscall(pStringGrid_InvalidateCell, 3, AObj, aCol, aRow ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_InvalidateCol)
void
StringGrid_InvalidateCol(TStringGrid AObj, int32_t ACol) {
    GET_FUNC_ADDR(StringGrid_InvalidateCol)
    MySyscall(pStringGrid_InvalidateCol, 2, AObj, ACol ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_InvalidateRange)
void
StringGrid_InvalidateRange(TStringGrid AObj, TRect aRange) {
    GET_FUNC_ADDR(StringGrid_InvalidateRange)
    MySyscall(pStringGrid_InvalidateRange, 2, AObj, &aRange ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_InvalidateRow)
void
StringGrid_InvalidateRow(TStringGrid AObj, int32_t ARow) {
    GET_FUNC_ADDR(StringGrid_InvalidateRow)
    MySyscall(pStringGrid_InvalidateRow, 2, AObj, ARow ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_IsCellVisible)
BOOL
StringGrid_IsCellVisible(TStringGrid AObj, int32_t aCol, int32_t aRow) {
    GET_FUNC_ADDR(StringGrid_IsCellVisible)
    return (BOOL)MySyscall(pStringGrid_IsCellVisible, 3, AObj, aCol, aRow ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_IsFixedCellVisible)
BOOL
StringGrid_IsFixedCellVisible(TStringGrid AObj, int32_t aCol, int32_t aRow) {
    GET_FUNC_ADDR(StringGrid_IsFixedCellVisible)
    return (BOOL)MySyscall(pStringGrid_IsFixedCellVisible, 3, AObj, aCol, aRow ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_MouseCoord)
TGridCoord
StringGrid_MouseCoord(TStringGrid AObj, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(StringGrid_MouseCoord)
    TGridCoord result;
    MySyscall(pStringGrid_MouseCoord, 4, AObj, X, Y, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StringGrid_MouseToCell)
TPoint
StringGrid_MouseToCell(TStringGrid AObj, TPoint Mouse) {
    GET_FUNC_ADDR(StringGrid_MouseToCell)
    TPoint result;
    MySyscall(pStringGrid_MouseToCell, 3, AObj, &Mouse, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StringGrid_MouseToLogcell)
TPoint
StringGrid_MouseToLogcell(TStringGrid AObj, TPoint Mouse) {
    GET_FUNC_ADDR(StringGrid_MouseToLogcell)
    TPoint result;
    MySyscall(pStringGrid_MouseToLogcell, 3, AObj, &Mouse, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StringGrid_MouseToGridZone)
TGridZone
StringGrid_MouseToGridZone(TStringGrid AObj, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(StringGrid_MouseToGridZone)
    return (TGridZone)MySyscall(pStringGrid_MouseToGridZone, 3, AObj, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_CanFocus)
BOOL
StringGrid_CanFocus(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_CanFocus)
    return (BOOL)MySyscall(pStringGrid_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_ContainsControl)
BOOL
StringGrid_ContainsControl(TStringGrid AObj, TControl Control) {
    GET_FUNC_ADDR(StringGrid_ContainsControl)
    return (BOOL)MySyscall(pStringGrid_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_ControlAtPos)
TControl
StringGrid_ControlAtPos(TStringGrid AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(StringGrid_ControlAtPos)
    return (TControl)MySyscall(pStringGrid_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_DisableAlign)
void
StringGrid_DisableAlign(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_DisableAlign)
    MySyscall(pStringGrid_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_EnableAlign)
void
StringGrid_EnableAlign(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_EnableAlign)
    MySyscall(pStringGrid_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_FindChildControl)
TControl
StringGrid_FindChildControl(TStringGrid AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(StringGrid_FindChildControl)
    return (TControl)MySyscall(pStringGrid_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_FlipChildren)
void
StringGrid_FlipChildren(TStringGrid AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(StringGrid_FlipChildren)
    MySyscall(pStringGrid_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_Focused)
BOOL
StringGrid_Focused(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_Focused)
    return (BOOL)MySyscall(pStringGrid_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_HandleAllocated)
BOOL
StringGrid_HandleAllocated(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_HandleAllocated)
    return (BOOL)MySyscall(pStringGrid_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_InsertControl)
void
StringGrid_InsertControl(TStringGrid AObj, TControl AControl) {
    GET_FUNC_ADDR(StringGrid_InsertControl)
    MySyscall(pStringGrid_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_Invalidate)
void
StringGrid_Invalidate(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_Invalidate)
    MySyscall(pStringGrid_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_PaintTo)
void
StringGrid_PaintTo(TStringGrid AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(StringGrid_PaintTo)
    MySyscall(pStringGrid_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_RemoveControl)
void
StringGrid_RemoveControl(TStringGrid AObj, TControl AControl) {
    GET_FUNC_ADDR(StringGrid_RemoveControl)
    MySyscall(pStringGrid_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_Realign)
void
StringGrid_Realign(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_Realign)
    MySyscall(pStringGrid_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_Repaint)
void
StringGrid_Repaint(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_Repaint)
    MySyscall(pStringGrid_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_ScaleBy)
void
StringGrid_ScaleBy(TStringGrid AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(StringGrid_ScaleBy)
    MySyscall(pStringGrid_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_ScrollBy)
void
StringGrid_ScrollBy(TStringGrid AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(StringGrid_ScrollBy)
    MySyscall(pStringGrid_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetBounds)
void
StringGrid_SetBounds(TStringGrid AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(StringGrid_SetBounds)
    MySyscall(pStringGrid_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetFocus)
void
StringGrid_SetFocus(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_SetFocus)
    MySyscall(pStringGrid_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_Update)
void
StringGrid_Update(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_Update)
    MySyscall(pStringGrid_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_BringToFront)
void
StringGrid_BringToFront(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_BringToFront)
    MySyscall(pStringGrid_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_ClientToScreen)
TPoint
StringGrid_ClientToScreen(TStringGrid AObj, TPoint Point) {
    GET_FUNC_ADDR(StringGrid_ClientToScreen)
    TPoint result;
    MySyscall(pStringGrid_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StringGrid_ClientToParent)
TPoint
StringGrid_ClientToParent(TStringGrid AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(StringGrid_ClientToParent)
    TPoint result;
    MySyscall(pStringGrid_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StringGrid_Dragging)
BOOL
StringGrid_Dragging(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_Dragging)
    return (BOOL)MySyscall(pStringGrid_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_HasParent)
BOOL
StringGrid_HasParent(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_HasParent)
    return (BOOL)MySyscall(pStringGrid_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_Hide)
void
StringGrid_Hide(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_Hide)
    MySyscall(pStringGrid_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_Perform)
intptr_t
StringGrid_Perform(TStringGrid AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(StringGrid_Perform)
    return (intptr_t)MySyscall(pStringGrid_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_Refresh)
void
StringGrid_Refresh(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_Refresh)
    MySyscall(pStringGrid_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_ScreenToClient)
TPoint
StringGrid_ScreenToClient(TStringGrid AObj, TPoint Point) {
    GET_FUNC_ADDR(StringGrid_ScreenToClient)
    TPoint result;
    MySyscall(pStringGrid_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StringGrid_ParentToClient)
TPoint
StringGrid_ParentToClient(TStringGrid AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(StringGrid_ParentToClient)
    TPoint result;
    MySyscall(pStringGrid_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StringGrid_SendToBack)
void
StringGrid_SendToBack(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_SendToBack)
    MySyscall(pStringGrid_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_Show)
void
StringGrid_Show(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_Show)
    MySyscall(pStringGrid_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetTextBuf)
int32_t
StringGrid_GetTextBuf(TStringGrid AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(StringGrid_GetTextBuf)
    return (int32_t)MySyscall(pStringGrid_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetTextLen)
int32_t
StringGrid_GetTextLen(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetTextLen)
    return (int32_t)MySyscall(pStringGrid_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetTextBuf)
void
StringGrid_SetTextBuf(TStringGrid AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(StringGrid_SetTextBuf)
    MySyscall(pStringGrid_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_FindComponent)
TComponent
StringGrid_FindComponent(TStringGrid AObj, CChar char* AName) {
    GET_FUNC_ADDR(StringGrid_FindComponent)
    return (TComponent)MySyscall(pStringGrid_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetNamePath)
char*
StringGrid_GetNamePath(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetNamePath)
    return (char*)MySyscall(pStringGrid_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_Assign)
void
StringGrid_Assign(TStringGrid AObj, TObject Source) {
    GET_FUNC_ADDR(StringGrid_Assign)
    MySyscall(pStringGrid_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_ClassType)
TClass
StringGrid_ClassType(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_ClassType)
    return (TClass)MySyscall(pStringGrid_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_ClassName)
char*
StringGrid_ClassName(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_ClassName)
    return (char*)MySyscall(pStringGrid_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_InstanceSize)
int32_t
StringGrid_InstanceSize(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_InstanceSize)
    return (int32_t)MySyscall(pStringGrid_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_InheritsFrom)
BOOL
StringGrid_InheritsFrom(TStringGrid AObj, TClass AClass) {
    GET_FUNC_ADDR(StringGrid_InheritsFrom)
    return (BOOL)MySyscall(pStringGrid_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_Equals)
BOOL
StringGrid_Equals(TStringGrid AObj, TObject Obj) {
    GET_FUNC_ADDR(StringGrid_Equals)
    return (BOOL)MySyscall(pStringGrid_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetHashCode)
int32_t
StringGrid_GetHashCode(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetHashCode)
    return (int32_t)MySyscall(pStringGrid_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_ToString)
char*
StringGrid_ToString(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_ToString)
    return (char*)MySyscall(pStringGrid_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_AnchorToNeighbour)
void
StringGrid_AnchorToNeighbour(TStringGrid AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(StringGrid_AnchorToNeighbour)
    MySyscall(pStringGrid_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_AnchorParallel)
void
StringGrid_AnchorParallel(TStringGrid AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(StringGrid_AnchorParallel)
    MySyscall(pStringGrid_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_AnchorHorizontalCenterTo)
void
StringGrid_AnchorHorizontalCenterTo(TStringGrid AObj, TControl ASibling) {
    GET_FUNC_ADDR(StringGrid_AnchorHorizontalCenterTo)
    MySyscall(pStringGrid_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_AnchorVerticalCenterTo)
void
StringGrid_AnchorVerticalCenterTo(TStringGrid AObj, TControl ASibling) {
    GET_FUNC_ADDR(StringGrid_AnchorVerticalCenterTo)
    MySyscall(pStringGrid_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_AnchorSame)
void
StringGrid_AnchorSame(TStringGrid AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(StringGrid_AnchorSame)
    MySyscall(pStringGrid_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_AnchorAsAlign)
void
StringGrid_AnchorAsAlign(TStringGrid AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(StringGrid_AnchorAsAlign)
    MySyscall(pStringGrid_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_AnchorClient)
void
StringGrid_AnchorClient(TStringGrid AObj, int32_t ASpace) {
    GET_FUNC_ADDR(StringGrid_AnchorClient)
    MySyscall(pStringGrid_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_ScaleDesignToForm)
int32_t
StringGrid_ScaleDesignToForm(TStringGrid AObj, int32_t ASize) {
    GET_FUNC_ADDR(StringGrid_ScaleDesignToForm)
    return (int32_t)MySyscall(pStringGrid_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_ScaleFormToDesign)
int32_t
StringGrid_ScaleFormToDesign(TStringGrid AObj, int32_t ASize) {
    GET_FUNC_ADDR(StringGrid_ScaleFormToDesign)
    return (int32_t)MySyscall(pStringGrid_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_Scale96ToForm)
int32_t
StringGrid_Scale96ToForm(TStringGrid AObj, int32_t ASize) {
    GET_FUNC_ADDR(StringGrid_Scale96ToForm)
    return (int32_t)MySyscall(pStringGrid_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_ScaleFormTo96)
int32_t
StringGrid_ScaleFormTo96(TStringGrid AObj, int32_t ASize) {
    GET_FUNC_ADDR(StringGrid_ScaleFormTo96)
    return (int32_t)MySyscall(pStringGrid_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_Scale96ToFont)
int32_t
StringGrid_Scale96ToFont(TStringGrid AObj, int32_t ASize) {
    GET_FUNC_ADDR(StringGrid_Scale96ToFont)
    return (int32_t)MySyscall(pStringGrid_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_ScaleFontTo96)
int32_t
StringGrid_ScaleFontTo96(TStringGrid AObj, int32_t ASize) {
    GET_FUNC_ADDR(StringGrid_ScaleFontTo96)
    return (int32_t)MySyscall(pStringGrid_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_ScaleScreenToFont)
int32_t
StringGrid_ScaleScreenToFont(TStringGrid AObj, int32_t ASize) {
    GET_FUNC_ADDR(StringGrid_ScaleScreenToFont)
    return (int32_t)MySyscall(pStringGrid_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_ScaleFontToScreen)
int32_t
StringGrid_ScaleFontToScreen(TStringGrid AObj, int32_t ASize) {
    GET_FUNC_ADDR(StringGrid_ScaleFontToScreen)
    return (int32_t)MySyscall(pStringGrid_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_Scale96ToScreen)
int32_t
StringGrid_Scale96ToScreen(TStringGrid AObj, int32_t ASize) {
    GET_FUNC_ADDR(StringGrid_Scale96ToScreen)
    return (int32_t)MySyscall(pStringGrid_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_ScaleScreenTo96)
int32_t
StringGrid_ScaleScreenTo96(TStringGrid AObj, int32_t ASize) {
    GET_FUNC_ADDR(StringGrid_ScaleScreenTo96)
    return (int32_t)MySyscall(pStringGrid_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_AutoAdjustLayout)
void
StringGrid_AutoAdjustLayout(TStringGrid AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(StringGrid_AutoAdjustLayout)
    MySyscall(pStringGrid_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_FixDesignFontsPPI)
void
StringGrid_FixDesignFontsPPI(TStringGrid AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(StringGrid_FixDesignFontsPPI)
    MySyscall(pStringGrid_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_ScaleFontsPPI)
void
StringGrid_ScaleFontsPPI(TStringGrid AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(StringGrid_ScaleFontsPPI)
    MySyscall(pStringGrid_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetSelectedColor)
TColor
StringGrid_GetSelectedColor(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetSelectedColor)
    return (TColor)MySyscall(pStringGrid_GetSelectedColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetSelectedColor)
void
StringGrid_SetSelectedColor(TStringGrid AObj, TColor AValue) {
    GET_FUNC_ADDR(StringGrid_SetSelectedColor)
    MySyscall(pStringGrid_SetSelectedColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetSelectedColumn)
TGridColumn
StringGrid_GetSelectedColumn(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetSelectedColumn)
    return (TGridColumn)MySyscall(pStringGrid_GetSelectedColumn, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetStrictSort)
BOOL
StringGrid_GetStrictSort(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetStrictSort)
    return (BOOL)MySyscall(pStringGrid_GetStrictSort, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetStrictSort)
void
StringGrid_SetStrictSort(TStringGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(StringGrid_SetStrictSort)
    MySyscall(pStringGrid_SetStrictSort, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetFixedHotColor)
TColor
StringGrid_GetFixedHotColor(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetFixedHotColor)
    return (TColor)MySyscall(pStringGrid_GetFixedHotColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetFixedHotColor)
void
StringGrid_SetFixedHotColor(TStringGrid AObj, TColor AValue) {
    GET_FUNC_ADDR(StringGrid_SetFixedHotColor)
    MySyscall(pStringGrid_SetFixedHotColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetFastEditing)
BOOL
StringGrid_GetFastEditing(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetFastEditing)
    return (BOOL)MySyscall(pStringGrid_GetFastEditing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetFastEditing)
void
StringGrid_SetFastEditing(TStringGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(StringGrid_SetFastEditing)
    MySyscall(pStringGrid_SetFastEditing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetFixedGridLineColor)
TColor
StringGrid_GetFixedGridLineColor(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetFixedGridLineColor)
    return (TColor)MySyscall(pStringGrid_GetFixedGridLineColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetFixedGridLineColor)
void
StringGrid_SetFixedGridLineColor(TStringGrid AObj, TColor AValue) {
    GET_FUNC_ADDR(StringGrid_SetFixedGridLineColor)
    MySyscall(pStringGrid_SetFixedGridLineColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetFocusColor)
TColor
StringGrid_GetFocusColor(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetFocusColor)
    return (TColor)MySyscall(pStringGrid_GetFocusColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetFocusColor)
void
StringGrid_SetFocusColor(TStringGrid AObj, TColor AValue) {
    GET_FUNC_ADDR(StringGrid_SetFocusColor)
    MySyscall(pStringGrid_SetFocusColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetFocusRectVisible)
BOOL
StringGrid_GetFocusRectVisible(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetFocusRectVisible)
    return (BOOL)MySyscall(pStringGrid_GetFocusRectVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetFocusRectVisible)
void
StringGrid_SetFocusRectVisible(TStringGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(StringGrid_SetFocusRectVisible)
    MySyscall(pStringGrid_SetFocusRectVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetGridLineColor)
TColor
StringGrid_GetGridLineColor(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetGridLineColor)
    return (TColor)MySyscall(pStringGrid_GetGridLineColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetGridLineColor)
void
StringGrid_SetGridLineColor(TStringGrid AObj, TColor AValue) {
    GET_FUNC_ADDR(StringGrid_SetGridLineColor)
    MySyscall(pStringGrid_SetGridLineColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetGridLineStyle)
TPenStyle
StringGrid_GetGridLineStyle(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetGridLineStyle)
    return (TPenStyle)MySyscall(pStringGrid_GetGridLineStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetGridLineStyle)
void
StringGrid_SetGridLineStyle(TStringGrid AObj, TPenStyle AValue) {
    GET_FUNC_ADDR(StringGrid_SetGridLineStyle)
    MySyscall(pStringGrid_SetGridLineStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetEditor)
TWinControl
StringGrid_GetEditor(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetEditor)
    return (TWinControl)MySyscall(pStringGrid_GetEditor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetEditor)
void
StringGrid_SetEditor(TStringGrid AObj, TWinControl AValue) {
    GET_FUNC_ADDR(StringGrid_SetEditor)
    MySyscall(pStringGrid_SetEditor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetEditorBorderStyle)
TBorderStyle
StringGrid_GetEditorBorderStyle(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetEditorBorderStyle)
    return (TBorderStyle)MySyscall(pStringGrid_GetEditorBorderStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetEditorBorderStyle)
void
StringGrid_SetEditorBorderStyle(TStringGrid AObj, TBorderStyle AValue) {
    GET_FUNC_ADDR(StringGrid_SetEditorBorderStyle)
    MySyscall(pStringGrid_SetEditorBorderStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetEditorMode)
BOOL
StringGrid_GetEditorMode(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetEditorMode)
    return (BOOL)MySyscall(pStringGrid_GetEditorMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetEditorMode)
void
StringGrid_SetEditorMode(TStringGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(StringGrid_SetEditorMode)
    MySyscall(pStringGrid_SetEditorMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetSortOrder)
TSortOrder
StringGrid_GetSortOrder(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetSortOrder)
    return (TSortOrder)MySyscall(pStringGrid_GetSortOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetSortOrder)
void
StringGrid_SetSortOrder(TStringGrid AObj, TSortOrder AValue) {
    GET_FUNC_ADDR(StringGrid_SetSortOrder)
    MySyscall(pStringGrid_SetSortOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetSortColumn)
int32_t
StringGrid_GetSortColumn(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetSortColumn)
    return (int32_t)MySyscall(pStringGrid_GetSortColumn, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnAfterSelection)
void
StringGrid_SetOnAfterSelection(TStringGrid AObj, TOnSelectEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnAfterSelection)
    MySyscall(pStringGrid_SetOnAfterSelection, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnBeforeSelection)
void
StringGrid_SetOnBeforeSelection(TStringGrid AObj, TOnSelectEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnBeforeSelection)
    MySyscall(pStringGrid_SetOnBeforeSelection, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnButtonClick)
void
StringGrid_SetOnButtonClick(TStringGrid AObj, TOnSelectEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnButtonClick)
    MySyscall(pStringGrid_SetOnButtonClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnCheckboxToggled)
void
StringGrid_SetOnCheckboxToggled(TStringGrid AObj, TToggledCheckboxEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnCheckboxToggled)
    MySyscall(pStringGrid_SetOnCheckboxToggled, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnColRowDeleted)
void
StringGrid_SetOnColRowDeleted(TStringGrid AObj, TGridOperationEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnColRowDeleted)
    MySyscall(pStringGrid_SetOnColRowDeleted, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnColRowExchanged)
void
StringGrid_SetOnColRowExchanged(TStringGrid AObj, TGridOperationEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnColRowExchanged)
    MySyscall(pStringGrid_SetOnColRowExchanged, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnColRowInserted)
void
StringGrid_SetOnColRowInserted(TStringGrid AObj, TGridOperationEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnColRowInserted)
    MySyscall(pStringGrid_SetOnColRowInserted, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnColRowMoved)
void
StringGrid_SetOnColRowMoved(TStringGrid AObj, TGridOperationEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnColRowMoved)
    MySyscall(pStringGrid_SetOnColRowMoved, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnCompareCells)
void
StringGrid_SetOnCompareCells(TStringGrid AObj, TOnCompareCells AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnCompareCells)
    MySyscall(pStringGrid_SetOnCompareCells, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnEditingDone)
void
StringGrid_SetOnEditingDone(TStringGrid AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnEditingDone)
    MySyscall(pStringGrid_SetOnEditingDone, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnGetCellHint)
void
StringGrid_SetOnGetCellHint(TStringGrid AObj, TGetCellHintEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnGetCellHint)
    MySyscall(pStringGrid_SetOnGetCellHint, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnGetCheckboxState)
void
StringGrid_SetOnGetCheckboxState(TStringGrid AObj, TGetCheckboxStateEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnGetCheckboxState)
    MySyscall(pStringGrid_SetOnGetCheckboxState, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnSetCheckboxState)
void
StringGrid_SetOnSetCheckboxState(TStringGrid AObj, TSetCheckboxStateEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnSetCheckboxState)
    MySyscall(pStringGrid_SetOnSetCheckboxState, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnHeaderClick)
void
StringGrid_SetOnHeaderClick(TStringGrid AObj, THdrEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnHeaderClick)
    MySyscall(pStringGrid_SetOnHeaderClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnHeaderSized)
void
StringGrid_SetOnHeaderSized(TStringGrid AObj, THdrEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnHeaderSized)
    MySyscall(pStringGrid_SetOnHeaderSized, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnHeaderSizing)
void
StringGrid_SetOnHeaderSizing(TStringGrid AObj, THeaderSizingEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnHeaderSizing)
    MySyscall(pStringGrid_SetOnHeaderSizing, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnPickListSelect)
void
StringGrid_SetOnPickListSelect(TStringGrid AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnPickListSelect)
    MySyscall(pStringGrid_SetOnPickListSelect, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnSelection)
void
StringGrid_SetOnSelection(TStringGrid AObj, TOnSelectEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnSelection)
    MySyscall(pStringGrid_SetOnSelection, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnSelectEditor)
void
StringGrid_SetOnSelectEditor(TStringGrid AObj, TSelectEditorEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnSelectEditor)
    MySyscall(pStringGrid_SetOnSelectEditor, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnUserCheckboxBitmap)
void
StringGrid_SetOnUserCheckboxBitmap(TStringGrid AObj, TUserCheckBoxBitmapEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnUserCheckboxBitmap)
    MySyscall(pStringGrid_SetOnUserCheckboxBitmap, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnValidateEntry)
void
StringGrid_SetOnValidateEntry(TStringGrid AObj, TValidateEntryEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnValidateEntry)
    MySyscall(pStringGrid_SetOnValidateEntry, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnPrepareCanvas)
void
StringGrid_SetOnPrepareCanvas(TStringGrid AObj, TOnPrepareCanvasEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnPrepareCanvas)
    MySyscall(pStringGrid_SetOnPrepareCanvas, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetAlternateColor)
TColor
StringGrid_GetAlternateColor(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetAlternateColor)
    return (TColor)MySyscall(pStringGrid_GetAlternateColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetAlternateColor)
void
StringGrid_SetAlternateColor(TStringGrid AObj, TColor AValue) {
    GET_FUNC_ADDR(StringGrid_SetAlternateColor)
    MySyscall(pStringGrid_SetAlternateColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetAutoAdvance)
TAutoAdvance
StringGrid_GetAutoAdvance(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetAutoAdvance)
    return (TAutoAdvance)MySyscall(pStringGrid_GetAutoAdvance, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetAutoAdvance)
void
StringGrid_SetAutoAdvance(TStringGrid AObj, TAutoAdvance AValue) {
    GET_FUNC_ADDR(StringGrid_SetAutoAdvance)
    MySyscall(pStringGrid_SetAutoAdvance, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetAutoEdit)
BOOL
StringGrid_GetAutoEdit(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetAutoEdit)
    return (BOOL)MySyscall(pStringGrid_GetAutoEdit, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetAutoEdit)
void
StringGrid_SetAutoEdit(TStringGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(StringGrid_SetAutoEdit)
    MySyscall(pStringGrid_SetAutoEdit, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetAutoFillColumns)
BOOL
StringGrid_GetAutoFillColumns(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetAutoFillColumns)
    return (BOOL)MySyscall(pStringGrid_GetAutoFillColumns, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetAutoFillColumns)
void
StringGrid_SetAutoFillColumns(TStringGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(StringGrid_SetAutoFillColumns)
    MySyscall(pStringGrid_SetAutoFillColumns, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetCellHintPriority)
TCellHintPriority
StringGrid_GetCellHintPriority(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetCellHintPriority)
    return (TCellHintPriority)MySyscall(pStringGrid_GetCellHintPriority, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetCellHintPriority)
void
StringGrid_SetCellHintPriority(TStringGrid AObj, TCellHintPriority AValue) {
    GET_FUNC_ADDR(StringGrid_SetCellHintPriority)
    MySyscall(pStringGrid_SetCellHintPriority, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetColumnClickSorts)
BOOL
StringGrid_GetColumnClickSorts(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetColumnClickSorts)
    return (BOOL)MySyscall(pStringGrid_GetColumnClickSorts, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetColumnClickSorts)
void
StringGrid_SetColumnClickSorts(TStringGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(StringGrid_SetColumnClickSorts)
    MySyscall(pStringGrid_SetColumnClickSorts, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetColumns)
TGridColumns
StringGrid_GetColumns(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetColumns)
    return (TGridColumns)MySyscall(pStringGrid_GetColumns, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetColumns)
void
StringGrid_SetColumns(TStringGrid AObj, TGridColumns AValue) {
    GET_FUNC_ADDR(StringGrid_SetColumns)
    MySyscall(pStringGrid_SetColumns, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetExtendedSelect)
BOOL
StringGrid_GetExtendedSelect(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetExtendedSelect)
    return (BOOL)MySyscall(pStringGrid_GetExtendedSelect, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetExtendedSelect)
void
StringGrid_SetExtendedSelect(TStringGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(StringGrid_SetExtendedSelect)
    MySyscall(pStringGrid_SetExtendedSelect, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetFlat)
BOOL
StringGrid_GetFlat(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetFlat)
    return (BOOL)MySyscall(pStringGrid_GetFlat, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetFlat)
void
StringGrid_SetFlat(TStringGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(StringGrid_SetFlat)
    MySyscall(pStringGrid_SetFlat, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetHeaderHotZones)
TGridZoneSet
StringGrid_GetHeaderHotZones(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetHeaderHotZones)
    return (TGridZoneSet)MySyscall(pStringGrid_GetHeaderHotZones, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetHeaderHotZones)
void
StringGrid_SetHeaderHotZones(TStringGrid AObj, TGridZoneSet AValue) {
    GET_FUNC_ADDR(StringGrid_SetHeaderHotZones)
    MySyscall(pStringGrid_SetHeaderHotZones, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetHeaderPushZones)
TGridZoneSet
StringGrid_GetHeaderPushZones(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetHeaderPushZones)
    return (TGridZoneSet)MySyscall(pStringGrid_GetHeaderPushZones, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetHeaderPushZones)
void
StringGrid_SetHeaderPushZones(TStringGrid AObj, TGridZoneSet AValue) {
    GET_FUNC_ADDR(StringGrid_SetHeaderPushZones)
    MySyscall(pStringGrid_SetHeaderPushZones, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetImageIndexSortAsc)
int32_t
StringGrid_GetImageIndexSortAsc(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetImageIndexSortAsc)
    return (int32_t)MySyscall(pStringGrid_GetImageIndexSortAsc, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetImageIndexSortAsc)
void
StringGrid_SetImageIndexSortAsc(TStringGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(StringGrid_SetImageIndexSortAsc)
    MySyscall(pStringGrid_SetImageIndexSortAsc, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetImageIndexSortDesc)
int32_t
StringGrid_GetImageIndexSortDesc(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetImageIndexSortDesc)
    return (int32_t)MySyscall(pStringGrid_GetImageIndexSortDesc, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetImageIndexSortDesc)
void
StringGrid_SetImageIndexSortDesc(TStringGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(StringGrid_SetImageIndexSortDesc)
    MySyscall(pStringGrid_SetImageIndexSortDesc, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetMouseWheelOption)
TMouseWheelOption
StringGrid_GetMouseWheelOption(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetMouseWheelOption)
    return (TMouseWheelOption)MySyscall(pStringGrid_GetMouseWheelOption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetMouseWheelOption)
void
StringGrid_SetMouseWheelOption(TStringGrid AObj, TMouseWheelOption AValue) {
    GET_FUNC_ADDR(StringGrid_SetMouseWheelOption)
    MySyscall(pStringGrid_SetMouseWheelOption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetOptions2)
TGridOptions2
StringGrid_GetOptions2(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetOptions2)
    return (TGridOptions2)MySyscall(pStringGrid_GetOptions2, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOptions2)
void
StringGrid_SetOptions2(TStringGrid AObj, TGridOptions2 AValue) {
    GET_FUNC_ADDR(StringGrid_SetOptions2)
    MySyscall(pStringGrid_SetOptions2, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetRangeSelectMode)
TRangeSelectMode
StringGrid_GetRangeSelectMode(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetRangeSelectMode)
    return (TRangeSelectMode)MySyscall(pStringGrid_GetRangeSelectMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetRangeSelectMode)
void
StringGrid_SetRangeSelectMode(TStringGrid AObj, TRangeSelectMode AValue) {
    GET_FUNC_ADDR(StringGrid_SetRangeSelectMode)
    MySyscall(pStringGrid_SetRangeSelectMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetTabAdvance)
TAutoAdvance
StringGrid_GetTabAdvance(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetTabAdvance)
    return (TAutoAdvance)MySyscall(pStringGrid_GetTabAdvance, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetTabAdvance)
void
StringGrid_SetTabAdvance(TStringGrid AObj, TAutoAdvance AValue) {
    GET_FUNC_ADDR(StringGrid_SetTabAdvance)
    MySyscall(pStringGrid_SetTabAdvance, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetTitleFont)
TFont
StringGrid_GetTitleFont(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetTitleFont)
    return (TFont)MySyscall(pStringGrid_GetTitleFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetTitleFont)
void
StringGrid_SetTitleFont(TStringGrid AObj, TFont AValue) {
    GET_FUNC_ADDR(StringGrid_SetTitleFont)
    MySyscall(pStringGrid_SetTitleFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetTitleImageList)
TImageList
StringGrid_GetTitleImageList(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetTitleImageList)
    return (TImageList)MySyscall(pStringGrid_GetTitleImageList, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetTitleImageList)
void
StringGrid_SetTitleImageList(TStringGrid AObj, TImageList AValue) {
    GET_FUNC_ADDR(StringGrid_SetTitleImageList)
    MySyscall(pStringGrid_SetTitleImageList, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetTitleStyle)
TTitleStyle
StringGrid_GetTitleStyle(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetTitleStyle)
    return (TTitleStyle)MySyscall(pStringGrid_GetTitleStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetTitleStyle)
void
StringGrid_SetTitleStyle(TStringGrid AObj, TTitleStyle AValue) {
    GET_FUNC_ADDR(StringGrid_SetTitleStyle)
    MySyscall(pStringGrid_SetTitleStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetUseXORFeatures)
BOOL
StringGrid_GetUseXORFeatures(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetUseXORFeatures)
    return (BOOL)MySyscall(pStringGrid_GetUseXORFeatures, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetUseXORFeatures)
void
StringGrid_SetUseXORFeatures(TStringGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(StringGrid_SetUseXORFeatures)
    MySyscall(pStringGrid_SetUseXORFeatures, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetAlign)
TAlign
StringGrid_GetAlign(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetAlign)
    return (TAlign)MySyscall(pStringGrid_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetAlign)
void
StringGrid_SetAlign(TStringGrid AObj, TAlign AValue) {
    GET_FUNC_ADDR(StringGrid_SetAlign)
    MySyscall(pStringGrid_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetAnchors)
TAnchors
StringGrid_GetAnchors(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetAnchors)
    return (TAnchors)MySyscall(pStringGrid_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetAnchors)
void
StringGrid_SetAnchors(TStringGrid AObj, TAnchors AValue) {
    GET_FUNC_ADDR(StringGrid_SetAnchors)
    MySyscall(pStringGrid_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetBiDiMode)
TBiDiMode
StringGrid_GetBiDiMode(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetBiDiMode)
    return (TBiDiMode)MySyscall(pStringGrid_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetBiDiMode)
void
StringGrid_SetBiDiMode(TStringGrid AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(StringGrid_SetBiDiMode)
    MySyscall(pStringGrid_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetBorderStyle)
TBorderStyle
StringGrid_GetBorderStyle(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetBorderStyle)
    return (TBorderStyle)MySyscall(pStringGrid_GetBorderStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetBorderStyle)
void
StringGrid_SetBorderStyle(TStringGrid AObj, TBorderStyle AValue) {
    GET_FUNC_ADDR(StringGrid_SetBorderStyle)
    MySyscall(pStringGrid_SetBorderStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetColor)
TColor
StringGrid_GetColor(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetColor)
    return (TColor)MySyscall(pStringGrid_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetColor)
void
StringGrid_SetColor(TStringGrid AObj, TColor AValue) {
    GET_FUNC_ADDR(StringGrid_SetColor)
    MySyscall(pStringGrid_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetColCount)
int32_t
StringGrid_GetColCount(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetColCount)
    return (int32_t)MySyscall(pStringGrid_GetColCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetColCount)
void
StringGrid_SetColCount(TStringGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(StringGrid_SetColCount)
    MySyscall(pStringGrid_SetColCount, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetConstraints)
TSizeConstraints
StringGrid_GetConstraints(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetConstraints)
    return (TSizeConstraints)MySyscall(pStringGrid_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetConstraints)
void
StringGrid_SetConstraints(TStringGrid AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(StringGrid_SetConstraints)
    MySyscall(pStringGrid_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetDefaultColWidth)
int32_t
StringGrid_GetDefaultColWidth(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetDefaultColWidth)
    return (int32_t)MySyscall(pStringGrid_GetDefaultColWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetDefaultColWidth)
void
StringGrid_SetDefaultColWidth(TStringGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(StringGrid_SetDefaultColWidth)
    MySyscall(pStringGrid_SetDefaultColWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetDefaultRowHeight)
int32_t
StringGrid_GetDefaultRowHeight(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetDefaultRowHeight)
    return (int32_t)MySyscall(pStringGrid_GetDefaultRowHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetDefaultRowHeight)
void
StringGrid_SetDefaultRowHeight(TStringGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(StringGrid_SetDefaultRowHeight)
    MySyscall(pStringGrid_SetDefaultRowHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetDefaultDrawing)
BOOL
StringGrid_GetDefaultDrawing(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetDefaultDrawing)
    return (BOOL)MySyscall(pStringGrid_GetDefaultDrawing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetDefaultDrawing)
void
StringGrid_SetDefaultDrawing(TStringGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(StringGrid_SetDefaultDrawing)
    MySyscall(pStringGrid_SetDefaultDrawing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetDoubleBuffered)
BOOL
StringGrid_GetDoubleBuffered(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetDoubleBuffered)
    return (BOOL)MySyscall(pStringGrid_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetDoubleBuffered)
void
StringGrid_SetDoubleBuffered(TStringGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(StringGrid_SetDoubleBuffered)
    MySyscall(pStringGrid_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetDragCursor)
TCursor
StringGrid_GetDragCursor(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetDragCursor)
    return (TCursor)MySyscall(pStringGrid_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetDragCursor)
void
StringGrid_SetDragCursor(TStringGrid AObj, TCursor AValue) {
    GET_FUNC_ADDR(StringGrid_SetDragCursor)
    MySyscall(pStringGrid_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetDragKind)
TDragKind
StringGrid_GetDragKind(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetDragKind)
    return (TDragKind)MySyscall(pStringGrid_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetDragKind)
void
StringGrid_SetDragKind(TStringGrid AObj, TDragKind AValue) {
    GET_FUNC_ADDR(StringGrid_SetDragKind)
    MySyscall(pStringGrid_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetDragMode)
TDragMode
StringGrid_GetDragMode(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetDragMode)
    return (TDragMode)MySyscall(pStringGrid_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetDragMode)
void
StringGrid_SetDragMode(TStringGrid AObj, TDragMode AValue) {
    GET_FUNC_ADDR(StringGrid_SetDragMode)
    MySyscall(pStringGrid_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetEnabled)
BOOL
StringGrid_GetEnabled(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetEnabled)
    return (BOOL)MySyscall(pStringGrid_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetEnabled)
void
StringGrid_SetEnabled(TStringGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(StringGrid_SetEnabled)
    MySyscall(pStringGrid_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetFixedColor)
TColor
StringGrid_GetFixedColor(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetFixedColor)
    return (TColor)MySyscall(pStringGrid_GetFixedColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetFixedColor)
void
StringGrid_SetFixedColor(TStringGrid AObj, TColor AValue) {
    GET_FUNC_ADDR(StringGrid_SetFixedColor)
    MySyscall(pStringGrid_SetFixedColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetFixedCols)
int32_t
StringGrid_GetFixedCols(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetFixedCols)
    return (int32_t)MySyscall(pStringGrid_GetFixedCols, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetFixedCols)
void
StringGrid_SetFixedCols(TStringGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(StringGrid_SetFixedCols)
    MySyscall(pStringGrid_SetFixedCols, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetRowCount)
int32_t
StringGrid_GetRowCount(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetRowCount)
    return (int32_t)MySyscall(pStringGrid_GetRowCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetRowCount)
void
StringGrid_SetRowCount(TStringGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(StringGrid_SetRowCount)
    MySyscall(pStringGrid_SetRowCount, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetFixedRows)
int32_t
StringGrid_GetFixedRows(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetFixedRows)
    return (int32_t)MySyscall(pStringGrid_GetFixedRows, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetFixedRows)
void
StringGrid_SetFixedRows(TStringGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(StringGrid_SetFixedRows)
    MySyscall(pStringGrid_SetFixedRows, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetFont)
TFont
StringGrid_GetFont(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetFont)
    return (TFont)MySyscall(pStringGrid_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetFont)
void
StringGrid_SetFont(TStringGrid AObj, TFont AValue) {
    GET_FUNC_ADDR(StringGrid_SetFont)
    MySyscall(pStringGrid_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetGridLineWidth)
int32_t
StringGrid_GetGridLineWidth(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetGridLineWidth)
    return (int32_t)MySyscall(pStringGrid_GetGridLineWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetGridLineWidth)
void
StringGrid_SetGridLineWidth(TStringGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(StringGrid_SetGridLineWidth)
    MySyscall(pStringGrid_SetGridLineWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetOptions)
TGridOptions
StringGrid_GetOptions(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetOptions)
    return (TGridOptions)MySyscall(pStringGrid_GetOptions, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOptions)
void
StringGrid_SetOptions(TStringGrid AObj, TGridOptions AValue) {
    GET_FUNC_ADDR(StringGrid_SetOptions)
    MySyscall(pStringGrid_SetOptions, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetParentColor)
BOOL
StringGrid_GetParentColor(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetParentColor)
    return (BOOL)MySyscall(pStringGrid_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetParentColor)
void
StringGrid_SetParentColor(TStringGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(StringGrid_SetParentColor)
    MySyscall(pStringGrid_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetParentDoubleBuffered)
BOOL
StringGrid_GetParentDoubleBuffered(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pStringGrid_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetParentDoubleBuffered)
void
StringGrid_SetParentDoubleBuffered(TStringGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(StringGrid_SetParentDoubleBuffered)
    MySyscall(pStringGrid_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetParentFont)
BOOL
StringGrid_GetParentFont(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetParentFont)
    return (BOOL)MySyscall(pStringGrid_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetParentFont)
void
StringGrid_SetParentFont(TStringGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(StringGrid_SetParentFont)
    MySyscall(pStringGrid_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetParentShowHint)
BOOL
StringGrid_GetParentShowHint(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetParentShowHint)
    return (BOOL)MySyscall(pStringGrid_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetParentShowHint)
void
StringGrid_SetParentShowHint(TStringGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(StringGrid_SetParentShowHint)
    MySyscall(pStringGrid_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetPopupMenu)
TPopupMenu
StringGrid_GetPopupMenu(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetPopupMenu)
    return (TPopupMenu)MySyscall(pStringGrid_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetPopupMenu)
void
StringGrid_SetPopupMenu(TStringGrid AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(StringGrid_SetPopupMenu)
    MySyscall(pStringGrid_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetScrollBars)
TScrollStyle
StringGrid_GetScrollBars(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetScrollBars)
    return (TScrollStyle)MySyscall(pStringGrid_GetScrollBars, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetScrollBars)
void
StringGrid_SetScrollBars(TStringGrid AObj, TScrollStyle AValue) {
    GET_FUNC_ADDR(StringGrid_SetScrollBars)
    MySyscall(pStringGrid_SetScrollBars, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetShowHint)
BOOL
StringGrid_GetShowHint(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetShowHint)
    return (BOOL)MySyscall(pStringGrid_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetShowHint)
void
StringGrid_SetShowHint(TStringGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(StringGrid_SetShowHint)
    MySyscall(pStringGrid_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetTabOrder)
TTabOrder
StringGrid_GetTabOrder(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetTabOrder)
    return (TTabOrder)MySyscall(pStringGrid_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetTabOrder)
void
StringGrid_SetTabOrder(TStringGrid AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(StringGrid_SetTabOrder)
    MySyscall(pStringGrid_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetVisible)
BOOL
StringGrid_GetVisible(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetVisible)
    return (BOOL)MySyscall(pStringGrid_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetVisible)
void
StringGrid_SetVisible(TStringGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(StringGrid_SetVisible)
    MySyscall(pStringGrid_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetVisibleColCount)
int32_t
StringGrid_GetVisibleColCount(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetVisibleColCount)
    return (int32_t)MySyscall(pStringGrid_GetVisibleColCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetVisibleRowCount)
int32_t
StringGrid_GetVisibleRowCount(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetVisibleRowCount)
    return (int32_t)MySyscall(pStringGrid_GetVisibleRowCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnClick)
void
StringGrid_SetOnClick(TStringGrid AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnClick)
    MySyscall(pStringGrid_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnContextPopup)
void
StringGrid_SetOnContextPopup(TStringGrid AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnContextPopup)
    MySyscall(pStringGrid_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnDblClick)
void
StringGrid_SetOnDblClick(TStringGrid AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnDblClick)
    MySyscall(pStringGrid_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnDragDrop)
void
StringGrid_SetOnDragDrop(TStringGrid AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnDragDrop)
    MySyscall(pStringGrid_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnDragOver)
void
StringGrid_SetOnDragOver(TStringGrid AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnDragOver)
    MySyscall(pStringGrid_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnDrawCell)
void
StringGrid_SetOnDrawCell(TStringGrid AObj, TDrawCellEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnDrawCell)
    MySyscall(pStringGrid_SetOnDrawCell, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnEndDock)
void
StringGrid_SetOnEndDock(TStringGrid AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnEndDock)
    MySyscall(pStringGrid_SetOnEndDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnEndDrag)
void
StringGrid_SetOnEndDrag(TStringGrid AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnEndDrag)
    MySyscall(pStringGrid_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnEnter)
void
StringGrid_SetOnEnter(TStringGrid AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnEnter)
    MySyscall(pStringGrid_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnExit)
void
StringGrid_SetOnExit(TStringGrid AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnExit)
    MySyscall(pStringGrid_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnGetEditMask)
void
StringGrid_SetOnGetEditMask(TStringGrid AObj, TGetEditEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnGetEditMask)
    MySyscall(pStringGrid_SetOnGetEditMask, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnGetEditText)
void
StringGrid_SetOnGetEditText(TStringGrid AObj, TGetEditEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnGetEditText)
    MySyscall(pStringGrid_SetOnGetEditText, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnKeyDown)
void
StringGrid_SetOnKeyDown(TStringGrid AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnKeyDown)
    MySyscall(pStringGrid_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnKeyPress)
void
StringGrid_SetOnKeyPress(TStringGrid AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnKeyPress)
    MySyscall(pStringGrid_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnKeyUp)
void
StringGrid_SetOnKeyUp(TStringGrid AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnKeyUp)
    MySyscall(pStringGrid_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnMouseDown)
void
StringGrid_SetOnMouseDown(TStringGrid AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnMouseDown)
    MySyscall(pStringGrid_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnMouseEnter)
void
StringGrid_SetOnMouseEnter(TStringGrid AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnMouseEnter)
    MySyscall(pStringGrid_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnMouseLeave)
void
StringGrid_SetOnMouseLeave(TStringGrid AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnMouseLeave)
    MySyscall(pStringGrid_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnMouseMove)
void
StringGrid_SetOnMouseMove(TStringGrid AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnMouseMove)
    MySyscall(pStringGrid_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnMouseUp)
void
StringGrid_SetOnMouseUp(TStringGrid AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnMouseUp)
    MySyscall(pStringGrid_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnMouseWheelDown)
void
StringGrid_SetOnMouseWheelDown(TStringGrid AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnMouseWheelDown)
    MySyscall(pStringGrid_SetOnMouseWheelDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnMouseWheelUp)
void
StringGrid_SetOnMouseWheelUp(TStringGrid AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnMouseWheelUp)
    MySyscall(pStringGrid_SetOnMouseWheelUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnSelectCell)
void
StringGrid_SetOnSelectCell(TStringGrid AObj, TSelectCellEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnSelectCell)
    MySyscall(pStringGrid_SetOnSelectCell, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnSetEditText)
void
StringGrid_SetOnSetEditText(TStringGrid AObj, TSetEditEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnSetEditText)
    MySyscall(pStringGrid_SetOnSetEditText, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnStartDock)
void
StringGrid_SetOnStartDock(TStringGrid AObj, TStartDockEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnStartDock)
    MySyscall(pStringGrid_SetOnStartDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetOnTopLeftChanged)
void
StringGrid_SetOnTopLeftChanged(TStringGrid AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(StringGrid_SetOnTopLeftChanged)
    MySyscall(pStringGrid_SetOnTopLeftChanged, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetCanvas)
TCanvas
StringGrid_GetCanvas(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetCanvas)
    return (TCanvas)MySyscall(pStringGrid_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetCol)
int32_t
StringGrid_GetCol(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetCol)
    return (int32_t)MySyscall(pStringGrid_GetCol, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetCol)
void
StringGrid_SetCol(TStringGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(StringGrid_SetCol)
    MySyscall(pStringGrid_SetCol, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetGridHeight)
int32_t
StringGrid_GetGridHeight(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetGridHeight)
    return (int32_t)MySyscall(pStringGrid_GetGridHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetGridWidth)
int32_t
StringGrid_GetGridWidth(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetGridWidth)
    return (int32_t)MySyscall(pStringGrid_GetGridWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetLeftCol)
int32_t
StringGrid_GetLeftCol(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetLeftCol)
    return (int32_t)MySyscall(pStringGrid_GetLeftCol, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetLeftCol)
void
StringGrid_SetLeftCol(TStringGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(StringGrid_SetLeftCol)
    MySyscall(pStringGrid_SetLeftCol, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetSelection)
TGridRect
StringGrid_GetSelection(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetSelection)
    TGridRect result;
    MySyscall(pStringGrid_GetSelection, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StringGrid_SetSelection)
void
StringGrid_SetSelection(TStringGrid AObj, TGridRect AValue) {
    GET_FUNC_ADDR(StringGrid_SetSelection)
    MySyscall(pStringGrid_SetSelection, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetRow)
int32_t
StringGrid_GetRow(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetRow)
    return (int32_t)MySyscall(pStringGrid_GetRow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetRow)
void
StringGrid_SetRow(TStringGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(StringGrid_SetRow)
    MySyscall(pStringGrid_SetRow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetTopRow)
int32_t
StringGrid_GetTopRow(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetTopRow)
    return (int32_t)MySyscall(pStringGrid_GetTopRow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetTopRow)
void
StringGrid_SetTopRow(TStringGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(StringGrid_SetTopRow)
    MySyscall(pStringGrid_SetTopRow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetTabStop)
BOOL
StringGrid_GetTabStop(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetTabStop)
    return (BOOL)MySyscall(pStringGrid_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetTabStop)
void
StringGrid_SetTabStop(TStringGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(StringGrid_SetTabStop)
    MySyscall(pStringGrid_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetDockClientCount)
int32_t
StringGrid_GetDockClientCount(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetDockClientCount)
    return (int32_t)MySyscall(pStringGrid_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetDockSite)
BOOL
StringGrid_GetDockSite(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetDockSite)
    return (BOOL)MySyscall(pStringGrid_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetDockSite)
void
StringGrid_SetDockSite(TStringGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(StringGrid_SetDockSite)
    MySyscall(pStringGrid_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetMouseInClient)
BOOL
StringGrid_GetMouseInClient(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetMouseInClient)
    return (BOOL)MySyscall(pStringGrid_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetVisibleDockClientCount)
int32_t
StringGrid_GetVisibleDockClientCount(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pStringGrid_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetBrush)
TBrush
StringGrid_GetBrush(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetBrush)
    return (TBrush)MySyscall(pStringGrid_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetControlCount)
int32_t
StringGrid_GetControlCount(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetControlCount)
    return (int32_t)MySyscall(pStringGrid_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetHandle)
HWND
StringGrid_GetHandle(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetHandle)
    return (HWND)MySyscall(pStringGrid_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetParentWindow)
HWND
StringGrid_GetParentWindow(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetParentWindow)
    return (HWND)MySyscall(pStringGrid_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetParentWindow)
void
StringGrid_SetParentWindow(TStringGrid AObj, HWND AValue) {
    GET_FUNC_ADDR(StringGrid_SetParentWindow)
    MySyscall(pStringGrid_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetShowing)
BOOL
StringGrid_GetShowing(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetShowing)
    return (BOOL)MySyscall(pStringGrid_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetUseDockManager)
BOOL
StringGrid_GetUseDockManager(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetUseDockManager)
    return (BOOL)MySyscall(pStringGrid_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetUseDockManager)
void
StringGrid_SetUseDockManager(TStringGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(StringGrid_SetUseDockManager)
    MySyscall(pStringGrid_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetAction)
TAction
StringGrid_GetAction(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetAction)
    return (TAction)MySyscall(pStringGrid_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetAction)
void
StringGrid_SetAction(TStringGrid AObj, TAction AValue) {
    GET_FUNC_ADDR(StringGrid_SetAction)
    MySyscall(pStringGrid_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetBoundsRect)
TRect
StringGrid_GetBoundsRect(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetBoundsRect)
    TRect result;
    MySyscall(pStringGrid_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StringGrid_SetBoundsRect)
void
StringGrid_SetBoundsRect(TStringGrid AObj, TRect AValue) {
    GET_FUNC_ADDR(StringGrid_SetBoundsRect)
    MySyscall(pStringGrid_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetClientHeight)
int32_t
StringGrid_GetClientHeight(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetClientHeight)
    return (int32_t)MySyscall(pStringGrid_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetClientHeight)
void
StringGrid_SetClientHeight(TStringGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(StringGrid_SetClientHeight)
    MySyscall(pStringGrid_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetClientOrigin)
TPoint
StringGrid_GetClientOrigin(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetClientOrigin)
    TPoint result;
    MySyscall(pStringGrid_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StringGrid_GetClientRect)
TRect
StringGrid_GetClientRect(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetClientRect)
    TRect result;
    MySyscall(pStringGrid_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(StringGrid_GetClientWidth)
int32_t
StringGrid_GetClientWidth(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetClientWidth)
    return (int32_t)MySyscall(pStringGrid_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetClientWidth)
void
StringGrid_SetClientWidth(TStringGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(StringGrid_SetClientWidth)
    MySyscall(pStringGrid_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetControlState)
TControlState
StringGrid_GetControlState(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetControlState)
    return (TControlState)MySyscall(pStringGrid_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetControlState)
void
StringGrid_SetControlState(TStringGrid AObj, TControlState AValue) {
    GET_FUNC_ADDR(StringGrid_SetControlState)
    MySyscall(pStringGrid_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetControlStyle)
TControlStyle
StringGrid_GetControlStyle(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetControlStyle)
    return (TControlStyle)MySyscall(pStringGrid_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetControlStyle)
void
StringGrid_SetControlStyle(TStringGrid AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(StringGrid_SetControlStyle)
    MySyscall(pStringGrid_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetFloating)
BOOL
StringGrid_GetFloating(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetFloating)
    return (BOOL)MySyscall(pStringGrid_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetParent)
TWinControl
StringGrid_GetParent(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetParent)
    return (TWinControl)MySyscall(pStringGrid_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetParent)
void
StringGrid_SetParent(TStringGrid AObj, TWinControl AValue) {
    GET_FUNC_ADDR(StringGrid_SetParent)
    MySyscall(pStringGrid_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetLeft)
int32_t
StringGrid_GetLeft(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetLeft)
    return (int32_t)MySyscall(pStringGrid_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetLeft)
void
StringGrid_SetLeft(TStringGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(StringGrid_SetLeft)
    MySyscall(pStringGrid_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetTop)
int32_t
StringGrid_GetTop(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetTop)
    return (int32_t)MySyscall(pStringGrid_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetTop)
void
StringGrid_SetTop(TStringGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(StringGrid_SetTop)
    MySyscall(pStringGrid_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetWidth)
int32_t
StringGrid_GetWidth(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetWidth)
    return (int32_t)MySyscall(pStringGrid_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetWidth)
void
StringGrid_SetWidth(TStringGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(StringGrid_SetWidth)
    MySyscall(pStringGrid_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetHeight)
int32_t
StringGrid_GetHeight(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetHeight)
    return (int32_t)MySyscall(pStringGrid_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetHeight)
void
StringGrid_SetHeight(TStringGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(StringGrid_SetHeight)
    MySyscall(pStringGrid_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetCursor)
TCursor
StringGrid_GetCursor(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetCursor)
    return (TCursor)MySyscall(pStringGrid_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetCursor)
void
StringGrid_SetCursor(TStringGrid AObj, TCursor AValue) {
    GET_FUNC_ADDR(StringGrid_SetCursor)
    MySyscall(pStringGrid_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetHint)
char*
StringGrid_GetHint(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetHint)
    return (char*)MySyscall(pStringGrid_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetHint)
void
StringGrid_SetHint(TStringGrid AObj, CChar char* AValue) {
    GET_FUNC_ADDR(StringGrid_SetHint)
    MySyscall(pStringGrid_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetComponentCount)
int32_t
StringGrid_GetComponentCount(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetComponentCount)
    return (int32_t)MySyscall(pStringGrid_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetComponentIndex)
int32_t
StringGrid_GetComponentIndex(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetComponentIndex)
    return (int32_t)MySyscall(pStringGrid_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetComponentIndex)
void
StringGrid_SetComponentIndex(TStringGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(StringGrid_SetComponentIndex)
    MySyscall(pStringGrid_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetOwner)
TComponent
StringGrid_GetOwner(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetOwner)
    return (TComponent)MySyscall(pStringGrid_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetName)
char*
StringGrid_GetName(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetName)
    return (char*)MySyscall(pStringGrid_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetName)
void
StringGrid_SetName(TStringGrid AObj, CChar char* AValue) {
    GET_FUNC_ADDR(StringGrid_SetName)
    MySyscall(pStringGrid_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetTag)
intptr_t
StringGrid_GetTag(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetTag)
    return (intptr_t)MySyscall(pStringGrid_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetTag)
void
StringGrid_SetTag(TStringGrid AObj, intptr_t AValue) {
    GET_FUNC_ADDR(StringGrid_SetTag)
    MySyscall(pStringGrid_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetAnchorSideLeft)
TAnchorSide
StringGrid_GetAnchorSideLeft(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pStringGrid_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetAnchorSideLeft)
void
StringGrid_SetAnchorSideLeft(TStringGrid AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(StringGrid_SetAnchorSideLeft)
    MySyscall(pStringGrid_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetAnchorSideTop)
TAnchorSide
StringGrid_GetAnchorSideTop(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pStringGrid_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetAnchorSideTop)
void
StringGrid_SetAnchorSideTop(TStringGrid AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(StringGrid_SetAnchorSideTop)
    MySyscall(pStringGrid_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetAnchorSideRight)
TAnchorSide
StringGrid_GetAnchorSideRight(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pStringGrid_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetAnchorSideRight)
void
StringGrid_SetAnchorSideRight(TStringGrid AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(StringGrid_SetAnchorSideRight)
    MySyscall(pStringGrid_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetAnchorSideBottom)
TAnchorSide
StringGrid_GetAnchorSideBottom(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pStringGrid_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetAnchorSideBottom)
void
StringGrid_SetAnchorSideBottom(TStringGrid AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(StringGrid_SetAnchorSideBottom)
    MySyscall(pStringGrid_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetChildSizing)
TControlChildSizing
StringGrid_GetChildSizing(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetChildSizing)
    return (TControlChildSizing)MySyscall(pStringGrid_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetChildSizing)
void
StringGrid_SetChildSizing(TStringGrid AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(StringGrid_SetChildSizing)
    MySyscall(pStringGrid_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetBorderSpacing)
TControlBorderSpacing
StringGrid_GetBorderSpacing(TStringGrid AObj) {
    GET_FUNC_ADDR(StringGrid_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pStringGrid_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetBorderSpacing)
void
StringGrid_SetBorderSpacing(TStringGrid AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(StringGrid_SetBorderSpacing)
    MySyscall(pStringGrid_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetIsCellSelected)
BOOL
StringGrid_GetIsCellSelected(TStringGrid AObj, int32_t aCol, int32_t aRow) {
    GET_FUNC_ADDR(StringGrid_GetIsCellSelected)
    return (BOOL)MySyscall(pStringGrid_GetIsCellSelected, 3, AObj, aCol, aRow ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetCells)
char*
StringGrid_GetCells(TStringGrid AObj, int32_t ACol, int32_t ARow) {
    GET_FUNC_ADDR(StringGrid_GetCells)
    return (char*)MySyscall(pStringGrid_GetCells, 3, AObj, ACol, ARow ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetCells)
void
StringGrid_SetCells(TStringGrid AObj, int32_t ACol, int32_t ARow, CChar char* AValue) {
    GET_FUNC_ADDR(StringGrid_SetCells)
    MySyscall(pStringGrid_SetCells, 4, AObj, ACol, ARow, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetCols)
TStrings
StringGrid_GetCols(TStringGrid AObj, int32_t Index) {
    GET_FUNC_ADDR(StringGrid_GetCols)
    return (TStrings)MySyscall(pStringGrid_GetCols, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetCols)
void
StringGrid_SetCols(TStringGrid AObj, int32_t Index, TStrings AValue) {
    GET_FUNC_ADDR(StringGrid_SetCols)
    MySyscall(pStringGrid_SetCols, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetObjects)
TObject
StringGrid_GetObjects(TStringGrid AObj, int32_t ACol, int32_t ARow) {
    GET_FUNC_ADDR(StringGrid_GetObjects)
    return (TObject)MySyscall(pStringGrid_GetObjects, 3, AObj, ACol, ARow ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetObjects)
void
StringGrid_SetObjects(TStringGrid AObj, int32_t ACol, int32_t ARow, TObject AValue) {
    GET_FUNC_ADDR(StringGrid_SetObjects)
    MySyscall(pStringGrid_SetObjects, 4, AObj, ACol, ARow, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetRows)
TStrings
StringGrid_GetRows(TStringGrid AObj, int32_t Index) {
    GET_FUNC_ADDR(StringGrid_GetRows)
    return (TStrings)MySyscall(pStringGrid_GetRows, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetRows)
void
StringGrid_SetRows(TStringGrid AObj, int32_t Index, TStrings AValue) {
    GET_FUNC_ADDR(StringGrid_SetRows)
    MySyscall(pStringGrid_SetRows, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetColWidths)
int32_t
StringGrid_GetColWidths(TStringGrid AObj, int32_t Index) {
    GET_FUNC_ADDR(StringGrid_GetColWidths)
    return (int32_t)MySyscall(pStringGrid_GetColWidths, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetColWidths)
void
StringGrid_SetColWidths(TStringGrid AObj, int32_t Index, int32_t AValue) {
    GET_FUNC_ADDR(StringGrid_SetColWidths)
    MySyscall(pStringGrid_SetColWidths, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetRowHeights)
int32_t
StringGrid_GetRowHeights(TStringGrid AObj, int32_t Index) {
    GET_FUNC_ADDR(StringGrid_GetRowHeights)
    return (int32_t)MySyscall(pStringGrid_GetRowHeights, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_SetRowHeights)
void
StringGrid_SetRowHeights(TStringGrid AObj, int32_t Index, int32_t AValue) {
    GET_FUNC_ADDR(StringGrid_SetRowHeights)
    MySyscall(pStringGrid_SetRowHeights, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetDockClients)
TControl
StringGrid_GetDockClients(TStringGrid AObj, int32_t Index) {
    GET_FUNC_ADDR(StringGrid_GetDockClients)
    return (TControl)MySyscall(pStringGrid_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetControls)
TControl
StringGrid_GetControls(TStringGrid AObj, int32_t Index) {
    GET_FUNC_ADDR(StringGrid_GetControls)
    return (TControl)MySyscall(pStringGrid_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetComponents)
TComponent
StringGrid_GetComponents(TStringGrid AObj, int32_t AIndex) {
    GET_FUNC_ADDR(StringGrid_GetComponents)
    return (TComponent)MySyscall(pStringGrid_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_GetAnchorSide)
TAnchorSide
StringGrid_GetAnchorSide(TStringGrid AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(StringGrid_GetAnchorSide)
    return (TAnchorSide)MySyscall(pStringGrid_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(StringGrid_StaticClassType)
TClass
StringGrid_StaticClassType() {
    GET_FUNC_ADDR(StringGrid_StaticClassType)
    return (TClass)MySyscall(pStringGrid_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TDrawGrid-------------------

DEFINE_FUNC_PTR(DrawGrid_Create)
TDrawGrid
rawGrid_Create(TComponent AOwner) {
    GET_FUNC_ADDR(DrawGrid_Create)
    return (TDrawGrid)MySyscall(pDrawGrid_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_Free)
void
rawGrid_Free(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_Free)
    MySyscall(pDrawGrid_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_CellRect)
TRect
rawGrid_CellRect(TDrawGrid AObj, int32_t ACol, int32_t ARow) {
    GET_FUNC_ADDR(DrawGrid_CellRect)
    TRect result;
    MySyscall(pDrawGrid_CellRect, 4, AObj, ACol, ARow, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DrawGrid_MouseToCell)
void
rawGrid_MouseToCell(TDrawGrid AObj, int32_t X, int32_t Y, int32_t* ACol, int32_t* ARow) {
    GET_FUNC_ADDR(DrawGrid_MouseToCell)
    MySyscall(pDrawGrid_MouseToCell, 5, AObj, X, Y, ACol, ARow ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_MouseCoord)
TGridCoord
rawGrid_MouseCoord(TDrawGrid AObj, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(DrawGrid_MouseCoord)
    TGridCoord result;
    MySyscall(pDrawGrid_MouseCoord, 4, AObj, X, Y, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DrawGrid_CanFocus)
BOOL
rawGrid_CanFocus(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_CanFocus)
    return (BOOL)MySyscall(pDrawGrid_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_ContainsControl)
BOOL
rawGrid_ContainsControl(TDrawGrid AObj, TControl Control) {
    GET_FUNC_ADDR(DrawGrid_ContainsControl)
    return (BOOL)MySyscall(pDrawGrid_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_ControlAtPos)
TControl
rawGrid_ControlAtPos(TDrawGrid AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(DrawGrid_ControlAtPos)
    return (TControl)MySyscall(pDrawGrid_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_DisableAlign)
void
rawGrid_DisableAlign(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_DisableAlign)
    MySyscall(pDrawGrid_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_EnableAlign)
void
rawGrid_EnableAlign(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_EnableAlign)
    MySyscall(pDrawGrid_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_FindChildControl)
TControl
rawGrid_FindChildControl(TDrawGrid AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(DrawGrid_FindChildControl)
    return (TControl)MySyscall(pDrawGrid_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_FlipChildren)
void
rawGrid_FlipChildren(TDrawGrid AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(DrawGrid_FlipChildren)
    MySyscall(pDrawGrid_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_Focused)
BOOL
rawGrid_Focused(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_Focused)
    return (BOOL)MySyscall(pDrawGrid_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_HandleAllocated)
BOOL
rawGrid_HandleAllocated(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_HandleAllocated)
    return (BOOL)MySyscall(pDrawGrid_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_InsertControl)
void
rawGrid_InsertControl(TDrawGrid AObj, TControl AControl) {
    GET_FUNC_ADDR(DrawGrid_InsertControl)
    MySyscall(pDrawGrid_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_Invalidate)
void
rawGrid_Invalidate(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_Invalidate)
    MySyscall(pDrawGrid_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_PaintTo)
void
rawGrid_PaintTo(TDrawGrid AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(DrawGrid_PaintTo)
    MySyscall(pDrawGrid_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_RemoveControl)
void
rawGrid_RemoveControl(TDrawGrid AObj, TControl AControl) {
    GET_FUNC_ADDR(DrawGrid_RemoveControl)
    MySyscall(pDrawGrid_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_Realign)
void
rawGrid_Realign(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_Realign)
    MySyscall(pDrawGrid_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_Repaint)
void
rawGrid_Repaint(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_Repaint)
    MySyscall(pDrawGrid_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_ScaleBy)
void
rawGrid_ScaleBy(TDrawGrid AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(DrawGrid_ScaleBy)
    MySyscall(pDrawGrid_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_ScrollBy)
void
rawGrid_ScrollBy(TDrawGrid AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(DrawGrid_ScrollBy)
    MySyscall(pDrawGrid_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetBounds)
void
rawGrid_SetBounds(TDrawGrid AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(DrawGrid_SetBounds)
    MySyscall(pDrawGrid_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetFocus)
void
rawGrid_SetFocus(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_SetFocus)
    MySyscall(pDrawGrid_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_Update)
void
rawGrid_Update(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_Update)
    MySyscall(pDrawGrid_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_BringToFront)
void
rawGrid_BringToFront(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_BringToFront)
    MySyscall(pDrawGrid_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_ClientToScreen)
TPoint
rawGrid_ClientToScreen(TDrawGrid AObj, TPoint Point) {
    GET_FUNC_ADDR(DrawGrid_ClientToScreen)
    TPoint result;
    MySyscall(pDrawGrid_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DrawGrid_ClientToParent)
TPoint
rawGrid_ClientToParent(TDrawGrid AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(DrawGrid_ClientToParent)
    TPoint result;
    MySyscall(pDrawGrid_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DrawGrid_Dragging)
BOOL
rawGrid_Dragging(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_Dragging)
    return (BOOL)MySyscall(pDrawGrid_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_HasParent)
BOOL
rawGrid_HasParent(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_HasParent)
    return (BOOL)MySyscall(pDrawGrid_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_Hide)
void
rawGrid_Hide(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_Hide)
    MySyscall(pDrawGrid_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_Perform)
intptr_t
rawGrid_Perform(TDrawGrid AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(DrawGrid_Perform)
    return (intptr_t)MySyscall(pDrawGrid_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_Refresh)
void
rawGrid_Refresh(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_Refresh)
    MySyscall(pDrawGrid_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_ScreenToClient)
TPoint
rawGrid_ScreenToClient(TDrawGrid AObj, TPoint Point) {
    GET_FUNC_ADDR(DrawGrid_ScreenToClient)
    TPoint result;
    MySyscall(pDrawGrid_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DrawGrid_ParentToClient)
TPoint
rawGrid_ParentToClient(TDrawGrid AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(DrawGrid_ParentToClient)
    TPoint result;
    MySyscall(pDrawGrid_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DrawGrid_SendToBack)
void
rawGrid_SendToBack(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_SendToBack)
    MySyscall(pDrawGrid_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_Show)
void
rawGrid_Show(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_Show)
    MySyscall(pDrawGrid_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetTextBuf)
int32_t
rawGrid_GetTextBuf(TDrawGrid AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(DrawGrid_GetTextBuf)
    return (int32_t)MySyscall(pDrawGrid_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetTextLen)
int32_t
rawGrid_GetTextLen(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetTextLen)
    return (int32_t)MySyscall(pDrawGrid_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetTextBuf)
void
rawGrid_SetTextBuf(TDrawGrid AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(DrawGrid_SetTextBuf)
    MySyscall(pDrawGrid_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_FindComponent)
TComponent
rawGrid_FindComponent(TDrawGrid AObj, CChar char* AName) {
    GET_FUNC_ADDR(DrawGrid_FindComponent)
    return (TComponent)MySyscall(pDrawGrid_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetNamePath)
char*
rawGrid_GetNamePath(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetNamePath)
    return (char*)MySyscall(pDrawGrid_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_Assign)
void
rawGrid_Assign(TDrawGrid AObj, TObject Source) {
    GET_FUNC_ADDR(DrawGrid_Assign)
    MySyscall(pDrawGrid_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_ClassType)
TClass
rawGrid_ClassType(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_ClassType)
    return (TClass)MySyscall(pDrawGrid_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_ClassName)
char*
rawGrid_ClassName(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_ClassName)
    return (char*)MySyscall(pDrawGrid_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_InstanceSize)
int32_t
DrawGrid_InstanceSize(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_InstanceSize)
    return (int32_t)MySyscall(pDrawGrid_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_InheritsFrom)
BOOL
rawGrid_InheritsFrom(TDrawGrid AObj, TClass AClass) {
    GET_FUNC_ADDR(DrawGrid_InheritsFrom)
    return (BOOL)MySyscall(pDrawGrid_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_Equals)
BOOL
rawGrid_Equals(TDrawGrid AObj, TObject Obj) {
    GET_FUNC_ADDR(DrawGrid_Equals)
    return (BOOL)MySyscall(pDrawGrid_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetHashCode)
int32_t
rawGrid_GetHashCode(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetHashCode)
    return (int32_t)MySyscall(pDrawGrid_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_ToString)
char*
rawGrid_ToString(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_ToString)
    return (char*)MySyscall(pDrawGrid_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_AnchorToNeighbour)
void
rawGrid_AnchorToNeighbour(TDrawGrid AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(DrawGrid_AnchorToNeighbour)
    MySyscall(pDrawGrid_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_AnchorParallel)
void
rawGrid_AnchorParallel(TDrawGrid AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(DrawGrid_AnchorParallel)
    MySyscall(pDrawGrid_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_AnchorHorizontalCenterTo)
void
rawGrid_AnchorHorizontalCenterTo(TDrawGrid AObj, TControl ASibling) {
    GET_FUNC_ADDR(DrawGrid_AnchorHorizontalCenterTo)
    MySyscall(pDrawGrid_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_AnchorVerticalCenterTo)
void
rawGrid_AnchorVerticalCenterTo(TDrawGrid AObj, TControl ASibling) {
    GET_FUNC_ADDR(DrawGrid_AnchorVerticalCenterTo)
    MySyscall(pDrawGrid_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_AnchorSame)
void
rawGrid_AnchorSame(TDrawGrid AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(DrawGrid_AnchorSame)
    MySyscall(pDrawGrid_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_AnchorAsAlign)
void
rawGrid_AnchorAsAlign(TDrawGrid AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(DrawGrid_AnchorAsAlign)
    MySyscall(pDrawGrid_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_AnchorClient)
void
rawGrid_AnchorClient(TDrawGrid AObj, int32_t ASpace) {
    GET_FUNC_ADDR(DrawGrid_AnchorClient)
    MySyscall(pDrawGrid_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_ScaleDesignToForm)
int32_t
rawGrid_ScaleDesignToForm(TDrawGrid AObj, int32_t ASize) {
    GET_FUNC_ADDR(DrawGrid_ScaleDesignToForm)
    return (int32_t)MySyscall(pDrawGrid_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_ScaleFormToDesign)
int32_t
rawGrid_ScaleFormToDesign(TDrawGrid AObj, int32_t ASize) {
    GET_FUNC_ADDR(DrawGrid_ScaleFormToDesign)
    return (int32_t)MySyscall(pDrawGrid_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_Scale96ToForm)
int32_t
rawGrid_Scale96ToForm(TDrawGrid AObj, int32_t ASize) {
    GET_FUNC_ADDR(DrawGrid_Scale96ToForm)
    return (int32_t)MySyscall(pDrawGrid_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_ScaleFormTo96)
int32_t
rawGrid_ScaleFormTo96(TDrawGrid AObj, int32_t ASize) {
    GET_FUNC_ADDR(DrawGrid_ScaleFormTo96)
    return (int32_t)MySyscall(pDrawGrid_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_Scale96ToFont)
int32_t
rawGrid_Scale96ToFont(TDrawGrid AObj, int32_t ASize) {
    GET_FUNC_ADDR(DrawGrid_Scale96ToFont)
    return (int32_t)MySyscall(pDrawGrid_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_ScaleFontTo96)
int32_t
rawGrid_ScaleFontTo96(TDrawGrid AObj, int32_t ASize) {
    GET_FUNC_ADDR(DrawGrid_ScaleFontTo96)
    return (int32_t)MySyscall(pDrawGrid_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_ScaleScreenToFont)
int32_t
rawGrid_ScaleScreenToFont(TDrawGrid AObj, int32_t ASize) {
    GET_FUNC_ADDR(DrawGrid_ScaleScreenToFont)
    return (int32_t)MySyscall(pDrawGrid_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_ScaleFontToScreen)
int32_t
rawGrid_ScaleFontToScreen(TDrawGrid AObj, int32_t ASize) {
    GET_FUNC_ADDR(DrawGrid_ScaleFontToScreen)
    return (int32_t)MySyscall(pDrawGrid_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_Scale96ToScreen)
int32_t
rawGrid_Scale96ToScreen(TDrawGrid AObj, int32_t ASize) {
    GET_FUNC_ADDR(DrawGrid_Scale96ToScreen)
    return (int32_t)MySyscall(pDrawGrid_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_ScaleScreenTo96)
int32_t
rawGrid_ScaleScreenTo96(TDrawGrid AObj, int32_t ASize) {
    GET_FUNC_ADDR(DrawGrid_ScaleScreenTo96)
    return (int32_t)MySyscall(pDrawGrid_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_AutoAdjustLayout)
void
rawGrid_AutoAdjustLayout(TDrawGrid AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(DrawGrid_AutoAdjustLayout)
    MySyscall(pDrawGrid_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_FixDesignFontsPPI)
void
rawGrid_FixDesignFontsPPI(TDrawGrid AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(DrawGrid_FixDesignFontsPPI)
    MySyscall(pDrawGrid_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_ScaleFontsPPI)
void
rawGrid_ScaleFontsPPI(TDrawGrid AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(DrawGrid_ScaleFontsPPI)
    MySyscall(pDrawGrid_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnColRowMoved)
void
rawGrid_SetOnColRowMoved(TDrawGrid AObj, TGridOperationEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnColRowMoved)
    MySyscall(pDrawGrid_SetOnColRowMoved, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnPrepareCanvas)
void
rawGrid_SetOnPrepareCanvas(TDrawGrid AObj, TOnPrepareCanvasEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnPrepareCanvas)
    MySyscall(pDrawGrid_SetOnPrepareCanvas, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetAlign)
TAlign
rawGrid_GetAlign(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetAlign)
    return (TAlign)MySyscall(pDrawGrid_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetAlign)
void
rawGrid_SetAlign(TDrawGrid AObj, TAlign AValue) {
    GET_FUNC_ADDR(DrawGrid_SetAlign)
    MySyscall(pDrawGrid_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetAnchors)
TAnchors
rawGrid_GetAnchors(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetAnchors)
    return (TAnchors)MySyscall(pDrawGrid_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetAnchors)
void
rawGrid_SetAnchors(TDrawGrid AObj, TAnchors AValue) {
    GET_FUNC_ADDR(DrawGrid_SetAnchors)
    MySyscall(pDrawGrid_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetBiDiMode)
TBiDiMode
rawGrid_GetBiDiMode(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetBiDiMode)
    return (TBiDiMode)MySyscall(pDrawGrid_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetBiDiMode)
void
rawGrid_SetBiDiMode(TDrawGrid AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(DrawGrid_SetBiDiMode)
    MySyscall(pDrawGrid_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetBorderStyle)
TBorderStyle
rawGrid_GetBorderStyle(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetBorderStyle)
    return (TBorderStyle)MySyscall(pDrawGrid_GetBorderStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetBorderStyle)
void
rawGrid_SetBorderStyle(TDrawGrid AObj, TBorderStyle AValue) {
    GET_FUNC_ADDR(DrawGrid_SetBorderStyle)
    MySyscall(pDrawGrid_SetBorderStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetColor)
TColor
rawGrid_GetColor(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetColor)
    return (TColor)MySyscall(pDrawGrid_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetColor)
void
rawGrid_SetColor(TDrawGrid AObj, TColor AValue) {
    GET_FUNC_ADDR(DrawGrid_SetColor)
    MySyscall(pDrawGrid_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetColCount)
int32_t
rawGrid_GetColCount(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetColCount)
    return (int32_t)MySyscall(pDrawGrid_GetColCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetColCount)
void
rawGrid_SetColCount(TDrawGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(DrawGrid_SetColCount)
    MySyscall(pDrawGrid_SetColCount, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetConstraints)
TSizeConstraints
rawGrid_GetConstraints(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetConstraints)
    return (TSizeConstraints)MySyscall(pDrawGrid_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetConstraints)
void
rawGrid_SetConstraints(TDrawGrid AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(DrawGrid_SetConstraints)
    MySyscall(pDrawGrid_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetDefaultColWidth)
int32_t
rawGrid_GetDefaultColWidth(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetDefaultColWidth)
    return (int32_t)MySyscall(pDrawGrid_GetDefaultColWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetDefaultColWidth)
void
rawGrid_SetDefaultColWidth(TDrawGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(DrawGrid_SetDefaultColWidth)
    MySyscall(pDrawGrid_SetDefaultColWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetDefaultRowHeight)
int32_t
rawGrid_GetDefaultRowHeight(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetDefaultRowHeight)
    return (int32_t)MySyscall(pDrawGrid_GetDefaultRowHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetDefaultRowHeight)
void
rawGrid_SetDefaultRowHeight(TDrawGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(DrawGrid_SetDefaultRowHeight)
    MySyscall(pDrawGrid_SetDefaultRowHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetDefaultDrawing)
BOOL
rawGrid_GetDefaultDrawing(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetDefaultDrawing)
    return (BOOL)MySyscall(pDrawGrid_GetDefaultDrawing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetDefaultDrawing)
void
rawGrid_SetDefaultDrawing(TDrawGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(DrawGrid_SetDefaultDrawing)
    MySyscall(pDrawGrid_SetDefaultDrawing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetDoubleBuffered)
BOOL
rawGrid_GetDoubleBuffered(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetDoubleBuffered)
    return (BOOL)MySyscall(pDrawGrid_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetDoubleBuffered)
void
rawGrid_SetDoubleBuffered(TDrawGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(DrawGrid_SetDoubleBuffered)
    MySyscall(pDrawGrid_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetDragCursor)
TCursor
rawGrid_GetDragCursor(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetDragCursor)
    return (TCursor)MySyscall(pDrawGrid_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetDragCursor)
void
rawGrid_SetDragCursor(TDrawGrid AObj, TCursor AValue) {
    GET_FUNC_ADDR(DrawGrid_SetDragCursor)
    MySyscall(pDrawGrid_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetDragKind)
TDragKind
rawGrid_GetDragKind(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetDragKind)
    return (TDragKind)MySyscall(pDrawGrid_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetDragKind)
void
rawGrid_SetDragKind(TDrawGrid AObj, TDragKind AValue) {
    GET_FUNC_ADDR(DrawGrid_SetDragKind)
    MySyscall(pDrawGrid_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetDragMode)
TDragMode
rawGrid_GetDragMode(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetDragMode)
    return (TDragMode)MySyscall(pDrawGrid_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetDragMode)
void
rawGrid_SetDragMode(TDrawGrid AObj, TDragMode AValue) {
    GET_FUNC_ADDR(DrawGrid_SetDragMode)
    MySyscall(pDrawGrid_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetEnabled)
BOOL
rawGrid_GetEnabled(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetEnabled)
    return (BOOL)MySyscall(pDrawGrid_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetEnabled)
void
rawGrid_SetEnabled(TDrawGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(DrawGrid_SetEnabled)
    MySyscall(pDrawGrid_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetFixedColor)
TColor
rawGrid_GetFixedColor(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetFixedColor)
    return (TColor)MySyscall(pDrawGrid_GetFixedColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetFixedColor)
void
rawGrid_SetFixedColor(TDrawGrid AObj, TColor AValue) {
    GET_FUNC_ADDR(DrawGrid_SetFixedColor)
    MySyscall(pDrawGrid_SetFixedColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetFixedCols)
int32_t
rawGrid_GetFixedCols(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetFixedCols)
    return (int32_t)MySyscall(pDrawGrid_GetFixedCols, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetFixedCols)
void
rawGrid_SetFixedCols(TDrawGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(DrawGrid_SetFixedCols)
    MySyscall(pDrawGrid_SetFixedCols, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetRowCount)
int32_t
rawGrid_GetRowCount(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetRowCount)
    return (int32_t)MySyscall(pDrawGrid_GetRowCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetRowCount)
void
rawGrid_SetRowCount(TDrawGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(DrawGrid_SetRowCount)
    MySyscall(pDrawGrid_SetRowCount, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetFixedRows)
int32_t
rawGrid_GetFixedRows(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetFixedRows)
    return (int32_t)MySyscall(pDrawGrid_GetFixedRows, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetFixedRows)
void
rawGrid_SetFixedRows(TDrawGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(DrawGrid_SetFixedRows)
    MySyscall(pDrawGrid_SetFixedRows, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetFont)
TFont
rawGrid_GetFont(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetFont)
    return (TFont)MySyscall(pDrawGrid_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetFont)
void
rawGrid_SetFont(TDrawGrid AObj, TFont AValue) {
    GET_FUNC_ADDR(DrawGrid_SetFont)
    MySyscall(pDrawGrid_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetGridLineWidth)
int32_t
rawGrid_GetGridLineWidth(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetGridLineWidth)
    return (int32_t)MySyscall(pDrawGrid_GetGridLineWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetGridLineWidth)
void
rawGrid_SetGridLineWidth(TDrawGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(DrawGrid_SetGridLineWidth)
    MySyscall(pDrawGrid_SetGridLineWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetOptions)
TGridOptions
rawGrid_GetOptions(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetOptions)
    return (TGridOptions)MySyscall(pDrawGrid_GetOptions, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOptions)
void
rawGrid_SetOptions(TDrawGrid AObj, TGridOptions AValue) {
    GET_FUNC_ADDR(DrawGrid_SetOptions)
    MySyscall(pDrawGrid_SetOptions, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetParentColor)
BOOL
rawGrid_GetParentColor(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetParentColor)
    return (BOOL)MySyscall(pDrawGrid_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetParentColor)
void
rawGrid_SetParentColor(TDrawGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(DrawGrid_SetParentColor)
    MySyscall(pDrawGrid_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetParentDoubleBuffered)
BOOL
rawGrid_GetParentDoubleBuffered(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pDrawGrid_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetParentDoubleBuffered)
void
rawGrid_SetParentDoubleBuffered(TDrawGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(DrawGrid_SetParentDoubleBuffered)
    MySyscall(pDrawGrid_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetParentFont)
BOOL
rawGrid_GetParentFont(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetParentFont)
    return (BOOL)MySyscall(pDrawGrid_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetParentFont)
void
rawGrid_SetParentFont(TDrawGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(DrawGrid_SetParentFont)
    MySyscall(pDrawGrid_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetParentShowHint)
BOOL
rawGrid_GetParentShowHint(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetParentShowHint)
    return (BOOL)MySyscall(pDrawGrid_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetParentShowHint)
void
rawGrid_SetParentShowHint(TDrawGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(DrawGrid_SetParentShowHint)
    MySyscall(pDrawGrid_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetPopupMenu)
TPopupMenu
rawGrid_GetPopupMenu(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetPopupMenu)
    return (TPopupMenu)MySyscall(pDrawGrid_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetPopupMenu)
void
rawGrid_SetPopupMenu(TDrawGrid AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(DrawGrid_SetPopupMenu)
    MySyscall(pDrawGrid_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetScrollBars)
TScrollStyle
rawGrid_GetScrollBars(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetScrollBars)
    return (TScrollStyle)MySyscall(pDrawGrid_GetScrollBars, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetScrollBars)
void
rawGrid_SetScrollBars(TDrawGrid AObj, TScrollStyle AValue) {
    GET_FUNC_ADDR(DrawGrid_SetScrollBars)
    MySyscall(pDrawGrid_SetScrollBars, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetShowHint)
BOOL
rawGrid_GetShowHint(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetShowHint)
    return (BOOL)MySyscall(pDrawGrid_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetShowHint)
void
rawGrid_SetShowHint(TDrawGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(DrawGrid_SetShowHint)
    MySyscall(pDrawGrid_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetTabOrder)
TTabOrder
rawGrid_GetTabOrder(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetTabOrder)
    return (TTabOrder)MySyscall(pDrawGrid_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetTabOrder)
void
rawGrid_SetTabOrder(TDrawGrid AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(DrawGrid_SetTabOrder)
    MySyscall(pDrawGrid_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetVisible)
BOOL
rawGrid_GetVisible(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetVisible)
    return (BOOL)MySyscall(pDrawGrid_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetVisible)
void
rawGrid_SetVisible(TDrawGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(DrawGrid_SetVisible)
    MySyscall(pDrawGrid_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetVisibleColCount)
int32_t
rawGrid_GetVisibleColCount(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetVisibleColCount)
    return (int32_t)MySyscall(pDrawGrid_GetVisibleColCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetVisibleRowCount)
int32_t
rawGrid_GetVisibleRowCount(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetVisibleRowCount)
    return (int32_t)MySyscall(pDrawGrid_GetVisibleRowCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnClick)
void
rawGrid_SetOnClick(TDrawGrid AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnClick)
    MySyscall(pDrawGrid_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnContextPopup)
void
rawGrid_SetOnContextPopup(TDrawGrid AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnContextPopup)
    MySyscall(pDrawGrid_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnDblClick)
void
rawGrid_SetOnDblClick(TDrawGrid AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnDblClick)
    MySyscall(pDrawGrid_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnDragDrop)
void
rawGrid_SetOnDragDrop(TDrawGrid AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnDragDrop)
    MySyscall(pDrawGrid_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnDragOver)
void
rawGrid_SetOnDragOver(TDrawGrid AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnDragOver)
    MySyscall(pDrawGrid_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnDrawCell)
void
rawGrid_SetOnDrawCell(TDrawGrid AObj, TDrawCellEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnDrawCell)
    MySyscall(pDrawGrid_SetOnDrawCell, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnEndDock)
void
rawGrid_SetOnEndDock(TDrawGrid AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnEndDock)
    MySyscall(pDrawGrid_SetOnEndDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnEndDrag)
void
rawGrid_SetOnEndDrag(TDrawGrid AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnEndDrag)
    MySyscall(pDrawGrid_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnEnter)
void
rawGrid_SetOnEnter(TDrawGrid AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnEnter)
    MySyscall(pDrawGrid_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnExit)
void
rawGrid_SetOnExit(TDrawGrid AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnExit)
    MySyscall(pDrawGrid_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnGetEditMask)
void
rawGrid_SetOnGetEditMask(TDrawGrid AObj, TGetEditEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnGetEditMask)
    MySyscall(pDrawGrid_SetOnGetEditMask, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnGetEditText)
void
rawGrid_SetOnGetEditText(TDrawGrid AObj, TGetEditEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnGetEditText)
    MySyscall(pDrawGrid_SetOnGetEditText, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnKeyDown)
void
rawGrid_SetOnKeyDown(TDrawGrid AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnKeyDown)
    MySyscall(pDrawGrid_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnKeyPress)
void
rawGrid_SetOnKeyPress(TDrawGrid AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnKeyPress)
    MySyscall(pDrawGrid_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnKeyUp)
void
rawGrid_SetOnKeyUp(TDrawGrid AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnKeyUp)
    MySyscall(pDrawGrid_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnMouseDown)
void
rawGrid_SetOnMouseDown(TDrawGrid AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnMouseDown)
    MySyscall(pDrawGrid_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnMouseEnter)
void
rawGrid_SetOnMouseEnter(TDrawGrid AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnMouseEnter)
    MySyscall(pDrawGrid_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnMouseLeave)
void
rawGrid_SetOnMouseLeave(TDrawGrid AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnMouseLeave)
    MySyscall(pDrawGrid_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnMouseMove)
void
rawGrid_SetOnMouseMove(TDrawGrid AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnMouseMove)
    MySyscall(pDrawGrid_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnMouseUp)
void
rawGrid_SetOnMouseUp(TDrawGrid AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnMouseUp)
    MySyscall(pDrawGrid_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnMouseWheelDown)
void
rawGrid_SetOnMouseWheelDown(TDrawGrid AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnMouseWheelDown)
    MySyscall(pDrawGrid_SetOnMouseWheelDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnMouseWheelUp)
void
rawGrid_SetOnMouseWheelUp(TDrawGrid AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnMouseWheelUp)
    MySyscall(pDrawGrid_SetOnMouseWheelUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnSelectCell)
void
rawGrid_SetOnSelectCell(TDrawGrid AObj, TSelectCellEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnSelectCell)
    MySyscall(pDrawGrid_SetOnSelectCell, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnSetEditText)
void
rawGrid_SetOnSetEditText(TDrawGrid AObj, TSetEditEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnSetEditText)
    MySyscall(pDrawGrid_SetOnSetEditText, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnStartDock)
void
rawGrid_SetOnStartDock(TDrawGrid AObj, TStartDockEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnStartDock)
    MySyscall(pDrawGrid_SetOnStartDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetOnTopLeftChanged)
void
rawGrid_SetOnTopLeftChanged(TDrawGrid AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(DrawGrid_SetOnTopLeftChanged)
    MySyscall(pDrawGrid_SetOnTopLeftChanged, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetCanvas)
TCanvas
rawGrid_GetCanvas(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetCanvas)
    return (TCanvas)MySyscall(pDrawGrid_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetCol)
int32_t
rawGrid_GetCol(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetCol)
    return (int32_t)MySyscall(pDrawGrid_GetCol, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetCol)
void
rawGrid_SetCol(TDrawGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(DrawGrid_SetCol)
    MySyscall(pDrawGrid_SetCol, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetEditorMode)
BOOL
rawGrid_GetEditorMode(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetEditorMode)
    return (BOOL)MySyscall(pDrawGrid_GetEditorMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetEditorMode)
void
rawGrid_SetEditorMode(TDrawGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(DrawGrid_SetEditorMode)
    MySyscall(pDrawGrid_SetEditorMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetGridHeight)
int32_t
rawGrid_GetGridHeight(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetGridHeight)
    return (int32_t)MySyscall(pDrawGrid_GetGridHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetGridWidth)
int32_t
rawGrid_GetGridWidth(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetGridWidth)
    return (int32_t)MySyscall(pDrawGrid_GetGridWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetLeftCol)
int32_t
rawGrid_GetLeftCol(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetLeftCol)
    return (int32_t)MySyscall(pDrawGrid_GetLeftCol, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetLeftCol)
void
rawGrid_SetLeftCol(TDrawGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(DrawGrid_SetLeftCol)
    MySyscall(pDrawGrid_SetLeftCol, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetSelection)
TGridRect
rawGrid_GetSelection(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetSelection)
    TGridRect result;
    MySyscall(pDrawGrid_GetSelection, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DrawGrid_SetSelection)
void
rawGrid_SetSelection(TDrawGrid AObj, TGridRect AValue) {
    GET_FUNC_ADDR(DrawGrid_SetSelection)
    MySyscall(pDrawGrid_SetSelection, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetRow)
int32_t
rawGrid_GetRow(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetRow)
    return (int32_t)MySyscall(pDrawGrid_GetRow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetRow)
void
rawGrid_SetRow(TDrawGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(DrawGrid_SetRow)
    MySyscall(pDrawGrid_SetRow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetTopRow)
int32_t
rawGrid_GetTopRow(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetTopRow)
    return (int32_t)MySyscall(pDrawGrid_GetTopRow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetTopRow)
void
rawGrid_SetTopRow(TDrawGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(DrawGrid_SetTopRow)
    MySyscall(pDrawGrid_SetTopRow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetTabStop)
BOOL
rawGrid_GetTabStop(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetTabStop)
    return (BOOL)MySyscall(pDrawGrid_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetTabStop)
void
rawGrid_SetTabStop(TDrawGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(DrawGrid_SetTabStop)
    MySyscall(pDrawGrid_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetDockClientCount)
int32_t
rawGrid_GetDockClientCount(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetDockClientCount)
    return (int32_t)MySyscall(pDrawGrid_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetDockSite)
BOOL
rawGrid_GetDockSite(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetDockSite)
    return (BOOL)MySyscall(pDrawGrid_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetDockSite)
void
rawGrid_SetDockSite(TDrawGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(DrawGrid_SetDockSite)
    MySyscall(pDrawGrid_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetMouseInClient)
BOOL
rawGrid_GetMouseInClient(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetMouseInClient)
    return (BOOL)MySyscall(pDrawGrid_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetVisibleDockClientCount)
int32_t
rawGrid_GetVisibleDockClientCount(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pDrawGrid_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetBrush)
TBrush
rawGrid_GetBrush(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetBrush)
    return (TBrush)MySyscall(pDrawGrid_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetControlCount)
int32_t
rawGrid_GetControlCount(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetControlCount)
    return (int32_t)MySyscall(pDrawGrid_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetHandle)
HWND
rawGrid_GetHandle(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetHandle)
    return (HWND)MySyscall(pDrawGrid_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetParentWindow)
HWND
rawGrid_GetParentWindow(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetParentWindow)
    return (HWND)MySyscall(pDrawGrid_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetParentWindow)
void
rawGrid_SetParentWindow(TDrawGrid AObj, HWND AValue) {
    GET_FUNC_ADDR(DrawGrid_SetParentWindow)
    MySyscall(pDrawGrid_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetShowing)
BOOL
rawGrid_GetShowing(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetShowing)
    return (BOOL)MySyscall(pDrawGrid_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetUseDockManager)
BOOL
rawGrid_GetUseDockManager(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetUseDockManager)
    return (BOOL)MySyscall(pDrawGrid_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetUseDockManager)
void
rawGrid_SetUseDockManager(TDrawGrid AObj, BOOL AValue) {
    GET_FUNC_ADDR(DrawGrid_SetUseDockManager)
    MySyscall(pDrawGrid_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetAction)
TAction
rawGrid_GetAction(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetAction)
    return (TAction)MySyscall(pDrawGrid_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetAction)
void
rawGrid_SetAction(TDrawGrid AObj, TAction AValue) {
    GET_FUNC_ADDR(DrawGrid_SetAction)
    MySyscall(pDrawGrid_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetBoundsRect)
TRect
rawGrid_GetBoundsRect(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetBoundsRect)
    TRect result;
    MySyscall(pDrawGrid_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DrawGrid_SetBoundsRect)
void
rawGrid_SetBoundsRect(TDrawGrid AObj, TRect AValue) {
    GET_FUNC_ADDR(DrawGrid_SetBoundsRect)
    MySyscall(pDrawGrid_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetClientHeight)
int32_t
rawGrid_GetClientHeight(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetClientHeight)
    return (int32_t)MySyscall(pDrawGrid_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetClientHeight)
void
rawGrid_SetClientHeight(TDrawGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(DrawGrid_SetClientHeight)
    MySyscall(pDrawGrid_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetClientOrigin)
TPoint
rawGrid_GetClientOrigin(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetClientOrigin)
    TPoint result;
    MySyscall(pDrawGrid_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DrawGrid_GetClientRect)
TRect
rawGrid_GetClientRect(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetClientRect)
    TRect result;
    MySyscall(pDrawGrid_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(DrawGrid_GetClientWidth)
int32_t
rawGrid_GetClientWidth(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetClientWidth)
    return (int32_t)MySyscall(pDrawGrid_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetClientWidth)
void
rawGrid_SetClientWidth(TDrawGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(DrawGrid_SetClientWidth)
    MySyscall(pDrawGrid_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetControlState)
TControlState
rawGrid_GetControlState(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetControlState)
    return (TControlState)MySyscall(pDrawGrid_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetControlState)
void
rawGrid_SetControlState(TDrawGrid AObj, TControlState AValue) {
    GET_FUNC_ADDR(DrawGrid_SetControlState)
    MySyscall(pDrawGrid_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetControlStyle)
TControlStyle
rawGrid_GetControlStyle(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetControlStyle)
    return (TControlStyle)MySyscall(pDrawGrid_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetControlStyle)
void
rawGrid_SetControlStyle(TDrawGrid AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(DrawGrid_SetControlStyle)
    MySyscall(pDrawGrid_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetFloating)
BOOL
rawGrid_GetFloating(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetFloating)
    return (BOOL)MySyscall(pDrawGrid_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetParent)
TWinControl
rawGrid_GetParent(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetParent)
    return (TWinControl)MySyscall(pDrawGrid_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetParent)
void
rawGrid_SetParent(TDrawGrid AObj, TWinControl AValue) {
    GET_FUNC_ADDR(DrawGrid_SetParent)
    MySyscall(pDrawGrid_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetLeft)
int32_t
rawGrid_GetLeft(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetLeft)
    return (int32_t)MySyscall(pDrawGrid_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetLeft)
void
rawGrid_SetLeft(TDrawGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(DrawGrid_SetLeft)
    MySyscall(pDrawGrid_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetTop)
int32_t
rawGrid_GetTop(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetTop)
    return (int32_t)MySyscall(pDrawGrid_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetTop)
void
rawGrid_SetTop(TDrawGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(DrawGrid_SetTop)
    MySyscall(pDrawGrid_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetWidth)
int32_t
rawGrid_GetWidth(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetWidth)
    return (int32_t)MySyscall(pDrawGrid_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetWidth)
void
rawGrid_SetWidth(TDrawGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(DrawGrid_SetWidth)
    MySyscall(pDrawGrid_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetHeight)
int32_t
rawGrid_GetHeight(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetHeight)
    return (int32_t)MySyscall(pDrawGrid_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetHeight)
void
rawGrid_SetHeight(TDrawGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(DrawGrid_SetHeight)
    MySyscall(pDrawGrid_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetCursor)
TCursor
rawGrid_GetCursor(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetCursor)
    return (TCursor)MySyscall(pDrawGrid_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetCursor)
void
rawGrid_SetCursor(TDrawGrid AObj, TCursor AValue) {
    GET_FUNC_ADDR(DrawGrid_SetCursor)
    MySyscall(pDrawGrid_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetHint)
char*
rawGrid_GetHint(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetHint)
    return (char*)MySyscall(pDrawGrid_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetHint)
void
rawGrid_SetHint(TDrawGrid AObj, CChar char* AValue) {
    GET_FUNC_ADDR(DrawGrid_SetHint)
    MySyscall(pDrawGrid_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetComponentCount)
int32_t
rawGrid_GetComponentCount(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetComponentCount)
    return (int32_t)MySyscall(pDrawGrid_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetComponentIndex)
int32_t
rawGrid_GetComponentIndex(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetComponentIndex)
    return (int32_t)MySyscall(pDrawGrid_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetComponentIndex)
void
rawGrid_SetComponentIndex(TDrawGrid AObj, int32_t AValue) {
    GET_FUNC_ADDR(DrawGrid_SetComponentIndex)
    MySyscall(pDrawGrid_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetOwner)
TComponent
rawGrid_GetOwner(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetOwner)
    return (TComponent)MySyscall(pDrawGrid_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetName)
char*
rawGrid_GetName(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetName)
    return (char*)MySyscall(pDrawGrid_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetName)
void
rawGrid_SetName(TDrawGrid AObj, CChar char* AValue) {
    GET_FUNC_ADDR(DrawGrid_SetName)
    MySyscall(pDrawGrid_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetTag)
intptr_t
rawGrid_GetTag(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetTag)
    return (intptr_t)MySyscall(pDrawGrid_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetTag)
void
rawGrid_SetTag(TDrawGrid AObj, intptr_t AValue) {
    GET_FUNC_ADDR(DrawGrid_SetTag)
    MySyscall(pDrawGrid_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetAnchorSideLeft)
TAnchorSide
rawGrid_GetAnchorSideLeft(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pDrawGrid_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetAnchorSideLeft)
void
rawGrid_SetAnchorSideLeft(TDrawGrid AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(DrawGrid_SetAnchorSideLeft)
    MySyscall(pDrawGrid_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetAnchorSideTop)
TAnchorSide
rawGrid_GetAnchorSideTop(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pDrawGrid_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetAnchorSideTop)
void
rawGrid_SetAnchorSideTop(TDrawGrid AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(DrawGrid_SetAnchorSideTop)
    MySyscall(pDrawGrid_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetAnchorSideRight)
TAnchorSide
rawGrid_GetAnchorSideRight(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pDrawGrid_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetAnchorSideRight)
void
rawGrid_SetAnchorSideRight(TDrawGrid AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(DrawGrid_SetAnchorSideRight)
    MySyscall(pDrawGrid_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetAnchorSideBottom)
TAnchorSide
rawGrid_GetAnchorSideBottom(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pDrawGrid_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetAnchorSideBottom)
void
rawGrid_SetAnchorSideBottom(TDrawGrid AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(DrawGrid_SetAnchorSideBottom)
    MySyscall(pDrawGrid_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetChildSizing)
TControlChildSizing
rawGrid_GetChildSizing(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetChildSizing)
    return (TControlChildSizing)MySyscall(pDrawGrid_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetChildSizing)
void
rawGrid_SetChildSizing(TDrawGrid AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(DrawGrid_SetChildSizing)
    MySyscall(pDrawGrid_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetBorderSpacing)
TControlBorderSpacing
rawGrid_GetBorderSpacing(TDrawGrid AObj) {
    GET_FUNC_ADDR(DrawGrid_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pDrawGrid_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetBorderSpacing)
void
rawGrid_SetBorderSpacing(TDrawGrid AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(DrawGrid_SetBorderSpacing)
    MySyscall(pDrawGrid_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetColWidths)
int32_t
rawGrid_GetColWidths(TDrawGrid AObj, int32_t Index) {
    GET_FUNC_ADDR(DrawGrid_GetColWidths)
    return (int32_t)MySyscall(pDrawGrid_GetColWidths, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetColWidths)
void
rawGrid_SetColWidths(TDrawGrid AObj, int32_t Index, int32_t AValue) {
    GET_FUNC_ADDR(DrawGrid_SetColWidths)
    MySyscall(pDrawGrid_SetColWidths, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetRowHeights)
int32_t
rawGrid_GetRowHeights(TDrawGrid AObj, int32_t Index) {
    GET_FUNC_ADDR(DrawGrid_GetRowHeights)
    return (int32_t)MySyscall(pDrawGrid_GetRowHeights, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_SetRowHeights)
void
rawGrid_SetRowHeights(TDrawGrid AObj, int32_t Index, int32_t AValue) {
    GET_FUNC_ADDR(DrawGrid_SetRowHeights)
    MySyscall(pDrawGrid_SetRowHeights, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetDockClients)
TControl
rawGrid_GetDockClients(TDrawGrid AObj, int32_t Index) {
    GET_FUNC_ADDR(DrawGrid_GetDockClients)
    return (TControl)MySyscall(pDrawGrid_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetControls)
TControl
rawGrid_GetControls(TDrawGrid AObj, int32_t Index) {
    GET_FUNC_ADDR(DrawGrid_GetControls)
    return (TControl)MySyscall(pDrawGrid_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetComponents)
TComponent
rawGrid_GetComponents(TDrawGrid AObj, int32_t AIndex) {
    GET_FUNC_ADDR(DrawGrid_GetComponents)
    return (TComponent)MySyscall(pDrawGrid_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_GetAnchorSide)
TAnchorSide
rawGrid_GetAnchorSide(TDrawGrid AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(DrawGrid_GetAnchorSide)
    return (TAnchorSide)MySyscall(pDrawGrid_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(DrawGrid_StaticClassType)
TClass
rawGrid_StaticClassType() {
    GET_FUNC_ADDR(DrawGrid_StaticClassType)
    return (TClass)MySyscall(pDrawGrid_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TValueListEditor-------------------

DEFINE_FUNC_PTR(ValueListEditor_Create)
TValueListEditor
ValueListEditor_Create(TComponent AOwner) {
    GET_FUNC_ADDR(ValueListEditor_Create)
    return (TValueListEditor)MySyscall(pValueListEditor_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_Free)
void
ValueListEditor_Free(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_Free)
    MySyscall(pValueListEditor_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_DeleteRow)
void
ValueListEditor_DeleteRow(TValueListEditor AObj, int32_t ARow) {
    GET_FUNC_ADDR(ValueListEditor_DeleteRow)
    MySyscall(pValueListEditor_DeleteRow, 2, AObj, ARow ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_Refresh)
void
ValueListEditor_Refresh(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_Refresh)
    MySyscall(pValueListEditor_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_CellRect)
TRect
ValueListEditor_CellRect(TValueListEditor AObj, int32_t ACol, int32_t ARow) {
    GET_FUNC_ADDR(ValueListEditor_CellRect)
    TRect result;
    MySyscall(pValueListEditor_CellRect, 4, AObj, ACol, ARow, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ValueListEditor_MouseToCell)
void
ValueListEditor_MouseToCell(TValueListEditor AObj, int32_t X, int32_t Y, int32_t* ACol, int32_t* ARow) {
    GET_FUNC_ADDR(ValueListEditor_MouseToCell)
    MySyscall(pValueListEditor_MouseToCell, 5, AObj, X, Y, ACol, ARow ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_MouseCoord)
TGridCoord
ValueListEditor_MouseCoord(TValueListEditor AObj, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(ValueListEditor_MouseCoord)
    TGridCoord result;
    MySyscall(pValueListEditor_MouseCoord, 4, AObj, X, Y, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ValueListEditor_CanFocus)
BOOL
ValueListEditor_CanFocus(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_CanFocus)
    return (BOOL)MySyscall(pValueListEditor_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_ContainsControl)
BOOL
ValueListEditor_ContainsControl(TValueListEditor AObj, TControl Control) {
    GET_FUNC_ADDR(ValueListEditor_ContainsControl)
    return (BOOL)MySyscall(pValueListEditor_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_ControlAtPos)
TControl
ValueListEditor_ControlAtPos(TValueListEditor AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(ValueListEditor_ControlAtPos)
    return (TControl)MySyscall(pValueListEditor_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_DisableAlign)
void
ValueListEditor_DisableAlign(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_DisableAlign)
    MySyscall(pValueListEditor_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_EnableAlign)
void
ValueListEditor_EnableAlign(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_EnableAlign)
    MySyscall(pValueListEditor_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_FindChildControl)
TControl
ValueListEditor_FindChildControl(TValueListEditor AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(ValueListEditor_FindChildControl)
    return (TControl)MySyscall(pValueListEditor_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_FlipChildren)
void
ValueListEditor_FlipChildren(TValueListEditor AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(ValueListEditor_FlipChildren)
    MySyscall(pValueListEditor_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_Focused)
BOOL
ValueListEditor_Focused(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_Focused)
    return (BOOL)MySyscall(pValueListEditor_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_HandleAllocated)
BOOL
ValueListEditor_HandleAllocated(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_HandleAllocated)
    return (BOOL)MySyscall(pValueListEditor_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_InsertControl)
void
ValueListEditor_InsertControl(TValueListEditor AObj, TControl AControl) {
    GET_FUNC_ADDR(ValueListEditor_InsertControl)
    MySyscall(pValueListEditor_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_Invalidate)
void
ValueListEditor_Invalidate(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_Invalidate)
    MySyscall(pValueListEditor_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_PaintTo)
void
ValueListEditor_PaintTo(TValueListEditor AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(ValueListEditor_PaintTo)
    MySyscall(pValueListEditor_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_RemoveControl)
void
ValueListEditor_RemoveControl(TValueListEditor AObj, TControl AControl) {
    GET_FUNC_ADDR(ValueListEditor_RemoveControl)
    MySyscall(pValueListEditor_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_Realign)
void
ValueListEditor_Realign(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_Realign)
    MySyscall(pValueListEditor_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_Repaint)
void
ValueListEditor_Repaint(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_Repaint)
    MySyscall(pValueListEditor_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_ScaleBy)
void
ValueListEditor_ScaleBy(TValueListEditor AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(ValueListEditor_ScaleBy)
    MySyscall(pValueListEditor_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_ScrollBy)
void
ValueListEditor_ScrollBy(TValueListEditor AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(ValueListEditor_ScrollBy)
    MySyscall(pValueListEditor_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetBounds)
void
ValueListEditor_SetBounds(TValueListEditor AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(ValueListEditor_SetBounds)
    MySyscall(pValueListEditor_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetFocus)
void
ValueListEditor_SetFocus(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_SetFocus)
    MySyscall(pValueListEditor_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_Update)
void
ValueListEditor_Update(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_Update)
    MySyscall(pValueListEditor_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_BringToFront)
void
ValueListEditor_BringToFront(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_BringToFront)
    MySyscall(pValueListEditor_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_ClientToScreen)
TPoint
ValueListEditor_ClientToScreen(TValueListEditor AObj, TPoint Point) {
    GET_FUNC_ADDR(ValueListEditor_ClientToScreen)
    TPoint result;
    MySyscall(pValueListEditor_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ValueListEditor_ClientToParent)
TPoint
ValueListEditor_ClientToParent(TValueListEditor AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ValueListEditor_ClientToParent)
    TPoint result;
    MySyscall(pValueListEditor_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ValueListEditor_Dragging)
BOOL
ValueListEditor_Dragging(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_Dragging)
    return (BOOL)MySyscall(pValueListEditor_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_HasParent)
BOOL
ValueListEditor_HasParent(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_HasParent)
    return (BOOL)MySyscall(pValueListEditor_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_Hide)
void
ValueListEditor_Hide(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_Hide)
    MySyscall(pValueListEditor_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_Perform)
intptr_t
ValueListEditor_Perform(TValueListEditor AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(ValueListEditor_Perform)
    return (intptr_t)MySyscall(pValueListEditor_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_ScreenToClient)
TPoint
ValueListEditor_ScreenToClient(TValueListEditor AObj, TPoint Point) {
    GET_FUNC_ADDR(ValueListEditor_ScreenToClient)
    TPoint result;
    MySyscall(pValueListEditor_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ValueListEditor_ParentToClient)
TPoint
ValueListEditor_ParentToClient(TValueListEditor AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ValueListEditor_ParentToClient)
    TPoint result;
    MySyscall(pValueListEditor_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ValueListEditor_SendToBack)
void
ValueListEditor_SendToBack(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_SendToBack)
    MySyscall(pValueListEditor_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_Show)
void
ValueListEditor_Show(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_Show)
    MySyscall(pValueListEditor_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetTextBuf)
int32_t
ValueListEditor_GetTextBuf(TValueListEditor AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(ValueListEditor_GetTextBuf)
    return (int32_t)MySyscall(pValueListEditor_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetTextLen)
int32_t
ValueListEditor_GetTextLen(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetTextLen)
    return (int32_t)MySyscall(pValueListEditor_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetTextBuf)
void
ValueListEditor_SetTextBuf(TValueListEditor AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(ValueListEditor_SetTextBuf)
    MySyscall(pValueListEditor_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_FindComponent)
TComponent
ValueListEditor_FindComponent(TValueListEditor AObj, CChar char* AName) {
    GET_FUNC_ADDR(ValueListEditor_FindComponent)
    return (TComponent)MySyscall(pValueListEditor_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetNamePath)
char*
ValueListEditor_GetNamePath(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetNamePath)
    return (char*)MySyscall(pValueListEditor_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_Assign)
void
ValueListEditor_Assign(TValueListEditor AObj, TObject Source) {
    GET_FUNC_ADDR(ValueListEditor_Assign)
    MySyscall(pValueListEditor_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_ClassType)
TClass
ValueListEditor_ClassType(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_ClassType)
    return (TClass)MySyscall(pValueListEditor_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_ClassName)
char*
ValueListEditor_ClassName(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_ClassName)
    return (char*)MySyscall(pValueListEditor_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_InstanceSize)
int32_t
ValueListEditor_InstanceSize(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_InstanceSize)
    return (int32_t)MySyscall(pValueListEditor_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_InheritsFrom)
BOOL
ValueListEditor_InheritsFrom(TValueListEditor AObj, TClass AClass) {
    GET_FUNC_ADDR(ValueListEditor_InheritsFrom)
    return (BOOL)MySyscall(pValueListEditor_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_Equals)
BOOL
ValueListEditor_Equals(TValueListEditor AObj, TObject Obj) {
    GET_FUNC_ADDR(ValueListEditor_Equals)
    return (BOOL)MySyscall(pValueListEditor_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetHashCode)
int32_t
ValueListEditor_GetHashCode(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetHashCode)
    return (int32_t)MySyscall(pValueListEditor_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_ToString)
char*
ValueListEditor_ToString(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_ToString)
    return (char*)MySyscall(pValueListEditor_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_AnchorToNeighbour)
void
ValueListEditor_AnchorToNeighbour(TValueListEditor AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ValueListEditor_AnchorToNeighbour)
    MySyscall(pValueListEditor_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_AnchorParallel)
void
ValueListEditor_AnchorParallel(TValueListEditor AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ValueListEditor_AnchorParallel)
    MySyscall(pValueListEditor_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_AnchorHorizontalCenterTo)
void
ValueListEditor_AnchorHorizontalCenterTo(TValueListEditor AObj, TControl ASibling) {
    GET_FUNC_ADDR(ValueListEditor_AnchorHorizontalCenterTo)
    MySyscall(pValueListEditor_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_AnchorVerticalCenterTo)
void
ValueListEditor_AnchorVerticalCenterTo(TValueListEditor AObj, TControl ASibling) {
    GET_FUNC_ADDR(ValueListEditor_AnchorVerticalCenterTo)
    MySyscall(pValueListEditor_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_AnchorSame)
void
ValueListEditor_AnchorSame(TValueListEditor AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(ValueListEditor_AnchorSame)
    MySyscall(pValueListEditor_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_AnchorAsAlign)
void
ValueListEditor_AnchorAsAlign(TValueListEditor AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(ValueListEditor_AnchorAsAlign)
    MySyscall(pValueListEditor_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_AnchorClient)
void
ValueListEditor_AnchorClient(TValueListEditor AObj, int32_t ASpace) {
    GET_FUNC_ADDR(ValueListEditor_AnchorClient)
    MySyscall(pValueListEditor_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_ScaleDesignToForm)
int32_t
ValueListEditor_ScaleDesignToForm(TValueListEditor AObj, int32_t ASize) {
    GET_FUNC_ADDR(ValueListEditor_ScaleDesignToForm)
    return (int32_t)MySyscall(pValueListEditor_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_ScaleFormToDesign)
int32_t
ValueListEditor_ScaleFormToDesign(TValueListEditor AObj, int32_t ASize) {
    GET_FUNC_ADDR(ValueListEditor_ScaleFormToDesign)
    return (int32_t)MySyscall(pValueListEditor_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_Scale96ToForm)
int32_t
ValueListEditor_Scale96ToForm(TValueListEditor AObj, int32_t ASize) {
    GET_FUNC_ADDR(ValueListEditor_Scale96ToForm)
    return (int32_t)MySyscall(pValueListEditor_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_ScaleFormTo96)
int32_t
ValueListEditor_ScaleFormTo96(TValueListEditor AObj, int32_t ASize) {
    GET_FUNC_ADDR(ValueListEditor_ScaleFormTo96)
    return (int32_t)MySyscall(pValueListEditor_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_Scale96ToFont)
int32_t
ValueListEditor_Scale96ToFont(TValueListEditor AObj, int32_t ASize) {
    GET_FUNC_ADDR(ValueListEditor_Scale96ToFont)
    return (int32_t)MySyscall(pValueListEditor_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_ScaleFontTo96)
int32_t
ValueListEditor_ScaleFontTo96(TValueListEditor AObj, int32_t ASize) {
    GET_FUNC_ADDR(ValueListEditor_ScaleFontTo96)
    return (int32_t)MySyscall(pValueListEditor_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_ScaleScreenToFont)
int32_t
ValueListEditor_ScaleScreenToFont(TValueListEditor AObj, int32_t ASize) {
    GET_FUNC_ADDR(ValueListEditor_ScaleScreenToFont)
    return (int32_t)MySyscall(pValueListEditor_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_ScaleFontToScreen)
int32_t
ValueListEditor_ScaleFontToScreen(TValueListEditor AObj, int32_t ASize) {
    GET_FUNC_ADDR(ValueListEditor_ScaleFontToScreen)
    return (int32_t)MySyscall(pValueListEditor_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_Scale96ToScreen)
int32_t
ValueListEditor_Scale96ToScreen(TValueListEditor AObj, int32_t ASize) {
    GET_FUNC_ADDR(ValueListEditor_Scale96ToScreen)
    return (int32_t)MySyscall(pValueListEditor_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_ScaleScreenTo96)
int32_t
ValueListEditor_ScaleScreenTo96(TValueListEditor AObj, int32_t ASize) {
    GET_FUNC_ADDR(ValueListEditor_ScaleScreenTo96)
    return (int32_t)MySyscall(pValueListEditor_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_AutoAdjustLayout)
void
ValueListEditor_AutoAdjustLayout(TValueListEditor AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(ValueListEditor_AutoAdjustLayout)
    MySyscall(pValueListEditor_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_FixDesignFontsPPI)
void
ValueListEditor_FixDesignFontsPPI(TValueListEditor AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(ValueListEditor_FixDesignFontsPPI)
    MySyscall(pValueListEditor_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_ScaleFontsPPI)
void
ValueListEditor_ScaleFontsPPI(TValueListEditor AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(ValueListEditor_ScaleFontsPPI)
    MySyscall(pValueListEditor_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetColCount)
int32_t
ValueListEditor_GetColCount(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetColCount)
    return (int32_t)MySyscall(pValueListEditor_GetColCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetColCount)
void
ValueListEditor_SetColCount(TValueListEditor AObj, int32_t AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetColCount)
    MySyscall(pValueListEditor_SetColCount, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetRowCount)
int32_t
ValueListEditor_GetRowCount(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetRowCount)
    return (int32_t)MySyscall(pValueListEditor_GetRowCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetVisibleColCount)
int32_t
ValueListEditor_GetVisibleColCount(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetVisibleColCount)
    return (int32_t)MySyscall(pValueListEditor_GetVisibleColCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetVisibleRowCount)
int32_t
ValueListEditor_GetVisibleRowCount(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetVisibleRowCount)
    return (int32_t)MySyscall(pValueListEditor_GetVisibleRowCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetAlign)
TAlign
ValueListEditor_GetAlign(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetAlign)
    return (TAlign)MySyscall(pValueListEditor_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetAlign)
void
ValueListEditor_SetAlign(TValueListEditor AObj, TAlign AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetAlign)
    MySyscall(pValueListEditor_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetAnchors)
TAnchors
ValueListEditor_GetAnchors(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetAnchors)
    return (TAnchors)MySyscall(pValueListEditor_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetAnchors)
void
ValueListEditor_SetAnchors(TValueListEditor AObj, TAnchors AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetAnchors)
    MySyscall(pValueListEditor_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetBiDiMode)
TBiDiMode
ValueListEditor_GetBiDiMode(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetBiDiMode)
    return (TBiDiMode)MySyscall(pValueListEditor_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetBiDiMode)
void
ValueListEditor_SetBiDiMode(TValueListEditor AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetBiDiMode)
    MySyscall(pValueListEditor_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetBorderStyle)
TBorderStyle
ValueListEditor_GetBorderStyle(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetBorderStyle)
    return (TBorderStyle)MySyscall(pValueListEditor_GetBorderStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetBorderStyle)
void
ValueListEditor_SetBorderStyle(TValueListEditor AObj, TBorderStyle AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetBorderStyle)
    MySyscall(pValueListEditor_SetBorderStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetColor)
TColor
ValueListEditor_GetColor(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetColor)
    return (TColor)MySyscall(pValueListEditor_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetColor)
void
ValueListEditor_SetColor(TValueListEditor AObj, TColor AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetColor)
    MySyscall(pValueListEditor_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetConstraints)
TSizeConstraints
ValueListEditor_GetConstraints(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetConstraints)
    return (TSizeConstraints)MySyscall(pValueListEditor_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetConstraints)
void
ValueListEditor_SetConstraints(TValueListEditor AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetConstraints)
    MySyscall(pValueListEditor_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetDefaultColWidth)
int32_t
ValueListEditor_GetDefaultColWidth(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetDefaultColWidth)
    return (int32_t)MySyscall(pValueListEditor_GetDefaultColWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetDefaultColWidth)
void
ValueListEditor_SetDefaultColWidth(TValueListEditor AObj, int32_t AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetDefaultColWidth)
    MySyscall(pValueListEditor_SetDefaultColWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetDefaultDrawing)
BOOL
ValueListEditor_GetDefaultDrawing(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetDefaultDrawing)
    return (BOOL)MySyscall(pValueListEditor_GetDefaultDrawing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetDefaultDrawing)
void
ValueListEditor_SetDefaultDrawing(TValueListEditor AObj, BOOL AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetDefaultDrawing)
    MySyscall(pValueListEditor_SetDefaultDrawing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetDefaultRowHeight)
int32_t
ValueListEditor_GetDefaultRowHeight(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetDefaultRowHeight)
    return (int32_t)MySyscall(pValueListEditor_GetDefaultRowHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetDefaultRowHeight)
void
ValueListEditor_SetDefaultRowHeight(TValueListEditor AObj, int32_t AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetDefaultRowHeight)
    MySyscall(pValueListEditor_SetDefaultRowHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetDoubleBuffered)
BOOL
ValueListEditor_GetDoubleBuffered(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetDoubleBuffered)
    return (BOOL)MySyscall(pValueListEditor_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetDoubleBuffered)
void
ValueListEditor_SetDoubleBuffered(TValueListEditor AObj, BOOL AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetDoubleBuffered)
    MySyscall(pValueListEditor_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetDragCursor)
TCursor
ValueListEditor_GetDragCursor(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetDragCursor)
    return (TCursor)MySyscall(pValueListEditor_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetDragCursor)
void
ValueListEditor_SetDragCursor(TValueListEditor AObj, TCursor AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetDragCursor)
    MySyscall(pValueListEditor_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetDragKind)
TDragKind
ValueListEditor_GetDragKind(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetDragKind)
    return (TDragKind)MySyscall(pValueListEditor_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetDragKind)
void
ValueListEditor_SetDragKind(TValueListEditor AObj, TDragKind AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetDragKind)
    MySyscall(pValueListEditor_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetDragMode)
TDragMode
ValueListEditor_GetDragMode(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetDragMode)
    return (TDragMode)MySyscall(pValueListEditor_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetDragMode)
void
ValueListEditor_SetDragMode(TValueListEditor AObj, TDragMode AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetDragMode)
    MySyscall(pValueListEditor_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetDropDownRows)
int32_t
ValueListEditor_GetDropDownRows(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetDropDownRows)
    return (int32_t)MySyscall(pValueListEditor_GetDropDownRows, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetDropDownRows)
void
ValueListEditor_SetDropDownRows(TValueListEditor AObj, int32_t AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetDropDownRows)
    MySyscall(pValueListEditor_SetDropDownRows, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetEnabled)
BOOL
ValueListEditor_GetEnabled(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetEnabled)
    return (BOOL)MySyscall(pValueListEditor_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetEnabled)
void
ValueListEditor_SetEnabled(TValueListEditor AObj, BOOL AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetEnabled)
    MySyscall(pValueListEditor_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetFixedColor)
TColor
ValueListEditor_GetFixedColor(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetFixedColor)
    return (TColor)MySyscall(pValueListEditor_GetFixedColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetFixedColor)
void
ValueListEditor_SetFixedColor(TValueListEditor AObj, TColor AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetFixedColor)
    MySyscall(pValueListEditor_SetFixedColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetFixedCols)
int32_t
ValueListEditor_GetFixedCols(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetFixedCols)
    return (int32_t)MySyscall(pValueListEditor_GetFixedCols, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetFixedCols)
void
ValueListEditor_SetFixedCols(TValueListEditor AObj, int32_t AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetFixedCols)
    MySyscall(pValueListEditor_SetFixedCols, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetFont)
TFont
ValueListEditor_GetFont(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetFont)
    return (TFont)MySyscall(pValueListEditor_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetFont)
void
ValueListEditor_SetFont(TValueListEditor AObj, TFont AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetFont)
    MySyscall(pValueListEditor_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetGridLineWidth)
int32_t
ValueListEditor_GetGridLineWidth(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetGridLineWidth)
    return (int32_t)MySyscall(pValueListEditor_GetGridLineWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetGridLineWidth)
void
ValueListEditor_SetGridLineWidth(TValueListEditor AObj, int32_t AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetGridLineWidth)
    MySyscall(pValueListEditor_SetGridLineWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetOptions)
TGridOptions
ValueListEditor_GetOptions(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetOptions)
    return (TGridOptions)MySyscall(pValueListEditor_GetOptions, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOptions)
void
ValueListEditor_SetOptions(TValueListEditor AObj, TGridOptions AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetOptions)
    MySyscall(pValueListEditor_SetOptions, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetParentColor)
BOOL
ValueListEditor_GetParentColor(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetParentColor)
    return (BOOL)MySyscall(pValueListEditor_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetParentColor)
void
ValueListEditor_SetParentColor(TValueListEditor AObj, BOOL AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetParentColor)
    MySyscall(pValueListEditor_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetParentDoubleBuffered)
BOOL
ValueListEditor_GetParentDoubleBuffered(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pValueListEditor_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetParentDoubleBuffered)
void
ValueListEditor_SetParentDoubleBuffered(TValueListEditor AObj, BOOL AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetParentDoubleBuffered)
    MySyscall(pValueListEditor_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetParentFont)
BOOL
ValueListEditor_GetParentFont(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetParentFont)
    return (BOOL)MySyscall(pValueListEditor_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetParentFont)
void
ValueListEditor_SetParentFont(TValueListEditor AObj, BOOL AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetParentFont)
    MySyscall(pValueListEditor_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetParentShowHint)
BOOL
ValueListEditor_GetParentShowHint(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetParentShowHint)
    return (BOOL)MySyscall(pValueListEditor_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetParentShowHint)
void
ValueListEditor_SetParentShowHint(TValueListEditor AObj, BOOL AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetParentShowHint)
    MySyscall(pValueListEditor_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetPopupMenu)
TPopupMenu
ValueListEditor_GetPopupMenu(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetPopupMenu)
    return (TPopupMenu)MySyscall(pValueListEditor_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetPopupMenu)
void
ValueListEditor_SetPopupMenu(TValueListEditor AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetPopupMenu)
    MySyscall(pValueListEditor_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetScrollBars)
TScrollStyle
ValueListEditor_GetScrollBars(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetScrollBars)
    return (TScrollStyle)MySyscall(pValueListEditor_GetScrollBars, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetScrollBars)
void
ValueListEditor_SetScrollBars(TValueListEditor AObj, TScrollStyle AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetScrollBars)
    MySyscall(pValueListEditor_SetScrollBars, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetShowHint)
BOOL
ValueListEditor_GetShowHint(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetShowHint)
    return (BOOL)MySyscall(pValueListEditor_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetShowHint)
void
ValueListEditor_SetShowHint(TValueListEditor AObj, BOOL AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetShowHint)
    MySyscall(pValueListEditor_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetStrings)
TStrings
ValueListEditor_GetStrings(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetStrings)
    return (TStrings)MySyscall(pValueListEditor_GetStrings, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetStrings)
void
ValueListEditor_SetStrings(TValueListEditor AObj, TStrings AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetStrings)
    MySyscall(pValueListEditor_SetStrings, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetTabOrder)
TTabOrder
ValueListEditor_GetTabOrder(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetTabOrder)
    return (TTabOrder)MySyscall(pValueListEditor_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetTabOrder)
void
ValueListEditor_SetTabOrder(TValueListEditor AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetTabOrder)
    MySyscall(pValueListEditor_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetVisible)
BOOL
ValueListEditor_GetVisible(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetVisible)
    return (BOOL)MySyscall(pValueListEditor_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetVisible)
void
ValueListEditor_SetVisible(TValueListEditor AObj, BOOL AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetVisible)
    MySyscall(pValueListEditor_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnClick)
void
ValueListEditor_SetOnClick(TValueListEditor AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnClick)
    MySyscall(pValueListEditor_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnContextPopup)
void
ValueListEditor_SetOnContextPopup(TValueListEditor AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnContextPopup)
    MySyscall(pValueListEditor_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnDblClick)
void
ValueListEditor_SetOnDblClick(TValueListEditor AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnDblClick)
    MySyscall(pValueListEditor_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnDragDrop)
void
ValueListEditor_SetOnDragDrop(TValueListEditor AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnDragDrop)
    MySyscall(pValueListEditor_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnDragOver)
void
ValueListEditor_SetOnDragOver(TValueListEditor AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnDragOver)
    MySyscall(pValueListEditor_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnDrawCell)
void
ValueListEditor_SetOnDrawCell(TValueListEditor AObj, TDrawCellEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnDrawCell)
    MySyscall(pValueListEditor_SetOnDrawCell, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnEndDock)
void
ValueListEditor_SetOnEndDock(TValueListEditor AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnEndDock)
    MySyscall(pValueListEditor_SetOnEndDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnEndDrag)
void
ValueListEditor_SetOnEndDrag(TValueListEditor AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnEndDrag)
    MySyscall(pValueListEditor_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnEnter)
void
ValueListEditor_SetOnEnter(TValueListEditor AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnEnter)
    MySyscall(pValueListEditor_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnExit)
void
ValueListEditor_SetOnExit(TValueListEditor AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnExit)
    MySyscall(pValueListEditor_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnGetEditMask)
void
ValueListEditor_SetOnGetEditMask(TValueListEditor AObj, TGetEditEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnGetEditMask)
    MySyscall(pValueListEditor_SetOnGetEditMask, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnGetEditText)
void
ValueListEditor_SetOnGetEditText(TValueListEditor AObj, TGetEditEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnGetEditText)
    MySyscall(pValueListEditor_SetOnGetEditText, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnKeyDown)
void
ValueListEditor_SetOnKeyDown(TValueListEditor AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnKeyDown)
    MySyscall(pValueListEditor_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnKeyPress)
void
ValueListEditor_SetOnKeyPress(TValueListEditor AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnKeyPress)
    MySyscall(pValueListEditor_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnKeyUp)
void
ValueListEditor_SetOnKeyUp(TValueListEditor AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnKeyUp)
    MySyscall(pValueListEditor_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnMouseDown)
void
ValueListEditor_SetOnMouseDown(TValueListEditor AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnMouseDown)
    MySyscall(pValueListEditor_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnMouseEnter)
void
ValueListEditor_SetOnMouseEnter(TValueListEditor AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnMouseEnter)
    MySyscall(pValueListEditor_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnMouseLeave)
void
ValueListEditor_SetOnMouseLeave(TValueListEditor AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnMouseLeave)
    MySyscall(pValueListEditor_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnMouseMove)
void
ValueListEditor_SetOnMouseMove(TValueListEditor AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnMouseMove)
    MySyscall(pValueListEditor_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnMouseUp)
void
ValueListEditor_SetOnMouseUp(TValueListEditor AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnMouseUp)
    MySyscall(pValueListEditor_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnMouseWheelDown)
void
ValueListEditor_SetOnMouseWheelDown(TValueListEditor AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnMouseWheelDown)
    MySyscall(pValueListEditor_SetOnMouseWheelDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnMouseWheelUp)
void
ValueListEditor_SetOnMouseWheelUp(TValueListEditor AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnMouseWheelUp)
    MySyscall(pValueListEditor_SetOnMouseWheelUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnSelectCell)
void
ValueListEditor_SetOnSelectCell(TValueListEditor AObj, TSelectCellEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnSelectCell)
    MySyscall(pValueListEditor_SetOnSelectCell, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnSetEditText)
void
ValueListEditor_SetOnSetEditText(TValueListEditor AObj, TSetEditEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnSetEditText)
    MySyscall(pValueListEditor_SetOnSetEditText, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnStartDock)
void
ValueListEditor_SetOnStartDock(TValueListEditor AObj, TStartDockEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnStartDock)
    MySyscall(pValueListEditor_SetOnStartDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetOnTopLeftChanged)
void
ValueListEditor_SetOnTopLeftChanged(TValueListEditor AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ValueListEditor_SetOnTopLeftChanged)
    MySyscall(pValueListEditor_SetOnTopLeftChanged, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetCanvas)
TCanvas
ValueListEditor_GetCanvas(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetCanvas)
    return (TCanvas)MySyscall(pValueListEditor_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetCol)
int32_t
ValueListEditor_GetCol(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetCol)
    return (int32_t)MySyscall(pValueListEditor_GetCol, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetCol)
void
ValueListEditor_SetCol(TValueListEditor AObj, int32_t AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetCol)
    MySyscall(pValueListEditor_SetCol, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetEditorMode)
BOOL
ValueListEditor_GetEditorMode(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetEditorMode)
    return (BOOL)MySyscall(pValueListEditor_GetEditorMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetEditorMode)
void
ValueListEditor_SetEditorMode(TValueListEditor AObj, BOOL AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetEditorMode)
    MySyscall(pValueListEditor_SetEditorMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetGridHeight)
int32_t
ValueListEditor_GetGridHeight(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetGridHeight)
    return (int32_t)MySyscall(pValueListEditor_GetGridHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetGridWidth)
int32_t
ValueListEditor_GetGridWidth(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetGridWidth)
    return (int32_t)MySyscall(pValueListEditor_GetGridWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetLeftCol)
int32_t
ValueListEditor_GetLeftCol(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetLeftCol)
    return (int32_t)MySyscall(pValueListEditor_GetLeftCol, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetLeftCol)
void
ValueListEditor_SetLeftCol(TValueListEditor AObj, int32_t AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetLeftCol)
    MySyscall(pValueListEditor_SetLeftCol, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetSelection)
TGridRect
ValueListEditor_GetSelection(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetSelection)
    TGridRect result;
    MySyscall(pValueListEditor_GetSelection, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ValueListEditor_SetSelection)
void
ValueListEditor_SetSelection(TValueListEditor AObj, TGridRect AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetSelection)
    MySyscall(pValueListEditor_SetSelection, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetRow)
int32_t
ValueListEditor_GetRow(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetRow)
    return (int32_t)MySyscall(pValueListEditor_GetRow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetRow)
void
ValueListEditor_SetRow(TValueListEditor AObj, int32_t AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetRow)
    MySyscall(pValueListEditor_SetRow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetTopRow)
int32_t
ValueListEditor_GetTopRow(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetTopRow)
    return (int32_t)MySyscall(pValueListEditor_GetTopRow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetTopRow)
void
ValueListEditor_SetTopRow(TValueListEditor AObj, int32_t AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetTopRow)
    MySyscall(pValueListEditor_SetTopRow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetTabStop)
BOOL
ValueListEditor_GetTabStop(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetTabStop)
    return (BOOL)MySyscall(pValueListEditor_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetTabStop)
void
ValueListEditor_SetTabStop(TValueListEditor AObj, BOOL AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetTabStop)
    MySyscall(pValueListEditor_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetDockClientCount)
int32_t
ValueListEditor_GetDockClientCount(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetDockClientCount)
    return (int32_t)MySyscall(pValueListEditor_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetDockSite)
BOOL
ValueListEditor_GetDockSite(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetDockSite)
    return (BOOL)MySyscall(pValueListEditor_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetDockSite)
void
ValueListEditor_SetDockSite(TValueListEditor AObj, BOOL AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetDockSite)
    MySyscall(pValueListEditor_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetMouseInClient)
BOOL
ValueListEditor_GetMouseInClient(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetMouseInClient)
    return (BOOL)MySyscall(pValueListEditor_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetVisibleDockClientCount)
int32_t
ValueListEditor_GetVisibleDockClientCount(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pValueListEditor_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetBrush)
TBrush
ValueListEditor_GetBrush(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetBrush)
    return (TBrush)MySyscall(pValueListEditor_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetControlCount)
int32_t
ValueListEditor_GetControlCount(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetControlCount)
    return (int32_t)MySyscall(pValueListEditor_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetHandle)
HWND
ValueListEditor_GetHandle(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetHandle)
    return (HWND)MySyscall(pValueListEditor_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetParentWindow)
HWND
ValueListEditor_GetParentWindow(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetParentWindow)
    return (HWND)MySyscall(pValueListEditor_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetParentWindow)
void
ValueListEditor_SetParentWindow(TValueListEditor AObj, HWND AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetParentWindow)
    MySyscall(pValueListEditor_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetShowing)
BOOL
ValueListEditor_GetShowing(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetShowing)
    return (BOOL)MySyscall(pValueListEditor_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetUseDockManager)
BOOL
ValueListEditor_GetUseDockManager(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetUseDockManager)
    return (BOOL)MySyscall(pValueListEditor_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetUseDockManager)
void
ValueListEditor_SetUseDockManager(TValueListEditor AObj, BOOL AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetUseDockManager)
    MySyscall(pValueListEditor_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetAction)
TAction
ValueListEditor_GetAction(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetAction)
    return (TAction)MySyscall(pValueListEditor_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetAction)
void
ValueListEditor_SetAction(TValueListEditor AObj, TAction AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetAction)
    MySyscall(pValueListEditor_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetBoundsRect)
TRect
ValueListEditor_GetBoundsRect(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetBoundsRect)
    TRect result;
    MySyscall(pValueListEditor_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ValueListEditor_SetBoundsRect)
void
ValueListEditor_SetBoundsRect(TValueListEditor AObj, TRect AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetBoundsRect)
    MySyscall(pValueListEditor_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetClientHeight)
int32_t
ValueListEditor_GetClientHeight(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetClientHeight)
    return (int32_t)MySyscall(pValueListEditor_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetClientHeight)
void
ValueListEditor_SetClientHeight(TValueListEditor AObj, int32_t AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetClientHeight)
    MySyscall(pValueListEditor_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetClientOrigin)
TPoint
ValueListEditor_GetClientOrigin(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetClientOrigin)
    TPoint result;
    MySyscall(pValueListEditor_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ValueListEditor_GetClientRect)
TRect
ValueListEditor_GetClientRect(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetClientRect)
    TRect result;
    MySyscall(pValueListEditor_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ValueListEditor_GetClientWidth)
int32_t
ValueListEditor_GetClientWidth(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetClientWidth)
    return (int32_t)MySyscall(pValueListEditor_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetClientWidth)
void
ValueListEditor_SetClientWidth(TValueListEditor AObj, int32_t AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetClientWidth)
    MySyscall(pValueListEditor_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetControlState)
TControlState
ValueListEditor_GetControlState(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetControlState)
    return (TControlState)MySyscall(pValueListEditor_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetControlState)
void
ValueListEditor_SetControlState(TValueListEditor AObj, TControlState AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetControlState)
    MySyscall(pValueListEditor_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetControlStyle)
TControlStyle
ValueListEditor_GetControlStyle(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetControlStyle)
    return (TControlStyle)MySyscall(pValueListEditor_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetControlStyle)
void
ValueListEditor_SetControlStyle(TValueListEditor AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetControlStyle)
    MySyscall(pValueListEditor_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetFloating)
BOOL
ValueListEditor_GetFloating(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetFloating)
    return (BOOL)MySyscall(pValueListEditor_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetParent)
TWinControl
ValueListEditor_GetParent(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetParent)
    return (TWinControl)MySyscall(pValueListEditor_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetParent)
void
ValueListEditor_SetParent(TValueListEditor AObj, TWinControl AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetParent)
    MySyscall(pValueListEditor_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetLeft)
int32_t
ValueListEditor_GetLeft(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetLeft)
    return (int32_t)MySyscall(pValueListEditor_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetLeft)
void
ValueListEditor_SetLeft(TValueListEditor AObj, int32_t AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetLeft)
    MySyscall(pValueListEditor_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetTop)
int32_t
ValueListEditor_GetTop(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetTop)
    return (int32_t)MySyscall(pValueListEditor_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetTop)
void
ValueListEditor_SetTop(TValueListEditor AObj, int32_t AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetTop)
    MySyscall(pValueListEditor_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetWidth)
int32_t
ValueListEditor_GetWidth(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetWidth)
    return (int32_t)MySyscall(pValueListEditor_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetWidth)
void
ValueListEditor_SetWidth(TValueListEditor AObj, int32_t AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetWidth)
    MySyscall(pValueListEditor_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetHeight)
int32_t
ValueListEditor_GetHeight(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetHeight)
    return (int32_t)MySyscall(pValueListEditor_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetHeight)
void
ValueListEditor_SetHeight(TValueListEditor AObj, int32_t AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetHeight)
    MySyscall(pValueListEditor_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetCursor)
TCursor
ValueListEditor_GetCursor(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetCursor)
    return (TCursor)MySyscall(pValueListEditor_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetCursor)
void
ValueListEditor_SetCursor(TValueListEditor AObj, TCursor AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetCursor)
    MySyscall(pValueListEditor_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetHint)
char*
ValueListEditor_GetHint(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetHint)
    return (char*)MySyscall(pValueListEditor_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetHint)
void
ValueListEditor_SetHint(TValueListEditor AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetHint)
    MySyscall(pValueListEditor_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetComponentCount)
int32_t
ValueListEditor_GetComponentCount(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetComponentCount)
    return (int32_t)MySyscall(pValueListEditor_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetComponentIndex)
int32_t
ValueListEditor_GetComponentIndex(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetComponentIndex)
    return (int32_t)MySyscall(pValueListEditor_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetComponentIndex)
void
ValueListEditor_SetComponentIndex(TValueListEditor AObj, int32_t AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetComponentIndex)
    MySyscall(pValueListEditor_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetOwner)
TComponent
ValueListEditor_GetOwner(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetOwner)
    return (TComponent)MySyscall(pValueListEditor_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetName)
char*
ValueListEditor_GetName(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetName)
    return (char*)MySyscall(pValueListEditor_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetName)
void
ValueListEditor_SetName(TValueListEditor AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetName)
    MySyscall(pValueListEditor_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetTag)
intptr_t
ValueListEditor_GetTag(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetTag)
    return (intptr_t)MySyscall(pValueListEditor_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetTag)
void
ValueListEditor_SetTag(TValueListEditor AObj, intptr_t AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetTag)
    MySyscall(pValueListEditor_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetAnchorSideLeft)
TAnchorSide
ValueListEditor_GetAnchorSideLeft(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pValueListEditor_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetAnchorSideLeft)
void
ValueListEditor_SetAnchorSideLeft(TValueListEditor AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetAnchorSideLeft)
    MySyscall(pValueListEditor_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetAnchorSideTop)
TAnchorSide
ValueListEditor_GetAnchorSideTop(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pValueListEditor_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetAnchorSideTop)
void
ValueListEditor_SetAnchorSideTop(TValueListEditor AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetAnchorSideTop)
    MySyscall(pValueListEditor_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetAnchorSideRight)
TAnchorSide
ValueListEditor_GetAnchorSideRight(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pValueListEditor_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetAnchorSideRight)
void
ValueListEditor_SetAnchorSideRight(TValueListEditor AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetAnchorSideRight)
    MySyscall(pValueListEditor_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetAnchorSideBottom)
TAnchorSide
ValueListEditor_GetAnchorSideBottom(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pValueListEditor_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetAnchorSideBottom)
void
ValueListEditor_SetAnchorSideBottom(TValueListEditor AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetAnchorSideBottom)
    MySyscall(pValueListEditor_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetChildSizing)
TControlChildSizing
ValueListEditor_GetChildSizing(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetChildSizing)
    return (TControlChildSizing)MySyscall(pValueListEditor_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetChildSizing)
void
ValueListEditor_SetChildSizing(TValueListEditor AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetChildSizing)
    MySyscall(pValueListEditor_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetBorderSpacing)
TControlBorderSpacing
ValueListEditor_GetBorderSpacing(TValueListEditor AObj) {
    GET_FUNC_ADDR(ValueListEditor_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pValueListEditor_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetBorderSpacing)
void
ValueListEditor_SetBorderSpacing(TValueListEditor AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetBorderSpacing)
    MySyscall(pValueListEditor_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetCells)
char*
ValueListEditor_GetCells(TValueListEditor AObj, int32_t ACol, int32_t ARow) {
    GET_FUNC_ADDR(ValueListEditor_GetCells)
    return (char*)MySyscall(pValueListEditor_GetCells, 3, AObj, ACol, ARow ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetCells)
void
ValueListEditor_SetCells(TValueListEditor AObj, int32_t ACol, int32_t ARow, CChar char* AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetCells)
    MySyscall(pValueListEditor_SetCells, 4, AObj, ACol, ARow, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetValues)
char*
ValueListEditor_GetValues(TValueListEditor AObj, CChar char* Key) {
    GET_FUNC_ADDR(ValueListEditor_GetValues)
    return (char*)MySyscall(pValueListEditor_GetValues, 2, AObj, Key ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetValues)
void
ValueListEditor_SetValues(TValueListEditor AObj, CChar char* Key, CChar char* AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetValues)
    MySyscall(pValueListEditor_SetValues, 3, AObj, Key, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetColWidths)
int32_t
ValueListEditor_GetColWidths(TValueListEditor AObj, int32_t Index) {
    GET_FUNC_ADDR(ValueListEditor_GetColWidths)
    return (int32_t)MySyscall(pValueListEditor_GetColWidths, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetColWidths)
void
ValueListEditor_SetColWidths(TValueListEditor AObj, int32_t Index, int32_t AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetColWidths)
    MySyscall(pValueListEditor_SetColWidths, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetRowHeights)
int32_t
ValueListEditor_GetRowHeights(TValueListEditor AObj, int32_t Index) {
    GET_FUNC_ADDR(ValueListEditor_GetRowHeights)
    return (int32_t)MySyscall(pValueListEditor_GetRowHeights, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_SetRowHeights)
void
ValueListEditor_SetRowHeights(TValueListEditor AObj, int32_t Index, int32_t AValue) {
    GET_FUNC_ADDR(ValueListEditor_SetRowHeights)
    MySyscall(pValueListEditor_SetRowHeights, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetDockClients)
TControl
ValueListEditor_GetDockClients(TValueListEditor AObj, int32_t Index) {
    GET_FUNC_ADDR(ValueListEditor_GetDockClients)
    return (TControl)MySyscall(pValueListEditor_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetControls)
TControl
ValueListEditor_GetControls(TValueListEditor AObj, int32_t Index) {
    GET_FUNC_ADDR(ValueListEditor_GetControls)
    return (TControl)MySyscall(pValueListEditor_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetComponents)
TComponent
ValueListEditor_GetComponents(TValueListEditor AObj, int32_t AIndex) {
    GET_FUNC_ADDR(ValueListEditor_GetComponents)
    return (TComponent)MySyscall(pValueListEditor_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_GetAnchorSide)
TAnchorSide
ValueListEditor_GetAnchorSide(TValueListEditor AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(ValueListEditor_GetAnchorSide)
    return (TAnchorSide)MySyscall(pValueListEditor_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ValueListEditor_StaticClassType)
TClass
ValueListEditor_StaticClassType() {
    GET_FUNC_ADDR(ValueListEditor_StaticClassType)
    return (TClass)MySyscall(pValueListEditor_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------THeaderControl-------------------

DEFINE_FUNC_PTR(HeaderControl_Create)
THeaderControl
HeaderControl_Create(TComponent AOwner) {
    GET_FUNC_ADDR(HeaderControl_Create)
    return (THeaderControl)MySyscall(pHeaderControl_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_Free)
void
HeaderControl_Free(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_Free)
    MySyscall(pHeaderControl_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_FlipChildren)
void
HeaderControl_FlipChildren(THeaderControl AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(HeaderControl_FlipChildren)
    MySyscall(pHeaderControl_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_CanFocus)
BOOL
HeaderControl_CanFocus(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_CanFocus)
    return (BOOL)MySyscall(pHeaderControl_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_ContainsControl)
BOOL
HeaderControl_ContainsControl(THeaderControl AObj, TControl Control) {
    GET_FUNC_ADDR(HeaderControl_ContainsControl)
    return (BOOL)MySyscall(pHeaderControl_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_ControlAtPos)
TControl
HeaderControl_ControlAtPos(THeaderControl AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(HeaderControl_ControlAtPos)
    return (TControl)MySyscall(pHeaderControl_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_DisableAlign)
void
HeaderControl_DisableAlign(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_DisableAlign)
    MySyscall(pHeaderControl_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_EnableAlign)
void
HeaderControl_EnableAlign(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_EnableAlign)
    MySyscall(pHeaderControl_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_FindChildControl)
TControl
HeaderControl_FindChildControl(THeaderControl AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(HeaderControl_FindChildControl)
    return (TControl)MySyscall(pHeaderControl_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_Focused)
BOOL
HeaderControl_Focused(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_Focused)
    return (BOOL)MySyscall(pHeaderControl_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_HandleAllocated)
BOOL
HeaderControl_HandleAllocated(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_HandleAllocated)
    return (BOOL)MySyscall(pHeaderControl_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_InsertControl)
void
HeaderControl_InsertControl(THeaderControl AObj, TControl AControl) {
    GET_FUNC_ADDR(HeaderControl_InsertControl)
    MySyscall(pHeaderControl_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_Invalidate)
void
HeaderControl_Invalidate(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_Invalidate)
    MySyscall(pHeaderControl_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_PaintTo)
void
HeaderControl_PaintTo(THeaderControl AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(HeaderControl_PaintTo)
    MySyscall(pHeaderControl_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_RemoveControl)
void
HeaderControl_RemoveControl(THeaderControl AObj, TControl AControl) {
    GET_FUNC_ADDR(HeaderControl_RemoveControl)
    MySyscall(pHeaderControl_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_Realign)
void
HeaderControl_Realign(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_Realign)
    MySyscall(pHeaderControl_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_Repaint)
void
HeaderControl_Repaint(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_Repaint)
    MySyscall(pHeaderControl_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_ScaleBy)
void
HeaderControl_ScaleBy(THeaderControl AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(HeaderControl_ScaleBy)
    MySyscall(pHeaderControl_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_ScrollBy)
void
HeaderControl_ScrollBy(THeaderControl AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(HeaderControl_ScrollBy)
    MySyscall(pHeaderControl_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetBounds)
void
HeaderControl_SetBounds(THeaderControl AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(HeaderControl_SetBounds)
    MySyscall(pHeaderControl_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetFocus)
void
HeaderControl_SetFocus(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_SetFocus)
    MySyscall(pHeaderControl_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_Update)
void
HeaderControl_Update(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_Update)
    MySyscall(pHeaderControl_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_BringToFront)
void
HeaderControl_BringToFront(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_BringToFront)
    MySyscall(pHeaderControl_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_ClientToScreen)
TPoint
HeaderControl_ClientToScreen(THeaderControl AObj, TPoint Point) {
    GET_FUNC_ADDR(HeaderControl_ClientToScreen)
    TPoint result;
    MySyscall(pHeaderControl_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(HeaderControl_ClientToParent)
TPoint
HeaderControl_ClientToParent(THeaderControl AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(HeaderControl_ClientToParent)
    TPoint result;
    MySyscall(pHeaderControl_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(HeaderControl_Dragging)
BOOL
HeaderControl_Dragging(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_Dragging)
    return (BOOL)MySyscall(pHeaderControl_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_HasParent)
BOOL
HeaderControl_HasParent(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_HasParent)
    return (BOOL)MySyscall(pHeaderControl_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_Hide)
void
HeaderControl_Hide(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_Hide)
    MySyscall(pHeaderControl_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_Perform)
intptr_t
HeaderControl_Perform(THeaderControl AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(HeaderControl_Perform)
    return (intptr_t)MySyscall(pHeaderControl_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_Refresh)
void
HeaderControl_Refresh(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_Refresh)
    MySyscall(pHeaderControl_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_ScreenToClient)
TPoint
HeaderControl_ScreenToClient(THeaderControl AObj, TPoint Point) {
    GET_FUNC_ADDR(HeaderControl_ScreenToClient)
    TPoint result;
    MySyscall(pHeaderControl_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(HeaderControl_ParentToClient)
TPoint
HeaderControl_ParentToClient(THeaderControl AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(HeaderControl_ParentToClient)
    TPoint result;
    MySyscall(pHeaderControl_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(HeaderControl_SendToBack)
void
HeaderControl_SendToBack(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_SendToBack)
    MySyscall(pHeaderControl_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_Show)
void
HeaderControl_Show(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_Show)
    MySyscall(pHeaderControl_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetTextBuf)
int32_t
HeaderControl_GetTextBuf(THeaderControl AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(HeaderControl_GetTextBuf)
    return (int32_t)MySyscall(pHeaderControl_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetTextLen)
int32_t
HeaderControl_GetTextLen(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetTextLen)
    return (int32_t)MySyscall(pHeaderControl_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetTextBuf)
void
HeaderControl_SetTextBuf(THeaderControl AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(HeaderControl_SetTextBuf)
    MySyscall(pHeaderControl_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_FindComponent)
TComponent
HeaderControl_FindComponent(THeaderControl AObj, CChar char* AName) {
    GET_FUNC_ADDR(HeaderControl_FindComponent)
    return (TComponent)MySyscall(pHeaderControl_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetNamePath)
char*
HeaderControl_GetNamePath(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetNamePath)
    return (char*)MySyscall(pHeaderControl_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_Assign)
void
HeaderControl_Assign(THeaderControl AObj, TObject Source) {
    GET_FUNC_ADDR(HeaderControl_Assign)
    MySyscall(pHeaderControl_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_ClassType)
TClass
HeaderControl_ClassType(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_ClassType)
    return (TClass)MySyscall(pHeaderControl_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_ClassName)
char*
HeaderControl_ClassName(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_ClassName)
    return (char*)MySyscall(pHeaderControl_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_InstanceSize)
int32_t
HeaderControl_InstanceSize(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_InstanceSize)
    return (int32_t)MySyscall(pHeaderControl_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_InheritsFrom)
BOOL
HeaderControl_InheritsFrom(THeaderControl AObj, TClass AClass) {
    GET_FUNC_ADDR(HeaderControl_InheritsFrom)
    return (BOOL)MySyscall(pHeaderControl_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_Equals)
BOOL
HeaderControl_Equals(THeaderControl AObj, TObject Obj) {
    GET_FUNC_ADDR(HeaderControl_Equals)
    return (BOOL)MySyscall(pHeaderControl_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetHashCode)
int32_t
HeaderControl_GetHashCode(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetHashCode)
    return (int32_t)MySyscall(pHeaderControl_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_ToString)
char*
HeaderControl_ToString(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_ToString)
    return (char*)MySyscall(pHeaderControl_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_AnchorToNeighbour)
void
HeaderControl_AnchorToNeighbour(THeaderControl AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(HeaderControl_AnchorToNeighbour)
    MySyscall(pHeaderControl_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_AnchorParallel)
void
HeaderControl_AnchorParallel(THeaderControl AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(HeaderControl_AnchorParallel)
    MySyscall(pHeaderControl_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_AnchorHorizontalCenterTo)
void
HeaderControl_AnchorHorizontalCenterTo(THeaderControl AObj, TControl ASibling) {
    GET_FUNC_ADDR(HeaderControl_AnchorHorizontalCenterTo)
    MySyscall(pHeaderControl_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_AnchorVerticalCenterTo)
void
HeaderControl_AnchorVerticalCenterTo(THeaderControl AObj, TControl ASibling) {
    GET_FUNC_ADDR(HeaderControl_AnchorVerticalCenterTo)
    MySyscall(pHeaderControl_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_AnchorSame)
void
HeaderControl_AnchorSame(THeaderControl AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(HeaderControl_AnchorSame)
    MySyscall(pHeaderControl_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_AnchorAsAlign)
void
HeaderControl_AnchorAsAlign(THeaderControl AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(HeaderControl_AnchorAsAlign)
    MySyscall(pHeaderControl_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_AnchorClient)
void
HeaderControl_AnchorClient(THeaderControl AObj, int32_t ASpace) {
    GET_FUNC_ADDR(HeaderControl_AnchorClient)
    MySyscall(pHeaderControl_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_ScaleDesignToForm)
int32_t
HeaderControl_ScaleDesignToForm(THeaderControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(HeaderControl_ScaleDesignToForm)
    return (int32_t)MySyscall(pHeaderControl_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_ScaleFormToDesign)
int32_t
HeaderControl_ScaleFormToDesign(THeaderControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(HeaderControl_ScaleFormToDesign)
    return (int32_t)MySyscall(pHeaderControl_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_Scale96ToForm)
int32_t
HeaderControl_Scale96ToForm(THeaderControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(HeaderControl_Scale96ToForm)
    return (int32_t)MySyscall(pHeaderControl_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_ScaleFormTo96)
int32_t
HeaderControl_ScaleFormTo96(THeaderControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(HeaderControl_ScaleFormTo96)
    return (int32_t)MySyscall(pHeaderControl_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_Scale96ToFont)
int32_t
HeaderControl_Scale96ToFont(THeaderControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(HeaderControl_Scale96ToFont)
    return (int32_t)MySyscall(pHeaderControl_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_ScaleFontTo96)
int32_t
HeaderControl_ScaleFontTo96(THeaderControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(HeaderControl_ScaleFontTo96)
    return (int32_t)MySyscall(pHeaderControl_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_ScaleScreenToFont)
int32_t
HeaderControl_ScaleScreenToFont(THeaderControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(HeaderControl_ScaleScreenToFont)
    return (int32_t)MySyscall(pHeaderControl_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_ScaleFontToScreen)
int32_t
HeaderControl_ScaleFontToScreen(THeaderControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(HeaderControl_ScaleFontToScreen)
    return (int32_t)MySyscall(pHeaderControl_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_Scale96ToScreen)
int32_t
HeaderControl_Scale96ToScreen(THeaderControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(HeaderControl_Scale96ToScreen)
    return (int32_t)MySyscall(pHeaderControl_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_ScaleScreenTo96)
int32_t
HeaderControl_ScaleScreenTo96(THeaderControl AObj, int32_t ASize) {
    GET_FUNC_ADDR(HeaderControl_ScaleScreenTo96)
    return (int32_t)MySyscall(pHeaderControl_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_AutoAdjustLayout)
void
HeaderControl_AutoAdjustLayout(THeaderControl AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(HeaderControl_AutoAdjustLayout)
    MySyscall(pHeaderControl_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_FixDesignFontsPPI)
void
HeaderControl_FixDesignFontsPPI(THeaderControl AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(HeaderControl_FixDesignFontsPPI)
    MySyscall(pHeaderControl_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_ScaleFontsPPI)
void
HeaderControl_ScaleFontsPPI(THeaderControl AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(HeaderControl_ScaleFontsPPI)
    MySyscall(pHeaderControl_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetAlign)
TAlign
HeaderControl_GetAlign(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetAlign)
    return (TAlign)MySyscall(pHeaderControl_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetAlign)
void
HeaderControl_SetAlign(THeaderControl AObj, TAlign AValue) {
    GET_FUNC_ADDR(HeaderControl_SetAlign)
    MySyscall(pHeaderControl_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetAnchors)
TAnchors
HeaderControl_GetAnchors(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetAnchors)
    return (TAnchors)MySyscall(pHeaderControl_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetAnchors)
void
HeaderControl_SetAnchors(THeaderControl AObj, TAnchors AValue) {
    GET_FUNC_ADDR(HeaderControl_SetAnchors)
    MySyscall(pHeaderControl_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetBorderWidth)
int32_t
HeaderControl_GetBorderWidth(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetBorderWidth)
    return (int32_t)MySyscall(pHeaderControl_GetBorderWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetBorderWidth)
void
HeaderControl_SetBorderWidth(THeaderControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(HeaderControl_SetBorderWidth)
    MySyscall(pHeaderControl_SetBorderWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetDoubleBuffered)
BOOL
HeaderControl_GetDoubleBuffered(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetDoubleBuffered)
    return (BOOL)MySyscall(pHeaderControl_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetDoubleBuffered)
void
HeaderControl_SetDoubleBuffered(THeaderControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(HeaderControl_SetDoubleBuffered)
    MySyscall(pHeaderControl_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetDragCursor)
TCursor
HeaderControl_GetDragCursor(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetDragCursor)
    return (TCursor)MySyscall(pHeaderControl_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetDragCursor)
void
HeaderControl_SetDragCursor(THeaderControl AObj, TCursor AValue) {
    GET_FUNC_ADDR(HeaderControl_SetDragCursor)
    MySyscall(pHeaderControl_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetDragKind)
TDragKind
HeaderControl_GetDragKind(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetDragKind)
    return (TDragKind)MySyscall(pHeaderControl_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetDragKind)
void
HeaderControl_SetDragKind(THeaderControl AObj, TDragKind AValue) {
    GET_FUNC_ADDR(HeaderControl_SetDragKind)
    MySyscall(pHeaderControl_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetDragMode)
TDragMode
HeaderControl_GetDragMode(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetDragMode)
    return (TDragMode)MySyscall(pHeaderControl_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetDragMode)
void
HeaderControl_SetDragMode(THeaderControl AObj, TDragMode AValue) {
    GET_FUNC_ADDR(HeaderControl_SetDragMode)
    MySyscall(pHeaderControl_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetEnabled)
BOOL
HeaderControl_GetEnabled(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetEnabled)
    return (BOOL)MySyscall(pHeaderControl_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetEnabled)
void
HeaderControl_SetEnabled(THeaderControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(HeaderControl_SetEnabled)
    MySyscall(pHeaderControl_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetFont)
TFont
HeaderControl_GetFont(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetFont)
    return (TFont)MySyscall(pHeaderControl_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetFont)
void
HeaderControl_SetFont(THeaderControl AObj, TFont AValue) {
    GET_FUNC_ADDR(HeaderControl_SetFont)
    MySyscall(pHeaderControl_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetImages)
TImageList
HeaderControl_GetImages(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetImages)
    return (TImageList)MySyscall(pHeaderControl_GetImages, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetImages)
void
HeaderControl_SetImages(THeaderControl AObj, TImageList AValue) {
    GET_FUNC_ADDR(HeaderControl_SetImages)
    MySyscall(pHeaderControl_SetImages, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetConstraints)
TSizeConstraints
HeaderControl_GetConstraints(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetConstraints)
    return (TSizeConstraints)MySyscall(pHeaderControl_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetConstraints)
void
HeaderControl_SetConstraints(THeaderControl AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(HeaderControl_SetConstraints)
    MySyscall(pHeaderControl_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetSections)
THeaderSections
HeaderControl_GetSections(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetSections)
    return (THeaderSections)MySyscall(pHeaderControl_GetSections, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetSections)
void
HeaderControl_SetSections(THeaderControl AObj, THeaderSections AValue) {
    GET_FUNC_ADDR(HeaderControl_SetSections)
    MySyscall(pHeaderControl_SetSections, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetShowHint)
BOOL
HeaderControl_GetShowHint(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetShowHint)
    return (BOOL)MySyscall(pHeaderControl_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetShowHint)
void
HeaderControl_SetShowHint(THeaderControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(HeaderControl_SetShowHint)
    MySyscall(pHeaderControl_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetParentDoubleBuffered)
BOOL
HeaderControl_GetParentDoubleBuffered(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pHeaderControl_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetParentDoubleBuffered)
void
HeaderControl_SetParentDoubleBuffered(THeaderControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(HeaderControl_SetParentDoubleBuffered)
    MySyscall(pHeaderControl_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetParentFont)
BOOL
HeaderControl_GetParentFont(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetParentFont)
    return (BOOL)MySyscall(pHeaderControl_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetParentFont)
void
HeaderControl_SetParentFont(THeaderControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(HeaderControl_SetParentFont)
    MySyscall(pHeaderControl_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetParentShowHint)
BOOL
HeaderControl_GetParentShowHint(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetParentShowHint)
    return (BOOL)MySyscall(pHeaderControl_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetParentShowHint)
void
HeaderControl_SetParentShowHint(THeaderControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(HeaderControl_SetParentShowHint)
    MySyscall(pHeaderControl_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetPopupMenu)
TPopupMenu
HeaderControl_GetPopupMenu(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetPopupMenu)
    return (TPopupMenu)MySyscall(pHeaderControl_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetPopupMenu)
void
HeaderControl_SetPopupMenu(THeaderControl AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(HeaderControl_SetPopupMenu)
    MySyscall(pHeaderControl_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetVisible)
BOOL
HeaderControl_GetVisible(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetVisible)
    return (BOOL)MySyscall(pHeaderControl_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetVisible)
void
HeaderControl_SetVisible(THeaderControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(HeaderControl_SetVisible)
    MySyscall(pHeaderControl_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetOnContextPopup)
void
HeaderControl_SetOnContextPopup(THeaderControl AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(HeaderControl_SetOnContextPopup)
    MySyscall(pHeaderControl_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetOnDragDrop)
void
HeaderControl_SetOnDragDrop(THeaderControl AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(HeaderControl_SetOnDragDrop)
    MySyscall(pHeaderControl_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetOnDragOver)
void
HeaderControl_SetOnDragOver(THeaderControl AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(HeaderControl_SetOnDragOver)
    MySyscall(pHeaderControl_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetOnEndDock)
void
HeaderControl_SetOnEndDock(THeaderControl AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(HeaderControl_SetOnEndDock)
    MySyscall(pHeaderControl_SetOnEndDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetOnEndDrag)
void
HeaderControl_SetOnEndDrag(THeaderControl AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(HeaderControl_SetOnEndDrag)
    MySyscall(pHeaderControl_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetOnMouseDown)
void
HeaderControl_SetOnMouseDown(THeaderControl AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(HeaderControl_SetOnMouseDown)
    MySyscall(pHeaderControl_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetOnMouseEnter)
void
HeaderControl_SetOnMouseEnter(THeaderControl AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(HeaderControl_SetOnMouseEnter)
    MySyscall(pHeaderControl_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetOnMouseLeave)
void
HeaderControl_SetOnMouseLeave(THeaderControl AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(HeaderControl_SetOnMouseLeave)
    MySyscall(pHeaderControl_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetOnMouseMove)
void
HeaderControl_SetOnMouseMove(THeaderControl AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(HeaderControl_SetOnMouseMove)
    MySyscall(pHeaderControl_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetOnMouseUp)
void
HeaderControl_SetOnMouseUp(THeaderControl AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(HeaderControl_SetOnMouseUp)
    MySyscall(pHeaderControl_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetOnResize)
void
HeaderControl_SetOnResize(THeaderControl AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(HeaderControl_SetOnResize)
    MySyscall(pHeaderControl_SetOnResize, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetOnSectionClick)
void
HeaderControl_SetOnSectionClick(THeaderControl AObj, TSectionNotifyEvent AEventData) {
    GET_FUNC_ADDR(HeaderControl_SetOnSectionClick)
    MySyscall(pHeaderControl_SetOnSectionClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetOnSectionResize)
void
HeaderControl_SetOnSectionResize(THeaderControl AObj, TSectionNotifyEvent AEventData) {
    GET_FUNC_ADDR(HeaderControl_SetOnSectionResize)
    MySyscall(pHeaderControl_SetOnSectionResize, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetOnSectionTrack)
void
HeaderControl_SetOnSectionTrack(THeaderControl AObj, TSectionTrackEvent AEventData) {
    GET_FUNC_ADDR(HeaderControl_SetOnSectionTrack)
    MySyscall(pHeaderControl_SetOnSectionTrack, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetOnSectionDrag)
void
HeaderControl_SetOnSectionDrag(THeaderControl AObj, TSectionDragEvent AEventData) {
    GET_FUNC_ADDR(HeaderControl_SetOnSectionDrag)
    MySyscall(pHeaderControl_SetOnSectionDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetOnSectionEndDrag)
void
HeaderControl_SetOnSectionEndDrag(THeaderControl AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(HeaderControl_SetOnSectionEndDrag)
    MySyscall(pHeaderControl_SetOnSectionEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetCanvas)
TCanvas
HeaderControl_GetCanvas(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetCanvas)
    return (TCanvas)MySyscall(pHeaderControl_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetDockClientCount)
int32_t
HeaderControl_GetDockClientCount(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetDockClientCount)
    return (int32_t)MySyscall(pHeaderControl_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetDockSite)
BOOL
HeaderControl_GetDockSite(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetDockSite)
    return (BOOL)MySyscall(pHeaderControl_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetDockSite)
void
HeaderControl_SetDockSite(THeaderControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(HeaderControl_SetDockSite)
    MySyscall(pHeaderControl_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetMouseInClient)
BOOL
HeaderControl_GetMouseInClient(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetMouseInClient)
    return (BOOL)MySyscall(pHeaderControl_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetVisibleDockClientCount)
int32_t
HeaderControl_GetVisibleDockClientCount(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pHeaderControl_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetBrush)
TBrush
HeaderControl_GetBrush(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetBrush)
    return (TBrush)MySyscall(pHeaderControl_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetControlCount)
int32_t
HeaderControl_GetControlCount(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetControlCount)
    return (int32_t)MySyscall(pHeaderControl_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetHandle)
HWND
HeaderControl_GetHandle(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetHandle)
    return (HWND)MySyscall(pHeaderControl_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetParentWindow)
HWND
HeaderControl_GetParentWindow(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetParentWindow)
    return (HWND)MySyscall(pHeaderControl_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetParentWindow)
void
HeaderControl_SetParentWindow(THeaderControl AObj, HWND AValue) {
    GET_FUNC_ADDR(HeaderControl_SetParentWindow)
    MySyscall(pHeaderControl_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetShowing)
BOOL
HeaderControl_GetShowing(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetShowing)
    return (BOOL)MySyscall(pHeaderControl_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetTabOrder)
TTabOrder
HeaderControl_GetTabOrder(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetTabOrder)
    return (TTabOrder)MySyscall(pHeaderControl_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetTabOrder)
void
HeaderControl_SetTabOrder(THeaderControl AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(HeaderControl_SetTabOrder)
    MySyscall(pHeaderControl_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetTabStop)
BOOL
HeaderControl_GetTabStop(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetTabStop)
    return (BOOL)MySyscall(pHeaderControl_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetTabStop)
void
HeaderControl_SetTabStop(THeaderControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(HeaderControl_SetTabStop)
    MySyscall(pHeaderControl_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetUseDockManager)
BOOL
HeaderControl_GetUseDockManager(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetUseDockManager)
    return (BOOL)MySyscall(pHeaderControl_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetUseDockManager)
void
HeaderControl_SetUseDockManager(THeaderControl AObj, BOOL AValue) {
    GET_FUNC_ADDR(HeaderControl_SetUseDockManager)
    MySyscall(pHeaderControl_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetAction)
TAction
HeaderControl_GetAction(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetAction)
    return (TAction)MySyscall(pHeaderControl_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetAction)
void
HeaderControl_SetAction(THeaderControl AObj, TAction AValue) {
    GET_FUNC_ADDR(HeaderControl_SetAction)
    MySyscall(pHeaderControl_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetBoundsRect)
TRect
HeaderControl_GetBoundsRect(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetBoundsRect)
    TRect result;
    MySyscall(pHeaderControl_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(HeaderControl_SetBoundsRect)
void
HeaderControl_SetBoundsRect(THeaderControl AObj, TRect AValue) {
    GET_FUNC_ADDR(HeaderControl_SetBoundsRect)
    MySyscall(pHeaderControl_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetClientHeight)
int32_t
HeaderControl_GetClientHeight(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetClientHeight)
    return (int32_t)MySyscall(pHeaderControl_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetClientHeight)
void
HeaderControl_SetClientHeight(THeaderControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(HeaderControl_SetClientHeight)
    MySyscall(pHeaderControl_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetClientOrigin)
TPoint
HeaderControl_GetClientOrigin(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetClientOrigin)
    TPoint result;
    MySyscall(pHeaderControl_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(HeaderControl_GetClientRect)
TRect
HeaderControl_GetClientRect(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetClientRect)
    TRect result;
    MySyscall(pHeaderControl_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(HeaderControl_GetClientWidth)
int32_t
HeaderControl_GetClientWidth(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetClientWidth)
    return (int32_t)MySyscall(pHeaderControl_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetClientWidth)
void
HeaderControl_SetClientWidth(THeaderControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(HeaderControl_SetClientWidth)
    MySyscall(pHeaderControl_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetControlState)
TControlState
HeaderControl_GetControlState(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetControlState)
    return (TControlState)MySyscall(pHeaderControl_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetControlState)
void
HeaderControl_SetControlState(THeaderControl AObj, TControlState AValue) {
    GET_FUNC_ADDR(HeaderControl_SetControlState)
    MySyscall(pHeaderControl_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetControlStyle)
TControlStyle
HeaderControl_GetControlStyle(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetControlStyle)
    return (TControlStyle)MySyscall(pHeaderControl_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetControlStyle)
void
HeaderControl_SetControlStyle(THeaderControl AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(HeaderControl_SetControlStyle)
    MySyscall(pHeaderControl_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetFloating)
BOOL
HeaderControl_GetFloating(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetFloating)
    return (BOOL)MySyscall(pHeaderControl_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetParent)
TWinControl
HeaderControl_GetParent(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetParent)
    return (TWinControl)MySyscall(pHeaderControl_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetParent)
void
HeaderControl_SetParent(THeaderControl AObj, TWinControl AValue) {
    GET_FUNC_ADDR(HeaderControl_SetParent)
    MySyscall(pHeaderControl_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetLeft)
int32_t
HeaderControl_GetLeft(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetLeft)
    return (int32_t)MySyscall(pHeaderControl_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetLeft)
void
HeaderControl_SetLeft(THeaderControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(HeaderControl_SetLeft)
    MySyscall(pHeaderControl_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetTop)
int32_t
HeaderControl_GetTop(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetTop)
    return (int32_t)MySyscall(pHeaderControl_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetTop)
void
HeaderControl_SetTop(THeaderControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(HeaderControl_SetTop)
    MySyscall(pHeaderControl_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetWidth)
int32_t
HeaderControl_GetWidth(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetWidth)
    return (int32_t)MySyscall(pHeaderControl_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetWidth)
void
HeaderControl_SetWidth(THeaderControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(HeaderControl_SetWidth)
    MySyscall(pHeaderControl_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetHeight)
int32_t
HeaderControl_GetHeight(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetHeight)
    return (int32_t)MySyscall(pHeaderControl_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetHeight)
void
HeaderControl_SetHeight(THeaderControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(HeaderControl_SetHeight)
    MySyscall(pHeaderControl_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetCursor)
TCursor
HeaderControl_GetCursor(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetCursor)
    return (TCursor)MySyscall(pHeaderControl_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetCursor)
void
HeaderControl_SetCursor(THeaderControl AObj, TCursor AValue) {
    GET_FUNC_ADDR(HeaderControl_SetCursor)
    MySyscall(pHeaderControl_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetHint)
char*
HeaderControl_GetHint(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetHint)
    return (char*)MySyscall(pHeaderControl_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetHint)
void
HeaderControl_SetHint(THeaderControl AObj, CChar char* AValue) {
    GET_FUNC_ADDR(HeaderControl_SetHint)
    MySyscall(pHeaderControl_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetComponentCount)
int32_t
HeaderControl_GetComponentCount(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetComponentCount)
    return (int32_t)MySyscall(pHeaderControl_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetComponentIndex)
int32_t
HeaderControl_GetComponentIndex(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetComponentIndex)
    return (int32_t)MySyscall(pHeaderControl_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetComponentIndex)
void
HeaderControl_SetComponentIndex(THeaderControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(HeaderControl_SetComponentIndex)
    MySyscall(pHeaderControl_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetOwner)
TComponent
HeaderControl_GetOwner(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetOwner)
    return (TComponent)MySyscall(pHeaderControl_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetName)
char*
HeaderControl_GetName(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetName)
    return (char*)MySyscall(pHeaderControl_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetName)
void
HeaderControl_SetName(THeaderControl AObj, CChar char* AValue) {
    GET_FUNC_ADDR(HeaderControl_SetName)
    MySyscall(pHeaderControl_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetTag)
intptr_t
HeaderControl_GetTag(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetTag)
    return (intptr_t)MySyscall(pHeaderControl_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetTag)
void
HeaderControl_SetTag(THeaderControl AObj, intptr_t AValue) {
    GET_FUNC_ADDR(HeaderControl_SetTag)
    MySyscall(pHeaderControl_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetAnchorSideLeft)
TAnchorSide
HeaderControl_GetAnchorSideLeft(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pHeaderControl_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetAnchorSideLeft)
void
HeaderControl_SetAnchorSideLeft(THeaderControl AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(HeaderControl_SetAnchorSideLeft)
    MySyscall(pHeaderControl_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetAnchorSideTop)
TAnchorSide
HeaderControl_GetAnchorSideTop(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pHeaderControl_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetAnchorSideTop)
void
HeaderControl_SetAnchorSideTop(THeaderControl AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(HeaderControl_SetAnchorSideTop)
    MySyscall(pHeaderControl_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetAnchorSideRight)
TAnchorSide
HeaderControl_GetAnchorSideRight(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pHeaderControl_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetAnchorSideRight)
void
HeaderControl_SetAnchorSideRight(THeaderControl AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(HeaderControl_SetAnchorSideRight)
    MySyscall(pHeaderControl_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetAnchorSideBottom)
TAnchorSide
HeaderControl_GetAnchorSideBottom(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pHeaderControl_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetAnchorSideBottom)
void
HeaderControl_SetAnchorSideBottom(THeaderControl AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(HeaderControl_SetAnchorSideBottom)
    MySyscall(pHeaderControl_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetChildSizing)
TControlChildSizing
HeaderControl_GetChildSizing(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetChildSizing)
    return (TControlChildSizing)MySyscall(pHeaderControl_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetChildSizing)
void
HeaderControl_SetChildSizing(THeaderControl AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(HeaderControl_SetChildSizing)
    MySyscall(pHeaderControl_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetBorderSpacing)
TControlBorderSpacing
HeaderControl_GetBorderSpacing(THeaderControl AObj) {
    GET_FUNC_ADDR(HeaderControl_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pHeaderControl_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_SetBorderSpacing)
void
HeaderControl_SetBorderSpacing(THeaderControl AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(HeaderControl_SetBorderSpacing)
    MySyscall(pHeaderControl_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetDockClients)
TControl
HeaderControl_GetDockClients(THeaderControl AObj, int32_t Index) {
    GET_FUNC_ADDR(HeaderControl_GetDockClients)
    return (TControl)MySyscall(pHeaderControl_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetControls)
TControl
HeaderControl_GetControls(THeaderControl AObj, int32_t Index) {
    GET_FUNC_ADDR(HeaderControl_GetControls)
    return (TControl)MySyscall(pHeaderControl_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetComponents)
TComponent
HeaderControl_GetComponents(THeaderControl AObj, int32_t AIndex) {
    GET_FUNC_ADDR(HeaderControl_GetComponents)
    return (TComponent)MySyscall(pHeaderControl_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_GetAnchorSide)
TAnchorSide
HeaderControl_GetAnchorSide(THeaderControl AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(HeaderControl_GetAnchorSide)
    return (TAnchorSide)MySyscall(pHeaderControl_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderControl_StaticClassType)
TClass
HeaderControl_StaticClassType() {
    GET_FUNC_ADDR(HeaderControl_StaticClassType)
    return (TClass)MySyscall(pHeaderControl_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------THeaderSection-------------------

DEFINE_FUNC_PTR(HeaderSection_Create)
THeaderSection
HeaderSection_Create(TCollection AOwner) {
    GET_FUNC_ADDR(HeaderSection_Create)
    return (THeaderSection)MySyscall(pHeaderSection_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_Free)
void
HeaderSection_Free(THeaderSection AObj) {
    GET_FUNC_ADDR(HeaderSection_Free)
    MySyscall(pHeaderSection_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_Assign)
void
HeaderSection_Assign(THeaderSection AObj, TObject Source) {
    GET_FUNC_ADDR(HeaderSection_Assign)
    MySyscall(pHeaderSection_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_GetNamePath)
char*
HeaderSection_GetNamePath(THeaderSection AObj) {
    GET_FUNC_ADDR(HeaderSection_GetNamePath)
    return (char*)MySyscall(pHeaderSection_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_ClassType)
TClass
HeaderSection_ClassType(THeaderSection AObj) {
    GET_FUNC_ADDR(HeaderSection_ClassType)
    return (TClass)MySyscall(pHeaderSection_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_ClassName)
char*
HeaderSection_ClassName(THeaderSection AObj) {
    GET_FUNC_ADDR(HeaderSection_ClassName)
    return (char*)MySyscall(pHeaderSection_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_InstanceSize)
int32_t
HeaderSection_InstanceSize(THeaderSection AObj) {
    GET_FUNC_ADDR(HeaderSection_InstanceSize)
    return (int32_t)MySyscall(pHeaderSection_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_InheritsFrom)
BOOL
HeaderSection_InheritsFrom(THeaderSection AObj, TClass AClass) {
    GET_FUNC_ADDR(HeaderSection_InheritsFrom)
    return (BOOL)MySyscall(pHeaderSection_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_Equals)
BOOL
HeaderSection_Equals(THeaderSection AObj, TObject Obj) {
    GET_FUNC_ADDR(HeaderSection_Equals)
    return (BOOL)MySyscall(pHeaderSection_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_GetHashCode)
int32_t
HeaderSection_GetHashCode(THeaderSection AObj) {
    GET_FUNC_ADDR(HeaderSection_GetHashCode)
    return (int32_t)MySyscall(pHeaderSection_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_ToString)
char*
HeaderSection_ToString(THeaderSection AObj) {
    GET_FUNC_ADDR(HeaderSection_ToString)
    return (char*)MySyscall(pHeaderSection_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_GetLeft)
int32_t
HeaderSection_GetLeft(THeaderSection AObj) {
    GET_FUNC_ADDR(HeaderSection_GetLeft)
    return (int32_t)MySyscall(pHeaderSection_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_GetRight)
int32_t
HeaderSection_GetRight(THeaderSection AObj) {
    GET_FUNC_ADDR(HeaderSection_GetRight)
    return (int32_t)MySyscall(pHeaderSection_GetRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_GetAlignment)
TAlignment
HeaderSection_GetAlignment(THeaderSection AObj) {
    GET_FUNC_ADDR(HeaderSection_GetAlignment)
    return (TAlignment)MySyscall(pHeaderSection_GetAlignment, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_SetAlignment)
void
HeaderSection_SetAlignment(THeaderSection AObj, TAlignment AValue) {
    GET_FUNC_ADDR(HeaderSection_SetAlignment)
    MySyscall(pHeaderSection_SetAlignment, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_GetImageIndex)
int32_t
HeaderSection_GetImageIndex(THeaderSection AObj) {
    GET_FUNC_ADDR(HeaderSection_GetImageIndex)
    return (int32_t)MySyscall(pHeaderSection_GetImageIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_SetImageIndex)
void
HeaderSection_SetImageIndex(THeaderSection AObj, int32_t AValue) {
    GET_FUNC_ADDR(HeaderSection_SetImageIndex)
    MySyscall(pHeaderSection_SetImageIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_GetMaxWidth)
int32_t
HeaderSection_GetMaxWidth(THeaderSection AObj) {
    GET_FUNC_ADDR(HeaderSection_GetMaxWidth)
    return (int32_t)MySyscall(pHeaderSection_GetMaxWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_SetMaxWidth)
void
HeaderSection_SetMaxWidth(THeaderSection AObj, int32_t AValue) {
    GET_FUNC_ADDR(HeaderSection_SetMaxWidth)
    MySyscall(pHeaderSection_SetMaxWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_GetMinWidth)
int32_t
HeaderSection_GetMinWidth(THeaderSection AObj) {
    GET_FUNC_ADDR(HeaderSection_GetMinWidth)
    return (int32_t)MySyscall(pHeaderSection_GetMinWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_SetMinWidth)
void
HeaderSection_SetMinWidth(THeaderSection AObj, int32_t AValue) {
    GET_FUNC_ADDR(HeaderSection_SetMinWidth)
    MySyscall(pHeaderSection_SetMinWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_GetText)
char*
HeaderSection_GetText(THeaderSection AObj) {
    GET_FUNC_ADDR(HeaderSection_GetText)
    return (char*)MySyscall(pHeaderSection_GetText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_SetText)
void
HeaderSection_SetText(THeaderSection AObj, CChar char* AValue) {
    GET_FUNC_ADDR(HeaderSection_SetText)
    MySyscall(pHeaderSection_SetText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_GetWidth)
int32_t
HeaderSection_GetWidth(THeaderSection AObj) {
    GET_FUNC_ADDR(HeaderSection_GetWidth)
    return (int32_t)MySyscall(pHeaderSection_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_SetWidth)
void
HeaderSection_SetWidth(THeaderSection AObj, int32_t AValue) {
    GET_FUNC_ADDR(HeaderSection_SetWidth)
    MySyscall(pHeaderSection_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_GetCollection)
TCollection
HeaderSection_GetCollection(THeaderSection AObj) {
    GET_FUNC_ADDR(HeaderSection_GetCollection)
    return (TCollection)MySyscall(pHeaderSection_GetCollection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_SetCollection)
void
HeaderSection_SetCollection(THeaderSection AObj, TCollection AValue) {
    GET_FUNC_ADDR(HeaderSection_SetCollection)
    MySyscall(pHeaderSection_SetCollection, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_GetIndex)
int32_t
HeaderSection_GetIndex(THeaderSection AObj) {
    GET_FUNC_ADDR(HeaderSection_GetIndex)
    return (int32_t)MySyscall(pHeaderSection_GetIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_SetIndex)
void
HeaderSection_SetIndex(THeaderSection AObj, int32_t AValue) {
    GET_FUNC_ADDR(HeaderSection_SetIndex)
    MySyscall(pHeaderSection_SetIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_GetDisplayName)
char*
HeaderSection_GetDisplayName(THeaderSection AObj) {
    GET_FUNC_ADDR(HeaderSection_GetDisplayName)
    return (char*)MySyscall(pHeaderSection_GetDisplayName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_SetDisplayName)
void
HeaderSection_SetDisplayName(THeaderSection AObj, CChar char* AValue) {
    GET_FUNC_ADDR(HeaderSection_SetDisplayName)
    MySyscall(pHeaderSection_SetDisplayName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSection_StaticClassType)
TClass
HeaderSection_StaticClassType() {
    GET_FUNC_ADDR(HeaderSection_StaticClassType)
    return (TClass)MySyscall(pHeaderSection_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------THeaderSections-------------------

DEFINE_FUNC_PTR(HeaderSections_Create)
THeaderSections
HeaderSections_Create(THeaderControl AOwner) {
    GET_FUNC_ADDR(HeaderSections_Create)
    return (THeaderSections)MySyscall(pHeaderSections_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSections_Free)
void
HeaderSections_Free(THeaderSections AObj) {
    GET_FUNC_ADDR(HeaderSections_Free)
    MySyscall(pHeaderSections_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSections_Add)
THeaderSection
HeaderSections_Add(THeaderSections AObj) {
    GET_FUNC_ADDR(HeaderSections_Add)
    return (THeaderSection)MySyscall(pHeaderSections_Add, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSections_AddItem)
THeaderSection
HeaderSections_AddItem(THeaderSections AObj, THeaderSection Item, int32_t Index) {
    GET_FUNC_ADDR(HeaderSections_AddItem)
    return (THeaderSection)MySyscall(pHeaderSections_AddItem, 3, AObj, Item, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSections_Insert)
THeaderSection
HeaderSections_Insert(THeaderSections AObj, int32_t Index) {
    GET_FUNC_ADDR(HeaderSections_Insert)
    return (THeaderSection)MySyscall(pHeaderSections_Insert, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSections_Owner)
TObject
HeaderSections_Owner(THeaderSections AObj) {
    GET_FUNC_ADDR(HeaderSections_Owner)
    return (TObject)MySyscall(pHeaderSections_Owner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSections_Assign)
void
HeaderSections_Assign(THeaderSections AObj, TObject Source) {
    GET_FUNC_ADDR(HeaderSections_Assign)
    MySyscall(pHeaderSections_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSections_BeginUpdate)
void
HeaderSections_BeginUpdate(THeaderSections AObj) {
    GET_FUNC_ADDR(HeaderSections_BeginUpdate)
    MySyscall(pHeaderSections_BeginUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSections_Clear)
void
HeaderSections_Clear(THeaderSections AObj) {
    GET_FUNC_ADDR(HeaderSections_Clear)
    MySyscall(pHeaderSections_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSections_Delete)
void
HeaderSections_Delete(THeaderSections AObj, int32_t Index) {
    GET_FUNC_ADDR(HeaderSections_Delete)
    MySyscall(pHeaderSections_Delete, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSections_EndUpdate)
void
HeaderSections_EndUpdate(THeaderSections AObj) {
    GET_FUNC_ADDR(HeaderSections_EndUpdate)
    MySyscall(pHeaderSections_EndUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSections_FindItemID)
TCollectionItem
HeaderSections_FindItemID(THeaderSections AObj, int32_t ID) {
    GET_FUNC_ADDR(HeaderSections_FindItemID)
    return (TCollectionItem)MySyscall(pHeaderSections_FindItemID, 2, AObj, ID ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSections_GetNamePath)
char*
HeaderSections_GetNamePath(THeaderSections AObj) {
    GET_FUNC_ADDR(HeaderSections_GetNamePath)
    return (char*)MySyscall(pHeaderSections_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSections_ClassType)
TClass
HeaderSections_ClassType(THeaderSections AObj) {
    GET_FUNC_ADDR(HeaderSections_ClassType)
    return (TClass)MySyscall(pHeaderSections_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSections_ClassName)
char*
HeaderSections_ClassName(THeaderSections AObj) {
    GET_FUNC_ADDR(HeaderSections_ClassName)
    return (char*)MySyscall(pHeaderSections_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSections_InstanceSize)
int32_t
HeaderSections_InstanceSize(THeaderSections AObj) {
    GET_FUNC_ADDR(HeaderSections_InstanceSize)
    return (int32_t)MySyscall(pHeaderSections_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSections_InheritsFrom)
BOOL
HeaderSections_InheritsFrom(THeaderSections AObj, TClass AClass) {
    GET_FUNC_ADDR(HeaderSections_InheritsFrom)
    return (BOOL)MySyscall(pHeaderSections_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSections_Equals)
BOOL
HeaderSections_Equals(THeaderSections AObj, TObject Obj) {
    GET_FUNC_ADDR(HeaderSections_Equals)
    return (BOOL)MySyscall(pHeaderSections_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSections_GetHashCode)
int32_t
HeaderSections_GetHashCode(THeaderSections AObj) {
    GET_FUNC_ADDR(HeaderSections_GetHashCode)
    return (int32_t)MySyscall(pHeaderSections_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSections_ToString)
char*
HeaderSections_ToString(THeaderSections AObj) {
    GET_FUNC_ADDR(HeaderSections_ToString)
    return (char*)MySyscall(pHeaderSections_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSections_GetCount)
int32_t
HeaderSections_GetCount(THeaderSections AObj) {
    GET_FUNC_ADDR(HeaderSections_GetCount)
    return (int32_t)MySyscall(pHeaderSections_GetCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSections_GetItems)
THeaderSection
HeaderSections_GetItems(THeaderSections AObj, int32_t Index) {
    GET_FUNC_ADDR(HeaderSections_GetItems)
    return (THeaderSection)MySyscall(pHeaderSections_GetItems, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSections_SetItems)
void
HeaderSections_SetItems(THeaderSections AObj, int32_t Index, THeaderSection AValue) {
    GET_FUNC_ADDR(HeaderSections_SetItems)
    MySyscall(pHeaderSections_SetItems, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(HeaderSections_StaticClassType)
TClass
HeaderSections_StaticClassType() {
    GET_FUNC_ADDR(HeaderSections_StaticClassType)
    return (TClass)MySyscall(pHeaderSections_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TLabeledEdit-------------------

DEFINE_FUNC_PTR(LabeledEdit_Create)
TLabeledEdit
LabeledEdit_Create(TComponent AOwner) {
    GET_FUNC_ADDR(LabeledEdit_Create)
    return (TLabeledEdit)MySyscall(pLabeledEdit_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_Free)
void
LabeledEdit_Free(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_Free)
    MySyscall(pLabeledEdit_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetBounds)
void
LabeledEdit_SetBounds(TLabeledEdit AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(LabeledEdit_SetBounds)
    MySyscall(pLabeledEdit_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_Clear)
void
LabeledEdit_Clear(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_Clear)
    MySyscall(pLabeledEdit_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_ClearSelection)
void
LabeledEdit_ClearSelection(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_ClearSelection)
    MySyscall(pLabeledEdit_ClearSelection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_CopyToClipboard)
void
LabeledEdit_CopyToClipboard(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_CopyToClipboard)
    MySyscall(pLabeledEdit_CopyToClipboard, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_CutToClipboard)
void
LabeledEdit_CutToClipboard(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_CutToClipboard)
    MySyscall(pLabeledEdit_CutToClipboard, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_PasteFromClipboard)
void
LabeledEdit_PasteFromClipboard(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_PasteFromClipboard)
    MySyscall(pLabeledEdit_PasteFromClipboard, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_Undo)
void
LabeledEdit_Undo(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_Undo)
    MySyscall(pLabeledEdit_Undo, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SelectAll)
void
LabeledEdit_SelectAll(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_SelectAll)
    MySyscall(pLabeledEdit_SelectAll, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_CanFocus)
BOOL
LabeledEdit_CanFocus(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_CanFocus)
    return (BOOL)MySyscall(pLabeledEdit_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_ContainsControl)
BOOL
LabeledEdit_ContainsControl(TLabeledEdit AObj, TControl Control) {
    GET_FUNC_ADDR(LabeledEdit_ContainsControl)
    return (BOOL)MySyscall(pLabeledEdit_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_ControlAtPos)
TControl
LabeledEdit_ControlAtPos(TLabeledEdit AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(LabeledEdit_ControlAtPos)
    return (TControl)MySyscall(pLabeledEdit_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_DisableAlign)
void
LabeledEdit_DisableAlign(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_DisableAlign)
    MySyscall(pLabeledEdit_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_EnableAlign)
void
LabeledEdit_EnableAlign(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_EnableAlign)
    MySyscall(pLabeledEdit_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_FindChildControl)
TControl
LabeledEdit_FindChildControl(TLabeledEdit AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(LabeledEdit_FindChildControl)
    return (TControl)MySyscall(pLabeledEdit_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_FlipChildren)
void
LabeledEdit_FlipChildren(TLabeledEdit AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(LabeledEdit_FlipChildren)
    MySyscall(pLabeledEdit_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_Focused)
BOOL
LabeledEdit_Focused(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_Focused)
    return (BOOL)MySyscall(pLabeledEdit_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_HandleAllocated)
BOOL
LabeledEdit_HandleAllocated(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_HandleAllocated)
    return (BOOL)MySyscall(pLabeledEdit_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_InsertControl)
void
LabeledEdit_InsertControl(TLabeledEdit AObj, TControl AControl) {
    GET_FUNC_ADDR(LabeledEdit_InsertControl)
    MySyscall(pLabeledEdit_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_Invalidate)
void
LabeledEdit_Invalidate(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_Invalidate)
    MySyscall(pLabeledEdit_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_PaintTo)
void
LabeledEdit_PaintTo(TLabeledEdit AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(LabeledEdit_PaintTo)
    MySyscall(pLabeledEdit_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_RemoveControl)
void
LabeledEdit_RemoveControl(TLabeledEdit AObj, TControl AControl) {
    GET_FUNC_ADDR(LabeledEdit_RemoveControl)
    MySyscall(pLabeledEdit_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_Realign)
void
LabeledEdit_Realign(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_Realign)
    MySyscall(pLabeledEdit_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_Repaint)
void
LabeledEdit_Repaint(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_Repaint)
    MySyscall(pLabeledEdit_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_ScaleBy)
void
LabeledEdit_ScaleBy(TLabeledEdit AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(LabeledEdit_ScaleBy)
    MySyscall(pLabeledEdit_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_ScrollBy)
void
LabeledEdit_ScrollBy(TLabeledEdit AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(LabeledEdit_ScrollBy)
    MySyscall(pLabeledEdit_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetFocus)
void
LabeledEdit_SetFocus(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_SetFocus)
    MySyscall(pLabeledEdit_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_Update)
void
LabeledEdit_Update(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_Update)
    MySyscall(pLabeledEdit_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_BringToFront)
void
LabeledEdit_BringToFront(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_BringToFront)
    MySyscall(pLabeledEdit_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_ClientToScreen)
TPoint
LabeledEdit_ClientToScreen(TLabeledEdit AObj, TPoint Point) {
    GET_FUNC_ADDR(LabeledEdit_ClientToScreen)
    TPoint result;
    MySyscall(pLabeledEdit_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(LabeledEdit_ClientToParent)
TPoint
LabeledEdit_ClientToParent(TLabeledEdit AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(LabeledEdit_ClientToParent)
    TPoint result;
    MySyscall(pLabeledEdit_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(LabeledEdit_Dragging)
BOOL
LabeledEdit_Dragging(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_Dragging)
    return (BOOL)MySyscall(pLabeledEdit_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_HasParent)
BOOL
LabeledEdit_HasParent(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_HasParent)
    return (BOOL)MySyscall(pLabeledEdit_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_Hide)
void
LabeledEdit_Hide(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_Hide)
    MySyscall(pLabeledEdit_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_Perform)
intptr_t
LabeledEdit_Perform(TLabeledEdit AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(LabeledEdit_Perform)
    return (intptr_t)MySyscall(pLabeledEdit_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_Refresh)
void
LabeledEdit_Refresh(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_Refresh)
    MySyscall(pLabeledEdit_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_ScreenToClient)
TPoint
LabeledEdit_ScreenToClient(TLabeledEdit AObj, TPoint Point) {
    GET_FUNC_ADDR(LabeledEdit_ScreenToClient)
    TPoint result;
    MySyscall(pLabeledEdit_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(LabeledEdit_ParentToClient)
TPoint
LabeledEdit_ParentToClient(TLabeledEdit AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(LabeledEdit_ParentToClient)
    TPoint result;
    MySyscall(pLabeledEdit_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(LabeledEdit_SendToBack)
void
LabeledEdit_SendToBack(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_SendToBack)
    MySyscall(pLabeledEdit_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_Show)
void
LabeledEdit_Show(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_Show)
    MySyscall(pLabeledEdit_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetTextBuf)
int32_t
LabeledEdit_GetTextBuf(TLabeledEdit AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(LabeledEdit_GetTextBuf)
    return (int32_t)MySyscall(pLabeledEdit_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetTextLen)
int32_t
LabeledEdit_GetTextLen(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetTextLen)
    return (int32_t)MySyscall(pLabeledEdit_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetTextBuf)
void
LabeledEdit_SetTextBuf(TLabeledEdit AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(LabeledEdit_SetTextBuf)
    MySyscall(pLabeledEdit_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_FindComponent)
TComponent
LabeledEdit_FindComponent(TLabeledEdit AObj, CChar char* AName) {
    GET_FUNC_ADDR(LabeledEdit_FindComponent)
    return (TComponent)MySyscall(pLabeledEdit_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetNamePath)
char*
LabeledEdit_GetNamePath(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetNamePath)
    return (char*)MySyscall(pLabeledEdit_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_Assign)
void
LabeledEdit_Assign(TLabeledEdit AObj, TObject Source) {
    GET_FUNC_ADDR(LabeledEdit_Assign)
    MySyscall(pLabeledEdit_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_ClassType)
TClass
LabeledEdit_ClassType(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_ClassType)
    return (TClass)MySyscall(pLabeledEdit_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_ClassName)
char*
LabeledEdit_ClassName(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_ClassName)
    return (char*)MySyscall(pLabeledEdit_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_InstanceSize)
int32_t
LabeledEdit_InstanceSize(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_InstanceSize)
    return (int32_t)MySyscall(pLabeledEdit_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_InheritsFrom)
BOOL
LabeledEdit_InheritsFrom(TLabeledEdit AObj, TClass AClass) {
    GET_FUNC_ADDR(LabeledEdit_InheritsFrom)
    return (BOOL)MySyscall(pLabeledEdit_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_Equals)
BOOL
LabeledEdit_Equals(TLabeledEdit AObj, TObject Obj) {
    GET_FUNC_ADDR(LabeledEdit_Equals)
    return (BOOL)MySyscall(pLabeledEdit_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetHashCode)
int32_t
LabeledEdit_GetHashCode(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetHashCode)
    return (int32_t)MySyscall(pLabeledEdit_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_ToString)
char*
LabeledEdit_ToString(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_ToString)
    return (char*)MySyscall(pLabeledEdit_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_AnchorToNeighbour)
void
LabeledEdit_AnchorToNeighbour(TLabeledEdit AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(LabeledEdit_AnchorToNeighbour)
    MySyscall(pLabeledEdit_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_AnchorParallel)
void
LabeledEdit_AnchorParallel(TLabeledEdit AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(LabeledEdit_AnchorParallel)
    MySyscall(pLabeledEdit_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_AnchorHorizontalCenterTo)
void
LabeledEdit_AnchorHorizontalCenterTo(TLabeledEdit AObj, TControl ASibling) {
    GET_FUNC_ADDR(LabeledEdit_AnchorHorizontalCenterTo)
    MySyscall(pLabeledEdit_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_AnchorVerticalCenterTo)
void
LabeledEdit_AnchorVerticalCenterTo(TLabeledEdit AObj, TControl ASibling) {
    GET_FUNC_ADDR(LabeledEdit_AnchorVerticalCenterTo)
    MySyscall(pLabeledEdit_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_AnchorSame)
void
LabeledEdit_AnchorSame(TLabeledEdit AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(LabeledEdit_AnchorSame)
    MySyscall(pLabeledEdit_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_AnchorAsAlign)
void
LabeledEdit_AnchorAsAlign(TLabeledEdit AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(LabeledEdit_AnchorAsAlign)
    MySyscall(pLabeledEdit_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_AnchorClient)
void
LabeledEdit_AnchorClient(TLabeledEdit AObj, int32_t ASpace) {
    GET_FUNC_ADDR(LabeledEdit_AnchorClient)
    MySyscall(pLabeledEdit_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_ScaleDesignToForm)
int32_t
LabeledEdit_ScaleDesignToForm(TLabeledEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(LabeledEdit_ScaleDesignToForm)
    return (int32_t)MySyscall(pLabeledEdit_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_ScaleFormToDesign)
int32_t
LabeledEdit_ScaleFormToDesign(TLabeledEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(LabeledEdit_ScaleFormToDesign)
    return (int32_t)MySyscall(pLabeledEdit_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_Scale96ToForm)
int32_t
LabeledEdit_Scale96ToForm(TLabeledEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(LabeledEdit_Scale96ToForm)
    return (int32_t)MySyscall(pLabeledEdit_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_ScaleFormTo96)
int32_t
LabeledEdit_ScaleFormTo96(TLabeledEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(LabeledEdit_ScaleFormTo96)
    return (int32_t)MySyscall(pLabeledEdit_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_Scale96ToFont)
int32_t
LabeledEdit_Scale96ToFont(TLabeledEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(LabeledEdit_Scale96ToFont)
    return (int32_t)MySyscall(pLabeledEdit_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_ScaleFontTo96)
int32_t
LabeledEdit_ScaleFontTo96(TLabeledEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(LabeledEdit_ScaleFontTo96)
    return (int32_t)MySyscall(pLabeledEdit_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_ScaleScreenToFont)
int32_t
LabeledEdit_ScaleScreenToFont(TLabeledEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(LabeledEdit_ScaleScreenToFont)
    return (int32_t)MySyscall(pLabeledEdit_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_ScaleFontToScreen)
int32_t
LabeledEdit_ScaleFontToScreen(TLabeledEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(LabeledEdit_ScaleFontToScreen)
    return (int32_t)MySyscall(pLabeledEdit_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_Scale96ToScreen)
int32_t
LabeledEdit_Scale96ToScreen(TLabeledEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(LabeledEdit_Scale96ToScreen)
    return (int32_t)MySyscall(pLabeledEdit_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_ScaleScreenTo96)
int32_t
LabeledEdit_ScaleScreenTo96(TLabeledEdit AObj, int32_t ASize) {
    GET_FUNC_ADDR(LabeledEdit_ScaleScreenTo96)
    return (int32_t)MySyscall(pLabeledEdit_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_AutoAdjustLayout)
void
LabeledEdit_AutoAdjustLayout(TLabeledEdit AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(LabeledEdit_AutoAdjustLayout)
    MySyscall(pLabeledEdit_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_FixDesignFontsPPI)
void
LabeledEdit_FixDesignFontsPPI(TLabeledEdit AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(LabeledEdit_FixDesignFontsPPI)
    MySyscall(pLabeledEdit_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_ScaleFontsPPI)
void
LabeledEdit_ScaleFontsPPI(TLabeledEdit AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(LabeledEdit_ScaleFontsPPI)
    MySyscall(pLabeledEdit_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetAlignment)
TAlignment
LabeledEdit_GetAlignment(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetAlignment)
    return (TAlignment)MySyscall(pLabeledEdit_GetAlignment, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetAlignment)
void
LabeledEdit_SetAlignment(TLabeledEdit AObj, TAlignment AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetAlignment)
    MySyscall(pLabeledEdit_SetAlignment, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetAnchors)
TAnchors
LabeledEdit_GetAnchors(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetAnchors)
    return (TAnchors)MySyscall(pLabeledEdit_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetAnchors)
void
LabeledEdit_SetAnchors(TLabeledEdit AObj, TAnchors AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetAnchors)
    MySyscall(pLabeledEdit_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetAutoSelect)
BOOL
LabeledEdit_GetAutoSelect(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetAutoSelect)
    return (BOOL)MySyscall(pLabeledEdit_GetAutoSelect, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetAutoSelect)
void
LabeledEdit_SetAutoSelect(TLabeledEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetAutoSelect)
    MySyscall(pLabeledEdit_SetAutoSelect, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetAutoSize)
BOOL
LabeledEdit_GetAutoSize(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetAutoSize)
    return (BOOL)MySyscall(pLabeledEdit_GetAutoSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetAutoSize)
void
LabeledEdit_SetAutoSize(TLabeledEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetAutoSize)
    MySyscall(pLabeledEdit_SetAutoSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetBiDiMode)
TBiDiMode
LabeledEdit_GetBiDiMode(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetBiDiMode)
    return (TBiDiMode)MySyscall(pLabeledEdit_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetBiDiMode)
void
LabeledEdit_SetBiDiMode(TLabeledEdit AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetBiDiMode)
    MySyscall(pLabeledEdit_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetBorderStyle)
TBorderStyle
LabeledEdit_GetBorderStyle(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetBorderStyle)
    return (TBorderStyle)MySyscall(pLabeledEdit_GetBorderStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetBorderStyle)
void
LabeledEdit_SetBorderStyle(TLabeledEdit AObj, TBorderStyle AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetBorderStyle)
    MySyscall(pLabeledEdit_SetBorderStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetCharCase)
TEditCharCase
LabeledEdit_GetCharCase(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetCharCase)
    return (TEditCharCase)MySyscall(pLabeledEdit_GetCharCase, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetCharCase)
void
LabeledEdit_SetCharCase(TLabeledEdit AObj, TEditCharCase AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetCharCase)
    MySyscall(pLabeledEdit_SetCharCase, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetColor)
TColor
LabeledEdit_GetColor(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetColor)
    return (TColor)MySyscall(pLabeledEdit_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetColor)
void
LabeledEdit_SetColor(TLabeledEdit AObj, TColor AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetColor)
    MySyscall(pLabeledEdit_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetConstraints)
TSizeConstraints
LabeledEdit_GetConstraints(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetConstraints)
    return (TSizeConstraints)MySyscall(pLabeledEdit_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetConstraints)
void
LabeledEdit_SetConstraints(TLabeledEdit AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetConstraints)
    MySyscall(pLabeledEdit_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetDoubleBuffered)
BOOL
LabeledEdit_GetDoubleBuffered(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetDoubleBuffered)
    return (BOOL)MySyscall(pLabeledEdit_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetDoubleBuffered)
void
LabeledEdit_SetDoubleBuffered(TLabeledEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetDoubleBuffered)
    MySyscall(pLabeledEdit_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetDragCursor)
TCursor
LabeledEdit_GetDragCursor(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetDragCursor)
    return (TCursor)MySyscall(pLabeledEdit_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetDragCursor)
void
LabeledEdit_SetDragCursor(TLabeledEdit AObj, TCursor AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetDragCursor)
    MySyscall(pLabeledEdit_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetDragMode)
TDragMode
LabeledEdit_GetDragMode(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetDragMode)
    return (TDragMode)MySyscall(pLabeledEdit_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetDragMode)
void
LabeledEdit_SetDragMode(TLabeledEdit AObj, TDragMode AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetDragMode)
    MySyscall(pLabeledEdit_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetEditLabel)
TBoundLabel
LabeledEdit_GetEditLabel(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetEditLabel)
    return (TBoundLabel)MySyscall(pLabeledEdit_GetEditLabel, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetEnabled)
BOOL
LabeledEdit_GetEnabled(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetEnabled)
    return (BOOL)MySyscall(pLabeledEdit_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetEnabled)
void
LabeledEdit_SetEnabled(TLabeledEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetEnabled)
    MySyscall(pLabeledEdit_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetFont)
TFont
LabeledEdit_GetFont(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetFont)
    return (TFont)MySyscall(pLabeledEdit_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetFont)
void
LabeledEdit_SetFont(TLabeledEdit AObj, TFont AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetFont)
    MySyscall(pLabeledEdit_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetHideSelection)
BOOL
LabeledEdit_GetHideSelection(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetHideSelection)
    return (BOOL)MySyscall(pLabeledEdit_GetHideSelection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetHideSelection)
void
LabeledEdit_SetHideSelection(TLabeledEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetHideSelection)
    MySyscall(pLabeledEdit_SetHideSelection, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetLabelPosition)
TLabelPosition
LabeledEdit_GetLabelPosition(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetLabelPosition)
    return (TLabelPosition)MySyscall(pLabeledEdit_GetLabelPosition, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetLabelPosition)
void
LabeledEdit_SetLabelPosition(TLabeledEdit AObj, TLabelPosition AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetLabelPosition)
    MySyscall(pLabeledEdit_SetLabelPosition, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetLabelSpacing)
int32_t
LabeledEdit_GetLabelSpacing(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetLabelSpacing)
    return (int32_t)MySyscall(pLabeledEdit_GetLabelSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetLabelSpacing)
void
LabeledEdit_SetLabelSpacing(TLabeledEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetLabelSpacing)
    MySyscall(pLabeledEdit_SetLabelSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetMaxLength)
int32_t
LabeledEdit_GetMaxLength(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetMaxLength)
    return (int32_t)MySyscall(pLabeledEdit_GetMaxLength, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetMaxLength)
void
LabeledEdit_SetMaxLength(TLabeledEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetMaxLength)
    MySyscall(pLabeledEdit_SetMaxLength, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetNumbersOnly)
BOOL
LabeledEdit_GetNumbersOnly(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetNumbersOnly)
    return (BOOL)MySyscall(pLabeledEdit_GetNumbersOnly, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetNumbersOnly)
void
LabeledEdit_SetNumbersOnly(TLabeledEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetNumbersOnly)
    MySyscall(pLabeledEdit_SetNumbersOnly, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetParentColor)
BOOL
LabeledEdit_GetParentColor(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetParentColor)
    return (BOOL)MySyscall(pLabeledEdit_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetParentColor)
void
LabeledEdit_SetParentColor(TLabeledEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetParentColor)
    MySyscall(pLabeledEdit_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetParentDoubleBuffered)
BOOL
LabeledEdit_GetParentDoubleBuffered(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pLabeledEdit_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetParentDoubleBuffered)
void
LabeledEdit_SetParentDoubleBuffered(TLabeledEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetParentDoubleBuffered)
    MySyscall(pLabeledEdit_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetParentFont)
BOOL
LabeledEdit_GetParentFont(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetParentFont)
    return (BOOL)MySyscall(pLabeledEdit_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetParentFont)
void
LabeledEdit_SetParentFont(TLabeledEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetParentFont)
    MySyscall(pLabeledEdit_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetParentShowHint)
BOOL
LabeledEdit_GetParentShowHint(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetParentShowHint)
    return (BOOL)MySyscall(pLabeledEdit_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetParentShowHint)
void
LabeledEdit_SetParentShowHint(TLabeledEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetParentShowHint)
    MySyscall(pLabeledEdit_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetPasswordChar)
Char
LabeledEdit_GetPasswordChar(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetPasswordChar)
    return (Char)MySyscall(pLabeledEdit_GetPasswordChar, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetPasswordChar)
void
LabeledEdit_SetPasswordChar(TLabeledEdit AObj, Char AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetPasswordChar)
    MySyscall(pLabeledEdit_SetPasswordChar, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetPopupMenu)
TPopupMenu
LabeledEdit_GetPopupMenu(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetPopupMenu)
    return (TPopupMenu)MySyscall(pLabeledEdit_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetPopupMenu)
void
LabeledEdit_SetPopupMenu(TLabeledEdit AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetPopupMenu)
    MySyscall(pLabeledEdit_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetReadOnly)
BOOL
LabeledEdit_GetReadOnly(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetReadOnly)
    return (BOOL)MySyscall(pLabeledEdit_GetReadOnly, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetReadOnly)
void
LabeledEdit_SetReadOnly(TLabeledEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetReadOnly)
    MySyscall(pLabeledEdit_SetReadOnly, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetShowHint)
BOOL
LabeledEdit_GetShowHint(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetShowHint)
    return (BOOL)MySyscall(pLabeledEdit_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetShowHint)
void
LabeledEdit_SetShowHint(TLabeledEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetShowHint)
    MySyscall(pLabeledEdit_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetTabOrder)
TTabOrder
LabeledEdit_GetTabOrder(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetTabOrder)
    return (TTabOrder)MySyscall(pLabeledEdit_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetTabOrder)
void
LabeledEdit_SetTabOrder(TLabeledEdit AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetTabOrder)
    MySyscall(pLabeledEdit_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetTabStop)
BOOL
LabeledEdit_GetTabStop(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetTabStop)
    return (BOOL)MySyscall(pLabeledEdit_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetTabStop)
void
LabeledEdit_SetTabStop(TLabeledEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetTabStop)
    MySyscall(pLabeledEdit_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetText)
char*
LabeledEdit_GetText(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetText)
    return (char*)MySyscall(pLabeledEdit_GetText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetText)
void
LabeledEdit_SetText(TLabeledEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetText)
    MySyscall(pLabeledEdit_SetText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetTextHint)
char*
LabeledEdit_GetTextHint(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetTextHint)
    return (char*)MySyscall(pLabeledEdit_GetTextHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetTextHint)
void
LabeledEdit_SetTextHint(TLabeledEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetTextHint)
    MySyscall(pLabeledEdit_SetTextHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetVisible)
BOOL
LabeledEdit_GetVisible(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetVisible)
    return (BOOL)MySyscall(pLabeledEdit_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetVisible)
void
LabeledEdit_SetVisible(TLabeledEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetVisible)
    MySyscall(pLabeledEdit_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetOnChange)
void
LabeledEdit_SetOnChange(TLabeledEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(LabeledEdit_SetOnChange)
    MySyscall(pLabeledEdit_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetOnClick)
void
LabeledEdit_SetOnClick(TLabeledEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(LabeledEdit_SetOnClick)
    MySyscall(pLabeledEdit_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetOnDblClick)
void
LabeledEdit_SetOnDblClick(TLabeledEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(LabeledEdit_SetOnDblClick)
    MySyscall(pLabeledEdit_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetOnDragDrop)
void
LabeledEdit_SetOnDragDrop(TLabeledEdit AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(LabeledEdit_SetOnDragDrop)
    MySyscall(pLabeledEdit_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetOnDragOver)
void
LabeledEdit_SetOnDragOver(TLabeledEdit AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(LabeledEdit_SetOnDragOver)
    MySyscall(pLabeledEdit_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetOnEndDrag)
void
LabeledEdit_SetOnEndDrag(TLabeledEdit AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(LabeledEdit_SetOnEndDrag)
    MySyscall(pLabeledEdit_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetOnEnter)
void
LabeledEdit_SetOnEnter(TLabeledEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(LabeledEdit_SetOnEnter)
    MySyscall(pLabeledEdit_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetOnExit)
void
LabeledEdit_SetOnExit(TLabeledEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(LabeledEdit_SetOnExit)
    MySyscall(pLabeledEdit_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetOnKeyDown)
void
LabeledEdit_SetOnKeyDown(TLabeledEdit AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(LabeledEdit_SetOnKeyDown)
    MySyscall(pLabeledEdit_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetOnKeyPress)
void
LabeledEdit_SetOnKeyPress(TLabeledEdit AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(LabeledEdit_SetOnKeyPress)
    MySyscall(pLabeledEdit_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetOnKeyUp)
void
LabeledEdit_SetOnKeyUp(TLabeledEdit AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(LabeledEdit_SetOnKeyUp)
    MySyscall(pLabeledEdit_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetOnMouseDown)
void
LabeledEdit_SetOnMouseDown(TLabeledEdit AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(LabeledEdit_SetOnMouseDown)
    MySyscall(pLabeledEdit_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetOnMouseEnter)
void
LabeledEdit_SetOnMouseEnter(TLabeledEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(LabeledEdit_SetOnMouseEnter)
    MySyscall(pLabeledEdit_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetOnMouseLeave)
void
LabeledEdit_SetOnMouseLeave(TLabeledEdit AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(LabeledEdit_SetOnMouseLeave)
    MySyscall(pLabeledEdit_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetOnMouseMove)
void
LabeledEdit_SetOnMouseMove(TLabeledEdit AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(LabeledEdit_SetOnMouseMove)
    MySyscall(pLabeledEdit_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetOnMouseUp)
void
LabeledEdit_SetOnMouseUp(TLabeledEdit AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(LabeledEdit_SetOnMouseUp)
    MySyscall(pLabeledEdit_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetCanUndo)
BOOL
LabeledEdit_GetCanUndo(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetCanUndo)
    return (BOOL)MySyscall(pLabeledEdit_GetCanUndo, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetModified)
BOOL
LabeledEdit_GetModified(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetModified)
    return (BOOL)MySyscall(pLabeledEdit_GetModified, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetModified)
void
LabeledEdit_SetModified(TLabeledEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetModified)
    MySyscall(pLabeledEdit_SetModified, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetSelLength)
int32_t
LabeledEdit_GetSelLength(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetSelLength)
    return (int32_t)MySyscall(pLabeledEdit_GetSelLength, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetSelLength)
void
LabeledEdit_SetSelLength(TLabeledEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetSelLength)
    MySyscall(pLabeledEdit_SetSelLength, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetSelStart)
int32_t
LabeledEdit_GetSelStart(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetSelStart)
    return (int32_t)MySyscall(pLabeledEdit_GetSelStart, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetSelStart)
void
LabeledEdit_SetSelStart(TLabeledEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetSelStart)
    MySyscall(pLabeledEdit_SetSelStart, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetSelText)
char*
LabeledEdit_GetSelText(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetSelText)
    return (char*)MySyscall(pLabeledEdit_GetSelText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetSelText)
void
LabeledEdit_SetSelText(TLabeledEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetSelText)
    MySyscall(pLabeledEdit_SetSelText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetDockClientCount)
int32_t
LabeledEdit_GetDockClientCount(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetDockClientCount)
    return (int32_t)MySyscall(pLabeledEdit_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetDockSite)
BOOL
LabeledEdit_GetDockSite(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetDockSite)
    return (BOOL)MySyscall(pLabeledEdit_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetDockSite)
void
LabeledEdit_SetDockSite(TLabeledEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetDockSite)
    MySyscall(pLabeledEdit_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetMouseInClient)
BOOL
LabeledEdit_GetMouseInClient(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetMouseInClient)
    return (BOOL)MySyscall(pLabeledEdit_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetVisibleDockClientCount)
int32_t
LabeledEdit_GetVisibleDockClientCount(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pLabeledEdit_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetBrush)
TBrush
LabeledEdit_GetBrush(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetBrush)
    return (TBrush)MySyscall(pLabeledEdit_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetControlCount)
int32_t
LabeledEdit_GetControlCount(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetControlCount)
    return (int32_t)MySyscall(pLabeledEdit_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetHandle)
HWND
LabeledEdit_GetHandle(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetHandle)
    return (HWND)MySyscall(pLabeledEdit_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetParentWindow)
HWND
LabeledEdit_GetParentWindow(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetParentWindow)
    return (HWND)MySyscall(pLabeledEdit_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetParentWindow)
void
LabeledEdit_SetParentWindow(TLabeledEdit AObj, HWND AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetParentWindow)
    MySyscall(pLabeledEdit_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetShowing)
BOOL
LabeledEdit_GetShowing(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetShowing)
    return (BOOL)MySyscall(pLabeledEdit_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetUseDockManager)
BOOL
LabeledEdit_GetUseDockManager(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetUseDockManager)
    return (BOOL)MySyscall(pLabeledEdit_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetUseDockManager)
void
LabeledEdit_SetUseDockManager(TLabeledEdit AObj, BOOL AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetUseDockManager)
    MySyscall(pLabeledEdit_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetAction)
TAction
LabeledEdit_GetAction(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetAction)
    return (TAction)MySyscall(pLabeledEdit_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetAction)
void
LabeledEdit_SetAction(TLabeledEdit AObj, TAction AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetAction)
    MySyscall(pLabeledEdit_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetAlign)
TAlign
LabeledEdit_GetAlign(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetAlign)
    return (TAlign)MySyscall(pLabeledEdit_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetAlign)
void
LabeledEdit_SetAlign(TLabeledEdit AObj, TAlign AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetAlign)
    MySyscall(pLabeledEdit_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetBoundsRect)
TRect
LabeledEdit_GetBoundsRect(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetBoundsRect)
    TRect result;
    MySyscall(pLabeledEdit_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(LabeledEdit_SetBoundsRect)
void
LabeledEdit_SetBoundsRect(TLabeledEdit AObj, TRect AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetBoundsRect)
    MySyscall(pLabeledEdit_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetClientHeight)
int32_t
LabeledEdit_GetClientHeight(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetClientHeight)
    return (int32_t)MySyscall(pLabeledEdit_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetClientHeight)
void
LabeledEdit_SetClientHeight(TLabeledEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetClientHeight)
    MySyscall(pLabeledEdit_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetClientOrigin)
TPoint
LabeledEdit_GetClientOrigin(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetClientOrigin)
    TPoint result;
    MySyscall(pLabeledEdit_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(LabeledEdit_GetClientRect)
TRect
LabeledEdit_GetClientRect(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetClientRect)
    TRect result;
    MySyscall(pLabeledEdit_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(LabeledEdit_GetClientWidth)
int32_t
LabeledEdit_GetClientWidth(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetClientWidth)
    return (int32_t)MySyscall(pLabeledEdit_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetClientWidth)
void
LabeledEdit_SetClientWidth(TLabeledEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetClientWidth)
    MySyscall(pLabeledEdit_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetControlState)
TControlState
LabeledEdit_GetControlState(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetControlState)
    return (TControlState)MySyscall(pLabeledEdit_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetControlState)
void
LabeledEdit_SetControlState(TLabeledEdit AObj, TControlState AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetControlState)
    MySyscall(pLabeledEdit_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetControlStyle)
TControlStyle
LabeledEdit_GetControlStyle(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetControlStyle)
    return (TControlStyle)MySyscall(pLabeledEdit_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetControlStyle)
void
LabeledEdit_SetControlStyle(TLabeledEdit AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetControlStyle)
    MySyscall(pLabeledEdit_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetFloating)
BOOL
LabeledEdit_GetFloating(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetFloating)
    return (BOOL)MySyscall(pLabeledEdit_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetParent)
TWinControl
LabeledEdit_GetParent(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetParent)
    return (TWinControl)MySyscall(pLabeledEdit_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetParent)
void
LabeledEdit_SetParent(TLabeledEdit AObj, TWinControl AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetParent)
    MySyscall(pLabeledEdit_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetLeft)
int32_t
LabeledEdit_GetLeft(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetLeft)
    return (int32_t)MySyscall(pLabeledEdit_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetLeft)
void
LabeledEdit_SetLeft(TLabeledEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetLeft)
    MySyscall(pLabeledEdit_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetTop)
int32_t
LabeledEdit_GetTop(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetTop)
    return (int32_t)MySyscall(pLabeledEdit_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetTop)
void
LabeledEdit_SetTop(TLabeledEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetTop)
    MySyscall(pLabeledEdit_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetWidth)
int32_t
LabeledEdit_GetWidth(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetWidth)
    return (int32_t)MySyscall(pLabeledEdit_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetWidth)
void
LabeledEdit_SetWidth(TLabeledEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetWidth)
    MySyscall(pLabeledEdit_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetHeight)
int32_t
LabeledEdit_GetHeight(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetHeight)
    return (int32_t)MySyscall(pLabeledEdit_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetHeight)
void
LabeledEdit_SetHeight(TLabeledEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetHeight)
    MySyscall(pLabeledEdit_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetCursor)
TCursor
LabeledEdit_GetCursor(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetCursor)
    return (TCursor)MySyscall(pLabeledEdit_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetCursor)
void
LabeledEdit_SetCursor(TLabeledEdit AObj, TCursor AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetCursor)
    MySyscall(pLabeledEdit_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetHint)
char*
LabeledEdit_GetHint(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetHint)
    return (char*)MySyscall(pLabeledEdit_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetHint)
void
LabeledEdit_SetHint(TLabeledEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetHint)
    MySyscall(pLabeledEdit_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetComponentCount)
int32_t
LabeledEdit_GetComponentCount(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetComponentCount)
    return (int32_t)MySyscall(pLabeledEdit_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetComponentIndex)
int32_t
LabeledEdit_GetComponentIndex(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetComponentIndex)
    return (int32_t)MySyscall(pLabeledEdit_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetComponentIndex)
void
LabeledEdit_SetComponentIndex(TLabeledEdit AObj, int32_t AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetComponentIndex)
    MySyscall(pLabeledEdit_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetOwner)
TComponent
LabeledEdit_GetOwner(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetOwner)
    return (TComponent)MySyscall(pLabeledEdit_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetName)
char*
LabeledEdit_GetName(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetName)
    return (char*)MySyscall(pLabeledEdit_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetName)
void
LabeledEdit_SetName(TLabeledEdit AObj, CChar char* AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetName)
    MySyscall(pLabeledEdit_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetTag)
intptr_t
LabeledEdit_GetTag(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetTag)
    return (intptr_t)MySyscall(pLabeledEdit_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetTag)
void
LabeledEdit_SetTag(TLabeledEdit AObj, intptr_t AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetTag)
    MySyscall(pLabeledEdit_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetAnchorSideLeft)
TAnchorSide
LabeledEdit_GetAnchorSideLeft(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pLabeledEdit_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetAnchorSideLeft)
void
LabeledEdit_SetAnchorSideLeft(TLabeledEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetAnchorSideLeft)
    MySyscall(pLabeledEdit_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetAnchorSideTop)
TAnchorSide
LabeledEdit_GetAnchorSideTop(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pLabeledEdit_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetAnchorSideTop)
void
LabeledEdit_SetAnchorSideTop(TLabeledEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetAnchorSideTop)
    MySyscall(pLabeledEdit_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetAnchorSideRight)
TAnchorSide
LabeledEdit_GetAnchorSideRight(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pLabeledEdit_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetAnchorSideRight)
void
LabeledEdit_SetAnchorSideRight(TLabeledEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetAnchorSideRight)
    MySyscall(pLabeledEdit_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetAnchorSideBottom)
TAnchorSide
LabeledEdit_GetAnchorSideBottom(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pLabeledEdit_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetAnchorSideBottom)
void
LabeledEdit_SetAnchorSideBottom(TLabeledEdit AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetAnchorSideBottom)
    MySyscall(pLabeledEdit_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetChildSizing)
TControlChildSizing
LabeledEdit_GetChildSizing(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetChildSizing)
    return (TControlChildSizing)MySyscall(pLabeledEdit_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetChildSizing)
void
LabeledEdit_SetChildSizing(TLabeledEdit AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetChildSizing)
    MySyscall(pLabeledEdit_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetBorderSpacing)
TControlBorderSpacing
LabeledEdit_GetBorderSpacing(TLabeledEdit AObj) {
    GET_FUNC_ADDR(LabeledEdit_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pLabeledEdit_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_SetBorderSpacing)
void
LabeledEdit_SetBorderSpacing(TLabeledEdit AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(LabeledEdit_SetBorderSpacing)
    MySyscall(pLabeledEdit_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetDockClients)
TControl
LabeledEdit_GetDockClients(TLabeledEdit AObj, int32_t Index) {
    GET_FUNC_ADDR(LabeledEdit_GetDockClients)
    return (TControl)MySyscall(pLabeledEdit_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetControls)
TControl
LabeledEdit_GetControls(TLabeledEdit AObj, int32_t Index) {
    GET_FUNC_ADDR(LabeledEdit_GetControls)
    return (TControl)MySyscall(pLabeledEdit_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetComponents)
TComponent
LabeledEdit_GetComponents(TLabeledEdit AObj, int32_t AIndex) {
    GET_FUNC_ADDR(LabeledEdit_GetComponents)
    return (TComponent)MySyscall(pLabeledEdit_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_GetAnchorSide)
TAnchorSide
LabeledEdit_GetAnchorSide(TLabeledEdit AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(LabeledEdit_GetAnchorSide)
    return (TAnchorSide)MySyscall(pLabeledEdit_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(LabeledEdit_StaticClassType)
TClass
LabeledEdit_StaticClassType() {
    GET_FUNC_ADDR(LabeledEdit_StaticClassType)
    return (TClass)MySyscall(pLabeledEdit_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TBoundLabel-------------------

DEFINE_FUNC_PTR(BoundLabel_Create)
TBoundLabel
BoundLabel_Create(TComponent AOwner) {
    GET_FUNC_ADDR(BoundLabel_Create)
    return (TBoundLabel)MySyscall(pBoundLabel_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_Free)
void
BoundLabel_Free(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_Free)
    MySyscall(pBoundLabel_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_BringToFront)
void
BoundLabel_BringToFront(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_BringToFront)
    MySyscall(pBoundLabel_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_ClientToScreen)
TPoint
BoundLabel_ClientToScreen(TBoundLabel AObj, TPoint Point) {
    GET_FUNC_ADDR(BoundLabel_ClientToScreen)
    TPoint result;
    MySyscall(pBoundLabel_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(BoundLabel_ClientToParent)
TPoint
BoundLabel_ClientToParent(TBoundLabel AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(BoundLabel_ClientToParent)
    TPoint result;
    MySyscall(pBoundLabel_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(BoundLabel_Dragging)
BOOL
BoundLabel_Dragging(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_Dragging)
    return (BOOL)MySyscall(pBoundLabel_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_HasParent)
BOOL
BoundLabel_HasParent(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_HasParent)
    return (BOOL)MySyscall(pBoundLabel_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_Hide)
void
BoundLabel_Hide(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_Hide)
    MySyscall(pBoundLabel_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_Invalidate)
void
BoundLabel_Invalidate(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_Invalidate)
    MySyscall(pBoundLabel_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_Perform)
intptr_t
BoundLabel_Perform(TBoundLabel AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(BoundLabel_Perform)
    return (intptr_t)MySyscall(pBoundLabel_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_Refresh)
void
BoundLabel_Refresh(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_Refresh)
    MySyscall(pBoundLabel_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_Repaint)
void
BoundLabel_Repaint(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_Repaint)
    MySyscall(pBoundLabel_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_ScreenToClient)
TPoint
BoundLabel_ScreenToClient(TBoundLabel AObj, TPoint Point) {
    GET_FUNC_ADDR(BoundLabel_ScreenToClient)
    TPoint result;
    MySyscall(pBoundLabel_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(BoundLabel_ParentToClient)
TPoint
BoundLabel_ParentToClient(TBoundLabel AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(BoundLabel_ParentToClient)
    TPoint result;
    MySyscall(pBoundLabel_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(BoundLabel_SendToBack)
void
BoundLabel_SendToBack(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_SendToBack)
    MySyscall(pBoundLabel_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetBounds)
void
BoundLabel_SetBounds(TBoundLabel AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(BoundLabel_SetBounds)
    MySyscall(pBoundLabel_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_Show)
void
BoundLabel_Show(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_Show)
    MySyscall(pBoundLabel_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_Update)
void
BoundLabel_Update(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_Update)
    MySyscall(pBoundLabel_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetTextBuf)
int32_t
BoundLabel_GetTextBuf(TBoundLabel AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(BoundLabel_GetTextBuf)
    return (int32_t)MySyscall(pBoundLabel_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetTextLen)
int32_t
BoundLabel_GetTextLen(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetTextLen)
    return (int32_t)MySyscall(pBoundLabel_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetTextBuf)
void
BoundLabel_SetTextBuf(TBoundLabel AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(BoundLabel_SetTextBuf)
    MySyscall(pBoundLabel_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_FindComponent)
TComponent
BoundLabel_FindComponent(TBoundLabel AObj, CChar char* AName) {
    GET_FUNC_ADDR(BoundLabel_FindComponent)
    return (TComponent)MySyscall(pBoundLabel_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetNamePath)
char*
BoundLabel_GetNamePath(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetNamePath)
    return (char*)MySyscall(pBoundLabel_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_Assign)
void
BoundLabel_Assign(TBoundLabel AObj, TObject Source) {
    GET_FUNC_ADDR(BoundLabel_Assign)
    MySyscall(pBoundLabel_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_ClassType)
TClass
BoundLabel_ClassType(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_ClassType)
    return (TClass)MySyscall(pBoundLabel_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_ClassName)
char*
BoundLabel_ClassName(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_ClassName)
    return (char*)MySyscall(pBoundLabel_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_InstanceSize)
int32_t
BoundLabel_InstanceSize(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_InstanceSize)
    return (int32_t)MySyscall(pBoundLabel_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_InheritsFrom)
BOOL
BoundLabel_InheritsFrom(TBoundLabel AObj, TClass AClass) {
    GET_FUNC_ADDR(BoundLabel_InheritsFrom)
    return (BOOL)MySyscall(pBoundLabel_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_Equals)
BOOL
BoundLabel_Equals(TBoundLabel AObj, TObject Obj) {
    GET_FUNC_ADDR(BoundLabel_Equals)
    return (BOOL)MySyscall(pBoundLabel_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetHashCode)
int32_t
BoundLabel_GetHashCode(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetHashCode)
    return (int32_t)MySyscall(pBoundLabel_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_ToString)
char*
BoundLabel_ToString(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_ToString)
    return (char*)MySyscall(pBoundLabel_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_AnchorToNeighbour)
void
BoundLabel_AnchorToNeighbour(TBoundLabel AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(BoundLabel_AnchorToNeighbour)
    MySyscall(pBoundLabel_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_AnchorParallel)
void
BoundLabel_AnchorParallel(TBoundLabel AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(BoundLabel_AnchorParallel)
    MySyscall(pBoundLabel_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_AnchorHorizontalCenterTo)
void
BoundLabel_AnchorHorizontalCenterTo(TBoundLabel AObj, TControl ASibling) {
    GET_FUNC_ADDR(BoundLabel_AnchorHorizontalCenterTo)
    MySyscall(pBoundLabel_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_AnchorVerticalCenterTo)
void
BoundLabel_AnchorVerticalCenterTo(TBoundLabel AObj, TControl ASibling) {
    GET_FUNC_ADDR(BoundLabel_AnchorVerticalCenterTo)
    MySyscall(pBoundLabel_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_AnchorSame)
void
BoundLabel_AnchorSame(TBoundLabel AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(BoundLabel_AnchorSame)
    MySyscall(pBoundLabel_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_AnchorAsAlign)
void
BoundLabel_AnchorAsAlign(TBoundLabel AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(BoundLabel_AnchorAsAlign)
    MySyscall(pBoundLabel_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_AnchorClient)
void
BoundLabel_AnchorClient(TBoundLabel AObj, int32_t ASpace) {
    GET_FUNC_ADDR(BoundLabel_AnchorClient)
    MySyscall(pBoundLabel_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_ScaleDesignToForm)
int32_t
BoundLabel_ScaleDesignToForm(TBoundLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(BoundLabel_ScaleDesignToForm)
    return (int32_t)MySyscall(pBoundLabel_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_ScaleFormToDesign)
int32_t
BoundLabel_ScaleFormToDesign(TBoundLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(BoundLabel_ScaleFormToDesign)
    return (int32_t)MySyscall(pBoundLabel_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_Scale96ToForm)
int32_t
BoundLabel_Scale96ToForm(TBoundLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(BoundLabel_Scale96ToForm)
    return (int32_t)MySyscall(pBoundLabel_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_ScaleFormTo96)
int32_t
BoundLabel_ScaleFormTo96(TBoundLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(BoundLabel_ScaleFormTo96)
    return (int32_t)MySyscall(pBoundLabel_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_Scale96ToFont)
int32_t
BoundLabel_Scale96ToFont(TBoundLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(BoundLabel_Scale96ToFont)
    return (int32_t)MySyscall(pBoundLabel_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_ScaleFontTo96)
int32_t
BoundLabel_ScaleFontTo96(TBoundLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(BoundLabel_ScaleFontTo96)
    return (int32_t)MySyscall(pBoundLabel_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_ScaleScreenToFont)
int32_t
BoundLabel_ScaleScreenToFont(TBoundLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(BoundLabel_ScaleScreenToFont)
    return (int32_t)MySyscall(pBoundLabel_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_ScaleFontToScreen)
int32_t
BoundLabel_ScaleFontToScreen(TBoundLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(BoundLabel_ScaleFontToScreen)
    return (int32_t)MySyscall(pBoundLabel_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_Scale96ToScreen)
int32_t
BoundLabel_Scale96ToScreen(TBoundLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(BoundLabel_Scale96ToScreen)
    return (int32_t)MySyscall(pBoundLabel_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_ScaleScreenTo96)
int32_t
BoundLabel_ScaleScreenTo96(TBoundLabel AObj, int32_t ASize) {
    GET_FUNC_ADDR(BoundLabel_ScaleScreenTo96)
    return (int32_t)MySyscall(pBoundLabel_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_AutoAdjustLayout)
void
BoundLabel_AutoAdjustLayout(TBoundLabel AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(BoundLabel_AutoAdjustLayout)
    MySyscall(pBoundLabel_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_FixDesignFontsPPI)
void
BoundLabel_FixDesignFontsPPI(TBoundLabel AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(BoundLabel_FixDesignFontsPPI)
    MySyscall(pBoundLabel_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_ScaleFontsPPI)
void
BoundLabel_ScaleFontsPPI(TBoundLabel AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(BoundLabel_ScaleFontsPPI)
    MySyscall(pBoundLabel_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetBiDiMode)
TBiDiMode
BoundLabel_GetBiDiMode(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetBiDiMode)
    return (TBiDiMode)MySyscall(pBoundLabel_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetBiDiMode)
void
BoundLabel_SetBiDiMode(TBoundLabel AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(BoundLabel_SetBiDiMode)
    MySyscall(pBoundLabel_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetCaption)
char*
BoundLabel_GetCaption(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetCaption)
    return (char*)MySyscall(pBoundLabel_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetCaption)
void
BoundLabel_SetCaption(TBoundLabel AObj, CChar char* AValue) {
    GET_FUNC_ADDR(BoundLabel_SetCaption)
    MySyscall(pBoundLabel_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetColor)
TColor
BoundLabel_GetColor(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetColor)
    return (TColor)MySyscall(pBoundLabel_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetColor)
void
BoundLabel_SetColor(TBoundLabel AObj, TColor AValue) {
    GET_FUNC_ADDR(BoundLabel_SetColor)
    MySyscall(pBoundLabel_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetDragCursor)
TCursor
BoundLabel_GetDragCursor(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetDragCursor)
    return (TCursor)MySyscall(pBoundLabel_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetDragCursor)
void
BoundLabel_SetDragCursor(TBoundLabel AObj, TCursor AValue) {
    GET_FUNC_ADDR(BoundLabel_SetDragCursor)
    MySyscall(pBoundLabel_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetDragMode)
TDragMode
BoundLabel_GetDragMode(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetDragMode)
    return (TDragMode)MySyscall(pBoundLabel_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetDragMode)
void
BoundLabel_SetDragMode(TBoundLabel AObj, TDragMode AValue) {
    GET_FUNC_ADDR(BoundLabel_SetDragMode)
    MySyscall(pBoundLabel_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetFont)
TFont
BoundLabel_GetFont(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetFont)
    return (TFont)MySyscall(pBoundLabel_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetFont)
void
BoundLabel_SetFont(TBoundLabel AObj, TFont AValue) {
    GET_FUNC_ADDR(BoundLabel_SetFont)
    MySyscall(pBoundLabel_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetHeight)
int32_t
BoundLabel_GetHeight(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetHeight)
    return (int32_t)MySyscall(pBoundLabel_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetHeight)
void
BoundLabel_SetHeight(TBoundLabel AObj, int32_t AValue) {
    GET_FUNC_ADDR(BoundLabel_SetHeight)
    MySyscall(pBoundLabel_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetLeft)
int32_t
BoundLabel_GetLeft(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetLeft)
    return (int32_t)MySyscall(pBoundLabel_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetParentColor)
BOOL
BoundLabel_GetParentColor(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetParentColor)
    return (BOOL)MySyscall(pBoundLabel_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetParentColor)
void
BoundLabel_SetParentColor(TBoundLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(BoundLabel_SetParentColor)
    MySyscall(pBoundLabel_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetParentFont)
BOOL
BoundLabel_GetParentFont(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetParentFont)
    return (BOOL)MySyscall(pBoundLabel_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetParentFont)
void
BoundLabel_SetParentFont(TBoundLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(BoundLabel_SetParentFont)
    MySyscall(pBoundLabel_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetParentShowHint)
BOOL
BoundLabel_GetParentShowHint(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetParentShowHint)
    return (BOOL)MySyscall(pBoundLabel_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetParentShowHint)
void
BoundLabel_SetParentShowHint(TBoundLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(BoundLabel_SetParentShowHint)
    MySyscall(pBoundLabel_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetPopupMenu)
TPopupMenu
BoundLabel_GetPopupMenu(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetPopupMenu)
    return (TPopupMenu)MySyscall(pBoundLabel_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetPopupMenu)
void
BoundLabel_SetPopupMenu(TBoundLabel AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(BoundLabel_SetPopupMenu)
    MySyscall(pBoundLabel_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetShowAccelChar)
BOOL
BoundLabel_GetShowAccelChar(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetShowAccelChar)
    return (BOOL)MySyscall(pBoundLabel_GetShowAccelChar, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetShowAccelChar)
void
BoundLabel_SetShowAccelChar(TBoundLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(BoundLabel_SetShowAccelChar)
    MySyscall(pBoundLabel_SetShowAccelChar, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetShowHint)
BOOL
BoundLabel_GetShowHint(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetShowHint)
    return (BOOL)MySyscall(pBoundLabel_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetShowHint)
void
BoundLabel_SetShowHint(TBoundLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(BoundLabel_SetShowHint)
    MySyscall(pBoundLabel_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetTop)
int32_t
BoundLabel_GetTop(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetTop)
    return (int32_t)MySyscall(pBoundLabel_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetLayout)
TTextLayout
BoundLabel_GetLayout(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetLayout)
    return (TTextLayout)MySyscall(pBoundLabel_GetLayout, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetLayout)
void
BoundLabel_SetLayout(TBoundLabel AObj, TTextLayout AValue) {
    GET_FUNC_ADDR(BoundLabel_SetLayout)
    MySyscall(pBoundLabel_SetLayout, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetWordWrap)
BOOL
BoundLabel_GetWordWrap(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetWordWrap)
    return (BOOL)MySyscall(pBoundLabel_GetWordWrap, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetWordWrap)
void
BoundLabel_SetWordWrap(TBoundLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(BoundLabel_SetWordWrap)
    MySyscall(pBoundLabel_SetWordWrap, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetWidth)
int32_t
BoundLabel_GetWidth(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetWidth)
    return (int32_t)MySyscall(pBoundLabel_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetWidth)
void
BoundLabel_SetWidth(TBoundLabel AObj, int32_t AValue) {
    GET_FUNC_ADDR(BoundLabel_SetWidth)
    MySyscall(pBoundLabel_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetOnClick)
void
BoundLabel_SetOnClick(TBoundLabel AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(BoundLabel_SetOnClick)
    MySyscall(pBoundLabel_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetOnDblClick)
void
BoundLabel_SetOnDblClick(TBoundLabel AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(BoundLabel_SetOnDblClick)
    MySyscall(pBoundLabel_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetOnDragDrop)
void
BoundLabel_SetOnDragDrop(TBoundLabel AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(BoundLabel_SetOnDragDrop)
    MySyscall(pBoundLabel_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetOnDragOver)
void
BoundLabel_SetOnDragOver(TBoundLabel AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(BoundLabel_SetOnDragOver)
    MySyscall(pBoundLabel_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetOnEndDrag)
void
BoundLabel_SetOnEndDrag(TBoundLabel AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(BoundLabel_SetOnEndDrag)
    MySyscall(pBoundLabel_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetOnMouseDown)
void
BoundLabel_SetOnMouseDown(TBoundLabel AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(BoundLabel_SetOnMouseDown)
    MySyscall(pBoundLabel_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetOnMouseMove)
void
BoundLabel_SetOnMouseMove(TBoundLabel AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(BoundLabel_SetOnMouseMove)
    MySyscall(pBoundLabel_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetOnMouseUp)
void
BoundLabel_SetOnMouseUp(TBoundLabel AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(BoundLabel_SetOnMouseUp)
    MySyscall(pBoundLabel_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetCanvas)
TCanvas
BoundLabel_GetCanvas(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetCanvas)
    return (TCanvas)MySyscall(pBoundLabel_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetEnabled)
BOOL
BoundLabel_GetEnabled(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetEnabled)
    return (BOOL)MySyscall(pBoundLabel_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetEnabled)
void
BoundLabel_SetEnabled(TBoundLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(BoundLabel_SetEnabled)
    MySyscall(pBoundLabel_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetAction)
TAction
BoundLabel_GetAction(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetAction)
    return (TAction)MySyscall(pBoundLabel_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetAction)
void
BoundLabel_SetAction(TBoundLabel AObj, TAction AValue) {
    GET_FUNC_ADDR(BoundLabel_SetAction)
    MySyscall(pBoundLabel_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetAlign)
TAlign
BoundLabel_GetAlign(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetAlign)
    return (TAlign)MySyscall(pBoundLabel_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetAlign)
void
BoundLabel_SetAlign(TBoundLabel AObj, TAlign AValue) {
    GET_FUNC_ADDR(BoundLabel_SetAlign)
    MySyscall(pBoundLabel_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetAnchors)
TAnchors
BoundLabel_GetAnchors(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetAnchors)
    return (TAnchors)MySyscall(pBoundLabel_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetAnchors)
void
BoundLabel_SetAnchors(TBoundLabel AObj, TAnchors AValue) {
    GET_FUNC_ADDR(BoundLabel_SetAnchors)
    MySyscall(pBoundLabel_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetBoundsRect)
TRect
BoundLabel_GetBoundsRect(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetBoundsRect)
    TRect result;
    MySyscall(pBoundLabel_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(BoundLabel_SetBoundsRect)
void
BoundLabel_SetBoundsRect(TBoundLabel AObj, TRect AValue) {
    GET_FUNC_ADDR(BoundLabel_SetBoundsRect)
    MySyscall(pBoundLabel_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetClientHeight)
int32_t
BoundLabel_GetClientHeight(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetClientHeight)
    return (int32_t)MySyscall(pBoundLabel_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetClientHeight)
void
BoundLabel_SetClientHeight(TBoundLabel AObj, int32_t AValue) {
    GET_FUNC_ADDR(BoundLabel_SetClientHeight)
    MySyscall(pBoundLabel_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetClientOrigin)
TPoint
BoundLabel_GetClientOrigin(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetClientOrigin)
    TPoint result;
    MySyscall(pBoundLabel_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(BoundLabel_GetClientRect)
TRect
BoundLabel_GetClientRect(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetClientRect)
    TRect result;
    MySyscall(pBoundLabel_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(BoundLabel_GetClientWidth)
int32_t
BoundLabel_GetClientWidth(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetClientWidth)
    return (int32_t)MySyscall(pBoundLabel_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetClientWidth)
void
BoundLabel_SetClientWidth(TBoundLabel AObj, int32_t AValue) {
    GET_FUNC_ADDR(BoundLabel_SetClientWidth)
    MySyscall(pBoundLabel_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetConstraints)
TSizeConstraints
BoundLabel_GetConstraints(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetConstraints)
    return (TSizeConstraints)MySyscall(pBoundLabel_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetConstraints)
void
BoundLabel_SetConstraints(TBoundLabel AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(BoundLabel_SetConstraints)
    MySyscall(pBoundLabel_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetControlState)
TControlState
BoundLabel_GetControlState(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetControlState)
    return (TControlState)MySyscall(pBoundLabel_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetControlState)
void
BoundLabel_SetControlState(TBoundLabel AObj, TControlState AValue) {
    GET_FUNC_ADDR(BoundLabel_SetControlState)
    MySyscall(pBoundLabel_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetControlStyle)
TControlStyle
BoundLabel_GetControlStyle(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetControlStyle)
    return (TControlStyle)MySyscall(pBoundLabel_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetControlStyle)
void
BoundLabel_SetControlStyle(TBoundLabel AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(BoundLabel_SetControlStyle)
    MySyscall(pBoundLabel_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetFloating)
BOOL
BoundLabel_GetFloating(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetFloating)
    return (BOOL)MySyscall(pBoundLabel_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetVisible)
BOOL
BoundLabel_GetVisible(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetVisible)
    return (BOOL)MySyscall(pBoundLabel_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetVisible)
void
BoundLabel_SetVisible(TBoundLabel AObj, BOOL AValue) {
    GET_FUNC_ADDR(BoundLabel_SetVisible)
    MySyscall(pBoundLabel_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetParent)
TWinControl
BoundLabel_GetParent(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetParent)
    return (TWinControl)MySyscall(pBoundLabel_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetParent)
void
BoundLabel_SetParent(TBoundLabel AObj, TWinControl AValue) {
    GET_FUNC_ADDR(BoundLabel_SetParent)
    MySyscall(pBoundLabel_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetCursor)
TCursor
BoundLabel_GetCursor(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetCursor)
    return (TCursor)MySyscall(pBoundLabel_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetCursor)
void
BoundLabel_SetCursor(TBoundLabel AObj, TCursor AValue) {
    GET_FUNC_ADDR(BoundLabel_SetCursor)
    MySyscall(pBoundLabel_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetHint)
char*
BoundLabel_GetHint(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetHint)
    return (char*)MySyscall(pBoundLabel_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetHint)
void
BoundLabel_SetHint(TBoundLabel AObj, CChar char* AValue) {
    GET_FUNC_ADDR(BoundLabel_SetHint)
    MySyscall(pBoundLabel_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetComponentCount)
int32_t
BoundLabel_GetComponentCount(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetComponentCount)
    return (int32_t)MySyscall(pBoundLabel_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetComponentIndex)
int32_t
BoundLabel_GetComponentIndex(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetComponentIndex)
    return (int32_t)MySyscall(pBoundLabel_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetComponentIndex)
void
BoundLabel_SetComponentIndex(TBoundLabel AObj, int32_t AValue) {
    GET_FUNC_ADDR(BoundLabel_SetComponentIndex)
    MySyscall(pBoundLabel_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetOwner)
TComponent
BoundLabel_GetOwner(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetOwner)
    return (TComponent)MySyscall(pBoundLabel_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetName)
char*
BoundLabel_GetName(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetName)
    return (char*)MySyscall(pBoundLabel_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetName)
void
BoundLabel_SetName(TBoundLabel AObj, CChar char* AValue) {
    GET_FUNC_ADDR(BoundLabel_SetName)
    MySyscall(pBoundLabel_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetTag)
intptr_t
BoundLabel_GetTag(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetTag)
    return (intptr_t)MySyscall(pBoundLabel_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetTag)
void
BoundLabel_SetTag(TBoundLabel AObj, intptr_t AValue) {
    GET_FUNC_ADDR(BoundLabel_SetTag)
    MySyscall(pBoundLabel_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetAnchorSideLeft)
TAnchorSide
BoundLabel_GetAnchorSideLeft(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pBoundLabel_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetAnchorSideLeft)
void
BoundLabel_SetAnchorSideLeft(TBoundLabel AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(BoundLabel_SetAnchorSideLeft)
    MySyscall(pBoundLabel_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetAnchorSideTop)
TAnchorSide
BoundLabel_GetAnchorSideTop(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pBoundLabel_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetAnchorSideTop)
void
BoundLabel_SetAnchorSideTop(TBoundLabel AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(BoundLabel_SetAnchorSideTop)
    MySyscall(pBoundLabel_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetAnchorSideRight)
TAnchorSide
BoundLabel_GetAnchorSideRight(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pBoundLabel_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetAnchorSideRight)
void
BoundLabel_SetAnchorSideRight(TBoundLabel AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(BoundLabel_SetAnchorSideRight)
    MySyscall(pBoundLabel_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetAnchorSideBottom)
TAnchorSide
BoundLabel_GetAnchorSideBottom(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pBoundLabel_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetAnchorSideBottom)
void
BoundLabel_SetAnchorSideBottom(TBoundLabel AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(BoundLabel_SetAnchorSideBottom)
    MySyscall(pBoundLabel_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetBorderSpacing)
TControlBorderSpacing
BoundLabel_GetBorderSpacing(TBoundLabel AObj) {
    GET_FUNC_ADDR(BoundLabel_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pBoundLabel_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_SetBorderSpacing)
void
BoundLabel_SetBorderSpacing(TBoundLabel AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(BoundLabel_SetBorderSpacing)
    MySyscall(pBoundLabel_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetComponents)
TComponent
BoundLabel_GetComponents(TBoundLabel AObj, int32_t AIndex) {
    GET_FUNC_ADDR(BoundLabel_GetComponents)
    return (TComponent)MySyscall(pBoundLabel_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_GetAnchorSide)
TAnchorSide
BoundLabel_GetAnchorSide(TBoundLabel AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(BoundLabel_GetAnchorSide)
    return (TAnchorSide)MySyscall(pBoundLabel_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(BoundLabel_StaticClassType)
TClass
BoundLabel_StaticClassType() {
    GET_FUNC_ADDR(BoundLabel_StaticClassType)
    return (TClass)MySyscall(pBoundLabel_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TFlowPanel-------------------

DEFINE_FUNC_PTR(FlowPanel_Create)
TFlowPanel
FlowPanel_Create(TComponent AOwner) {
    GET_FUNC_ADDR(FlowPanel_Create)
    return (TFlowPanel)MySyscall(pFlowPanel_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_Free)
void
FlowPanel_Free(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_Free)
    MySyscall(pFlowPanel_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetControlIndex)
int32_t
FlowPanel_GetControlIndex(TFlowPanel AObj, TControl AControl) {
    GET_FUNC_ADDR(FlowPanel_GetControlIndex)
    return (int32_t)MySyscall(pFlowPanel_GetControlIndex, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetControlIndex)
void
FlowPanel_SetControlIndex(TFlowPanel AObj, TControl AControl, int32_t Index) {
    GET_FUNC_ADDR(FlowPanel_SetControlIndex)
    MySyscall(pFlowPanel_SetControlIndex, 3, AObj, AControl, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_CanFocus)
BOOL
FlowPanel_CanFocus(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_CanFocus)
    return (BOOL)MySyscall(pFlowPanel_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_ContainsControl)
BOOL
FlowPanel_ContainsControl(TFlowPanel AObj, TControl Control) {
    GET_FUNC_ADDR(FlowPanel_ContainsControl)
    return (BOOL)MySyscall(pFlowPanel_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_ControlAtPos)
TControl
FlowPanel_ControlAtPos(TFlowPanel AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(FlowPanel_ControlAtPos)
    return (TControl)MySyscall(pFlowPanel_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_DisableAlign)
void
FlowPanel_DisableAlign(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_DisableAlign)
    MySyscall(pFlowPanel_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_EnableAlign)
void
FlowPanel_EnableAlign(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_EnableAlign)
    MySyscall(pFlowPanel_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_FindChildControl)
TControl
FlowPanel_FindChildControl(TFlowPanel AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(FlowPanel_FindChildControl)
    return (TControl)MySyscall(pFlowPanel_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_FlipChildren)
void
FlowPanel_FlipChildren(TFlowPanel AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(FlowPanel_FlipChildren)
    MySyscall(pFlowPanel_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_Focused)
BOOL
FlowPanel_Focused(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_Focused)
    return (BOOL)MySyscall(pFlowPanel_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_HandleAllocated)
BOOL
FlowPanel_HandleAllocated(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_HandleAllocated)
    return (BOOL)MySyscall(pFlowPanel_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_InsertControl)
void
FlowPanel_InsertControl(TFlowPanel AObj, TControl AControl) {
    GET_FUNC_ADDR(FlowPanel_InsertControl)
    MySyscall(pFlowPanel_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_Invalidate)
void
FlowPanel_Invalidate(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_Invalidate)
    MySyscall(pFlowPanel_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_PaintTo)
void
FlowPanel_PaintTo(TFlowPanel AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(FlowPanel_PaintTo)
    MySyscall(pFlowPanel_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_RemoveControl)
void
FlowPanel_RemoveControl(TFlowPanel AObj, TControl AControl) {
    GET_FUNC_ADDR(FlowPanel_RemoveControl)
    MySyscall(pFlowPanel_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_Realign)
void
FlowPanel_Realign(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_Realign)
    MySyscall(pFlowPanel_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_Repaint)
void
FlowPanel_Repaint(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_Repaint)
    MySyscall(pFlowPanel_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_ScaleBy)
void
FlowPanel_ScaleBy(TFlowPanel AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(FlowPanel_ScaleBy)
    MySyscall(pFlowPanel_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_ScrollBy)
void
FlowPanel_ScrollBy(TFlowPanel AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(FlowPanel_ScrollBy)
    MySyscall(pFlowPanel_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetBounds)
void
FlowPanel_SetBounds(TFlowPanel AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(FlowPanel_SetBounds)
    MySyscall(pFlowPanel_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetFocus)
void
FlowPanel_SetFocus(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_SetFocus)
    MySyscall(pFlowPanel_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_Update)
void
FlowPanel_Update(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_Update)
    MySyscall(pFlowPanel_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_BringToFront)
void
FlowPanel_BringToFront(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_BringToFront)
    MySyscall(pFlowPanel_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_ClientToScreen)
TPoint
FlowPanel_ClientToScreen(TFlowPanel AObj, TPoint Point) {
    GET_FUNC_ADDR(FlowPanel_ClientToScreen)
    TPoint result;
    MySyscall(pFlowPanel_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(FlowPanel_ClientToParent)
TPoint
FlowPanel_ClientToParent(TFlowPanel AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(FlowPanel_ClientToParent)
    TPoint result;
    MySyscall(pFlowPanel_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(FlowPanel_Dragging)
BOOL
FlowPanel_Dragging(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_Dragging)
    return (BOOL)MySyscall(pFlowPanel_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_HasParent)
BOOL
FlowPanel_HasParent(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_HasParent)
    return (BOOL)MySyscall(pFlowPanel_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_Hide)
void
FlowPanel_Hide(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_Hide)
    MySyscall(pFlowPanel_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_Perform)
intptr_t
FlowPanel_Perform(TFlowPanel AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(FlowPanel_Perform)
    return (intptr_t)MySyscall(pFlowPanel_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_Refresh)
void
FlowPanel_Refresh(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_Refresh)
    MySyscall(pFlowPanel_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_ScreenToClient)
TPoint
FlowPanel_ScreenToClient(TFlowPanel AObj, TPoint Point) {
    GET_FUNC_ADDR(FlowPanel_ScreenToClient)
    TPoint result;
    MySyscall(pFlowPanel_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(FlowPanel_ParentToClient)
TPoint
FlowPanel_ParentToClient(TFlowPanel AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(FlowPanel_ParentToClient)
    TPoint result;
    MySyscall(pFlowPanel_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(FlowPanel_SendToBack)
void
FlowPanel_SendToBack(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_SendToBack)
    MySyscall(pFlowPanel_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_Show)
void
FlowPanel_Show(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_Show)
    MySyscall(pFlowPanel_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetTextBuf)
int32_t
FlowPanel_GetTextBuf(TFlowPanel AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(FlowPanel_GetTextBuf)
    return (int32_t)MySyscall(pFlowPanel_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetTextLen)
int32_t
FlowPanel_GetTextLen(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetTextLen)
    return (int32_t)MySyscall(pFlowPanel_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetTextBuf)
void
FlowPanel_SetTextBuf(TFlowPanel AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(FlowPanel_SetTextBuf)
    MySyscall(pFlowPanel_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_FindComponent)
TComponent
FlowPanel_FindComponent(TFlowPanel AObj, CChar char* AName) {
    GET_FUNC_ADDR(FlowPanel_FindComponent)
    return (TComponent)MySyscall(pFlowPanel_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetNamePath)
char*
FlowPanel_GetNamePath(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetNamePath)
    return (char*)MySyscall(pFlowPanel_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_Assign)
void
FlowPanel_Assign(TFlowPanel AObj, TObject Source) {
    GET_FUNC_ADDR(FlowPanel_Assign)
    MySyscall(pFlowPanel_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_ClassType)
TClass
FlowPanel_ClassType(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_ClassType)
    return (TClass)MySyscall(pFlowPanel_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_ClassName)
char*
FlowPanel_ClassName(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_ClassName)
    return (char*)MySyscall(pFlowPanel_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_InstanceSize)
int32_t
FlowPanel_InstanceSize(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_InstanceSize)
    return (int32_t)MySyscall(pFlowPanel_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_InheritsFrom)
BOOL
FlowPanel_InheritsFrom(TFlowPanel AObj, TClass AClass) {
    GET_FUNC_ADDR(FlowPanel_InheritsFrom)
    return (BOOL)MySyscall(pFlowPanel_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_Equals)
BOOL
FlowPanel_Equals(TFlowPanel AObj, TObject Obj) {
    GET_FUNC_ADDR(FlowPanel_Equals)
    return (BOOL)MySyscall(pFlowPanel_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetHashCode)
int32_t
FlowPanel_GetHashCode(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetHashCode)
    return (int32_t)MySyscall(pFlowPanel_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_ToString)
char*
FlowPanel_ToString(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_ToString)
    return (char*)MySyscall(pFlowPanel_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_AnchorToNeighbour)
void
FlowPanel_AnchorToNeighbour(TFlowPanel AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(FlowPanel_AnchorToNeighbour)
    MySyscall(pFlowPanel_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_AnchorParallel)
void
FlowPanel_AnchorParallel(TFlowPanel AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(FlowPanel_AnchorParallel)
    MySyscall(pFlowPanel_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_AnchorHorizontalCenterTo)
void
FlowPanel_AnchorHorizontalCenterTo(TFlowPanel AObj, TControl ASibling) {
    GET_FUNC_ADDR(FlowPanel_AnchorHorizontalCenterTo)
    MySyscall(pFlowPanel_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_AnchorVerticalCenterTo)
void
FlowPanel_AnchorVerticalCenterTo(TFlowPanel AObj, TControl ASibling) {
    GET_FUNC_ADDR(FlowPanel_AnchorVerticalCenterTo)
    MySyscall(pFlowPanel_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_AnchorSame)
void
FlowPanel_AnchorSame(TFlowPanel AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(FlowPanel_AnchorSame)
    MySyscall(pFlowPanel_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_AnchorAsAlign)
void
FlowPanel_AnchorAsAlign(TFlowPanel AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(FlowPanel_AnchorAsAlign)
    MySyscall(pFlowPanel_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_AnchorClient)
void
FlowPanel_AnchorClient(TFlowPanel AObj, int32_t ASpace) {
    GET_FUNC_ADDR(FlowPanel_AnchorClient)
    MySyscall(pFlowPanel_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_ScaleDesignToForm)
int32_t
FlowPanel_ScaleDesignToForm(TFlowPanel AObj, int32_t ASize) {
    GET_FUNC_ADDR(FlowPanel_ScaleDesignToForm)
    return (int32_t)MySyscall(pFlowPanel_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_ScaleFormToDesign)
int32_t
FlowPanel_ScaleFormToDesign(TFlowPanel AObj, int32_t ASize) {
    GET_FUNC_ADDR(FlowPanel_ScaleFormToDesign)
    return (int32_t)MySyscall(pFlowPanel_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_Scale96ToForm)
int32_t
FlowPanel_Scale96ToForm(TFlowPanel AObj, int32_t ASize) {
    GET_FUNC_ADDR(FlowPanel_Scale96ToForm)
    return (int32_t)MySyscall(pFlowPanel_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_ScaleFormTo96)
int32_t
FlowPanel_ScaleFormTo96(TFlowPanel AObj, int32_t ASize) {
    GET_FUNC_ADDR(FlowPanel_ScaleFormTo96)
    return (int32_t)MySyscall(pFlowPanel_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_Scale96ToFont)
int32_t
FlowPanel_Scale96ToFont(TFlowPanel AObj, int32_t ASize) {
    GET_FUNC_ADDR(FlowPanel_Scale96ToFont)
    return (int32_t)MySyscall(pFlowPanel_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_ScaleFontTo96)
int32_t
FlowPanel_ScaleFontTo96(TFlowPanel AObj, int32_t ASize) {
    GET_FUNC_ADDR(FlowPanel_ScaleFontTo96)
    return (int32_t)MySyscall(pFlowPanel_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_ScaleScreenToFont)
int32_t
FlowPanel_ScaleScreenToFont(TFlowPanel AObj, int32_t ASize) {
    GET_FUNC_ADDR(FlowPanel_ScaleScreenToFont)
    return (int32_t)MySyscall(pFlowPanel_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_ScaleFontToScreen)
int32_t
FlowPanel_ScaleFontToScreen(TFlowPanel AObj, int32_t ASize) {
    GET_FUNC_ADDR(FlowPanel_ScaleFontToScreen)
    return (int32_t)MySyscall(pFlowPanel_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_Scale96ToScreen)
int32_t
FlowPanel_Scale96ToScreen(TFlowPanel AObj, int32_t ASize) {
    GET_FUNC_ADDR(FlowPanel_Scale96ToScreen)
    return (int32_t)MySyscall(pFlowPanel_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_ScaleScreenTo96)
int32_t
FlowPanel_ScaleScreenTo96(TFlowPanel AObj, int32_t ASize) {
    GET_FUNC_ADDR(FlowPanel_ScaleScreenTo96)
    return (int32_t)MySyscall(pFlowPanel_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_AutoAdjustLayout)
void
FlowPanel_AutoAdjustLayout(TFlowPanel AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(FlowPanel_AutoAdjustLayout)
    MySyscall(pFlowPanel_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_FixDesignFontsPPI)
void
FlowPanel_FixDesignFontsPPI(TFlowPanel AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(FlowPanel_FixDesignFontsPPI)
    MySyscall(pFlowPanel_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_ScaleFontsPPI)
void
FlowPanel_ScaleFontsPPI(TFlowPanel AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(FlowPanel_ScaleFontsPPI)
    MySyscall(pFlowPanel_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetControlList)
TFlowPanelControlList
FlowPanel_GetControlList(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetControlList)
    return (TFlowPanelControlList)MySyscall(pFlowPanel_GetControlList, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetControlList)
void
FlowPanel_SetControlList(TFlowPanel AObj, TFlowPanelControlList AValue) {
    GET_FUNC_ADDR(FlowPanel_SetControlList)
    MySyscall(pFlowPanel_SetControlList, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetAlign)
TAlign
FlowPanel_GetAlign(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetAlign)
    return (TAlign)MySyscall(pFlowPanel_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetAlign)
void
FlowPanel_SetAlign(TFlowPanel AObj, TAlign AValue) {
    GET_FUNC_ADDR(FlowPanel_SetAlign)
    MySyscall(pFlowPanel_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetAlignment)
TAlignment
FlowPanel_GetAlignment(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetAlignment)
    return (TAlignment)MySyscall(pFlowPanel_GetAlignment, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetAlignment)
void
FlowPanel_SetAlignment(TFlowPanel AObj, TAlignment AValue) {
    GET_FUNC_ADDR(FlowPanel_SetAlignment)
    MySyscall(pFlowPanel_SetAlignment, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetAnchors)
TAnchors
FlowPanel_GetAnchors(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetAnchors)
    return (TAnchors)MySyscall(pFlowPanel_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetAnchors)
void
FlowPanel_SetAnchors(TFlowPanel AObj, TAnchors AValue) {
    GET_FUNC_ADDR(FlowPanel_SetAnchors)
    MySyscall(pFlowPanel_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetAutoSize)
BOOL
FlowPanel_GetAutoSize(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetAutoSize)
    return (BOOL)MySyscall(pFlowPanel_GetAutoSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetAutoSize)
void
FlowPanel_SetAutoSize(TFlowPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(FlowPanel_SetAutoSize)
    MySyscall(pFlowPanel_SetAutoSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetAutoWrap)
BOOL
FlowPanel_GetAutoWrap(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetAutoWrap)
    return (BOOL)MySyscall(pFlowPanel_GetAutoWrap, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetAutoWrap)
void
FlowPanel_SetAutoWrap(TFlowPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(FlowPanel_SetAutoWrap)
    MySyscall(pFlowPanel_SetAutoWrap, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetBiDiMode)
TBiDiMode
FlowPanel_GetBiDiMode(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetBiDiMode)
    return (TBiDiMode)MySyscall(pFlowPanel_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetBiDiMode)
void
FlowPanel_SetBiDiMode(TFlowPanel AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(FlowPanel_SetBiDiMode)
    MySyscall(pFlowPanel_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetBorderWidth)
int32_t
FlowPanel_GetBorderWidth(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetBorderWidth)
    return (int32_t)MySyscall(pFlowPanel_GetBorderWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetBorderWidth)
void
FlowPanel_SetBorderWidth(TFlowPanel AObj, int32_t AValue) {
    GET_FUNC_ADDR(FlowPanel_SetBorderWidth)
    MySyscall(pFlowPanel_SetBorderWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetBorderStyle)
TBorderStyle
FlowPanel_GetBorderStyle(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetBorderStyle)
    return (TBorderStyle)MySyscall(pFlowPanel_GetBorderStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetBorderStyle)
void
FlowPanel_SetBorderStyle(TFlowPanel AObj, TBorderStyle AValue) {
    GET_FUNC_ADDR(FlowPanel_SetBorderStyle)
    MySyscall(pFlowPanel_SetBorderStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetCaption)
char*
FlowPanel_GetCaption(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetCaption)
    return (char*)MySyscall(pFlowPanel_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetCaption)
void
FlowPanel_SetCaption(TFlowPanel AObj, CChar char* AValue) {
    GET_FUNC_ADDR(FlowPanel_SetCaption)
    MySyscall(pFlowPanel_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetColor)
TColor
FlowPanel_GetColor(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetColor)
    return (TColor)MySyscall(pFlowPanel_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetColor)
void
FlowPanel_SetColor(TFlowPanel AObj, TColor AValue) {
    GET_FUNC_ADDR(FlowPanel_SetColor)
    MySyscall(pFlowPanel_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetConstraints)
TSizeConstraints
FlowPanel_GetConstraints(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetConstraints)
    return (TSizeConstraints)MySyscall(pFlowPanel_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetConstraints)
void
FlowPanel_SetConstraints(TFlowPanel AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(FlowPanel_SetConstraints)
    MySyscall(pFlowPanel_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetUseDockManager)
BOOL
FlowPanel_GetUseDockManager(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetUseDockManager)
    return (BOOL)MySyscall(pFlowPanel_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetUseDockManager)
void
FlowPanel_SetUseDockManager(TFlowPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(FlowPanel_SetUseDockManager)
    MySyscall(pFlowPanel_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetDockSite)
BOOL
FlowPanel_GetDockSite(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetDockSite)
    return (BOOL)MySyscall(pFlowPanel_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetDockSite)
void
FlowPanel_SetDockSite(TFlowPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(FlowPanel_SetDockSite)
    MySyscall(pFlowPanel_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetDoubleBuffered)
BOOL
FlowPanel_GetDoubleBuffered(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetDoubleBuffered)
    return (BOOL)MySyscall(pFlowPanel_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetDoubleBuffered)
void
FlowPanel_SetDoubleBuffered(TFlowPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(FlowPanel_SetDoubleBuffered)
    MySyscall(pFlowPanel_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetDragCursor)
TCursor
FlowPanel_GetDragCursor(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetDragCursor)
    return (TCursor)MySyscall(pFlowPanel_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetDragCursor)
void
FlowPanel_SetDragCursor(TFlowPanel AObj, TCursor AValue) {
    GET_FUNC_ADDR(FlowPanel_SetDragCursor)
    MySyscall(pFlowPanel_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetDragKind)
TDragKind
FlowPanel_GetDragKind(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetDragKind)
    return (TDragKind)MySyscall(pFlowPanel_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetDragKind)
void
FlowPanel_SetDragKind(TFlowPanel AObj, TDragKind AValue) {
    GET_FUNC_ADDR(FlowPanel_SetDragKind)
    MySyscall(pFlowPanel_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetDragMode)
TDragMode
FlowPanel_GetDragMode(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetDragMode)
    return (TDragMode)MySyscall(pFlowPanel_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetDragMode)
void
FlowPanel_SetDragMode(TFlowPanel AObj, TDragMode AValue) {
    GET_FUNC_ADDR(FlowPanel_SetDragMode)
    MySyscall(pFlowPanel_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetEnabled)
BOOL
FlowPanel_GetEnabled(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetEnabled)
    return (BOOL)MySyscall(pFlowPanel_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetEnabled)
void
FlowPanel_SetEnabled(TFlowPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(FlowPanel_SetEnabled)
    MySyscall(pFlowPanel_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetFlowStyle)
TFlowStyle
FlowPanel_GetFlowStyle(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetFlowStyle)
    return (TFlowStyle)MySyscall(pFlowPanel_GetFlowStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetFlowStyle)
void
FlowPanel_SetFlowStyle(TFlowPanel AObj, TFlowStyle AValue) {
    GET_FUNC_ADDR(FlowPanel_SetFlowStyle)
    MySyscall(pFlowPanel_SetFlowStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetFullRepaint)
BOOL
FlowPanel_GetFullRepaint(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetFullRepaint)
    return (BOOL)MySyscall(pFlowPanel_GetFullRepaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetFullRepaint)
void
FlowPanel_SetFullRepaint(TFlowPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(FlowPanel_SetFullRepaint)
    MySyscall(pFlowPanel_SetFullRepaint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetFont)
TFont
FlowPanel_GetFont(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetFont)
    return (TFont)MySyscall(pFlowPanel_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetFont)
void
FlowPanel_SetFont(TFlowPanel AObj, TFont AValue) {
    GET_FUNC_ADDR(FlowPanel_SetFont)
    MySyscall(pFlowPanel_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetParentBackground)
BOOL
FlowPanel_GetParentBackground(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetParentBackground)
    return (BOOL)MySyscall(pFlowPanel_GetParentBackground, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetParentBackground)
void
FlowPanel_SetParentBackground(TFlowPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(FlowPanel_SetParentBackground)
    MySyscall(pFlowPanel_SetParentBackground, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetParentColor)
BOOL
FlowPanel_GetParentColor(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetParentColor)
    return (BOOL)MySyscall(pFlowPanel_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetParentColor)
void
FlowPanel_SetParentColor(TFlowPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(FlowPanel_SetParentColor)
    MySyscall(pFlowPanel_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetParentDoubleBuffered)
BOOL
FlowPanel_GetParentDoubleBuffered(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pFlowPanel_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetParentDoubleBuffered)
void
FlowPanel_SetParentDoubleBuffered(TFlowPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(FlowPanel_SetParentDoubleBuffered)
    MySyscall(pFlowPanel_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetParentFont)
BOOL
FlowPanel_GetParentFont(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetParentFont)
    return (BOOL)MySyscall(pFlowPanel_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetParentFont)
void
FlowPanel_SetParentFont(TFlowPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(FlowPanel_SetParentFont)
    MySyscall(pFlowPanel_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetParentShowHint)
BOOL
FlowPanel_GetParentShowHint(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetParentShowHint)
    return (BOOL)MySyscall(pFlowPanel_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetParentShowHint)
void
FlowPanel_SetParentShowHint(TFlowPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(FlowPanel_SetParentShowHint)
    MySyscall(pFlowPanel_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetPopupMenu)
TPopupMenu
FlowPanel_GetPopupMenu(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetPopupMenu)
    return (TPopupMenu)MySyscall(pFlowPanel_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetPopupMenu)
void
FlowPanel_SetPopupMenu(TFlowPanel AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(FlowPanel_SetPopupMenu)
    MySyscall(pFlowPanel_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetShowHint)
BOOL
FlowPanel_GetShowHint(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetShowHint)
    return (BOOL)MySyscall(pFlowPanel_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetShowHint)
void
FlowPanel_SetShowHint(TFlowPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(FlowPanel_SetShowHint)
    MySyscall(pFlowPanel_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetTabOrder)
TTabOrder
FlowPanel_GetTabOrder(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetTabOrder)
    return (TTabOrder)MySyscall(pFlowPanel_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetTabOrder)
void
FlowPanel_SetTabOrder(TFlowPanel AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(FlowPanel_SetTabOrder)
    MySyscall(pFlowPanel_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetTabStop)
BOOL
FlowPanel_GetTabStop(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetTabStop)
    return (BOOL)MySyscall(pFlowPanel_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetTabStop)
void
FlowPanel_SetTabStop(TFlowPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(FlowPanel_SetTabStop)
    MySyscall(pFlowPanel_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetVisible)
BOOL
FlowPanel_GetVisible(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetVisible)
    return (BOOL)MySyscall(pFlowPanel_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetVisible)
void
FlowPanel_SetVisible(TFlowPanel AObj, BOOL AValue) {
    GET_FUNC_ADDR(FlowPanel_SetVisible)
    MySyscall(pFlowPanel_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetOnAlignPosition)
void
FlowPanel_SetOnAlignPosition(TFlowPanel AObj, TAlignPositionEvent AEventData) {
    GET_FUNC_ADDR(FlowPanel_SetOnAlignPosition)
    MySyscall(pFlowPanel_SetOnAlignPosition, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetOnClick)
void
FlowPanel_SetOnClick(TFlowPanel AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(FlowPanel_SetOnClick)
    MySyscall(pFlowPanel_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetOnConstrainedResize)
void
FlowPanel_SetOnConstrainedResize(TFlowPanel AObj, TConstrainedResizeEvent AEventData) {
    GET_FUNC_ADDR(FlowPanel_SetOnConstrainedResize)
    MySyscall(pFlowPanel_SetOnConstrainedResize, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetOnContextPopup)
void
FlowPanel_SetOnContextPopup(TFlowPanel AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(FlowPanel_SetOnContextPopup)
    MySyscall(pFlowPanel_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetOnDockDrop)
void
FlowPanel_SetOnDockDrop(TFlowPanel AObj, TDockDropEvent AEventData) {
    GET_FUNC_ADDR(FlowPanel_SetOnDockDrop)
    MySyscall(pFlowPanel_SetOnDockDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetOnDblClick)
void
FlowPanel_SetOnDblClick(TFlowPanel AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(FlowPanel_SetOnDblClick)
    MySyscall(pFlowPanel_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetOnDragDrop)
void
FlowPanel_SetOnDragDrop(TFlowPanel AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(FlowPanel_SetOnDragDrop)
    MySyscall(pFlowPanel_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetOnDragOver)
void
FlowPanel_SetOnDragOver(TFlowPanel AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(FlowPanel_SetOnDragOver)
    MySyscall(pFlowPanel_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetOnEndDock)
void
FlowPanel_SetOnEndDock(TFlowPanel AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(FlowPanel_SetOnEndDock)
    MySyscall(pFlowPanel_SetOnEndDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetOnEndDrag)
void
FlowPanel_SetOnEndDrag(TFlowPanel AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(FlowPanel_SetOnEndDrag)
    MySyscall(pFlowPanel_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetOnEnter)
void
FlowPanel_SetOnEnter(TFlowPanel AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(FlowPanel_SetOnEnter)
    MySyscall(pFlowPanel_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetOnExit)
void
FlowPanel_SetOnExit(TFlowPanel AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(FlowPanel_SetOnExit)
    MySyscall(pFlowPanel_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetOnGetSiteInfo)
void
FlowPanel_SetOnGetSiteInfo(TFlowPanel AObj, TGetSiteInfoEvent AEventData) {
    GET_FUNC_ADDR(FlowPanel_SetOnGetSiteInfo)
    MySyscall(pFlowPanel_SetOnGetSiteInfo, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetOnMouseDown)
void
FlowPanel_SetOnMouseDown(TFlowPanel AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(FlowPanel_SetOnMouseDown)
    MySyscall(pFlowPanel_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetOnMouseEnter)
void
FlowPanel_SetOnMouseEnter(TFlowPanel AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(FlowPanel_SetOnMouseEnter)
    MySyscall(pFlowPanel_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetOnMouseLeave)
void
FlowPanel_SetOnMouseLeave(TFlowPanel AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(FlowPanel_SetOnMouseLeave)
    MySyscall(pFlowPanel_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetOnMouseMove)
void
FlowPanel_SetOnMouseMove(TFlowPanel AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(FlowPanel_SetOnMouseMove)
    MySyscall(pFlowPanel_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetOnMouseUp)
void
FlowPanel_SetOnMouseUp(TFlowPanel AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(FlowPanel_SetOnMouseUp)
    MySyscall(pFlowPanel_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetOnResize)
void
FlowPanel_SetOnResize(TFlowPanel AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(FlowPanel_SetOnResize)
    MySyscall(pFlowPanel_SetOnResize, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetOnStartDock)
void
FlowPanel_SetOnStartDock(TFlowPanel AObj, TStartDockEvent AEventData) {
    GET_FUNC_ADDR(FlowPanel_SetOnStartDock)
    MySyscall(pFlowPanel_SetOnStartDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetOnUnDock)
void
FlowPanel_SetOnUnDock(TFlowPanel AObj, TUnDockEvent AEventData) {
    GET_FUNC_ADDR(FlowPanel_SetOnUnDock)
    MySyscall(pFlowPanel_SetOnUnDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetDockClientCount)
int32_t
FlowPanel_GetDockClientCount(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetDockClientCount)
    return (int32_t)MySyscall(pFlowPanel_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetMouseInClient)
BOOL
FlowPanel_GetMouseInClient(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetMouseInClient)
    return (BOOL)MySyscall(pFlowPanel_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetVisibleDockClientCount)
int32_t
FlowPanel_GetVisibleDockClientCount(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pFlowPanel_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetBrush)
TBrush
FlowPanel_GetBrush(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetBrush)
    return (TBrush)MySyscall(pFlowPanel_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetControlCount)
int32_t
FlowPanel_GetControlCount(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetControlCount)
    return (int32_t)MySyscall(pFlowPanel_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetHandle)
HWND
FlowPanel_GetHandle(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetHandle)
    return (HWND)MySyscall(pFlowPanel_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetParentWindow)
HWND
FlowPanel_GetParentWindow(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetParentWindow)
    return (HWND)MySyscall(pFlowPanel_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetParentWindow)
void
FlowPanel_SetParentWindow(TFlowPanel AObj, HWND AValue) {
    GET_FUNC_ADDR(FlowPanel_SetParentWindow)
    MySyscall(pFlowPanel_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetShowing)
BOOL
FlowPanel_GetShowing(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetShowing)
    return (BOOL)MySyscall(pFlowPanel_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetAction)
TAction
FlowPanel_GetAction(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetAction)
    return (TAction)MySyscall(pFlowPanel_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetAction)
void
FlowPanel_SetAction(TFlowPanel AObj, TAction AValue) {
    GET_FUNC_ADDR(FlowPanel_SetAction)
    MySyscall(pFlowPanel_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetBoundsRect)
TRect
FlowPanel_GetBoundsRect(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetBoundsRect)
    TRect result;
    MySyscall(pFlowPanel_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(FlowPanel_SetBoundsRect)
void
FlowPanel_SetBoundsRect(TFlowPanel AObj, TRect AValue) {
    GET_FUNC_ADDR(FlowPanel_SetBoundsRect)
    MySyscall(pFlowPanel_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetClientHeight)
int32_t
FlowPanel_GetClientHeight(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetClientHeight)
    return (int32_t)MySyscall(pFlowPanel_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetClientHeight)
void
FlowPanel_SetClientHeight(TFlowPanel AObj, int32_t AValue) {
    GET_FUNC_ADDR(FlowPanel_SetClientHeight)
    MySyscall(pFlowPanel_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetClientOrigin)
TPoint
FlowPanel_GetClientOrigin(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetClientOrigin)
    TPoint result;
    MySyscall(pFlowPanel_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(FlowPanel_GetClientRect)
TRect
FlowPanel_GetClientRect(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetClientRect)
    TRect result;
    MySyscall(pFlowPanel_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(FlowPanel_GetClientWidth)
int32_t
FlowPanel_GetClientWidth(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetClientWidth)
    return (int32_t)MySyscall(pFlowPanel_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetClientWidth)
void
FlowPanel_SetClientWidth(TFlowPanel AObj, int32_t AValue) {
    GET_FUNC_ADDR(FlowPanel_SetClientWidth)
    MySyscall(pFlowPanel_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetControlState)
TControlState
FlowPanel_GetControlState(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetControlState)
    return (TControlState)MySyscall(pFlowPanel_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetControlState)
void
FlowPanel_SetControlState(TFlowPanel AObj, TControlState AValue) {
    GET_FUNC_ADDR(FlowPanel_SetControlState)
    MySyscall(pFlowPanel_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetControlStyle)
TControlStyle
FlowPanel_GetControlStyle(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetControlStyle)
    return (TControlStyle)MySyscall(pFlowPanel_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetControlStyle)
void
FlowPanel_SetControlStyle(TFlowPanel AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(FlowPanel_SetControlStyle)
    MySyscall(pFlowPanel_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetFloating)
BOOL
FlowPanel_GetFloating(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetFloating)
    return (BOOL)MySyscall(pFlowPanel_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetParent)
TWinControl
FlowPanel_GetParent(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetParent)
    return (TWinControl)MySyscall(pFlowPanel_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetParent)
void
FlowPanel_SetParent(TFlowPanel AObj, TWinControl AValue) {
    GET_FUNC_ADDR(FlowPanel_SetParent)
    MySyscall(pFlowPanel_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetLeft)
int32_t
FlowPanel_GetLeft(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetLeft)
    return (int32_t)MySyscall(pFlowPanel_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetLeft)
void
FlowPanel_SetLeft(TFlowPanel AObj, int32_t AValue) {
    GET_FUNC_ADDR(FlowPanel_SetLeft)
    MySyscall(pFlowPanel_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetTop)
int32_t
FlowPanel_GetTop(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetTop)
    return (int32_t)MySyscall(pFlowPanel_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetTop)
void
FlowPanel_SetTop(TFlowPanel AObj, int32_t AValue) {
    GET_FUNC_ADDR(FlowPanel_SetTop)
    MySyscall(pFlowPanel_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetWidth)
int32_t
FlowPanel_GetWidth(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetWidth)
    return (int32_t)MySyscall(pFlowPanel_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetWidth)
void
FlowPanel_SetWidth(TFlowPanel AObj, int32_t AValue) {
    GET_FUNC_ADDR(FlowPanel_SetWidth)
    MySyscall(pFlowPanel_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetHeight)
int32_t
FlowPanel_GetHeight(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetHeight)
    return (int32_t)MySyscall(pFlowPanel_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetHeight)
void
FlowPanel_SetHeight(TFlowPanel AObj, int32_t AValue) {
    GET_FUNC_ADDR(FlowPanel_SetHeight)
    MySyscall(pFlowPanel_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetCursor)
TCursor
FlowPanel_GetCursor(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetCursor)
    return (TCursor)MySyscall(pFlowPanel_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetCursor)
void
FlowPanel_SetCursor(TFlowPanel AObj, TCursor AValue) {
    GET_FUNC_ADDR(FlowPanel_SetCursor)
    MySyscall(pFlowPanel_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetHint)
char*
FlowPanel_GetHint(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetHint)
    return (char*)MySyscall(pFlowPanel_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetHint)
void
FlowPanel_SetHint(TFlowPanel AObj, CChar char* AValue) {
    GET_FUNC_ADDR(FlowPanel_SetHint)
    MySyscall(pFlowPanel_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetComponentCount)
int32_t
FlowPanel_GetComponentCount(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetComponentCount)
    return (int32_t)MySyscall(pFlowPanel_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetComponentIndex)
int32_t
FlowPanel_GetComponentIndex(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetComponentIndex)
    return (int32_t)MySyscall(pFlowPanel_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetComponentIndex)
void
FlowPanel_SetComponentIndex(TFlowPanel AObj, int32_t AValue) {
    GET_FUNC_ADDR(FlowPanel_SetComponentIndex)
    MySyscall(pFlowPanel_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetOwner)
TComponent
FlowPanel_GetOwner(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetOwner)
    return (TComponent)MySyscall(pFlowPanel_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetName)
char*
FlowPanel_GetName(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetName)
    return (char*)MySyscall(pFlowPanel_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetName)
void
FlowPanel_SetName(TFlowPanel AObj, CChar char* AValue) {
    GET_FUNC_ADDR(FlowPanel_SetName)
    MySyscall(pFlowPanel_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetTag)
intptr_t
FlowPanel_GetTag(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetTag)
    return (intptr_t)MySyscall(pFlowPanel_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetTag)
void
FlowPanel_SetTag(TFlowPanel AObj, intptr_t AValue) {
    GET_FUNC_ADDR(FlowPanel_SetTag)
    MySyscall(pFlowPanel_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetAnchorSideLeft)
TAnchorSide
FlowPanel_GetAnchorSideLeft(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pFlowPanel_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetAnchorSideLeft)
void
FlowPanel_SetAnchorSideLeft(TFlowPanel AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(FlowPanel_SetAnchorSideLeft)
    MySyscall(pFlowPanel_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetAnchorSideTop)
TAnchorSide
FlowPanel_GetAnchorSideTop(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pFlowPanel_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetAnchorSideTop)
void
FlowPanel_SetAnchorSideTop(TFlowPanel AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(FlowPanel_SetAnchorSideTop)
    MySyscall(pFlowPanel_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetAnchorSideRight)
TAnchorSide
FlowPanel_GetAnchorSideRight(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pFlowPanel_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetAnchorSideRight)
void
FlowPanel_SetAnchorSideRight(TFlowPanel AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(FlowPanel_SetAnchorSideRight)
    MySyscall(pFlowPanel_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetAnchorSideBottom)
TAnchorSide
FlowPanel_GetAnchorSideBottom(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pFlowPanel_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetAnchorSideBottom)
void
FlowPanel_SetAnchorSideBottom(TFlowPanel AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(FlowPanel_SetAnchorSideBottom)
    MySyscall(pFlowPanel_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetChildSizing)
TControlChildSizing
FlowPanel_GetChildSizing(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetChildSizing)
    return (TControlChildSizing)MySyscall(pFlowPanel_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetChildSizing)
void
FlowPanel_SetChildSizing(TFlowPanel AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(FlowPanel_SetChildSizing)
    MySyscall(pFlowPanel_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetBorderSpacing)
TControlBorderSpacing
FlowPanel_GetBorderSpacing(TFlowPanel AObj) {
    GET_FUNC_ADDR(FlowPanel_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pFlowPanel_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_SetBorderSpacing)
void
FlowPanel_SetBorderSpacing(TFlowPanel AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(FlowPanel_SetBorderSpacing)
    MySyscall(pFlowPanel_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetDockClients)
TControl
FlowPanel_GetDockClients(TFlowPanel AObj, int32_t Index) {
    GET_FUNC_ADDR(FlowPanel_GetDockClients)
    return (TControl)MySyscall(pFlowPanel_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetControls)
TControl
FlowPanel_GetControls(TFlowPanel AObj, int32_t Index) {
    GET_FUNC_ADDR(FlowPanel_GetControls)
    return (TControl)MySyscall(pFlowPanel_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetComponents)
TComponent
FlowPanel_GetComponents(TFlowPanel AObj, int32_t AIndex) {
    GET_FUNC_ADDR(FlowPanel_GetComponents)
    return (TComponent)MySyscall(pFlowPanel_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_GetAnchorSide)
TAnchorSide
FlowPanel_GetAnchorSide(TFlowPanel AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(FlowPanel_GetAnchorSide)
    return (TAnchorSide)MySyscall(pFlowPanel_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanel_StaticClassType)
TClass
FlowPanel_StaticClassType() {
    GET_FUNC_ADDR(FlowPanel_StaticClassType)
    return (TClass)MySyscall(pFlowPanel_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TFlowPanelControlList-------------------

DEFINE_FUNC_PTR(FlowPanelControlList_IndexOf)
int32_t
FlowPanelControlList_IndexOf(TFlowPanelControlList AObj, TControl AControl) {
    GET_FUNC_ADDR(FlowPanelControlList_IndexOf)
    return (int32_t)MySyscall(pFlowPanelControlList_IndexOf, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControlList_Exchange)
void
FlowPanelControlList_Exchange(TFlowPanelControlList AObj, int32_t Index1, int32_t index2) {
    GET_FUNC_ADDR(FlowPanelControlList_Exchange)
    MySyscall(pFlowPanelControlList_Exchange, 3, AObj, Index1, index2 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControlList_Move)
void
FlowPanelControlList_Move(TFlowPanelControlList AObj, int32_t Index1, int32_t index2) {
    GET_FUNC_ADDR(FlowPanelControlList_Move)
    MySyscall(pFlowPanelControlList_Move, 3, AObj, Index1, index2 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControlList_AllowAdd)
BOOL
FlowPanelControlList_AllowAdd(TFlowPanelControlList AObj) {
    GET_FUNC_ADDR(FlowPanelControlList_AllowAdd)
    return (BOOL)MySyscall(pFlowPanelControlList_AllowAdd, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControlList_AllowDelete)
BOOL
FlowPanelControlList_AllowDelete(TFlowPanelControlList AObj) {
    GET_FUNC_ADDR(FlowPanelControlList_AllowDelete)
    return (BOOL)MySyscall(pFlowPanelControlList_AllowDelete, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControlList_Owner)
TObject
FlowPanelControlList_Owner(TFlowPanelControlList AObj) {
    GET_FUNC_ADDR(FlowPanelControlList_Owner)
    return (TObject)MySyscall(pFlowPanelControlList_Owner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControlList_Add)
TCollectionItem
FlowPanelControlList_Add(TFlowPanelControlList AObj) {
    GET_FUNC_ADDR(FlowPanelControlList_Add)
    return (TCollectionItem)MySyscall(pFlowPanelControlList_Add, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControlList_Assign)
void
FlowPanelControlList_Assign(TFlowPanelControlList AObj, TObject Source) {
    GET_FUNC_ADDR(FlowPanelControlList_Assign)
    MySyscall(pFlowPanelControlList_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControlList_BeginUpdate)
void
FlowPanelControlList_BeginUpdate(TFlowPanelControlList AObj) {
    GET_FUNC_ADDR(FlowPanelControlList_BeginUpdate)
    MySyscall(pFlowPanelControlList_BeginUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControlList_Clear)
void
FlowPanelControlList_Clear(TFlowPanelControlList AObj) {
    GET_FUNC_ADDR(FlowPanelControlList_Clear)
    MySyscall(pFlowPanelControlList_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControlList_Delete)
void
FlowPanelControlList_Delete(TFlowPanelControlList AObj, int32_t Index) {
    GET_FUNC_ADDR(FlowPanelControlList_Delete)
    MySyscall(pFlowPanelControlList_Delete, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControlList_EndUpdate)
void
FlowPanelControlList_EndUpdate(TFlowPanelControlList AObj) {
    GET_FUNC_ADDR(FlowPanelControlList_EndUpdate)
    MySyscall(pFlowPanelControlList_EndUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControlList_FindItemID)
TCollectionItem
FlowPanelControlList_FindItemID(TFlowPanelControlList AObj, int32_t ID) {
    GET_FUNC_ADDR(FlowPanelControlList_FindItemID)
    return (TCollectionItem)MySyscall(pFlowPanelControlList_FindItemID, 2, AObj, ID ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControlList_GetNamePath)
char*
FlowPanelControlList_GetNamePath(TFlowPanelControlList AObj) {
    GET_FUNC_ADDR(FlowPanelControlList_GetNamePath)
    return (char*)MySyscall(pFlowPanelControlList_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControlList_Insert)
TCollectionItem
FlowPanelControlList_Insert(TFlowPanelControlList AObj, int32_t Index) {
    GET_FUNC_ADDR(FlowPanelControlList_Insert)
    return (TCollectionItem)MySyscall(pFlowPanelControlList_Insert, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControlList_ClassType)
TClass
FlowPanelControlList_ClassType(TFlowPanelControlList AObj) {
    GET_FUNC_ADDR(FlowPanelControlList_ClassType)
    return (TClass)MySyscall(pFlowPanelControlList_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControlList_ClassName)
char*
FlowPanelControlList_ClassName(TFlowPanelControlList AObj) {
    GET_FUNC_ADDR(FlowPanelControlList_ClassName)
    return (char*)MySyscall(pFlowPanelControlList_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControlList_InstanceSize)
int32_t
FlowPanelControlList_InstanceSize(TFlowPanelControlList AObj) {
    GET_FUNC_ADDR(FlowPanelControlList_InstanceSize)
    return (int32_t)MySyscall(pFlowPanelControlList_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControlList_InheritsFrom)
BOOL
FlowPanelControlList_InheritsFrom(TFlowPanelControlList AObj, TClass AClass) {
    GET_FUNC_ADDR(FlowPanelControlList_InheritsFrom)
    return (BOOL)MySyscall(pFlowPanelControlList_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControlList_Equals)
BOOL
FlowPanelControlList_Equals(TFlowPanelControlList AObj, TObject Obj) {
    GET_FUNC_ADDR(FlowPanelControlList_Equals)
    return (BOOL)MySyscall(pFlowPanelControlList_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControlList_GetHashCode)
int32_t
FlowPanelControlList_GetHashCode(TFlowPanelControlList AObj) {
    GET_FUNC_ADDR(FlowPanelControlList_GetHashCode)
    return (int32_t)MySyscall(pFlowPanelControlList_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControlList_ToString)
char*
FlowPanelControlList_ToString(TFlowPanelControlList AObj) {
    GET_FUNC_ADDR(FlowPanelControlList_ToString)
    return (char*)MySyscall(pFlowPanelControlList_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControlList_GetCount)
int32_t
FlowPanelControlList_GetCount(TFlowPanelControlList AObj) {
    GET_FUNC_ADDR(FlowPanelControlList_GetCount)
    return (int32_t)MySyscall(pFlowPanelControlList_GetCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControlList_GetItems)
TFlowPanelControl
FlowPanelControlList_GetItems(TFlowPanelControlList AObj, int32_t Index) {
    GET_FUNC_ADDR(FlowPanelControlList_GetItems)
    return (TFlowPanelControl)MySyscall(pFlowPanelControlList_GetItems, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControlList_SetItems)
void
FlowPanelControlList_SetItems(TFlowPanelControlList AObj, int32_t Index, TFlowPanelControl AValue) {
    GET_FUNC_ADDR(FlowPanelControlList_SetItems)
    MySyscall(pFlowPanelControlList_SetItems, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControlList_StaticClassType)
TClass
FlowPanelControlList_StaticClassType() {
    GET_FUNC_ADDR(FlowPanelControlList_StaticClassType)
    return (TClass)MySyscall(pFlowPanelControlList_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TFlowPanelControl-------------------

DEFINE_FUNC_PTR(FlowPanelControl_AllowAdd)
BOOL
FlowPanelControl_AllowAdd(TFlowPanelControl AObj) {
    GET_FUNC_ADDR(FlowPanelControl_AllowAdd)
    return (BOOL)MySyscall(pFlowPanelControl_AllowAdd, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControl_AllowDelete)
BOOL
FlowPanelControl_AllowDelete(TFlowPanelControl AObj) {
    GET_FUNC_ADDR(FlowPanelControl_AllowDelete)
    return (BOOL)MySyscall(pFlowPanelControl_AllowDelete, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControl_GetNamePath)
char*
FlowPanelControl_GetNamePath(TFlowPanelControl AObj) {
    GET_FUNC_ADDR(FlowPanelControl_GetNamePath)
    return (char*)MySyscall(pFlowPanelControl_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControl_Assign)
void
FlowPanelControl_Assign(TFlowPanelControl AObj, TObject Source) {
    GET_FUNC_ADDR(FlowPanelControl_Assign)
    MySyscall(pFlowPanelControl_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControl_ClassType)
TClass
FlowPanelControl_ClassType(TFlowPanelControl AObj) {
    GET_FUNC_ADDR(FlowPanelControl_ClassType)
    return (TClass)MySyscall(pFlowPanelControl_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControl_ClassName)
char*
FlowPanelControl_ClassName(TFlowPanelControl AObj) {
    GET_FUNC_ADDR(FlowPanelControl_ClassName)
    return (char*)MySyscall(pFlowPanelControl_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControl_InstanceSize)
int32_t
FlowPanelControl_InstanceSize(TFlowPanelControl AObj) {
    GET_FUNC_ADDR(FlowPanelControl_InstanceSize)
    return (int32_t)MySyscall(pFlowPanelControl_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControl_InheritsFrom)
BOOL
FlowPanelControl_InheritsFrom(TFlowPanelControl AObj, TClass AClass) {
    GET_FUNC_ADDR(FlowPanelControl_InheritsFrom)
    return (BOOL)MySyscall(pFlowPanelControl_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControl_Equals)
BOOL
FlowPanelControl_Equals(TFlowPanelControl AObj, TObject Obj) {
    GET_FUNC_ADDR(FlowPanelControl_Equals)
    return (BOOL)MySyscall(pFlowPanelControl_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControl_GetHashCode)
int32_t
FlowPanelControl_GetHashCode(TFlowPanelControl AObj) {
    GET_FUNC_ADDR(FlowPanelControl_GetHashCode)
    return (int32_t)MySyscall(pFlowPanelControl_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControl_ToString)
char*
FlowPanelControl_ToString(TFlowPanelControl AObj) {
    GET_FUNC_ADDR(FlowPanelControl_ToString)
    return (char*)MySyscall(pFlowPanelControl_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControl_GetControl)
TControl
FlowPanelControl_GetControl(TFlowPanelControl AObj) {
    GET_FUNC_ADDR(FlowPanelControl_GetControl)
    return (TControl)MySyscall(pFlowPanelControl_GetControl, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControl_SetControl)
void
FlowPanelControl_SetControl(TFlowPanelControl AObj, TControl AValue) {
    GET_FUNC_ADDR(FlowPanelControl_SetControl)
    MySyscall(pFlowPanelControl_SetControl, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControl_GetWrapAfter)
TWrapAfter
FlowPanelControl_GetWrapAfter(TFlowPanelControl AObj) {
    GET_FUNC_ADDR(FlowPanelControl_GetWrapAfter)
    return (TWrapAfter)MySyscall(pFlowPanelControl_GetWrapAfter, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControl_SetWrapAfter)
void
FlowPanelControl_SetWrapAfter(TFlowPanelControl AObj, TWrapAfter AValue) {
    GET_FUNC_ADDR(FlowPanelControl_SetWrapAfter)
    MySyscall(pFlowPanelControl_SetWrapAfter, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControl_GetIndex)
int32_t
FlowPanelControl_GetIndex(TFlowPanelControl AObj) {
    GET_FUNC_ADDR(FlowPanelControl_GetIndex)
    return (int32_t)MySyscall(pFlowPanelControl_GetIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControl_SetIndex)
void
FlowPanelControl_SetIndex(TFlowPanelControl AObj, int32_t AValue) {
    GET_FUNC_ADDR(FlowPanelControl_SetIndex)
    MySyscall(pFlowPanelControl_SetIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControl_GetCollection)
TCollection
FlowPanelControl_GetCollection(TFlowPanelControl AObj) {
    GET_FUNC_ADDR(FlowPanelControl_GetCollection)
    return (TCollection)MySyscall(pFlowPanelControl_GetCollection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControl_SetCollection)
void
FlowPanelControl_SetCollection(TFlowPanelControl AObj, TCollection AValue) {
    GET_FUNC_ADDR(FlowPanelControl_SetCollection)
    MySyscall(pFlowPanelControl_SetCollection, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControl_GetDisplayName)
char*
FlowPanelControl_GetDisplayName(TFlowPanelControl AObj) {
    GET_FUNC_ADDR(FlowPanelControl_GetDisplayName)
    return (char*)MySyscall(pFlowPanelControl_GetDisplayName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControl_SetDisplayName)
void
FlowPanelControl_SetDisplayName(TFlowPanelControl AObj, CChar char* AValue) {
    GET_FUNC_ADDR(FlowPanelControl_SetDisplayName)
    MySyscall(pFlowPanelControl_SetDisplayName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(FlowPanelControl_StaticClassType)
TClass
FlowPanelControl_StaticClassType() {
    GET_FUNC_ADDR(FlowPanelControl_StaticClassType)
    return (TClass)MySyscall(pFlowPanelControl_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TCoolBar-------------------

DEFINE_FUNC_PTR(CoolBar_Create)
TCoolBar
CoolBar_Create(TComponent AOwner) {
    GET_FUNC_ADDR(CoolBar_Create)
    return (TCoolBar)MySyscall(pCoolBar_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_Free)
void
CoolBar_Free(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_Free)
    MySyscall(pCoolBar_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_FlipChildren)
void
CoolBar_FlipChildren(TCoolBar AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(CoolBar_FlipChildren)
    MySyscall(pCoolBar_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_CanFocus)
BOOL
CoolBar_CanFocus(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_CanFocus)
    return (BOOL)MySyscall(pCoolBar_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_ContainsControl)
BOOL
CoolBar_ContainsControl(TCoolBar AObj, TControl Control) {
    GET_FUNC_ADDR(CoolBar_ContainsControl)
    return (BOOL)MySyscall(pCoolBar_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_ControlAtPos)
TControl
CoolBar_ControlAtPos(TCoolBar AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(CoolBar_ControlAtPos)
    return (TControl)MySyscall(pCoolBar_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_DisableAlign)
void
CoolBar_DisableAlign(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_DisableAlign)
    MySyscall(pCoolBar_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_EnableAlign)
void
CoolBar_EnableAlign(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_EnableAlign)
    MySyscall(pCoolBar_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_FindChildControl)
TControl
CoolBar_FindChildControl(TCoolBar AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(CoolBar_FindChildControl)
    return (TControl)MySyscall(pCoolBar_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_Focused)
BOOL
CoolBar_Focused(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_Focused)
    return (BOOL)MySyscall(pCoolBar_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_HandleAllocated)
BOOL
CoolBar_HandleAllocated(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_HandleAllocated)
    return (BOOL)MySyscall(pCoolBar_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_Invalidate)
void
CoolBar_Invalidate(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_Invalidate)
    MySyscall(pCoolBar_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_PaintTo)
void
CoolBar_PaintTo(TCoolBar AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(CoolBar_PaintTo)
    MySyscall(pCoolBar_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_RemoveControl)
void
CoolBar_RemoveControl(TCoolBar AObj, TControl AControl) {
    GET_FUNC_ADDR(CoolBar_RemoveControl)
    MySyscall(pCoolBar_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_Realign)
void
CoolBar_Realign(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_Realign)
    MySyscall(pCoolBar_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_Repaint)
void
CoolBar_Repaint(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_Repaint)
    MySyscall(pCoolBar_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_ScaleBy)
void
CoolBar_ScaleBy(TCoolBar AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(CoolBar_ScaleBy)
    MySyscall(pCoolBar_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_ScrollBy)
void
CoolBar_ScrollBy(TCoolBar AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(CoolBar_ScrollBy)
    MySyscall(pCoolBar_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetBounds)
void
CoolBar_SetBounds(TCoolBar AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(CoolBar_SetBounds)
    MySyscall(pCoolBar_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetFocus)
void
CoolBar_SetFocus(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_SetFocus)
    MySyscall(pCoolBar_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_Update)
void
CoolBar_Update(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_Update)
    MySyscall(pCoolBar_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_BringToFront)
void
CoolBar_BringToFront(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_BringToFront)
    MySyscall(pCoolBar_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_ClientToScreen)
TPoint
CoolBar_ClientToScreen(TCoolBar AObj, TPoint Point) {
    GET_FUNC_ADDR(CoolBar_ClientToScreen)
    TPoint result;
    MySyscall(pCoolBar_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CoolBar_ClientToParent)
TPoint
CoolBar_ClientToParent(TCoolBar AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(CoolBar_ClientToParent)
    TPoint result;
    MySyscall(pCoolBar_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CoolBar_Dragging)
BOOL
CoolBar_Dragging(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_Dragging)
    return (BOOL)MySyscall(pCoolBar_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_HasParent)
BOOL
CoolBar_HasParent(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_HasParent)
    return (BOOL)MySyscall(pCoolBar_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_Hide)
void
CoolBar_Hide(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_Hide)
    MySyscall(pCoolBar_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_Perform)
intptr_t
CoolBar_Perform(TCoolBar AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(CoolBar_Perform)
    return (intptr_t)MySyscall(pCoolBar_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_Refresh)
void
CoolBar_Refresh(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_Refresh)
    MySyscall(pCoolBar_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_ScreenToClient)
TPoint
CoolBar_ScreenToClient(TCoolBar AObj, TPoint Point) {
    GET_FUNC_ADDR(CoolBar_ScreenToClient)
    TPoint result;
    MySyscall(pCoolBar_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CoolBar_ParentToClient)
TPoint
CoolBar_ParentToClient(TCoolBar AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(CoolBar_ParentToClient)
    TPoint result;
    MySyscall(pCoolBar_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CoolBar_SendToBack)
void
CoolBar_SendToBack(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_SendToBack)
    MySyscall(pCoolBar_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_Show)
void
CoolBar_Show(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_Show)
    MySyscall(pCoolBar_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetTextBuf)
int32_t
CoolBar_GetTextBuf(TCoolBar AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(CoolBar_GetTextBuf)
    return (int32_t)MySyscall(pCoolBar_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetTextLen)
int32_t
CoolBar_GetTextLen(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetTextLen)
    return (int32_t)MySyscall(pCoolBar_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetTextBuf)
void
CoolBar_SetTextBuf(TCoolBar AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(CoolBar_SetTextBuf)
    MySyscall(pCoolBar_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_FindComponent)
TComponent
CoolBar_FindComponent(TCoolBar AObj, CChar char* AName) {
    GET_FUNC_ADDR(CoolBar_FindComponent)
    return (TComponent)MySyscall(pCoolBar_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetNamePath)
char*
CoolBar_GetNamePath(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetNamePath)
    return (char*)MySyscall(pCoolBar_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_Assign)
void
CoolBar_Assign(TCoolBar AObj, TObject Source) {
    GET_FUNC_ADDR(CoolBar_Assign)
    MySyscall(pCoolBar_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_ClassType)
TClass
CoolBar_ClassType(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_ClassType)
    return (TClass)MySyscall(pCoolBar_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_ClassName)
char*
CoolBar_ClassName(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_ClassName)
    return (char*)MySyscall(pCoolBar_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_InstanceSize)
int32_t
CoolBar_InstanceSize(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_InstanceSize)
    return (int32_t)MySyscall(pCoolBar_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_InheritsFrom)
BOOL
CoolBar_InheritsFrom(TCoolBar AObj, TClass AClass) {
    GET_FUNC_ADDR(CoolBar_InheritsFrom)
    return (BOOL)MySyscall(pCoolBar_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_Equals)
BOOL
CoolBar_Equals(TCoolBar AObj, TObject Obj) {
    GET_FUNC_ADDR(CoolBar_Equals)
    return (BOOL)MySyscall(pCoolBar_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetHashCode)
int32_t
CoolBar_GetHashCode(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetHashCode)
    return (int32_t)MySyscall(pCoolBar_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_ToString)
char*
CoolBar_ToString(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_ToString)
    return (char*)MySyscall(pCoolBar_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_AnchorToNeighbour)
void
CoolBar_AnchorToNeighbour(TCoolBar AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(CoolBar_AnchorToNeighbour)
    MySyscall(pCoolBar_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_AnchorParallel)
void
CoolBar_AnchorParallel(TCoolBar AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(CoolBar_AnchorParallel)
    MySyscall(pCoolBar_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_AnchorHorizontalCenterTo)
void
CoolBar_AnchorHorizontalCenterTo(TCoolBar AObj, TControl ASibling) {
    GET_FUNC_ADDR(CoolBar_AnchorHorizontalCenterTo)
    MySyscall(pCoolBar_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_AnchorVerticalCenterTo)
void
CoolBar_AnchorVerticalCenterTo(TCoolBar AObj, TControl ASibling) {
    GET_FUNC_ADDR(CoolBar_AnchorVerticalCenterTo)
    MySyscall(pCoolBar_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_AnchorSame)
void
CoolBar_AnchorSame(TCoolBar AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(CoolBar_AnchorSame)
    MySyscall(pCoolBar_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_AnchorAsAlign)
void
CoolBar_AnchorAsAlign(TCoolBar AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(CoolBar_AnchorAsAlign)
    MySyscall(pCoolBar_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_AnchorClient)
void
CoolBar_AnchorClient(TCoolBar AObj, int32_t ASpace) {
    GET_FUNC_ADDR(CoolBar_AnchorClient)
    MySyscall(pCoolBar_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_ScaleDesignToForm)
int32_t
CoolBar_ScaleDesignToForm(TCoolBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(CoolBar_ScaleDesignToForm)
    return (int32_t)MySyscall(pCoolBar_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_ScaleFormToDesign)
int32_t
CoolBar_ScaleFormToDesign(TCoolBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(CoolBar_ScaleFormToDesign)
    return (int32_t)MySyscall(pCoolBar_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_Scale96ToForm)
int32_t
CoolBar_Scale96ToForm(TCoolBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(CoolBar_Scale96ToForm)
    return (int32_t)MySyscall(pCoolBar_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_ScaleFormTo96)
int32_t
CoolBar_ScaleFormTo96(TCoolBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(CoolBar_ScaleFormTo96)
    return (int32_t)MySyscall(pCoolBar_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_Scale96ToFont)
int32_t
CoolBar_Scale96ToFont(TCoolBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(CoolBar_Scale96ToFont)
    return (int32_t)MySyscall(pCoolBar_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_ScaleFontTo96)
int32_t
CoolBar_ScaleFontTo96(TCoolBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(CoolBar_ScaleFontTo96)
    return (int32_t)MySyscall(pCoolBar_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_ScaleScreenToFont)
int32_t
CoolBar_ScaleScreenToFont(TCoolBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(CoolBar_ScaleScreenToFont)
    return (int32_t)MySyscall(pCoolBar_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_ScaleFontToScreen)
int32_t
CoolBar_ScaleFontToScreen(TCoolBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(CoolBar_ScaleFontToScreen)
    return (int32_t)MySyscall(pCoolBar_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_Scale96ToScreen)
int32_t
CoolBar_Scale96ToScreen(TCoolBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(CoolBar_Scale96ToScreen)
    return (int32_t)MySyscall(pCoolBar_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_ScaleScreenTo96)
int32_t
CoolBar_ScaleScreenTo96(TCoolBar AObj, int32_t ASize) {
    GET_FUNC_ADDR(CoolBar_ScaleScreenTo96)
    return (int32_t)MySyscall(pCoolBar_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_AutoAdjustLayout)
void
CoolBar_AutoAdjustLayout(TCoolBar AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(CoolBar_AutoAdjustLayout)
    MySyscall(pCoolBar_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_FixDesignFontsPPI)
void
CoolBar_FixDesignFontsPPI(TCoolBar AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(CoolBar_FixDesignFontsPPI)
    MySyscall(pCoolBar_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_ScaleFontsPPI)
void
CoolBar_ScaleFontsPPI(TCoolBar AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(CoolBar_ScaleFontsPPI)
    MySyscall(pCoolBar_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetAlign)
TAlign
CoolBar_GetAlign(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetAlign)
    return (TAlign)MySyscall(pCoolBar_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetAlign)
void
CoolBar_SetAlign(TCoolBar AObj, TAlign AValue) {
    GET_FUNC_ADDR(CoolBar_SetAlign)
    MySyscall(pCoolBar_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetAnchors)
TAnchors
CoolBar_GetAnchors(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetAnchors)
    return (TAnchors)MySyscall(pCoolBar_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetAnchors)
void
CoolBar_SetAnchors(TCoolBar AObj, TAnchors AValue) {
    GET_FUNC_ADDR(CoolBar_SetAnchors)
    MySyscall(pCoolBar_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetAutoSize)
BOOL
CoolBar_GetAutoSize(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetAutoSize)
    return (BOOL)MySyscall(pCoolBar_GetAutoSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetAutoSize)
void
CoolBar_SetAutoSize(TCoolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(CoolBar_SetAutoSize)
    MySyscall(pCoolBar_SetAutoSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetBandBorderStyle)
TBorderStyle
CoolBar_GetBandBorderStyle(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetBandBorderStyle)
    return (TBorderStyle)MySyscall(pCoolBar_GetBandBorderStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetBandBorderStyle)
void
CoolBar_SetBandBorderStyle(TCoolBar AObj, TBorderStyle AValue) {
    GET_FUNC_ADDR(CoolBar_SetBandBorderStyle)
    MySyscall(pCoolBar_SetBandBorderStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetBandMaximize)
TCoolBandMaximize
CoolBar_GetBandMaximize(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetBandMaximize)
    return (TCoolBandMaximize)MySyscall(pCoolBar_GetBandMaximize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetBandMaximize)
void
CoolBar_SetBandMaximize(TCoolBar AObj, TCoolBandMaximize AValue) {
    GET_FUNC_ADDR(CoolBar_SetBandMaximize)
    MySyscall(pCoolBar_SetBandMaximize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetBands)
TCoolBands
CoolBar_GetBands(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetBands)
    return (TCoolBands)MySyscall(pCoolBar_GetBands, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetBands)
void
CoolBar_SetBands(TCoolBar AObj, TCoolBands AValue) {
    GET_FUNC_ADDR(CoolBar_SetBands)
    MySyscall(pCoolBar_SetBands, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetBorderWidth)
int32_t
CoolBar_GetBorderWidth(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetBorderWidth)
    return (int32_t)MySyscall(pCoolBar_GetBorderWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetBorderWidth)
void
CoolBar_SetBorderWidth(TCoolBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(CoolBar_SetBorderWidth)
    MySyscall(pCoolBar_SetBorderWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetColor)
TColor
CoolBar_GetColor(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetColor)
    return (TColor)MySyscall(pCoolBar_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetColor)
void
CoolBar_SetColor(TCoolBar AObj, TColor AValue) {
    GET_FUNC_ADDR(CoolBar_SetColor)
    MySyscall(pCoolBar_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetConstraints)
TSizeConstraints
CoolBar_GetConstraints(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetConstraints)
    return (TSizeConstraints)MySyscall(pCoolBar_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetConstraints)
void
CoolBar_SetConstraints(TCoolBar AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(CoolBar_SetConstraints)
    MySyscall(pCoolBar_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetDockSite)
BOOL
CoolBar_GetDockSite(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetDockSite)
    return (BOOL)MySyscall(pCoolBar_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetDockSite)
void
CoolBar_SetDockSite(TCoolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(CoolBar_SetDockSite)
    MySyscall(pCoolBar_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetDoubleBuffered)
BOOL
CoolBar_GetDoubleBuffered(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetDoubleBuffered)
    return (BOOL)MySyscall(pCoolBar_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetDoubleBuffered)
void
CoolBar_SetDoubleBuffered(TCoolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(CoolBar_SetDoubleBuffered)
    MySyscall(pCoolBar_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetDragCursor)
TCursor
CoolBar_GetDragCursor(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetDragCursor)
    return (TCursor)MySyscall(pCoolBar_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetDragCursor)
void
CoolBar_SetDragCursor(TCoolBar AObj, TCursor AValue) {
    GET_FUNC_ADDR(CoolBar_SetDragCursor)
    MySyscall(pCoolBar_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetDragKind)
TDragKind
CoolBar_GetDragKind(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetDragKind)
    return (TDragKind)MySyscall(pCoolBar_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetDragKind)
void
CoolBar_SetDragKind(TCoolBar AObj, TDragKind AValue) {
    GET_FUNC_ADDR(CoolBar_SetDragKind)
    MySyscall(pCoolBar_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetDragMode)
TDragMode
CoolBar_GetDragMode(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetDragMode)
    return (TDragMode)MySyscall(pCoolBar_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetDragMode)
void
CoolBar_SetDragMode(TCoolBar AObj, TDragMode AValue) {
    GET_FUNC_ADDR(CoolBar_SetDragMode)
    MySyscall(pCoolBar_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetEdgeBorders)
TEdgeBorders
CoolBar_GetEdgeBorders(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetEdgeBorders)
    return (TEdgeBorders)MySyscall(pCoolBar_GetEdgeBorders, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetEdgeBorders)
void
CoolBar_SetEdgeBorders(TCoolBar AObj, TEdgeBorders AValue) {
    GET_FUNC_ADDR(CoolBar_SetEdgeBorders)
    MySyscall(pCoolBar_SetEdgeBorders, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetEdgeInner)
TEdgeStyle
CoolBar_GetEdgeInner(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetEdgeInner)
    return (TEdgeStyle)MySyscall(pCoolBar_GetEdgeInner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetEdgeInner)
void
CoolBar_SetEdgeInner(TCoolBar AObj, TEdgeStyle AValue) {
    GET_FUNC_ADDR(CoolBar_SetEdgeInner)
    MySyscall(pCoolBar_SetEdgeInner, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetEdgeOuter)
TEdgeStyle
CoolBar_GetEdgeOuter(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetEdgeOuter)
    return (TEdgeStyle)MySyscall(pCoolBar_GetEdgeOuter, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetEdgeOuter)
void
CoolBar_SetEdgeOuter(TCoolBar AObj, TEdgeStyle AValue) {
    GET_FUNC_ADDR(CoolBar_SetEdgeOuter)
    MySyscall(pCoolBar_SetEdgeOuter, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetEnabled)
BOOL
CoolBar_GetEnabled(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetEnabled)
    return (BOOL)MySyscall(pCoolBar_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetEnabled)
void
CoolBar_SetEnabled(TCoolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(CoolBar_SetEnabled)
    MySyscall(pCoolBar_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetFixedSize)
BOOL
CoolBar_GetFixedSize(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetFixedSize)
    return (BOOL)MySyscall(pCoolBar_GetFixedSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetFixedSize)
void
CoolBar_SetFixedSize(TCoolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(CoolBar_SetFixedSize)
    MySyscall(pCoolBar_SetFixedSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetFixedOrder)
BOOL
CoolBar_GetFixedOrder(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetFixedOrder)
    return (BOOL)MySyscall(pCoolBar_GetFixedOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetFixedOrder)
void
CoolBar_SetFixedOrder(TCoolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(CoolBar_SetFixedOrder)
    MySyscall(pCoolBar_SetFixedOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetFont)
TFont
CoolBar_GetFont(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetFont)
    return (TFont)MySyscall(pCoolBar_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetFont)
void
CoolBar_SetFont(TCoolBar AObj, TFont AValue) {
    GET_FUNC_ADDR(CoolBar_SetFont)
    MySyscall(pCoolBar_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetImages)
TImageList
CoolBar_GetImages(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetImages)
    return (TImageList)MySyscall(pCoolBar_GetImages, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetImages)
void
CoolBar_SetImages(TCoolBar AObj, TImageList AValue) {
    GET_FUNC_ADDR(CoolBar_SetImages)
    MySyscall(pCoolBar_SetImages, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetParentColor)
BOOL
CoolBar_GetParentColor(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetParentColor)
    return (BOOL)MySyscall(pCoolBar_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetParentColor)
void
CoolBar_SetParentColor(TCoolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(CoolBar_SetParentColor)
    MySyscall(pCoolBar_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetParentDoubleBuffered)
BOOL
CoolBar_GetParentDoubleBuffered(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pCoolBar_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetParentDoubleBuffered)
void
CoolBar_SetParentDoubleBuffered(TCoolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(CoolBar_SetParentDoubleBuffered)
    MySyscall(pCoolBar_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetParentFont)
BOOL
CoolBar_GetParentFont(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetParentFont)
    return (BOOL)MySyscall(pCoolBar_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetParentFont)
void
CoolBar_SetParentFont(TCoolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(CoolBar_SetParentFont)
    MySyscall(pCoolBar_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetParentShowHint)
BOOL
CoolBar_GetParentShowHint(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetParentShowHint)
    return (BOOL)MySyscall(pCoolBar_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetParentShowHint)
void
CoolBar_SetParentShowHint(TCoolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(CoolBar_SetParentShowHint)
    MySyscall(pCoolBar_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetBitmap)
TBitmap
CoolBar_GetBitmap(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetBitmap)
    return (TBitmap)MySyscall(pCoolBar_GetBitmap, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetBitmap)
void
CoolBar_SetBitmap(TCoolBar AObj, TBitmap AValue) {
    GET_FUNC_ADDR(CoolBar_SetBitmap)
    MySyscall(pCoolBar_SetBitmap, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetPopupMenu)
TPopupMenu
CoolBar_GetPopupMenu(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetPopupMenu)
    return (TPopupMenu)MySyscall(pCoolBar_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetPopupMenu)
void
CoolBar_SetPopupMenu(TCoolBar AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(CoolBar_SetPopupMenu)
    MySyscall(pCoolBar_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetShowHint)
BOOL
CoolBar_GetShowHint(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetShowHint)
    return (BOOL)MySyscall(pCoolBar_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetShowHint)
void
CoolBar_SetShowHint(TCoolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(CoolBar_SetShowHint)
    MySyscall(pCoolBar_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetShowText)
BOOL
CoolBar_GetShowText(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetShowText)
    return (BOOL)MySyscall(pCoolBar_GetShowText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetShowText)
void
CoolBar_SetShowText(TCoolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(CoolBar_SetShowText)
    MySyscall(pCoolBar_SetShowText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetVertical)
BOOL
CoolBar_GetVertical(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetVertical)
    return (BOOL)MySyscall(pCoolBar_GetVertical, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetVertical)
void
CoolBar_SetVertical(TCoolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(CoolBar_SetVertical)
    MySyscall(pCoolBar_SetVertical, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetVisible)
BOOL
CoolBar_GetVisible(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetVisible)
    return (BOOL)MySyscall(pCoolBar_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetVisible)
void
CoolBar_SetVisible(TCoolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(CoolBar_SetVisible)
    MySyscall(pCoolBar_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetOnChange)
void
CoolBar_SetOnChange(TCoolBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CoolBar_SetOnChange)
    MySyscall(pCoolBar_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetOnClick)
void
CoolBar_SetOnClick(TCoolBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CoolBar_SetOnClick)
    MySyscall(pCoolBar_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetOnContextPopup)
void
CoolBar_SetOnContextPopup(TCoolBar AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(CoolBar_SetOnContextPopup)
    MySyscall(pCoolBar_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetOnDblClick)
void
CoolBar_SetOnDblClick(TCoolBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CoolBar_SetOnDblClick)
    MySyscall(pCoolBar_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetOnDockDrop)
void
CoolBar_SetOnDockDrop(TCoolBar AObj, TDockDropEvent AEventData) {
    GET_FUNC_ADDR(CoolBar_SetOnDockDrop)
    MySyscall(pCoolBar_SetOnDockDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetOnDragDrop)
void
CoolBar_SetOnDragDrop(TCoolBar AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(CoolBar_SetOnDragDrop)
    MySyscall(pCoolBar_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetOnDragOver)
void
CoolBar_SetOnDragOver(TCoolBar AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(CoolBar_SetOnDragOver)
    MySyscall(pCoolBar_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetOnEndDock)
void
CoolBar_SetOnEndDock(TCoolBar AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(CoolBar_SetOnEndDock)
    MySyscall(pCoolBar_SetOnEndDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetOnEndDrag)
void
CoolBar_SetOnEndDrag(TCoolBar AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(CoolBar_SetOnEndDrag)
    MySyscall(pCoolBar_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetOnGetSiteInfo)
void
CoolBar_SetOnGetSiteInfo(TCoolBar AObj, TGetSiteInfoEvent AEventData) {
    GET_FUNC_ADDR(CoolBar_SetOnGetSiteInfo)
    MySyscall(pCoolBar_SetOnGetSiteInfo, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetOnMouseDown)
void
CoolBar_SetOnMouseDown(TCoolBar AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(CoolBar_SetOnMouseDown)
    MySyscall(pCoolBar_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetOnMouseEnter)
void
CoolBar_SetOnMouseEnter(TCoolBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CoolBar_SetOnMouseEnter)
    MySyscall(pCoolBar_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetOnMouseLeave)
void
CoolBar_SetOnMouseLeave(TCoolBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CoolBar_SetOnMouseLeave)
    MySyscall(pCoolBar_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetOnMouseMove)
void
CoolBar_SetOnMouseMove(TCoolBar AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(CoolBar_SetOnMouseMove)
    MySyscall(pCoolBar_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetOnMouseUp)
void
CoolBar_SetOnMouseUp(TCoolBar AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(CoolBar_SetOnMouseUp)
    MySyscall(pCoolBar_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetOnResize)
void
CoolBar_SetOnResize(TCoolBar AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CoolBar_SetOnResize)
    MySyscall(pCoolBar_SetOnResize, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetOnStartDock)
void
CoolBar_SetOnStartDock(TCoolBar AObj, TStartDockEvent AEventData) {
    GET_FUNC_ADDR(CoolBar_SetOnStartDock)
    MySyscall(pCoolBar_SetOnStartDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetOnUnDock)
void
CoolBar_SetOnUnDock(TCoolBar AObj, TUnDockEvent AEventData) {
    GET_FUNC_ADDR(CoolBar_SetOnUnDock)
    MySyscall(pCoolBar_SetOnUnDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetDockClientCount)
int32_t
CoolBar_GetDockClientCount(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetDockClientCount)
    return (int32_t)MySyscall(pCoolBar_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetMouseInClient)
BOOL
CoolBar_GetMouseInClient(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetMouseInClient)
    return (BOOL)MySyscall(pCoolBar_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetVisibleDockClientCount)
int32_t
CoolBar_GetVisibleDockClientCount(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pCoolBar_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetBrush)
TBrush
CoolBar_GetBrush(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetBrush)
    return (TBrush)MySyscall(pCoolBar_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetControlCount)
int32_t
CoolBar_GetControlCount(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetControlCount)
    return (int32_t)MySyscall(pCoolBar_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetHandle)
HWND
CoolBar_GetHandle(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetHandle)
    return (HWND)MySyscall(pCoolBar_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetParentWindow)
HWND
CoolBar_GetParentWindow(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetParentWindow)
    return (HWND)MySyscall(pCoolBar_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetParentWindow)
void
CoolBar_SetParentWindow(TCoolBar AObj, HWND AValue) {
    GET_FUNC_ADDR(CoolBar_SetParentWindow)
    MySyscall(pCoolBar_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetShowing)
BOOL
CoolBar_GetShowing(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetShowing)
    return (BOOL)MySyscall(pCoolBar_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetTabOrder)
TTabOrder
CoolBar_GetTabOrder(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetTabOrder)
    return (TTabOrder)MySyscall(pCoolBar_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetTabOrder)
void
CoolBar_SetTabOrder(TCoolBar AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(CoolBar_SetTabOrder)
    MySyscall(pCoolBar_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetTabStop)
BOOL
CoolBar_GetTabStop(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetTabStop)
    return (BOOL)MySyscall(pCoolBar_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetTabStop)
void
CoolBar_SetTabStop(TCoolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(CoolBar_SetTabStop)
    MySyscall(pCoolBar_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetUseDockManager)
BOOL
CoolBar_GetUseDockManager(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetUseDockManager)
    return (BOOL)MySyscall(pCoolBar_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetUseDockManager)
void
CoolBar_SetUseDockManager(TCoolBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(CoolBar_SetUseDockManager)
    MySyscall(pCoolBar_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetAction)
TAction
CoolBar_GetAction(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetAction)
    return (TAction)MySyscall(pCoolBar_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetAction)
void
CoolBar_SetAction(TCoolBar AObj, TAction AValue) {
    GET_FUNC_ADDR(CoolBar_SetAction)
    MySyscall(pCoolBar_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetBiDiMode)
TBiDiMode
CoolBar_GetBiDiMode(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetBiDiMode)
    return (TBiDiMode)MySyscall(pCoolBar_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetBiDiMode)
void
CoolBar_SetBiDiMode(TCoolBar AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(CoolBar_SetBiDiMode)
    MySyscall(pCoolBar_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetBoundsRect)
TRect
CoolBar_GetBoundsRect(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetBoundsRect)
    TRect result;
    MySyscall(pCoolBar_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CoolBar_SetBoundsRect)
void
CoolBar_SetBoundsRect(TCoolBar AObj, TRect AValue) {
    GET_FUNC_ADDR(CoolBar_SetBoundsRect)
    MySyscall(pCoolBar_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetClientHeight)
int32_t
CoolBar_GetClientHeight(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetClientHeight)
    return (int32_t)MySyscall(pCoolBar_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetClientHeight)
void
CoolBar_SetClientHeight(TCoolBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(CoolBar_SetClientHeight)
    MySyscall(pCoolBar_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetClientOrigin)
TPoint
CoolBar_GetClientOrigin(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetClientOrigin)
    TPoint result;
    MySyscall(pCoolBar_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CoolBar_GetClientRect)
TRect
CoolBar_GetClientRect(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetClientRect)
    TRect result;
    MySyscall(pCoolBar_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CoolBar_GetClientWidth)
int32_t
CoolBar_GetClientWidth(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetClientWidth)
    return (int32_t)MySyscall(pCoolBar_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetClientWidth)
void
CoolBar_SetClientWidth(TCoolBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(CoolBar_SetClientWidth)
    MySyscall(pCoolBar_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetControlState)
TControlState
CoolBar_GetControlState(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetControlState)
    return (TControlState)MySyscall(pCoolBar_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetControlState)
void
CoolBar_SetControlState(TCoolBar AObj, TControlState AValue) {
    GET_FUNC_ADDR(CoolBar_SetControlState)
    MySyscall(pCoolBar_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetControlStyle)
TControlStyle
CoolBar_GetControlStyle(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetControlStyle)
    return (TControlStyle)MySyscall(pCoolBar_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetControlStyle)
void
CoolBar_SetControlStyle(TCoolBar AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(CoolBar_SetControlStyle)
    MySyscall(pCoolBar_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetFloating)
BOOL
CoolBar_GetFloating(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetFloating)
    return (BOOL)MySyscall(pCoolBar_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetParent)
TWinControl
CoolBar_GetParent(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetParent)
    return (TWinControl)MySyscall(pCoolBar_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetParent)
void
CoolBar_SetParent(TCoolBar AObj, TWinControl AValue) {
    GET_FUNC_ADDR(CoolBar_SetParent)
    MySyscall(pCoolBar_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetLeft)
int32_t
CoolBar_GetLeft(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetLeft)
    return (int32_t)MySyscall(pCoolBar_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetLeft)
void
CoolBar_SetLeft(TCoolBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(CoolBar_SetLeft)
    MySyscall(pCoolBar_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetTop)
int32_t
CoolBar_GetTop(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetTop)
    return (int32_t)MySyscall(pCoolBar_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetTop)
void
CoolBar_SetTop(TCoolBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(CoolBar_SetTop)
    MySyscall(pCoolBar_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetWidth)
int32_t
CoolBar_GetWidth(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetWidth)
    return (int32_t)MySyscall(pCoolBar_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetWidth)
void
CoolBar_SetWidth(TCoolBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(CoolBar_SetWidth)
    MySyscall(pCoolBar_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetHeight)
int32_t
CoolBar_GetHeight(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetHeight)
    return (int32_t)MySyscall(pCoolBar_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetHeight)
void
CoolBar_SetHeight(TCoolBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(CoolBar_SetHeight)
    MySyscall(pCoolBar_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetCursor)
TCursor
CoolBar_GetCursor(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetCursor)
    return (TCursor)MySyscall(pCoolBar_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetCursor)
void
CoolBar_SetCursor(TCoolBar AObj, TCursor AValue) {
    GET_FUNC_ADDR(CoolBar_SetCursor)
    MySyscall(pCoolBar_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetHint)
char*
CoolBar_GetHint(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetHint)
    return (char*)MySyscall(pCoolBar_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetHint)
void
CoolBar_SetHint(TCoolBar AObj, CChar char* AValue) {
    GET_FUNC_ADDR(CoolBar_SetHint)
    MySyscall(pCoolBar_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetComponentCount)
int32_t
CoolBar_GetComponentCount(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetComponentCount)
    return (int32_t)MySyscall(pCoolBar_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetComponentIndex)
int32_t
CoolBar_GetComponentIndex(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetComponentIndex)
    return (int32_t)MySyscall(pCoolBar_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetComponentIndex)
void
CoolBar_SetComponentIndex(TCoolBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(CoolBar_SetComponentIndex)
    MySyscall(pCoolBar_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetOwner)
TComponent
CoolBar_GetOwner(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetOwner)
    return (TComponent)MySyscall(pCoolBar_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetName)
char*
CoolBar_GetName(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetName)
    return (char*)MySyscall(pCoolBar_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetName)
void
CoolBar_SetName(TCoolBar AObj, CChar char* AValue) {
    GET_FUNC_ADDR(CoolBar_SetName)
    MySyscall(pCoolBar_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetTag)
intptr_t
CoolBar_GetTag(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetTag)
    return (intptr_t)MySyscall(pCoolBar_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetTag)
void
CoolBar_SetTag(TCoolBar AObj, intptr_t AValue) {
    GET_FUNC_ADDR(CoolBar_SetTag)
    MySyscall(pCoolBar_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetAnchorSideLeft)
TAnchorSide
CoolBar_GetAnchorSideLeft(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pCoolBar_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetAnchorSideLeft)
void
CoolBar_SetAnchorSideLeft(TCoolBar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(CoolBar_SetAnchorSideLeft)
    MySyscall(pCoolBar_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetAnchorSideTop)
TAnchorSide
CoolBar_GetAnchorSideTop(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pCoolBar_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetAnchorSideTop)
void
CoolBar_SetAnchorSideTop(TCoolBar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(CoolBar_SetAnchorSideTop)
    MySyscall(pCoolBar_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetAnchorSideRight)
TAnchorSide
CoolBar_GetAnchorSideRight(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pCoolBar_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetAnchorSideRight)
void
CoolBar_SetAnchorSideRight(TCoolBar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(CoolBar_SetAnchorSideRight)
    MySyscall(pCoolBar_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetAnchorSideBottom)
TAnchorSide
CoolBar_GetAnchorSideBottom(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pCoolBar_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetAnchorSideBottom)
void
CoolBar_SetAnchorSideBottom(TCoolBar AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(CoolBar_SetAnchorSideBottom)
    MySyscall(pCoolBar_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetChildSizing)
TControlChildSizing
CoolBar_GetChildSizing(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetChildSizing)
    return (TControlChildSizing)MySyscall(pCoolBar_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetChildSizing)
void
CoolBar_SetChildSizing(TCoolBar AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(CoolBar_SetChildSizing)
    MySyscall(pCoolBar_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetBorderSpacing)
TControlBorderSpacing
CoolBar_GetBorderSpacing(TCoolBar AObj) {
    GET_FUNC_ADDR(CoolBar_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pCoolBar_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_SetBorderSpacing)
void
CoolBar_SetBorderSpacing(TCoolBar AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(CoolBar_SetBorderSpacing)
    MySyscall(pCoolBar_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetDockClients)
TControl
CoolBar_GetDockClients(TCoolBar AObj, int32_t Index) {
    GET_FUNC_ADDR(CoolBar_GetDockClients)
    return (TControl)MySyscall(pCoolBar_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetControls)
TControl
CoolBar_GetControls(TCoolBar AObj, int32_t Index) {
    GET_FUNC_ADDR(CoolBar_GetControls)
    return (TControl)MySyscall(pCoolBar_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetComponents)
TComponent
CoolBar_GetComponents(TCoolBar AObj, int32_t AIndex) {
    GET_FUNC_ADDR(CoolBar_GetComponents)
    return (TComponent)MySyscall(pCoolBar_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_GetAnchorSide)
TAnchorSide
CoolBar_GetAnchorSide(TCoolBar AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(CoolBar_GetAnchorSide)
    return (TAnchorSide)MySyscall(pCoolBar_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBar_StaticClassType)
TClass
CoolBar_StaticClassType() {
    GET_FUNC_ADDR(CoolBar_StaticClassType)
    return (TClass)MySyscall(pCoolBar_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TCoolBands-------------------

DEFINE_FUNC_PTR(CoolBands_Create)
TCoolBands
CoolBands_Create(TCoolBar AOwner) {
    GET_FUNC_ADDR(CoolBands_Create)
    return (TCoolBands)MySyscall(pCoolBands_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBands_Free)
void
CoolBands_Free(TCoolBands AObj) {
    GET_FUNC_ADDR(CoolBands_Free)
    MySyscall(pCoolBands_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBands_Add)
TCoolBand
CoolBands_Add(TCoolBands AObj) {
    GET_FUNC_ADDR(CoolBands_Add)
    return (TCoolBand)MySyscall(pCoolBands_Add, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBands_FindBand)
TCoolBand
CoolBands_FindBand(TCoolBands AObj, TControl AControl) {
    GET_FUNC_ADDR(CoolBands_FindBand)
    return (TCoolBand)MySyscall(pCoolBands_FindBand, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBands_Owner)
TObject
CoolBands_Owner(TCoolBands AObj) {
    GET_FUNC_ADDR(CoolBands_Owner)
    return (TObject)MySyscall(pCoolBands_Owner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBands_Assign)
void
CoolBands_Assign(TCoolBands AObj, TObject Source) {
    GET_FUNC_ADDR(CoolBands_Assign)
    MySyscall(pCoolBands_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBands_BeginUpdate)
void
CoolBands_BeginUpdate(TCoolBands AObj) {
    GET_FUNC_ADDR(CoolBands_BeginUpdate)
    MySyscall(pCoolBands_BeginUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBands_Clear)
void
CoolBands_Clear(TCoolBands AObj) {
    GET_FUNC_ADDR(CoolBands_Clear)
    MySyscall(pCoolBands_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBands_Delete)
void
CoolBands_Delete(TCoolBands AObj, int32_t Index) {
    GET_FUNC_ADDR(CoolBands_Delete)
    MySyscall(pCoolBands_Delete, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBands_EndUpdate)
void
CoolBands_EndUpdate(TCoolBands AObj) {
    GET_FUNC_ADDR(CoolBands_EndUpdate)
    MySyscall(pCoolBands_EndUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBands_FindItemID)
TCollectionItem
CoolBands_FindItemID(TCoolBands AObj, int32_t ID) {
    GET_FUNC_ADDR(CoolBands_FindItemID)
    return (TCollectionItem)MySyscall(pCoolBands_FindItemID, 2, AObj, ID ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBands_GetNamePath)
char*
CoolBands_GetNamePath(TCoolBands AObj) {
    GET_FUNC_ADDR(CoolBands_GetNamePath)
    return (char*)MySyscall(pCoolBands_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBands_Insert)
TCollectionItem
CoolBands_Insert(TCoolBands AObj, int32_t Index) {
    GET_FUNC_ADDR(CoolBands_Insert)
    return (TCollectionItem)MySyscall(pCoolBands_Insert, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBands_ClassType)
TClass
CoolBands_ClassType(TCoolBands AObj) {
    GET_FUNC_ADDR(CoolBands_ClassType)
    return (TClass)MySyscall(pCoolBands_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBands_ClassName)
char*
CoolBands_ClassName(TCoolBands AObj) {
    GET_FUNC_ADDR(CoolBands_ClassName)
    return (char*)MySyscall(pCoolBands_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBands_InstanceSize)
int32_t
CoolBands_InstanceSize(TCoolBands AObj) {
    GET_FUNC_ADDR(CoolBands_InstanceSize)
    return (int32_t)MySyscall(pCoolBands_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBands_InheritsFrom)
BOOL
CoolBands_InheritsFrom(TCoolBands AObj, TClass AClass) {
    GET_FUNC_ADDR(CoolBands_InheritsFrom)
    return (BOOL)MySyscall(pCoolBands_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBands_Equals)
BOOL
CoolBands_Equals(TCoolBands AObj, TObject Obj) {
    GET_FUNC_ADDR(CoolBands_Equals)
    return (BOOL)MySyscall(pCoolBands_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBands_GetHashCode)
int32_t
CoolBands_GetHashCode(TCoolBands AObj) {
    GET_FUNC_ADDR(CoolBands_GetHashCode)
    return (int32_t)MySyscall(pCoolBands_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBands_ToString)
char*
CoolBands_ToString(TCoolBands AObj) {
    GET_FUNC_ADDR(CoolBands_ToString)
    return (char*)MySyscall(pCoolBands_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBands_GetCount)
int32_t
CoolBands_GetCount(TCoolBands AObj) {
    GET_FUNC_ADDR(CoolBands_GetCount)
    return (int32_t)MySyscall(pCoolBands_GetCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBands_GetItems)
TCoolBand
CoolBands_GetItems(TCoolBands AObj, int32_t Index) {
    GET_FUNC_ADDR(CoolBands_GetItems)
    return (TCoolBand)MySyscall(pCoolBands_GetItems, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBands_SetItems)
void
CoolBands_SetItems(TCoolBands AObj, int32_t Index, TCoolBand AValue) {
    GET_FUNC_ADDR(CoolBands_SetItems)
    MySyscall(pCoolBands_SetItems, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBands_StaticClassType)
TClass
CoolBands_StaticClassType() {
    GET_FUNC_ADDR(CoolBands_StaticClassType)
    return (TClass)MySyscall(pCoolBands_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TCoolBand-------------------

DEFINE_FUNC_PTR(CoolBand_Create)
TCoolBand
CoolBand_Create(TCollection AOwner) {
    GET_FUNC_ADDR(CoolBand_Create)
    return (TCoolBand)MySyscall(pCoolBand_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_Free)
void
CoolBand_Free(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_Free)
    MySyscall(pCoolBand_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_Assign)
void
CoolBand_Assign(TCoolBand AObj, TObject Source) {
    GET_FUNC_ADDR(CoolBand_Assign)
    MySyscall(pCoolBand_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_GetNamePath)
char*
CoolBand_GetNamePath(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_GetNamePath)
    return (char*)MySyscall(pCoolBand_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_ClassType)
TClass
CoolBand_ClassType(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_ClassType)
    return (TClass)MySyscall(pCoolBand_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_ClassName)
char*
CoolBand_ClassName(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_ClassName)
    return (char*)MySyscall(pCoolBand_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_InstanceSize)
int32_t
CoolBand_InstanceSize(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_InstanceSize)
    return (int32_t)MySyscall(pCoolBand_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_InheritsFrom)
BOOL
CoolBand_InheritsFrom(TCoolBand AObj, TClass AClass) {
    GET_FUNC_ADDR(CoolBand_InheritsFrom)
    return (BOOL)MySyscall(pCoolBand_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_Equals)
BOOL
CoolBand_Equals(TCoolBand AObj, TObject Obj) {
    GET_FUNC_ADDR(CoolBand_Equals)
    return (BOOL)MySyscall(pCoolBand_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_GetHashCode)
int32_t
CoolBand_GetHashCode(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_GetHashCode)
    return (int32_t)MySyscall(pCoolBand_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_ToString)
char*
CoolBand_ToString(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_ToString)
    return (char*)MySyscall(pCoolBand_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_GetHeight)
int32_t
CoolBand_GetHeight(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_GetHeight)
    return (int32_t)MySyscall(pCoolBand_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_GetBitmap)
TBitmap
CoolBand_GetBitmap(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_GetBitmap)
    return (TBitmap)MySyscall(pCoolBand_GetBitmap, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_SetBitmap)
void
CoolBand_SetBitmap(TCoolBand AObj, TBitmap AValue) {
    GET_FUNC_ADDR(CoolBand_SetBitmap)
    MySyscall(pCoolBand_SetBitmap, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_GetBorderStyle)
TBorderStyle
CoolBand_GetBorderStyle(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_GetBorderStyle)
    return (TBorderStyle)MySyscall(pCoolBand_GetBorderStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_SetBorderStyle)
void
CoolBand_SetBorderStyle(TCoolBand AObj, TBorderStyle AValue) {
    GET_FUNC_ADDR(CoolBand_SetBorderStyle)
    MySyscall(pCoolBand_SetBorderStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_GetBreak)
BOOL
CoolBand_GetBreak(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_GetBreak)
    return (BOOL)MySyscall(pCoolBand_GetBreak, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_SetBreak)
void
CoolBand_SetBreak(TCoolBand AObj, BOOL AValue) {
    GET_FUNC_ADDR(CoolBand_SetBreak)
    MySyscall(pCoolBand_SetBreak, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_GetColor)
TColor
CoolBand_GetColor(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_GetColor)
    return (TColor)MySyscall(pCoolBand_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_SetColor)
void
CoolBand_SetColor(TCoolBand AObj, TColor AValue) {
    GET_FUNC_ADDR(CoolBand_SetColor)
    MySyscall(pCoolBand_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_GetControl)
TWinControl
CoolBand_GetControl(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_GetControl)
    return (TWinControl)MySyscall(pCoolBand_GetControl, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_SetControl)
void
CoolBand_SetControl(TCoolBand AObj, TWinControl AValue) {
    GET_FUNC_ADDR(CoolBand_SetControl)
    MySyscall(pCoolBand_SetControl, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_GetFixedBackground)
BOOL
CoolBand_GetFixedBackground(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_GetFixedBackground)
    return (BOOL)MySyscall(pCoolBand_GetFixedBackground, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_SetFixedBackground)
void
CoolBand_SetFixedBackground(TCoolBand AObj, BOOL AValue) {
    GET_FUNC_ADDR(CoolBand_SetFixedBackground)
    MySyscall(pCoolBand_SetFixedBackground, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_GetFixedSize)
BOOL
CoolBand_GetFixedSize(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_GetFixedSize)
    return (BOOL)MySyscall(pCoolBand_GetFixedSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_SetFixedSize)
void
CoolBand_SetFixedSize(TCoolBand AObj, BOOL AValue) {
    GET_FUNC_ADDR(CoolBand_SetFixedSize)
    MySyscall(pCoolBand_SetFixedSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_GetHorizontalOnly)
BOOL
CoolBand_GetHorizontalOnly(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_GetHorizontalOnly)
    return (BOOL)MySyscall(pCoolBand_GetHorizontalOnly, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_SetHorizontalOnly)
void
CoolBand_SetHorizontalOnly(TCoolBand AObj, BOOL AValue) {
    GET_FUNC_ADDR(CoolBand_SetHorizontalOnly)
    MySyscall(pCoolBand_SetHorizontalOnly, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_GetImageIndex)
int32_t
CoolBand_GetImageIndex(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_GetImageIndex)
    return (int32_t)MySyscall(pCoolBand_GetImageIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_SetImageIndex)
void
CoolBand_SetImageIndex(TCoolBand AObj, int32_t AValue) {
    GET_FUNC_ADDR(CoolBand_SetImageIndex)
    MySyscall(pCoolBand_SetImageIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_GetMinHeight)
int32_t
CoolBand_GetMinHeight(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_GetMinHeight)
    return (int32_t)MySyscall(pCoolBand_GetMinHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_SetMinHeight)
void
CoolBand_SetMinHeight(TCoolBand AObj, int32_t AValue) {
    GET_FUNC_ADDR(CoolBand_SetMinHeight)
    MySyscall(pCoolBand_SetMinHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_GetMinWidth)
int32_t
CoolBand_GetMinWidth(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_GetMinWidth)
    return (int32_t)MySyscall(pCoolBand_GetMinWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_SetMinWidth)
void
CoolBand_SetMinWidth(TCoolBand AObj, int32_t AValue) {
    GET_FUNC_ADDR(CoolBand_SetMinWidth)
    MySyscall(pCoolBand_SetMinWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_GetParentColor)
BOOL
CoolBand_GetParentColor(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_GetParentColor)
    return (BOOL)MySyscall(pCoolBand_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_SetParentColor)
void
CoolBand_SetParentColor(TCoolBand AObj, BOOL AValue) {
    GET_FUNC_ADDR(CoolBand_SetParentColor)
    MySyscall(pCoolBand_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_GetParentBitmap)
BOOL
CoolBand_GetParentBitmap(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_GetParentBitmap)
    return (BOOL)MySyscall(pCoolBand_GetParentBitmap, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_SetParentBitmap)
void
CoolBand_SetParentBitmap(TCoolBand AObj, BOOL AValue) {
    GET_FUNC_ADDR(CoolBand_SetParentBitmap)
    MySyscall(pCoolBand_SetParentBitmap, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_GetText)
char*
CoolBand_GetText(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_GetText)
    return (char*)MySyscall(pCoolBand_GetText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_SetText)
void
CoolBand_SetText(TCoolBand AObj, CChar char* AValue) {
    GET_FUNC_ADDR(CoolBand_SetText)
    MySyscall(pCoolBand_SetText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_GetVisible)
BOOL
CoolBand_GetVisible(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_GetVisible)
    return (BOOL)MySyscall(pCoolBand_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_SetVisible)
void
CoolBand_SetVisible(TCoolBand AObj, BOOL AValue) {
    GET_FUNC_ADDR(CoolBand_SetVisible)
    MySyscall(pCoolBand_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_GetWidth)
int32_t
CoolBand_GetWidth(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_GetWidth)
    return (int32_t)MySyscall(pCoolBand_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_SetWidth)
void
CoolBand_SetWidth(TCoolBand AObj, int32_t AValue) {
    GET_FUNC_ADDR(CoolBand_SetWidth)
    MySyscall(pCoolBand_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_GetCollection)
TCollection
CoolBand_GetCollection(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_GetCollection)
    return (TCollection)MySyscall(pCoolBand_GetCollection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_SetCollection)
void
CoolBand_SetCollection(TCoolBand AObj, TCollection AValue) {
    GET_FUNC_ADDR(CoolBand_SetCollection)
    MySyscall(pCoolBand_SetCollection, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_GetIndex)
int32_t
CoolBand_GetIndex(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_GetIndex)
    return (int32_t)MySyscall(pCoolBand_GetIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_SetIndex)
void
CoolBand_SetIndex(TCoolBand AObj, int32_t AValue) {
    GET_FUNC_ADDR(CoolBand_SetIndex)
    MySyscall(pCoolBand_SetIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_GetDisplayName)
char*
CoolBand_GetDisplayName(TCoolBand AObj) {
    GET_FUNC_ADDR(CoolBand_GetDisplayName)
    return (char*)MySyscall(pCoolBand_GetDisplayName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_SetDisplayName)
void
CoolBand_SetDisplayName(TCoolBand AObj, CChar char* AValue) {
    GET_FUNC_ADDR(CoolBand_SetDisplayName)
    MySyscall(pCoolBand_SetDisplayName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CoolBand_StaticClassType)
TClass
CoolBand_StaticClassType() {
    GET_FUNC_ADDR(CoolBand_StaticClassType)
    return (TClass)MySyscall(pCoolBand_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TCollection-------------------

DEFINE_FUNC_PTR(Collection_Create)
TCollection
Collection_Create(void* AOwner) {
    GET_FUNC_ADDR(Collection_Create)
    return (TCollection)MySyscall(pCollection_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Collection_Free)
void
Collection_Free(TCollection AObj) {
    GET_FUNC_ADDR(Collection_Free)
    MySyscall(pCollection_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Collection_Owner)
TObject
Collection_Owner(TCollection AObj) {
    GET_FUNC_ADDR(Collection_Owner)
    return (TObject)MySyscall(pCollection_Owner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Collection_Add)
TCollectionItem
Collection_Add(TCollection AObj) {
    GET_FUNC_ADDR(Collection_Add)
    return (TCollectionItem)MySyscall(pCollection_Add, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Collection_Assign)
void
Collection_Assign(TCollection AObj, TObject Source) {
    GET_FUNC_ADDR(Collection_Assign)
    MySyscall(pCollection_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Collection_BeginUpdate)
void
Collection_BeginUpdate(TCollection AObj) {
    GET_FUNC_ADDR(Collection_BeginUpdate)
    MySyscall(pCollection_BeginUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Collection_Clear)
void
Collection_Clear(TCollection AObj) {
    GET_FUNC_ADDR(Collection_Clear)
    MySyscall(pCollection_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Collection_Delete)
void
Collection_Delete(TCollection AObj, int32_t Index) {
    GET_FUNC_ADDR(Collection_Delete)
    MySyscall(pCollection_Delete, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Collection_EndUpdate)
void
Collection_EndUpdate(TCollection AObj) {
    GET_FUNC_ADDR(Collection_EndUpdate)
    MySyscall(pCollection_EndUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Collection_FindItemID)
TCollectionItem
Collection_FindItemID(TCollection AObj, int32_t ID) {
    GET_FUNC_ADDR(Collection_FindItemID)
    return (TCollectionItem)MySyscall(pCollection_FindItemID, 2, AObj, ID ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Collection_GetNamePath)
char*
Collection_GetNamePath(TCollection AObj) {
    GET_FUNC_ADDR(Collection_GetNamePath)
    return (char*)MySyscall(pCollection_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Collection_Insert)
TCollectionItem
Collection_Insert(TCollection AObj, int32_t Index) {
    GET_FUNC_ADDR(Collection_Insert)
    return (TCollectionItem)MySyscall(pCollection_Insert, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Collection_ClassType)
TClass
Collection_ClassType(TCollection AObj) {
    GET_FUNC_ADDR(Collection_ClassType)
    return (TClass)MySyscall(pCollection_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Collection_ClassName)
char*
Collection_ClassName(TCollection AObj) {
    GET_FUNC_ADDR(Collection_ClassName)
    return (char*)MySyscall(pCollection_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Collection_InstanceSize)
int32_t
Collection_InstanceSize(TCollection AObj) {
    GET_FUNC_ADDR(Collection_InstanceSize)
    return (int32_t)MySyscall(pCollection_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Collection_InheritsFrom)
BOOL
Collection_InheritsFrom(TCollection AObj, TClass AClass) {
    GET_FUNC_ADDR(Collection_InheritsFrom)
    return (BOOL)MySyscall(pCollection_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Collection_Equals)
BOOL
Collection_Equals(TCollection AObj, TObject Obj) {
    GET_FUNC_ADDR(Collection_Equals)
    return (BOOL)MySyscall(pCollection_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Collection_GetHashCode)
int32_t
Collection_GetHashCode(TCollection AObj) {
    GET_FUNC_ADDR(Collection_GetHashCode)
    return (int32_t)MySyscall(pCollection_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Collection_ToString)
char*
Collection_ToString(TCollection AObj) {
    GET_FUNC_ADDR(Collection_ToString)
    return (char*)MySyscall(pCollection_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Collection_GetCount)
int32_t
Collection_GetCount(TCollection AObj) {
    GET_FUNC_ADDR(Collection_GetCount)
    return (int32_t)MySyscall(pCollection_GetCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Collection_GetItems)
TCollectionItem
Collection_GetItems(TCollection AObj, int32_t Index) {
    GET_FUNC_ADDR(Collection_GetItems)
    return (TCollectionItem)MySyscall(pCollection_GetItems, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Collection_SetItems)
void
Collection_SetItems(TCollection AObj, int32_t Index, TCollectionItem AValue) {
    GET_FUNC_ADDR(Collection_SetItems)
    MySyscall(pCollection_SetItems, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Collection_StaticClassType)
TClass
Collection_StaticClassType() {
    GET_FUNC_ADDR(Collection_StaticClassType)
    return (TClass)MySyscall(pCollection_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TPrinter-------------------

DEFINE_FUNC_PTR(Printer_Create)
TPrinter
Printer_Create() {
    GET_FUNC_ADDR(Printer_Create)
    return (TPrinter)MySyscall(pPrinter_Create, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_Free)
void
Printer_Free(TPrinter AObj) {
    GET_FUNC_ADDR(Printer_Free)
    MySyscall(pPrinter_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_Abort)
void
Printer_Abort(TPrinter AObj) {
    GET_FUNC_ADDR(Printer_Abort)
    MySyscall(pPrinter_Abort, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_BeginDoc)
void
Printer_BeginDoc(TPrinter AObj) {
    GET_FUNC_ADDR(Printer_BeginDoc)
    MySyscall(pPrinter_BeginDoc, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_EndDoc)
void
Printer_EndDoc(TPrinter AObj) {
    GET_FUNC_ADDR(Printer_EndDoc)
    MySyscall(pPrinter_EndDoc, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_NewPage)
void
Printer_NewPage(TPrinter AObj) {
    GET_FUNC_ADDR(Printer_NewPage)
    MySyscall(pPrinter_NewPage, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_Refresh)
void
Printer_Refresh(TPrinter AObj) {
    GET_FUNC_ADDR(Printer_Refresh)
    MySyscall(pPrinter_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_ClassType)
TClass
Printer_ClassType(TPrinter AObj) {
    GET_FUNC_ADDR(Printer_ClassType)
    return (TClass)MySyscall(pPrinter_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_ClassName)
char*
Printer_ClassName(TPrinter AObj) {
    GET_FUNC_ADDR(Printer_ClassName)
    return (char*)MySyscall(pPrinter_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_InstanceSize)
int32_t
Printer_InstanceSize(TPrinter AObj) {
    GET_FUNC_ADDR(Printer_InstanceSize)
    return (int32_t)MySyscall(pPrinter_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_InheritsFrom)
BOOL
Printer_InheritsFrom(TPrinter AObj, TClass AClass) {
    GET_FUNC_ADDR(Printer_InheritsFrom)
    return (BOOL)MySyscall(pPrinter_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_Equals)
BOOL
Printer_Equals(TPrinter AObj, TObject Obj) {
    GET_FUNC_ADDR(Printer_Equals)
    return (BOOL)MySyscall(pPrinter_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_GetHashCode)
int32_t
Printer_GetHashCode(TPrinter AObj) {
    GET_FUNC_ADDR(Printer_GetHashCode)
    return (int32_t)MySyscall(pPrinter_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_ToString)
char*
Printer_ToString(TPrinter AObj) {
    GET_FUNC_ADDR(Printer_ToString)
    return (char*)MySyscall(pPrinter_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_GetAborted)
BOOL
Printer_GetAborted(TPrinter AObj) {
    GET_FUNC_ADDR(Printer_GetAborted)
    return (BOOL)MySyscall(pPrinter_GetAborted, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_GetCanvas)
TCanvas
Printer_GetCanvas(TPrinter AObj) {
    GET_FUNC_ADDR(Printer_GetCanvas)
    return (TCanvas)MySyscall(pPrinter_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_GetCopies)
int32_t
Printer_GetCopies(TPrinter AObj) {
    GET_FUNC_ADDR(Printer_GetCopies)
    return (int32_t)MySyscall(pPrinter_GetCopies, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_SetCopies)
void
Printer_SetCopies(TPrinter AObj, int32_t AValue) {
    GET_FUNC_ADDR(Printer_SetCopies)
    MySyscall(pPrinter_SetCopies, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_GetFonts)
TStrings
Printer_GetFonts(TPrinter AObj) {
    GET_FUNC_ADDR(Printer_GetFonts)
    return (TStrings)MySyscall(pPrinter_GetFonts, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_GetOrientation)
TPrinterOrientation
Printer_GetOrientation(TPrinter AObj) {
    GET_FUNC_ADDR(Printer_GetOrientation)
    return (TPrinterOrientation)MySyscall(pPrinter_GetOrientation, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_SetOrientation)
void
Printer_SetOrientation(TPrinter AObj, TPrinterOrientation AValue) {
    GET_FUNC_ADDR(Printer_SetOrientation)
    MySyscall(pPrinter_SetOrientation, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_GetPageHeight)
int32_t
Printer_GetPageHeight(TPrinter AObj) {
    GET_FUNC_ADDR(Printer_GetPageHeight)
    return (int32_t)MySyscall(pPrinter_GetPageHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_GetPageWidth)
int32_t
Printer_GetPageWidth(TPrinter AObj) {
    GET_FUNC_ADDR(Printer_GetPageWidth)
    return (int32_t)MySyscall(pPrinter_GetPageWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_GetPageNumber)
int32_t
Printer_GetPageNumber(TPrinter AObj) {
    GET_FUNC_ADDR(Printer_GetPageNumber)
    return (int32_t)MySyscall(pPrinter_GetPageNumber, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_GetPrinterIndex)
int32_t
Printer_GetPrinterIndex(TPrinter AObj) {
    GET_FUNC_ADDR(Printer_GetPrinterIndex)
    return (int32_t)MySyscall(pPrinter_GetPrinterIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_SetPrinterIndex)
void
Printer_SetPrinterIndex(TPrinter AObj, int32_t AValue) {
    GET_FUNC_ADDR(Printer_SetPrinterIndex)
    MySyscall(pPrinter_SetPrinterIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_GetPrinting)
BOOL
Printer_GetPrinting(TPrinter AObj) {
    GET_FUNC_ADDR(Printer_GetPrinting)
    return (BOOL)MySyscall(pPrinter_GetPrinting, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_GetPrinters)
TStrings
Printer_GetPrinters(TPrinter AObj) {
    GET_FUNC_ADDR(Printer_GetPrinters)
    return (TStrings)MySyscall(pPrinter_GetPrinters, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_GetTitle)
char*
Printer_GetTitle(TPrinter AObj) {
    GET_FUNC_ADDR(Printer_GetTitle)
    return (char*)MySyscall(pPrinter_GetTitle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_SetTitle)
void
Printer_SetTitle(TPrinter AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Printer_SetTitle)
    MySyscall(pPrinter_SetTitle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_StaticClassType)
TClass
Printer_StaticClassType() {
    GET_FUNC_ADDR(Printer_StaticClassType)
    return (TClass)MySyscall(pPrinter_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Printer_SetPrinter)
void
Printer_SetPrinter(TPrinter Obj, CChar char* aName) {
    GET_FUNC_ADDR(Printer_SetPrinter)
    MySyscall(pPrinter_SetPrinter, 2, Obj, aName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TTaskDialog-------------------

DEFINE_FUNC_PTR(TaskDialog_Create)
TTaskDialog
TaskDialog_Create(TComponent AOwner) {
    GET_FUNC_ADDR(TaskDialog_Create)
    return (TTaskDialog)MySyscall(pTaskDialog_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_Free)
void
TaskDialog_Free(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_Free)
    MySyscall(pTaskDialog_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_Execute)
BOOL
TaskDialog_Execute(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_Execute)
    return (BOOL)MySyscall(pTaskDialog_Execute, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_FindComponent)
TComponent
TaskDialog_FindComponent(TTaskDialog AObj, CChar char* AName) {
    GET_FUNC_ADDR(TaskDialog_FindComponent)
    return (TComponent)MySyscall(pTaskDialog_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_GetNamePath)
char*
TaskDialog_GetNamePath(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_GetNamePath)
    return (char*)MySyscall(pTaskDialog_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_HasParent)
BOOL
TaskDialog_HasParent(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_HasParent)
    return (BOOL)MySyscall(pTaskDialog_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_Assign)
void
TaskDialog_Assign(TTaskDialog AObj, TObject Source) {
    GET_FUNC_ADDR(TaskDialog_Assign)
    MySyscall(pTaskDialog_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_ClassType)
TClass
TaskDialog_ClassType(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_ClassType)
    return (TClass)MySyscall(pTaskDialog_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_ClassName)
char*
TaskDialog_ClassName(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_ClassName)
    return (char*)MySyscall(pTaskDialog_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_InstanceSize)
int32_t
TaskDialog_InstanceSize(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_InstanceSize)
    return (int32_t)MySyscall(pTaskDialog_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_InheritsFrom)
BOOL
TaskDialog_InheritsFrom(TTaskDialog AObj, TClass AClass) {
    GET_FUNC_ADDR(TaskDialog_InheritsFrom)
    return (BOOL)MySyscall(pTaskDialog_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_Equals)
BOOL
TaskDialog_Equals(TTaskDialog AObj, TObject Obj) {
    GET_FUNC_ADDR(TaskDialog_Equals)
    return (BOOL)MySyscall(pTaskDialog_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_GetHashCode)
int32_t
TaskDialog_GetHashCode(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_GetHashCode)
    return (int32_t)MySyscall(pTaskDialog_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_ToString)
char*
TaskDialog_ToString(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_ToString)
    return (char*)MySyscall(pTaskDialog_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_GetButtons)
TTaskDialogButtons
TaskDialog_GetButtons(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_GetButtons)
    return (TTaskDialogButtons)MySyscall(pTaskDialog_GetButtons, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_SetButtons)
void
TaskDialog_SetButtons(TTaskDialog AObj, TTaskDialogButtons AValue) {
    GET_FUNC_ADDR(TaskDialog_SetButtons)
    MySyscall(pTaskDialog_SetButtons, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_GetCaption)
char*
TaskDialog_GetCaption(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_GetCaption)
    return (char*)MySyscall(pTaskDialog_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_SetCaption)
void
TaskDialog_SetCaption(TTaskDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TaskDialog_SetCaption)
    MySyscall(pTaskDialog_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_GetCommonButtons)
TTaskDialogCommonButtons
TaskDialog_GetCommonButtons(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_GetCommonButtons)
    return (TTaskDialogCommonButtons)MySyscall(pTaskDialog_GetCommonButtons, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_SetCommonButtons)
void
TaskDialog_SetCommonButtons(TTaskDialog AObj, TTaskDialogCommonButtons AValue) {
    GET_FUNC_ADDR(TaskDialog_SetCommonButtons)
    MySyscall(pTaskDialog_SetCommonButtons, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_GetDefaultButton)
TTaskDialogCommonButton
TaskDialog_GetDefaultButton(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_GetDefaultButton)
    return (TTaskDialogCommonButton)MySyscall(pTaskDialog_GetDefaultButton, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_SetDefaultButton)
void
TaskDialog_SetDefaultButton(TTaskDialog AObj, TTaskDialogCommonButton AValue) {
    GET_FUNC_ADDR(TaskDialog_SetDefaultButton)
    MySyscall(pTaskDialog_SetDefaultButton, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_GetExpandButtonCaption)
char*
TaskDialog_GetExpandButtonCaption(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_GetExpandButtonCaption)
    return (char*)MySyscall(pTaskDialog_GetExpandButtonCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_SetExpandButtonCaption)
void
TaskDialog_SetExpandButtonCaption(TTaskDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TaskDialog_SetExpandButtonCaption)
    MySyscall(pTaskDialog_SetExpandButtonCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_GetExpandedText)
char*
TaskDialog_GetExpandedText(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_GetExpandedText)
    return (char*)MySyscall(pTaskDialog_GetExpandedText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_SetExpandedText)
void
TaskDialog_SetExpandedText(TTaskDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TaskDialog_SetExpandedText)
    MySyscall(pTaskDialog_SetExpandedText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_GetFlags)
TTaskDialogFlags
TaskDialog_GetFlags(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_GetFlags)
    return (TTaskDialogFlags)MySyscall(pTaskDialog_GetFlags, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_SetFlags)
void
TaskDialog_SetFlags(TTaskDialog AObj, TTaskDialogFlags AValue) {
    GET_FUNC_ADDR(TaskDialog_SetFlags)
    MySyscall(pTaskDialog_SetFlags, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_GetFooterIcon)
TTaskDialogIcon
TaskDialog_GetFooterIcon(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_GetFooterIcon)
    return (TTaskDialogIcon)MySyscall(pTaskDialog_GetFooterIcon, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_SetFooterIcon)
void
TaskDialog_SetFooterIcon(TTaskDialog AObj, TTaskDialogIcon AValue) {
    GET_FUNC_ADDR(TaskDialog_SetFooterIcon)
    MySyscall(pTaskDialog_SetFooterIcon, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_GetFooterText)
char*
TaskDialog_GetFooterText(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_GetFooterText)
    return (char*)MySyscall(pTaskDialog_GetFooterText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_SetFooterText)
void
TaskDialog_SetFooterText(TTaskDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TaskDialog_SetFooterText)
    MySyscall(pTaskDialog_SetFooterText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_GetMainIcon)
TTaskDialogIcon
TaskDialog_GetMainIcon(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_GetMainIcon)
    return (TTaskDialogIcon)MySyscall(pTaskDialog_GetMainIcon, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_SetMainIcon)
void
TaskDialog_SetMainIcon(TTaskDialog AObj, TTaskDialogIcon AValue) {
    GET_FUNC_ADDR(TaskDialog_SetMainIcon)
    MySyscall(pTaskDialog_SetMainIcon, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_GetRadioButtons)
TTaskDialogButtons
TaskDialog_GetRadioButtons(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_GetRadioButtons)
    return (TTaskDialogButtons)MySyscall(pTaskDialog_GetRadioButtons, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_SetRadioButtons)
void
TaskDialog_SetRadioButtons(TTaskDialog AObj, TTaskDialogButtons AValue) {
    GET_FUNC_ADDR(TaskDialog_SetRadioButtons)
    MySyscall(pTaskDialog_SetRadioButtons, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_GetText)
char*
TaskDialog_GetText(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_GetText)
    return (char*)MySyscall(pTaskDialog_GetText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_SetText)
void
TaskDialog_SetText(TTaskDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TaskDialog_SetText)
    MySyscall(pTaskDialog_SetText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_GetTitle)
char*
TaskDialog_GetTitle(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_GetTitle)
    return (char*)MySyscall(pTaskDialog_GetTitle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_SetTitle)
void
TaskDialog_SetTitle(TTaskDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TaskDialog_SetTitle)
    MySyscall(pTaskDialog_SetTitle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_GetVerificationText)
char*
TaskDialog_GetVerificationText(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_GetVerificationText)
    return (char*)MySyscall(pTaskDialog_GetVerificationText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_SetVerificationText)
void
TaskDialog_SetVerificationText(TTaskDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TaskDialog_SetVerificationText)
    MySyscall(pTaskDialog_SetVerificationText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_SetOnButtonClicked)
void
TaskDialog_SetOnButtonClicked(TTaskDialog AObj, TTaskDlgClickEvent AEventData) {
    GET_FUNC_ADDR(TaskDialog_SetOnButtonClicked)
    MySyscall(pTaskDialog_SetOnButtonClicked, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_GetButton)
TTaskDialogButtonItem
TaskDialog_GetButton(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_GetButton)
    return (TTaskDialogButtonItem)MySyscall(pTaskDialog_GetButton, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_SetButton)
void
TaskDialog_SetButton(TTaskDialog AObj, TTaskDialogButtonItem AValue) {
    GET_FUNC_ADDR(TaskDialog_SetButton)
    MySyscall(pTaskDialog_SetButton, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_GetModalResult)
TModalResult
TaskDialog_GetModalResult(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_GetModalResult)
    return (TModalResult)MySyscall(pTaskDialog_GetModalResult, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_SetModalResult)
void
TaskDialog_SetModalResult(TTaskDialog AObj, TModalResult AValue) {
    GET_FUNC_ADDR(TaskDialog_SetModalResult)
    MySyscall(pTaskDialog_SetModalResult, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_GetRadioButton)
TTaskDialogRadioButtonItem
TaskDialog_GetRadioButton(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_GetRadioButton)
    return (TTaskDialogRadioButtonItem)MySyscall(pTaskDialog_GetRadioButton, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_GetComponentCount)
int32_t
TaskDialog_GetComponentCount(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_GetComponentCount)
    return (int32_t)MySyscall(pTaskDialog_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_GetComponentIndex)
int32_t
TaskDialog_GetComponentIndex(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_GetComponentIndex)
    return (int32_t)MySyscall(pTaskDialog_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_SetComponentIndex)
void
TaskDialog_SetComponentIndex(TTaskDialog AObj, int32_t AValue) {
    GET_FUNC_ADDR(TaskDialog_SetComponentIndex)
    MySyscall(pTaskDialog_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_GetOwner)
TComponent
TaskDialog_GetOwner(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_GetOwner)
    return (TComponent)MySyscall(pTaskDialog_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_GetName)
char*
TaskDialog_GetName(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_GetName)
    return (char*)MySyscall(pTaskDialog_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_SetName)
void
TaskDialog_SetName(TTaskDialog AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TaskDialog_SetName)
    MySyscall(pTaskDialog_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_GetTag)
intptr_t
TaskDialog_GetTag(TTaskDialog AObj) {
    GET_FUNC_ADDR(TaskDialog_GetTag)
    return (intptr_t)MySyscall(pTaskDialog_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_SetTag)
void
TaskDialog_SetTag(TTaskDialog AObj, intptr_t AValue) {
    GET_FUNC_ADDR(TaskDialog_SetTag)
    MySyscall(pTaskDialog_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_GetComponents)
TComponent
TaskDialog_GetComponents(TTaskDialog AObj, int32_t AIndex) {
    GET_FUNC_ADDR(TaskDialog_GetComponents)
    return (TComponent)MySyscall(pTaskDialog_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialog_StaticClassType)
TClass
TaskDialog_StaticClassType() {
    GET_FUNC_ADDR(TaskDialog_StaticClassType)
    return (TClass)MySyscall(pTaskDialog_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TTaskDialogButtons-------------------

DEFINE_FUNC_PTR(TaskDialogButtons_Add)
TTaskDialogBaseButtonItem
TaskDialogButtons_Add(TTaskDialogButtons AObj) {
    GET_FUNC_ADDR(TaskDialogButtons_Add)
    return (TTaskDialogBaseButtonItem)MySyscall(pTaskDialogButtons_Add, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtons_FindButton)
TTaskDialogBaseButtonItem
TaskDialogButtons_FindButton(TTaskDialogButtons AObj, TModalResult AModalResult) {
    GET_FUNC_ADDR(TaskDialogButtons_FindButton)
    return (TTaskDialogBaseButtonItem)MySyscall(pTaskDialogButtons_FindButton, 2, AObj, AModalResult ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtons_Owner)
TObject
TaskDialogButtons_Owner(TTaskDialogButtons AObj) {
    GET_FUNC_ADDR(TaskDialogButtons_Owner)
    return (TObject)MySyscall(pTaskDialogButtons_Owner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtons_Assign)
void
TaskDialogButtons_Assign(TTaskDialogButtons AObj, TObject Source) {
    GET_FUNC_ADDR(TaskDialogButtons_Assign)
    MySyscall(pTaskDialogButtons_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtons_BeginUpdate)
void
TaskDialogButtons_BeginUpdate(TTaskDialogButtons AObj) {
    GET_FUNC_ADDR(TaskDialogButtons_BeginUpdate)
    MySyscall(pTaskDialogButtons_BeginUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtons_Clear)
void
TaskDialogButtons_Clear(TTaskDialogButtons AObj) {
    GET_FUNC_ADDR(TaskDialogButtons_Clear)
    MySyscall(pTaskDialogButtons_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtons_Delete)
void
TaskDialogButtons_Delete(TTaskDialogButtons AObj, int32_t Index) {
    GET_FUNC_ADDR(TaskDialogButtons_Delete)
    MySyscall(pTaskDialogButtons_Delete, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtons_EndUpdate)
void
TaskDialogButtons_EndUpdate(TTaskDialogButtons AObj) {
    GET_FUNC_ADDR(TaskDialogButtons_EndUpdate)
    MySyscall(pTaskDialogButtons_EndUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtons_FindItemID)
TCollectionItem
TaskDialogButtons_FindItemID(TTaskDialogButtons AObj, int32_t ID) {
    GET_FUNC_ADDR(TaskDialogButtons_FindItemID)
    return (TCollectionItem)MySyscall(pTaskDialogButtons_FindItemID, 2, AObj, ID ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtons_GetNamePath)
char*
TaskDialogButtons_GetNamePath(TTaskDialogButtons AObj) {
    GET_FUNC_ADDR(TaskDialogButtons_GetNamePath)
    return (char*)MySyscall(pTaskDialogButtons_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtons_Insert)
TCollectionItem
TaskDialogButtons_Insert(TTaskDialogButtons AObj, int32_t Index) {
    GET_FUNC_ADDR(TaskDialogButtons_Insert)
    return (TCollectionItem)MySyscall(pTaskDialogButtons_Insert, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtons_ClassType)
TClass
TaskDialogButtons_ClassType(TTaskDialogButtons AObj) {
    GET_FUNC_ADDR(TaskDialogButtons_ClassType)
    return (TClass)MySyscall(pTaskDialogButtons_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtons_ClassName)
char*
TaskDialogButtons_ClassName(TTaskDialogButtons AObj) {
    GET_FUNC_ADDR(TaskDialogButtons_ClassName)
    return (char*)MySyscall(pTaskDialogButtons_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtons_InstanceSize)
int32_t
TaskDialogButtons_InstanceSize(TTaskDialogButtons AObj) {
    GET_FUNC_ADDR(TaskDialogButtons_InstanceSize)
    return (int32_t)MySyscall(pTaskDialogButtons_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtons_InheritsFrom)
BOOL
TaskDialogButtons_InheritsFrom(TTaskDialogButtons AObj, TClass AClass) {
    GET_FUNC_ADDR(TaskDialogButtons_InheritsFrom)
    return (BOOL)MySyscall(pTaskDialogButtons_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtons_Equals)
BOOL
TaskDialogButtons_Equals(TTaskDialogButtons AObj, TObject Obj) {
    GET_FUNC_ADDR(TaskDialogButtons_Equals)
    return (BOOL)MySyscall(pTaskDialogButtons_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtons_GetHashCode)
int32_t
TaskDialogButtons_GetHashCode(TTaskDialogButtons AObj) {
    GET_FUNC_ADDR(TaskDialogButtons_GetHashCode)
    return (int32_t)MySyscall(pTaskDialogButtons_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtons_ToString)
char*
TaskDialogButtons_ToString(TTaskDialogButtons AObj) {
    GET_FUNC_ADDR(TaskDialogButtons_ToString)
    return (char*)MySyscall(pTaskDialogButtons_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtons_GetDefaultButton)
TTaskDialogBaseButtonItem
TaskDialogButtons_GetDefaultButton(TTaskDialogButtons AObj) {
    GET_FUNC_ADDR(TaskDialogButtons_GetDefaultButton)
    return (TTaskDialogBaseButtonItem)MySyscall(pTaskDialogButtons_GetDefaultButton, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtons_SetDefaultButton)
void
TaskDialogButtons_SetDefaultButton(TTaskDialogButtons AObj, TTaskDialogBaseButtonItem AValue) {
    GET_FUNC_ADDR(TaskDialogButtons_SetDefaultButton)
    MySyscall(pTaskDialogButtons_SetDefaultButton, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtons_GetCount)
int32_t
TaskDialogButtons_GetCount(TTaskDialogButtons AObj) {
    GET_FUNC_ADDR(TaskDialogButtons_GetCount)
    return (int32_t)MySyscall(pTaskDialogButtons_GetCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtons_GetItems)
TTaskDialogBaseButtonItem
TaskDialogButtons_GetItems(TTaskDialogButtons AObj, int32_t Index) {
    GET_FUNC_ADDR(TaskDialogButtons_GetItems)
    return (TTaskDialogBaseButtonItem)MySyscall(pTaskDialogButtons_GetItems, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtons_SetItems)
void
TaskDialogButtons_SetItems(TTaskDialogButtons AObj, int32_t Index, TTaskDialogBaseButtonItem AValue) {
    GET_FUNC_ADDR(TaskDialogButtons_SetItems)
    MySyscall(pTaskDialogButtons_SetItems, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtons_StaticClassType)
TClass
TaskDialogButtons_StaticClassType() {
    GET_FUNC_ADDR(TaskDialogButtons_StaticClassType)
    return (TClass)MySyscall(pTaskDialogButtons_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TTaskDialogButtonItem-------------------

DEFINE_FUNC_PTR(TaskDialogButtonItem_Create)
TTaskDialogButtonItem
TaskDialogButtonItem_Create(TCollection AOwner) {
    GET_FUNC_ADDR(TaskDialogButtonItem_Create)
    return (TTaskDialogButtonItem)MySyscall(pTaskDialogButtonItem_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtonItem_Free)
void
TaskDialogButtonItem_Free(TTaskDialogButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogButtonItem_Free)
    MySyscall(pTaskDialogButtonItem_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtonItem_GetNamePath)
char*
TaskDialogButtonItem_GetNamePath(TTaskDialogButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogButtonItem_GetNamePath)
    return (char*)MySyscall(pTaskDialogButtonItem_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtonItem_Assign)
void
TaskDialogButtonItem_Assign(TTaskDialogButtonItem AObj, TObject Source) {
    GET_FUNC_ADDR(TaskDialogButtonItem_Assign)
    MySyscall(pTaskDialogButtonItem_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtonItem_ClassType)
TClass
TaskDialogButtonItem_ClassType(TTaskDialogButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogButtonItem_ClassType)
    return (TClass)MySyscall(pTaskDialogButtonItem_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtonItem_ClassName)
char*
TaskDialogButtonItem_ClassName(TTaskDialogButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogButtonItem_ClassName)
    return (char*)MySyscall(pTaskDialogButtonItem_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtonItem_InstanceSize)
int32_t
TaskDialogButtonItem_InstanceSize(TTaskDialogButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogButtonItem_InstanceSize)
    return (int32_t)MySyscall(pTaskDialogButtonItem_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtonItem_InheritsFrom)
BOOL
TaskDialogButtonItem_InheritsFrom(TTaskDialogButtonItem AObj, TClass AClass) {
    GET_FUNC_ADDR(TaskDialogButtonItem_InheritsFrom)
    return (BOOL)MySyscall(pTaskDialogButtonItem_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtonItem_Equals)
BOOL
TaskDialogButtonItem_Equals(TTaskDialogButtonItem AObj, TObject Obj) {
    GET_FUNC_ADDR(TaskDialogButtonItem_Equals)
    return (BOOL)MySyscall(pTaskDialogButtonItem_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtonItem_GetHashCode)
int32_t
TaskDialogButtonItem_GetHashCode(TTaskDialogButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogButtonItem_GetHashCode)
    return (int32_t)MySyscall(pTaskDialogButtonItem_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtonItem_ToString)
char*
TaskDialogButtonItem_ToString(TTaskDialogButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogButtonItem_ToString)
    return (char*)MySyscall(pTaskDialogButtonItem_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtonItem_GetModalResult)
TModalResult
TaskDialogButtonItem_GetModalResult(TTaskDialogButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogButtonItem_GetModalResult)
    return (TModalResult)MySyscall(pTaskDialogButtonItem_GetModalResult, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtonItem_SetModalResult)
void
TaskDialogButtonItem_SetModalResult(TTaskDialogButtonItem AObj, TModalResult AValue) {
    GET_FUNC_ADDR(TaskDialogButtonItem_SetModalResult)
    MySyscall(pTaskDialogButtonItem_SetModalResult, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtonItem_GetCaption)
char*
TaskDialogButtonItem_GetCaption(TTaskDialogButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogButtonItem_GetCaption)
    return (char*)MySyscall(pTaskDialogButtonItem_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtonItem_SetCaption)
void
TaskDialogButtonItem_SetCaption(TTaskDialogButtonItem AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TaskDialogButtonItem_SetCaption)
    MySyscall(pTaskDialogButtonItem_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtonItem_GetDefault)
BOOL
TaskDialogButtonItem_GetDefault(TTaskDialogButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogButtonItem_GetDefault)
    return (BOOL)MySyscall(pTaskDialogButtonItem_GetDefault, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtonItem_SetDefault)
void
TaskDialogButtonItem_SetDefault(TTaskDialogButtonItem AObj, BOOL AValue) {
    GET_FUNC_ADDR(TaskDialogButtonItem_SetDefault)
    MySyscall(pTaskDialogButtonItem_SetDefault, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtonItem_GetCollection)
TCollection
TaskDialogButtonItem_GetCollection(TTaskDialogButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogButtonItem_GetCollection)
    return (TCollection)MySyscall(pTaskDialogButtonItem_GetCollection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtonItem_SetCollection)
void
TaskDialogButtonItem_SetCollection(TTaskDialogButtonItem AObj, TCollection AValue) {
    GET_FUNC_ADDR(TaskDialogButtonItem_SetCollection)
    MySyscall(pTaskDialogButtonItem_SetCollection, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtonItem_GetIndex)
int32_t
TaskDialogButtonItem_GetIndex(TTaskDialogButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogButtonItem_GetIndex)
    return (int32_t)MySyscall(pTaskDialogButtonItem_GetIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtonItem_SetIndex)
void
TaskDialogButtonItem_SetIndex(TTaskDialogButtonItem AObj, int32_t AValue) {
    GET_FUNC_ADDR(TaskDialogButtonItem_SetIndex)
    MySyscall(pTaskDialogButtonItem_SetIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtonItem_GetDisplayName)
char*
TaskDialogButtonItem_GetDisplayName(TTaskDialogButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogButtonItem_GetDisplayName)
    return (char*)MySyscall(pTaskDialogButtonItem_GetDisplayName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtonItem_SetDisplayName)
void
TaskDialogButtonItem_SetDisplayName(TTaskDialogButtonItem AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TaskDialogButtonItem_SetDisplayName)
    MySyscall(pTaskDialogButtonItem_SetDisplayName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogButtonItem_StaticClassType)
TClass
TaskDialogButtonItem_StaticClassType() {
    GET_FUNC_ADDR(TaskDialogButtonItem_StaticClassType)
    return (TClass)MySyscall(pTaskDialogButtonItem_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TTaskDialogRadioButtonItem-------------------

DEFINE_FUNC_PTR(TaskDialogRadioButtonItem_Create)
TTaskDialogRadioButtonItem
TaskDialogRadioButtonItem_Create(TCollection AOwner) {
    GET_FUNC_ADDR(TaskDialogRadioButtonItem_Create)
    return (TTaskDialogRadioButtonItem)MySyscall(pTaskDialogRadioButtonItem_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogRadioButtonItem_Free)
void
TaskDialogRadioButtonItem_Free(TTaskDialogRadioButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogRadioButtonItem_Free)
    MySyscall(pTaskDialogRadioButtonItem_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogRadioButtonItem_GetNamePath)
char*
TaskDialogRadioButtonItem_GetNamePath(TTaskDialogRadioButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogRadioButtonItem_GetNamePath)
    return (char*)MySyscall(pTaskDialogRadioButtonItem_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogRadioButtonItem_Assign)
void
TaskDialogRadioButtonItem_Assign(TTaskDialogRadioButtonItem AObj, TObject Source) {
    GET_FUNC_ADDR(TaskDialogRadioButtonItem_Assign)
    MySyscall(pTaskDialogRadioButtonItem_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogRadioButtonItem_ClassType)
TClass
TaskDialogRadioButtonItem_ClassType(TTaskDialogRadioButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogRadioButtonItem_ClassType)
    return (TClass)MySyscall(pTaskDialogRadioButtonItem_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogRadioButtonItem_ClassName)
char*
TaskDialogRadioButtonItem_ClassName(TTaskDialogRadioButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogRadioButtonItem_ClassName)
    return (char*)MySyscall(pTaskDialogRadioButtonItem_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogRadioButtonItem_InstanceSize)
int32_t
TaskDialogRadioButtonItem_InstanceSize(TTaskDialogRadioButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogRadioButtonItem_InstanceSize)
    return (int32_t)MySyscall(pTaskDialogRadioButtonItem_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogRadioButtonItem_InheritsFrom)
BOOL
TaskDialogRadioButtonItem_InheritsFrom(TTaskDialogRadioButtonItem AObj, TClass AClass) {
    GET_FUNC_ADDR(TaskDialogRadioButtonItem_InheritsFrom)
    return (BOOL)MySyscall(pTaskDialogRadioButtonItem_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogRadioButtonItem_Equals)
BOOL
TaskDialogRadioButtonItem_Equals(TTaskDialogRadioButtonItem AObj, TObject Obj) {
    GET_FUNC_ADDR(TaskDialogRadioButtonItem_Equals)
    return (BOOL)MySyscall(pTaskDialogRadioButtonItem_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogRadioButtonItem_GetHashCode)
int32_t
TaskDialogRadioButtonItem_GetHashCode(TTaskDialogRadioButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogRadioButtonItem_GetHashCode)
    return (int32_t)MySyscall(pTaskDialogRadioButtonItem_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogRadioButtonItem_ToString)
char*
TaskDialogRadioButtonItem_ToString(TTaskDialogRadioButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogRadioButtonItem_ToString)
    return (char*)MySyscall(pTaskDialogRadioButtonItem_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogRadioButtonItem_GetModalResult)
TModalResult
TaskDialogRadioButtonItem_GetModalResult(TTaskDialogRadioButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogRadioButtonItem_GetModalResult)
    return (TModalResult)MySyscall(pTaskDialogRadioButtonItem_GetModalResult, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogRadioButtonItem_SetModalResult)
void
TaskDialogRadioButtonItem_SetModalResult(TTaskDialogRadioButtonItem AObj, TModalResult AValue) {
    GET_FUNC_ADDR(TaskDialogRadioButtonItem_SetModalResult)
    MySyscall(pTaskDialogRadioButtonItem_SetModalResult, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogRadioButtonItem_GetCaption)
char*
TaskDialogRadioButtonItem_GetCaption(TTaskDialogRadioButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogRadioButtonItem_GetCaption)
    return (char*)MySyscall(pTaskDialogRadioButtonItem_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogRadioButtonItem_SetCaption)
void
TaskDialogRadioButtonItem_SetCaption(TTaskDialogRadioButtonItem AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TaskDialogRadioButtonItem_SetCaption)
    MySyscall(pTaskDialogRadioButtonItem_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogRadioButtonItem_GetDefault)
BOOL
TaskDialogRadioButtonItem_GetDefault(TTaskDialogRadioButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogRadioButtonItem_GetDefault)
    return (BOOL)MySyscall(pTaskDialogRadioButtonItem_GetDefault, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogRadioButtonItem_SetDefault)
void
TaskDialogRadioButtonItem_SetDefault(TTaskDialogRadioButtonItem AObj, BOOL AValue) {
    GET_FUNC_ADDR(TaskDialogRadioButtonItem_SetDefault)
    MySyscall(pTaskDialogRadioButtonItem_SetDefault, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogRadioButtonItem_GetCollection)
TCollection
TaskDialogRadioButtonItem_GetCollection(TTaskDialogRadioButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogRadioButtonItem_GetCollection)
    return (TCollection)MySyscall(pTaskDialogRadioButtonItem_GetCollection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogRadioButtonItem_SetCollection)
void
TaskDialogRadioButtonItem_SetCollection(TTaskDialogRadioButtonItem AObj, TCollection AValue) {
    GET_FUNC_ADDR(TaskDialogRadioButtonItem_SetCollection)
    MySyscall(pTaskDialogRadioButtonItem_SetCollection, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogRadioButtonItem_GetIndex)
int32_t
TaskDialogRadioButtonItem_GetIndex(TTaskDialogRadioButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogRadioButtonItem_GetIndex)
    return (int32_t)MySyscall(pTaskDialogRadioButtonItem_GetIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogRadioButtonItem_SetIndex)
void
TaskDialogRadioButtonItem_SetIndex(TTaskDialogRadioButtonItem AObj, int32_t AValue) {
    GET_FUNC_ADDR(TaskDialogRadioButtonItem_SetIndex)
    MySyscall(pTaskDialogRadioButtonItem_SetIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogRadioButtonItem_GetDisplayName)
char*
TaskDialogRadioButtonItem_GetDisplayName(TTaskDialogRadioButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogRadioButtonItem_GetDisplayName)
    return (char*)MySyscall(pTaskDialogRadioButtonItem_GetDisplayName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogRadioButtonItem_SetDisplayName)
void
TaskDialogRadioButtonItem_SetDisplayName(TTaskDialogRadioButtonItem AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TaskDialogRadioButtonItem_SetDisplayName)
    MySyscall(pTaskDialogRadioButtonItem_SetDisplayName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogRadioButtonItem_StaticClassType)
TClass
TaskDialogRadioButtonItem_StaticClassType() {
    GET_FUNC_ADDR(TaskDialogRadioButtonItem_StaticClassType)
    return (TClass)MySyscall(pTaskDialogRadioButtonItem_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TTaskDialogBaseButtonItem-------------------

DEFINE_FUNC_PTR(TaskDialogBaseButtonItem_Create)
TTaskDialogBaseButtonItem
TaskDialogBaseButtonItem_Create(TCollection AOwner) {
    GET_FUNC_ADDR(TaskDialogBaseButtonItem_Create)
    return (TTaskDialogBaseButtonItem)MySyscall(pTaskDialogBaseButtonItem_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogBaseButtonItem_Free)
void
TaskDialogBaseButtonItem_Free(TTaskDialogBaseButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogBaseButtonItem_Free)
    MySyscall(pTaskDialogBaseButtonItem_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogBaseButtonItem_GetNamePath)
char*
TaskDialogBaseButtonItem_GetNamePath(TTaskDialogBaseButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogBaseButtonItem_GetNamePath)
    return (char*)MySyscall(pTaskDialogBaseButtonItem_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogBaseButtonItem_Assign)
void
TaskDialogBaseButtonItem_Assign(TTaskDialogBaseButtonItem AObj, TObject Source) {
    GET_FUNC_ADDR(TaskDialogBaseButtonItem_Assign)
    MySyscall(pTaskDialogBaseButtonItem_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogBaseButtonItem_ClassType)
TClass
TaskDialogBaseButtonItem_ClassType(TTaskDialogBaseButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogBaseButtonItem_ClassType)
    return (TClass)MySyscall(pTaskDialogBaseButtonItem_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogBaseButtonItem_ClassName)
char*
TaskDialogBaseButtonItem_ClassName(TTaskDialogBaseButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogBaseButtonItem_ClassName)
    return (char*)MySyscall(pTaskDialogBaseButtonItem_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogBaseButtonItem_InstanceSize)
int32_t
TaskDialogBaseButtonItem_InstanceSize(TTaskDialogBaseButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogBaseButtonItem_InstanceSize)
    return (int32_t)MySyscall(pTaskDialogBaseButtonItem_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogBaseButtonItem_InheritsFrom)
BOOL
TaskDialogBaseButtonItem_InheritsFrom(TTaskDialogBaseButtonItem AObj, TClass AClass) {
    GET_FUNC_ADDR(TaskDialogBaseButtonItem_InheritsFrom)
    return (BOOL)MySyscall(pTaskDialogBaseButtonItem_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogBaseButtonItem_Equals)
BOOL
TaskDialogBaseButtonItem_Equals(TTaskDialogBaseButtonItem AObj, TObject Obj) {
    GET_FUNC_ADDR(TaskDialogBaseButtonItem_Equals)
    return (BOOL)MySyscall(pTaskDialogBaseButtonItem_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogBaseButtonItem_GetHashCode)
int32_t
TaskDialogBaseButtonItem_GetHashCode(TTaskDialogBaseButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogBaseButtonItem_GetHashCode)
    return (int32_t)MySyscall(pTaskDialogBaseButtonItem_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogBaseButtonItem_ToString)
char*
TaskDialogBaseButtonItem_ToString(TTaskDialogBaseButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogBaseButtonItem_ToString)
    return (char*)MySyscall(pTaskDialogBaseButtonItem_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogBaseButtonItem_GetModalResult)
TModalResult
TaskDialogBaseButtonItem_GetModalResult(TTaskDialogBaseButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogBaseButtonItem_GetModalResult)
    return (TModalResult)MySyscall(pTaskDialogBaseButtonItem_GetModalResult, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogBaseButtonItem_SetModalResult)
void
TaskDialogBaseButtonItem_SetModalResult(TTaskDialogBaseButtonItem AObj, TModalResult AValue) {
    GET_FUNC_ADDR(TaskDialogBaseButtonItem_SetModalResult)
    MySyscall(pTaskDialogBaseButtonItem_SetModalResult, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogBaseButtonItem_GetCaption)
char*
TaskDialogBaseButtonItem_GetCaption(TTaskDialogBaseButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogBaseButtonItem_GetCaption)
    return (char*)MySyscall(pTaskDialogBaseButtonItem_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogBaseButtonItem_SetCaption)
void
TaskDialogBaseButtonItem_SetCaption(TTaskDialogBaseButtonItem AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TaskDialogBaseButtonItem_SetCaption)
    MySyscall(pTaskDialogBaseButtonItem_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogBaseButtonItem_GetDefault)
BOOL
TaskDialogBaseButtonItem_GetDefault(TTaskDialogBaseButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogBaseButtonItem_GetDefault)
    return (BOOL)MySyscall(pTaskDialogBaseButtonItem_GetDefault, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogBaseButtonItem_SetDefault)
void
TaskDialogBaseButtonItem_SetDefault(TTaskDialogBaseButtonItem AObj, BOOL AValue) {
    GET_FUNC_ADDR(TaskDialogBaseButtonItem_SetDefault)
    MySyscall(pTaskDialogBaseButtonItem_SetDefault, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogBaseButtonItem_GetCollection)
TCollection
TaskDialogBaseButtonItem_GetCollection(TTaskDialogBaseButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogBaseButtonItem_GetCollection)
    return (TCollection)MySyscall(pTaskDialogBaseButtonItem_GetCollection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogBaseButtonItem_SetCollection)
void
TaskDialogBaseButtonItem_SetCollection(TTaskDialogBaseButtonItem AObj, TCollection AValue) {
    GET_FUNC_ADDR(TaskDialogBaseButtonItem_SetCollection)
    MySyscall(pTaskDialogBaseButtonItem_SetCollection, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogBaseButtonItem_GetIndex)
int32_t
TaskDialogBaseButtonItem_GetIndex(TTaskDialogBaseButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogBaseButtonItem_GetIndex)
    return (int32_t)MySyscall(pTaskDialogBaseButtonItem_GetIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogBaseButtonItem_SetIndex)
void
TaskDialogBaseButtonItem_SetIndex(TTaskDialogBaseButtonItem AObj, int32_t AValue) {
    GET_FUNC_ADDR(TaskDialogBaseButtonItem_SetIndex)
    MySyscall(pTaskDialogBaseButtonItem_SetIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogBaseButtonItem_GetDisplayName)
char*
TaskDialogBaseButtonItem_GetDisplayName(TTaskDialogBaseButtonItem AObj) {
    GET_FUNC_ADDR(TaskDialogBaseButtonItem_GetDisplayName)
    return (char*)MySyscall(pTaskDialogBaseButtonItem_GetDisplayName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogBaseButtonItem_SetDisplayName)
void
TaskDialogBaseButtonItem_SetDisplayName(TTaskDialogBaseButtonItem AObj, CChar char* AValue) {
    GET_FUNC_ADDR(TaskDialogBaseButtonItem_SetDisplayName)
    MySyscall(pTaskDialogBaseButtonItem_SetDisplayName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(TaskDialogBaseButtonItem_StaticClassType)
TClass
TaskDialogBaseButtonItem_StaticClassType() {
    GET_FUNC_ADDR(TaskDialogBaseButtonItem_StaticClassType)
    return (TClass)MySyscall(pTaskDialogBaseButtonItem_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TComboBoxEx-------------------

DEFINE_FUNC_PTR(ComboBoxEx_Create)
TComboBoxEx
ComboBoxEx_Create(TComponent AOwner) {
    GET_FUNC_ADDR(ComboBoxEx_Create)
    return (TComboBoxEx)MySyscall(pComboBoxEx_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_Free)
void
ComboBoxEx_Free(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_Free)
    MySyscall(pComboBoxEx_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_Focused)
BOOL
ComboBoxEx_Focused(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_Focused)
    return (BOOL)MySyscall(pComboBoxEx_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_AddItem)
void
ComboBoxEx_AddItem(TComboBoxEx AObj, CChar char* Item, TObject AObject) {
    GET_FUNC_ADDR(ComboBoxEx_AddItem)
    MySyscall(pComboBoxEx_AddItem, 3, AObj, Item, AObject ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_Clear)
void
ComboBoxEx_Clear(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_Clear)
    MySyscall(pComboBoxEx_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_ClearSelection)
void
ComboBoxEx_ClearSelection(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_ClearSelection)
    MySyscall(pComboBoxEx_ClearSelection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_DeleteSelected)
void
ComboBoxEx_DeleteSelected(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_DeleteSelected)
    MySyscall(pComboBoxEx_DeleteSelected, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SelectAll)
void
ComboBoxEx_SelectAll(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_SelectAll)
    MySyscall(pComboBoxEx_SelectAll, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_CanFocus)
BOOL
ComboBoxEx_CanFocus(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_CanFocus)
    return (BOOL)MySyscall(pComboBoxEx_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_ContainsControl)
BOOL
ComboBoxEx_ContainsControl(TComboBoxEx AObj, TControl Control) {
    GET_FUNC_ADDR(ComboBoxEx_ContainsControl)
    return (BOOL)MySyscall(pComboBoxEx_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_ControlAtPos)
TControl
ComboBoxEx_ControlAtPos(TComboBoxEx AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(ComboBoxEx_ControlAtPos)
    return (TControl)MySyscall(pComboBoxEx_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_DisableAlign)
void
ComboBoxEx_DisableAlign(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_DisableAlign)
    MySyscall(pComboBoxEx_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_EnableAlign)
void
ComboBoxEx_EnableAlign(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_EnableAlign)
    MySyscall(pComboBoxEx_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_FindChildControl)
TControl
ComboBoxEx_FindChildControl(TComboBoxEx AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(ComboBoxEx_FindChildControl)
    return (TControl)MySyscall(pComboBoxEx_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_FlipChildren)
void
ComboBoxEx_FlipChildren(TComboBoxEx AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(ComboBoxEx_FlipChildren)
    MySyscall(pComboBoxEx_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_HandleAllocated)
BOOL
ComboBoxEx_HandleAllocated(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_HandleAllocated)
    return (BOOL)MySyscall(pComboBoxEx_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_InsertControl)
void
ComboBoxEx_InsertControl(TComboBoxEx AObj, TControl AControl) {
    GET_FUNC_ADDR(ComboBoxEx_InsertControl)
    MySyscall(pComboBoxEx_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_Invalidate)
void
ComboBoxEx_Invalidate(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_Invalidate)
    MySyscall(pComboBoxEx_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_PaintTo)
void
ComboBoxEx_PaintTo(TComboBoxEx AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(ComboBoxEx_PaintTo)
    MySyscall(pComboBoxEx_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_RemoveControl)
void
ComboBoxEx_RemoveControl(TComboBoxEx AObj, TControl AControl) {
    GET_FUNC_ADDR(ComboBoxEx_RemoveControl)
    MySyscall(pComboBoxEx_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_Realign)
void
ComboBoxEx_Realign(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_Realign)
    MySyscall(pComboBoxEx_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_Repaint)
void
ComboBoxEx_Repaint(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_Repaint)
    MySyscall(pComboBoxEx_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_ScaleBy)
void
ComboBoxEx_ScaleBy(TComboBoxEx AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(ComboBoxEx_ScaleBy)
    MySyscall(pComboBoxEx_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_ScrollBy)
void
ComboBoxEx_ScrollBy(TComboBoxEx AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(ComboBoxEx_ScrollBy)
    MySyscall(pComboBoxEx_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetBounds)
void
ComboBoxEx_SetBounds(TComboBoxEx AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(ComboBoxEx_SetBounds)
    MySyscall(pComboBoxEx_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetFocus)
void
ComboBoxEx_SetFocus(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_SetFocus)
    MySyscall(pComboBoxEx_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_Update)
void
ComboBoxEx_Update(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_Update)
    MySyscall(pComboBoxEx_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_BringToFront)
void
ComboBoxEx_BringToFront(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_BringToFront)
    MySyscall(pComboBoxEx_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_ClientToScreen)
TPoint
ComboBoxEx_ClientToScreen(TComboBoxEx AObj, TPoint Point) {
    GET_FUNC_ADDR(ComboBoxEx_ClientToScreen)
    TPoint result;
    MySyscall(pComboBoxEx_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ComboBoxEx_ClientToParent)
TPoint
ComboBoxEx_ClientToParent(TComboBoxEx AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ComboBoxEx_ClientToParent)
    TPoint result;
    MySyscall(pComboBoxEx_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ComboBoxEx_Dragging)
BOOL
ComboBoxEx_Dragging(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_Dragging)
    return (BOOL)MySyscall(pComboBoxEx_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_HasParent)
BOOL
ComboBoxEx_HasParent(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_HasParent)
    return (BOOL)MySyscall(pComboBoxEx_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_Hide)
void
ComboBoxEx_Hide(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_Hide)
    MySyscall(pComboBoxEx_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_Perform)
intptr_t
ComboBoxEx_Perform(TComboBoxEx AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(ComboBoxEx_Perform)
    return (intptr_t)MySyscall(pComboBoxEx_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_Refresh)
void
ComboBoxEx_Refresh(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_Refresh)
    MySyscall(pComboBoxEx_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_ScreenToClient)
TPoint
ComboBoxEx_ScreenToClient(TComboBoxEx AObj, TPoint Point) {
    GET_FUNC_ADDR(ComboBoxEx_ScreenToClient)
    TPoint result;
    MySyscall(pComboBoxEx_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ComboBoxEx_ParentToClient)
TPoint
ComboBoxEx_ParentToClient(TComboBoxEx AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ComboBoxEx_ParentToClient)
    TPoint result;
    MySyscall(pComboBoxEx_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ComboBoxEx_SendToBack)
void
ComboBoxEx_SendToBack(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_SendToBack)
    MySyscall(pComboBoxEx_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_Show)
void
ComboBoxEx_Show(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_Show)
    MySyscall(pComboBoxEx_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetTextBuf)
int32_t
ComboBoxEx_GetTextBuf(TComboBoxEx AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(ComboBoxEx_GetTextBuf)
    return (int32_t)MySyscall(pComboBoxEx_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetTextLen)
int32_t
ComboBoxEx_GetTextLen(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetTextLen)
    return (int32_t)MySyscall(pComboBoxEx_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetTextBuf)
void
ComboBoxEx_SetTextBuf(TComboBoxEx AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(ComboBoxEx_SetTextBuf)
    MySyscall(pComboBoxEx_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_FindComponent)
TComponent
ComboBoxEx_FindComponent(TComboBoxEx AObj, CChar char* AName) {
    GET_FUNC_ADDR(ComboBoxEx_FindComponent)
    return (TComponent)MySyscall(pComboBoxEx_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetNamePath)
char*
ComboBoxEx_GetNamePath(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetNamePath)
    return (char*)MySyscall(pComboBoxEx_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_Assign)
void
ComboBoxEx_Assign(TComboBoxEx AObj, TObject Source) {
    GET_FUNC_ADDR(ComboBoxEx_Assign)
    MySyscall(pComboBoxEx_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_ClassType)
TClass
ComboBoxEx_ClassType(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_ClassType)
    return (TClass)MySyscall(pComboBoxEx_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_ClassName)
char*
ComboBoxEx_ClassName(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_ClassName)
    return (char*)MySyscall(pComboBoxEx_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_InstanceSize)
int32_t
ComboBoxEx_InstanceSize(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_InstanceSize)
    return (int32_t)MySyscall(pComboBoxEx_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_InheritsFrom)
BOOL
ComboBoxEx_InheritsFrom(TComboBoxEx AObj, TClass AClass) {
    GET_FUNC_ADDR(ComboBoxEx_InheritsFrom)
    return (BOOL)MySyscall(pComboBoxEx_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_Equals)
BOOL
ComboBoxEx_Equals(TComboBoxEx AObj, TObject Obj) {
    GET_FUNC_ADDR(ComboBoxEx_Equals)
    return (BOOL)MySyscall(pComboBoxEx_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetHashCode)
int32_t
ComboBoxEx_GetHashCode(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetHashCode)
    return (int32_t)MySyscall(pComboBoxEx_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_ToString)
char*
ComboBoxEx_ToString(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_ToString)
    return (char*)MySyscall(pComboBoxEx_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_AnchorToNeighbour)
void
ComboBoxEx_AnchorToNeighbour(TComboBoxEx AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ComboBoxEx_AnchorToNeighbour)
    MySyscall(pComboBoxEx_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_AnchorParallel)
void
ComboBoxEx_AnchorParallel(TComboBoxEx AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ComboBoxEx_AnchorParallel)
    MySyscall(pComboBoxEx_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_AnchorHorizontalCenterTo)
void
ComboBoxEx_AnchorHorizontalCenterTo(TComboBoxEx AObj, TControl ASibling) {
    GET_FUNC_ADDR(ComboBoxEx_AnchorHorizontalCenterTo)
    MySyscall(pComboBoxEx_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_AnchorVerticalCenterTo)
void
ComboBoxEx_AnchorVerticalCenterTo(TComboBoxEx AObj, TControl ASibling) {
    GET_FUNC_ADDR(ComboBoxEx_AnchorVerticalCenterTo)
    MySyscall(pComboBoxEx_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_AnchorSame)
void
ComboBoxEx_AnchorSame(TComboBoxEx AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(ComboBoxEx_AnchorSame)
    MySyscall(pComboBoxEx_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_AnchorAsAlign)
void
ComboBoxEx_AnchorAsAlign(TComboBoxEx AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(ComboBoxEx_AnchorAsAlign)
    MySyscall(pComboBoxEx_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_AnchorClient)
void
ComboBoxEx_AnchorClient(TComboBoxEx AObj, int32_t ASpace) {
    GET_FUNC_ADDR(ComboBoxEx_AnchorClient)
    MySyscall(pComboBoxEx_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_ScaleDesignToForm)
int32_t
ComboBoxEx_ScaleDesignToForm(TComboBoxEx AObj, int32_t ASize) {
    GET_FUNC_ADDR(ComboBoxEx_ScaleDesignToForm)
    return (int32_t)MySyscall(pComboBoxEx_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_ScaleFormToDesign)
int32_t
ComboBoxEx_ScaleFormToDesign(TComboBoxEx AObj, int32_t ASize) {
    GET_FUNC_ADDR(ComboBoxEx_ScaleFormToDesign)
    return (int32_t)MySyscall(pComboBoxEx_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_Scale96ToForm)
int32_t
ComboBoxEx_Scale96ToForm(TComboBoxEx AObj, int32_t ASize) {
    GET_FUNC_ADDR(ComboBoxEx_Scale96ToForm)
    return (int32_t)MySyscall(pComboBoxEx_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_ScaleFormTo96)
int32_t
ComboBoxEx_ScaleFormTo96(TComboBoxEx AObj, int32_t ASize) {
    GET_FUNC_ADDR(ComboBoxEx_ScaleFormTo96)
    return (int32_t)MySyscall(pComboBoxEx_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_Scale96ToFont)
int32_t
ComboBoxEx_Scale96ToFont(TComboBoxEx AObj, int32_t ASize) {
    GET_FUNC_ADDR(ComboBoxEx_Scale96ToFont)
    return (int32_t)MySyscall(pComboBoxEx_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_ScaleFontTo96)
int32_t
ComboBoxEx_ScaleFontTo96(TComboBoxEx AObj, int32_t ASize) {
    GET_FUNC_ADDR(ComboBoxEx_ScaleFontTo96)
    return (int32_t)MySyscall(pComboBoxEx_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_ScaleScreenToFont)
int32_t
ComboBoxEx_ScaleScreenToFont(TComboBoxEx AObj, int32_t ASize) {
    GET_FUNC_ADDR(ComboBoxEx_ScaleScreenToFont)
    return (int32_t)MySyscall(pComboBoxEx_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_ScaleFontToScreen)
int32_t
ComboBoxEx_ScaleFontToScreen(TComboBoxEx AObj, int32_t ASize) {
    GET_FUNC_ADDR(ComboBoxEx_ScaleFontToScreen)
    return (int32_t)MySyscall(pComboBoxEx_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_Scale96ToScreen)
int32_t
ComboBoxEx_Scale96ToScreen(TComboBoxEx AObj, int32_t ASize) {
    GET_FUNC_ADDR(ComboBoxEx_Scale96ToScreen)
    return (int32_t)MySyscall(pComboBoxEx_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_ScaleScreenTo96)
int32_t
ComboBoxEx_ScaleScreenTo96(TComboBoxEx AObj, int32_t ASize) {
    GET_FUNC_ADDR(ComboBoxEx_ScaleScreenTo96)
    return (int32_t)MySyscall(pComboBoxEx_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_AutoAdjustLayout)
void
ComboBoxEx_AutoAdjustLayout(TComboBoxEx AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(ComboBoxEx_AutoAdjustLayout)
    MySyscall(pComboBoxEx_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_FixDesignFontsPPI)
void
ComboBoxEx_FixDesignFontsPPI(TComboBoxEx AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(ComboBoxEx_FixDesignFontsPPI)
    MySyscall(pComboBoxEx_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_ScaleFontsPPI)
void
ComboBoxEx_ScaleFontsPPI(TComboBoxEx AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(ComboBoxEx_ScaleFontsPPI)
    MySyscall(pComboBoxEx_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetAlign)
TAlign
ComboBoxEx_GetAlign(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetAlign)
    return (TAlign)MySyscall(pComboBoxEx_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetAlign)
void
ComboBoxEx_SetAlign(TComboBoxEx AObj, TAlign AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetAlign)
    MySyscall(pComboBoxEx_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetAutoCompleteOptions)
TAutoCompleteOptions
ComboBoxEx_GetAutoCompleteOptions(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetAutoCompleteOptions)
    return (TAutoCompleteOptions)MySyscall(pComboBoxEx_GetAutoCompleteOptions, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetAutoCompleteOptions)
void
ComboBoxEx_SetAutoCompleteOptions(TComboBoxEx AObj, TAutoCompleteOptions AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetAutoCompleteOptions)
    MySyscall(pComboBoxEx_SetAutoCompleteOptions, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetItemsEx)
TComboExItems
ComboBoxEx_GetItemsEx(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetItemsEx)
    return (TComboExItems)MySyscall(pComboBoxEx_GetItemsEx, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetItemsEx)
void
ComboBoxEx_SetItemsEx(TComboBoxEx AObj, TComboExItems AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetItemsEx)
    MySyscall(pComboBoxEx_SetItemsEx, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetStyle)
TComboBoxExStyle
ComboBoxEx_GetStyle(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetStyle)
    return (TComboBoxExStyle)MySyscall(pComboBoxEx_GetStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetStyle)
void
ComboBoxEx_SetStyle(TComboBoxEx AObj, TComboBoxExStyle AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetStyle)
    MySyscall(pComboBoxEx_SetStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetStyleEx)
TComboBoxExStyles
ComboBoxEx_GetStyleEx(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetStyleEx)
    return (TComboBoxExStyles)MySyscall(pComboBoxEx_GetStyleEx, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetStyleEx)
void
ComboBoxEx_SetStyleEx(TComboBoxEx AObj, TComboBoxExStyles AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetStyleEx)
    MySyscall(pComboBoxEx_SetStyleEx, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetAction)
TAction
ComboBoxEx_GetAction(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetAction)
    return (TAction)MySyscall(pComboBoxEx_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetAction)
void
ComboBoxEx_SetAction(TComboBoxEx AObj, TAction AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetAction)
    MySyscall(pComboBoxEx_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetAnchors)
TAnchors
ComboBoxEx_GetAnchors(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetAnchors)
    return (TAnchors)MySyscall(pComboBoxEx_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetAnchors)
void
ComboBoxEx_SetAnchors(TComboBoxEx AObj, TAnchors AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetAnchors)
    MySyscall(pComboBoxEx_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetBiDiMode)
TBiDiMode
ComboBoxEx_GetBiDiMode(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetBiDiMode)
    return (TBiDiMode)MySyscall(pComboBoxEx_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetBiDiMode)
void
ComboBoxEx_SetBiDiMode(TComboBoxEx AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetBiDiMode)
    MySyscall(pComboBoxEx_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetColor)
TColor
ComboBoxEx_GetColor(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetColor)
    return (TColor)MySyscall(pComboBoxEx_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetColor)
void
ComboBoxEx_SetColor(TComboBoxEx AObj, TColor AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetColor)
    MySyscall(pComboBoxEx_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetConstraints)
TSizeConstraints
ComboBoxEx_GetConstraints(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetConstraints)
    return (TSizeConstraints)MySyscall(pComboBoxEx_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetConstraints)
void
ComboBoxEx_SetConstraints(TComboBoxEx AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetConstraints)
    MySyscall(pComboBoxEx_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetDoubleBuffered)
BOOL
ComboBoxEx_GetDoubleBuffered(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetDoubleBuffered)
    return (BOOL)MySyscall(pComboBoxEx_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetDoubleBuffered)
void
ComboBoxEx_SetDoubleBuffered(TComboBoxEx AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetDoubleBuffered)
    MySyscall(pComboBoxEx_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetDragCursor)
TCursor
ComboBoxEx_GetDragCursor(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetDragCursor)
    return (TCursor)MySyscall(pComboBoxEx_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetDragCursor)
void
ComboBoxEx_SetDragCursor(TComboBoxEx AObj, TCursor AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetDragCursor)
    MySyscall(pComboBoxEx_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetDragKind)
TDragKind
ComboBoxEx_GetDragKind(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetDragKind)
    return (TDragKind)MySyscall(pComboBoxEx_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetDragKind)
void
ComboBoxEx_SetDragKind(TComboBoxEx AObj, TDragKind AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetDragKind)
    MySyscall(pComboBoxEx_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetDragMode)
TDragMode
ComboBoxEx_GetDragMode(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetDragMode)
    return (TDragMode)MySyscall(pComboBoxEx_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetDragMode)
void
ComboBoxEx_SetDragMode(TComboBoxEx AObj, TDragMode AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetDragMode)
    MySyscall(pComboBoxEx_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetEnabled)
BOOL
ComboBoxEx_GetEnabled(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetEnabled)
    return (BOOL)MySyscall(pComboBoxEx_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetEnabled)
void
ComboBoxEx_SetEnabled(TComboBoxEx AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetEnabled)
    MySyscall(pComboBoxEx_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetFont)
TFont
ComboBoxEx_GetFont(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetFont)
    return (TFont)MySyscall(pComboBoxEx_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetFont)
void
ComboBoxEx_SetFont(TComboBoxEx AObj, TFont AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetFont)
    MySyscall(pComboBoxEx_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetItemHeight)
int32_t
ComboBoxEx_GetItemHeight(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetItemHeight)
    return (int32_t)MySyscall(pComboBoxEx_GetItemHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetItemHeight)
void
ComboBoxEx_SetItemHeight(TComboBoxEx AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetItemHeight)
    MySyscall(pComboBoxEx_SetItemHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetMaxLength)
int32_t
ComboBoxEx_GetMaxLength(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetMaxLength)
    return (int32_t)MySyscall(pComboBoxEx_GetMaxLength, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetMaxLength)
void
ComboBoxEx_SetMaxLength(TComboBoxEx AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetMaxLength)
    MySyscall(pComboBoxEx_SetMaxLength, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetParentColor)
BOOL
ComboBoxEx_GetParentColor(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetParentColor)
    return (BOOL)MySyscall(pComboBoxEx_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetParentColor)
void
ComboBoxEx_SetParentColor(TComboBoxEx AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetParentColor)
    MySyscall(pComboBoxEx_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetParentDoubleBuffered)
BOOL
ComboBoxEx_GetParentDoubleBuffered(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pComboBoxEx_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetParentDoubleBuffered)
void
ComboBoxEx_SetParentDoubleBuffered(TComboBoxEx AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetParentDoubleBuffered)
    MySyscall(pComboBoxEx_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetParentFont)
BOOL
ComboBoxEx_GetParentFont(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetParentFont)
    return (BOOL)MySyscall(pComboBoxEx_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetParentFont)
void
ComboBoxEx_SetParentFont(TComboBoxEx AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetParentFont)
    MySyscall(pComboBoxEx_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetParentShowHint)
BOOL
ComboBoxEx_GetParentShowHint(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetParentShowHint)
    return (BOOL)MySyscall(pComboBoxEx_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetParentShowHint)
void
ComboBoxEx_SetParentShowHint(TComboBoxEx AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetParentShowHint)
    MySyscall(pComboBoxEx_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetPopupMenu)
TPopupMenu
ComboBoxEx_GetPopupMenu(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetPopupMenu)
    return (TPopupMenu)MySyscall(pComboBoxEx_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetPopupMenu)
void
ComboBoxEx_SetPopupMenu(TComboBoxEx AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetPopupMenu)
    MySyscall(pComboBoxEx_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetShowHint)
BOOL
ComboBoxEx_GetShowHint(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetShowHint)
    return (BOOL)MySyscall(pComboBoxEx_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetShowHint)
void
ComboBoxEx_SetShowHint(TComboBoxEx AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetShowHint)
    MySyscall(pComboBoxEx_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetTabOrder)
TTabOrder
ComboBoxEx_GetTabOrder(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetTabOrder)
    return (TTabOrder)MySyscall(pComboBoxEx_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetTabOrder)
void
ComboBoxEx_SetTabOrder(TComboBoxEx AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetTabOrder)
    MySyscall(pComboBoxEx_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetTabStop)
BOOL
ComboBoxEx_GetTabStop(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetTabStop)
    return (BOOL)MySyscall(pComboBoxEx_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetTabStop)
void
ComboBoxEx_SetTabStop(TComboBoxEx AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetTabStop)
    MySyscall(pComboBoxEx_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetText)
char*
ComboBoxEx_GetText(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetText)
    return (char*)MySyscall(pComboBoxEx_GetText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetText)
void
ComboBoxEx_SetText(TComboBoxEx AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetText)
    MySyscall(pComboBoxEx_SetText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetVisible)
BOOL
ComboBoxEx_GetVisible(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetVisible)
    return (BOOL)MySyscall(pComboBoxEx_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetVisible)
void
ComboBoxEx_SetVisible(TComboBoxEx AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetVisible)
    MySyscall(pComboBoxEx_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetOnChange)
void
ComboBoxEx_SetOnChange(TComboBoxEx AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ComboBoxEx_SetOnChange)
    MySyscall(pComboBoxEx_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetOnClick)
void
ComboBoxEx_SetOnClick(TComboBoxEx AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ComboBoxEx_SetOnClick)
    MySyscall(pComboBoxEx_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetOnContextPopup)
void
ComboBoxEx_SetOnContextPopup(TComboBoxEx AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(ComboBoxEx_SetOnContextPopup)
    MySyscall(pComboBoxEx_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetOnDblClick)
void
ComboBoxEx_SetOnDblClick(TComboBoxEx AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ComboBoxEx_SetOnDblClick)
    MySyscall(pComboBoxEx_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetOnDragDrop)
void
ComboBoxEx_SetOnDragDrop(TComboBoxEx AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(ComboBoxEx_SetOnDragDrop)
    MySyscall(pComboBoxEx_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetOnDragOver)
void
ComboBoxEx_SetOnDragOver(TComboBoxEx AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(ComboBoxEx_SetOnDragOver)
    MySyscall(pComboBoxEx_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetOnDropDown)
void
ComboBoxEx_SetOnDropDown(TComboBoxEx AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ComboBoxEx_SetOnDropDown)
    MySyscall(pComboBoxEx_SetOnDropDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetOnEndDock)
void
ComboBoxEx_SetOnEndDock(TComboBoxEx AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(ComboBoxEx_SetOnEndDock)
    MySyscall(pComboBoxEx_SetOnEndDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetOnEndDrag)
void
ComboBoxEx_SetOnEndDrag(TComboBoxEx AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(ComboBoxEx_SetOnEndDrag)
    MySyscall(pComboBoxEx_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetOnEnter)
void
ComboBoxEx_SetOnEnter(TComboBoxEx AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ComboBoxEx_SetOnEnter)
    MySyscall(pComboBoxEx_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetOnExit)
void
ComboBoxEx_SetOnExit(TComboBoxEx AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ComboBoxEx_SetOnExit)
    MySyscall(pComboBoxEx_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetOnKeyDown)
void
ComboBoxEx_SetOnKeyDown(TComboBoxEx AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(ComboBoxEx_SetOnKeyDown)
    MySyscall(pComboBoxEx_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetOnKeyPress)
void
ComboBoxEx_SetOnKeyPress(TComboBoxEx AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(ComboBoxEx_SetOnKeyPress)
    MySyscall(pComboBoxEx_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetOnKeyUp)
void
ComboBoxEx_SetOnKeyUp(TComboBoxEx AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(ComboBoxEx_SetOnKeyUp)
    MySyscall(pComboBoxEx_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetOnMouseMove)
void
ComboBoxEx_SetOnMouseMove(TComboBoxEx AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(ComboBoxEx_SetOnMouseMove)
    MySyscall(pComboBoxEx_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetOnSelect)
void
ComboBoxEx_SetOnSelect(TComboBoxEx AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ComboBoxEx_SetOnSelect)
    MySyscall(pComboBoxEx_SetOnSelect, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetOnStartDock)
void
ComboBoxEx_SetOnStartDock(TComboBoxEx AObj, TStartDockEvent AEventData) {
    GET_FUNC_ADDR(ComboBoxEx_SetOnStartDock)
    MySyscall(pComboBoxEx_SetOnStartDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetImages)
TImageList
ComboBoxEx_GetImages(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetImages)
    return (TImageList)MySyscall(pComboBoxEx_GetImages, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetImages)
void
ComboBoxEx_SetImages(TComboBoxEx AObj, TImageList AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetImages)
    MySyscall(pComboBoxEx_SetImages, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetDropDownCount)
int32_t
ComboBoxEx_GetDropDownCount(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetDropDownCount)
    return (int32_t)MySyscall(pComboBoxEx_GetDropDownCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetDropDownCount)
void
ComboBoxEx_SetDropDownCount(TComboBoxEx AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetDropDownCount)
    MySyscall(pComboBoxEx_SetDropDownCount, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetSelText)
char*
ComboBoxEx_GetSelText(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetSelText)
    return (char*)MySyscall(pComboBoxEx_GetSelText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetSelText)
void
ComboBoxEx_SetSelText(TComboBoxEx AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetSelText)
    MySyscall(pComboBoxEx_SetSelText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetCanvas)
TCanvas
ComboBoxEx_GetCanvas(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetCanvas)
    return (TCanvas)MySyscall(pComboBoxEx_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetDroppedDown)
BOOL
ComboBoxEx_GetDroppedDown(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetDroppedDown)
    return (BOOL)MySyscall(pComboBoxEx_GetDroppedDown, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetDroppedDown)
void
ComboBoxEx_SetDroppedDown(TComboBoxEx AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetDroppedDown)
    MySyscall(pComboBoxEx_SetDroppedDown, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetItems)
TStrings
ComboBoxEx_GetItems(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetItems)
    return (TStrings)MySyscall(pComboBoxEx_GetItems, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetItems)
void
ComboBoxEx_SetItems(TComboBoxEx AObj, TStrings AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetItems)
    MySyscall(pComboBoxEx_SetItems, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetSelLength)
int32_t
ComboBoxEx_GetSelLength(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetSelLength)
    return (int32_t)MySyscall(pComboBoxEx_GetSelLength, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetSelLength)
void
ComboBoxEx_SetSelLength(TComboBoxEx AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetSelLength)
    MySyscall(pComboBoxEx_SetSelLength, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetSelStart)
int32_t
ComboBoxEx_GetSelStart(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetSelStart)
    return (int32_t)MySyscall(pComboBoxEx_GetSelStart, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetSelStart)
void
ComboBoxEx_SetSelStart(TComboBoxEx AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetSelStart)
    MySyscall(pComboBoxEx_SetSelStart, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetItemIndex)
int32_t
ComboBoxEx_GetItemIndex(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetItemIndex)
    return (int32_t)MySyscall(pComboBoxEx_GetItemIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetItemIndex)
void
ComboBoxEx_SetItemIndex(TComboBoxEx AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetItemIndex)
    MySyscall(pComboBoxEx_SetItemIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetDockClientCount)
int32_t
ComboBoxEx_GetDockClientCount(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetDockClientCount)
    return (int32_t)MySyscall(pComboBoxEx_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetDockSite)
BOOL
ComboBoxEx_GetDockSite(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetDockSite)
    return (BOOL)MySyscall(pComboBoxEx_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetDockSite)
void
ComboBoxEx_SetDockSite(TComboBoxEx AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetDockSite)
    MySyscall(pComboBoxEx_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetMouseInClient)
BOOL
ComboBoxEx_GetMouseInClient(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetMouseInClient)
    return (BOOL)MySyscall(pComboBoxEx_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetVisibleDockClientCount)
int32_t
ComboBoxEx_GetVisibleDockClientCount(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pComboBoxEx_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetBrush)
TBrush
ComboBoxEx_GetBrush(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetBrush)
    return (TBrush)MySyscall(pComboBoxEx_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetControlCount)
int32_t
ComboBoxEx_GetControlCount(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetControlCount)
    return (int32_t)MySyscall(pComboBoxEx_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetHandle)
HWND
ComboBoxEx_GetHandle(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetHandle)
    return (HWND)MySyscall(pComboBoxEx_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetParentWindow)
HWND
ComboBoxEx_GetParentWindow(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetParentWindow)
    return (HWND)MySyscall(pComboBoxEx_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetParentWindow)
void
ComboBoxEx_SetParentWindow(TComboBoxEx AObj, HWND AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetParentWindow)
    MySyscall(pComboBoxEx_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetShowing)
BOOL
ComboBoxEx_GetShowing(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetShowing)
    return (BOOL)MySyscall(pComboBoxEx_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetUseDockManager)
BOOL
ComboBoxEx_GetUseDockManager(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetUseDockManager)
    return (BOOL)MySyscall(pComboBoxEx_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetUseDockManager)
void
ComboBoxEx_SetUseDockManager(TComboBoxEx AObj, BOOL AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetUseDockManager)
    MySyscall(pComboBoxEx_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetBoundsRect)
TRect
ComboBoxEx_GetBoundsRect(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetBoundsRect)
    TRect result;
    MySyscall(pComboBoxEx_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ComboBoxEx_SetBoundsRect)
void
ComboBoxEx_SetBoundsRect(TComboBoxEx AObj, TRect AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetBoundsRect)
    MySyscall(pComboBoxEx_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetClientHeight)
int32_t
ComboBoxEx_GetClientHeight(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetClientHeight)
    return (int32_t)MySyscall(pComboBoxEx_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetClientHeight)
void
ComboBoxEx_SetClientHeight(TComboBoxEx AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetClientHeight)
    MySyscall(pComboBoxEx_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetClientOrigin)
TPoint
ComboBoxEx_GetClientOrigin(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetClientOrigin)
    TPoint result;
    MySyscall(pComboBoxEx_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ComboBoxEx_GetClientRect)
TRect
ComboBoxEx_GetClientRect(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetClientRect)
    TRect result;
    MySyscall(pComboBoxEx_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ComboBoxEx_GetClientWidth)
int32_t
ComboBoxEx_GetClientWidth(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetClientWidth)
    return (int32_t)MySyscall(pComboBoxEx_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetClientWidth)
void
ComboBoxEx_SetClientWidth(TComboBoxEx AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetClientWidth)
    MySyscall(pComboBoxEx_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetControlState)
TControlState
ComboBoxEx_GetControlState(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetControlState)
    return (TControlState)MySyscall(pComboBoxEx_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetControlState)
void
ComboBoxEx_SetControlState(TComboBoxEx AObj, TControlState AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetControlState)
    MySyscall(pComboBoxEx_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetControlStyle)
TControlStyle
ComboBoxEx_GetControlStyle(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetControlStyle)
    return (TControlStyle)MySyscall(pComboBoxEx_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetControlStyle)
void
ComboBoxEx_SetControlStyle(TComboBoxEx AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetControlStyle)
    MySyscall(pComboBoxEx_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetFloating)
BOOL
ComboBoxEx_GetFloating(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetFloating)
    return (BOOL)MySyscall(pComboBoxEx_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetParent)
TWinControl
ComboBoxEx_GetParent(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetParent)
    return (TWinControl)MySyscall(pComboBoxEx_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetParent)
void
ComboBoxEx_SetParent(TComboBoxEx AObj, TWinControl AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetParent)
    MySyscall(pComboBoxEx_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetLeft)
int32_t
ComboBoxEx_GetLeft(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetLeft)
    return (int32_t)MySyscall(pComboBoxEx_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetLeft)
void
ComboBoxEx_SetLeft(TComboBoxEx AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetLeft)
    MySyscall(pComboBoxEx_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetTop)
int32_t
ComboBoxEx_GetTop(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetTop)
    return (int32_t)MySyscall(pComboBoxEx_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetTop)
void
ComboBoxEx_SetTop(TComboBoxEx AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetTop)
    MySyscall(pComboBoxEx_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetWidth)
int32_t
ComboBoxEx_GetWidth(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetWidth)
    return (int32_t)MySyscall(pComboBoxEx_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetWidth)
void
ComboBoxEx_SetWidth(TComboBoxEx AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetWidth)
    MySyscall(pComboBoxEx_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetHeight)
int32_t
ComboBoxEx_GetHeight(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetHeight)
    return (int32_t)MySyscall(pComboBoxEx_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetHeight)
void
ComboBoxEx_SetHeight(TComboBoxEx AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetHeight)
    MySyscall(pComboBoxEx_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetCursor)
TCursor
ComboBoxEx_GetCursor(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetCursor)
    return (TCursor)MySyscall(pComboBoxEx_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetCursor)
void
ComboBoxEx_SetCursor(TComboBoxEx AObj, TCursor AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetCursor)
    MySyscall(pComboBoxEx_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetHint)
char*
ComboBoxEx_GetHint(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetHint)
    return (char*)MySyscall(pComboBoxEx_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetHint)
void
ComboBoxEx_SetHint(TComboBoxEx AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetHint)
    MySyscall(pComboBoxEx_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetComponentCount)
int32_t
ComboBoxEx_GetComponentCount(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetComponentCount)
    return (int32_t)MySyscall(pComboBoxEx_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetComponentIndex)
int32_t
ComboBoxEx_GetComponentIndex(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetComponentIndex)
    return (int32_t)MySyscall(pComboBoxEx_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetComponentIndex)
void
ComboBoxEx_SetComponentIndex(TComboBoxEx AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetComponentIndex)
    MySyscall(pComboBoxEx_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetOwner)
TComponent
ComboBoxEx_GetOwner(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetOwner)
    return (TComponent)MySyscall(pComboBoxEx_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetName)
char*
ComboBoxEx_GetName(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetName)
    return (char*)MySyscall(pComboBoxEx_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetName)
void
ComboBoxEx_SetName(TComboBoxEx AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetName)
    MySyscall(pComboBoxEx_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetTag)
intptr_t
ComboBoxEx_GetTag(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetTag)
    return (intptr_t)MySyscall(pComboBoxEx_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetTag)
void
ComboBoxEx_SetTag(TComboBoxEx AObj, intptr_t AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetTag)
    MySyscall(pComboBoxEx_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetAnchorSideLeft)
TAnchorSide
ComboBoxEx_GetAnchorSideLeft(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pComboBoxEx_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetAnchorSideLeft)
void
ComboBoxEx_SetAnchorSideLeft(TComboBoxEx AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetAnchorSideLeft)
    MySyscall(pComboBoxEx_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetAnchorSideTop)
TAnchorSide
ComboBoxEx_GetAnchorSideTop(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pComboBoxEx_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetAnchorSideTop)
void
ComboBoxEx_SetAnchorSideTop(TComboBoxEx AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetAnchorSideTop)
    MySyscall(pComboBoxEx_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetAnchorSideRight)
TAnchorSide
ComboBoxEx_GetAnchorSideRight(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pComboBoxEx_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetAnchorSideRight)
void
ComboBoxEx_SetAnchorSideRight(TComboBoxEx AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetAnchorSideRight)
    MySyscall(pComboBoxEx_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetAnchorSideBottom)
TAnchorSide
ComboBoxEx_GetAnchorSideBottom(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pComboBoxEx_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetAnchorSideBottom)
void
ComboBoxEx_SetAnchorSideBottom(TComboBoxEx AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetAnchorSideBottom)
    MySyscall(pComboBoxEx_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetChildSizing)
TControlChildSizing
ComboBoxEx_GetChildSizing(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetChildSizing)
    return (TControlChildSizing)MySyscall(pComboBoxEx_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetChildSizing)
void
ComboBoxEx_SetChildSizing(TComboBoxEx AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetChildSizing)
    MySyscall(pComboBoxEx_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetBorderSpacing)
TControlBorderSpacing
ComboBoxEx_GetBorderSpacing(TComboBoxEx AObj) {
    GET_FUNC_ADDR(ComboBoxEx_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pComboBoxEx_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_SetBorderSpacing)
void
ComboBoxEx_SetBorderSpacing(TComboBoxEx AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(ComboBoxEx_SetBorderSpacing)
    MySyscall(pComboBoxEx_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetDockClients)
TControl
ComboBoxEx_GetDockClients(TComboBoxEx AObj, int32_t Index) {
    GET_FUNC_ADDR(ComboBoxEx_GetDockClients)
    return (TControl)MySyscall(pComboBoxEx_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetControls)
TControl
ComboBoxEx_GetControls(TComboBoxEx AObj, int32_t Index) {
    GET_FUNC_ADDR(ComboBoxEx_GetControls)
    return (TControl)MySyscall(pComboBoxEx_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetComponents)
TComponent
ComboBoxEx_GetComponents(TComboBoxEx AObj, int32_t AIndex) {
    GET_FUNC_ADDR(ComboBoxEx_GetComponents)
    return (TComponent)MySyscall(pComboBoxEx_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_GetAnchorSide)
TAnchorSide
ComboBoxEx_GetAnchorSide(TComboBoxEx AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(ComboBoxEx_GetAnchorSide)
    return (TAnchorSide)MySyscall(pComboBoxEx_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboBoxEx_StaticClassType)
TClass
ComboBoxEx_StaticClassType() {
    GET_FUNC_ADDR(ComboBoxEx_StaticClassType)
    return (TClass)MySyscall(pComboBoxEx_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TComboExItems-------------------

DEFINE_FUNC_PTR(ComboExItems_Add)
TComboExItem
ComboExItems_Add(TComboExItems AObj) {
    GET_FUNC_ADDR(ComboExItems_Add)
    return (TComboExItem)MySyscall(pComboExItems_Add, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItems_AddItem)
TComboExItem
ComboExItems_AddItem(TComboExItems AObj, CChar char* Caption, int32_t ImageIndex, int32_t SelectedImageIndex, int32_t OverlayImageIndex, int32_t Indent, void* Data) {
    GET_FUNC_ADDR(ComboExItems_AddItem)
    return (TComboExItem)MySyscall(pComboExItems_AddItem, 7, AObj, Caption, ImageIndex, SelectedImageIndex, OverlayImageIndex, Indent, Data ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItems_Insert)
TComboExItem
ComboExItems_Insert(TComboExItems AObj, int32_t Index) {
    GET_FUNC_ADDR(ComboExItems_Insert)
    return (TComboExItem)MySyscall(pComboExItems_Insert, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItems_Owner)
TObject
ComboExItems_Owner(TComboExItems AObj) {
    GET_FUNC_ADDR(ComboExItems_Owner)
    return (TObject)MySyscall(pComboExItems_Owner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItems_Assign)
void
ComboExItems_Assign(TComboExItems AObj, TObject Source) {
    GET_FUNC_ADDR(ComboExItems_Assign)
    MySyscall(pComboExItems_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItems_BeginUpdate)
void
ComboExItems_BeginUpdate(TComboExItems AObj) {
    GET_FUNC_ADDR(ComboExItems_BeginUpdate)
    MySyscall(pComboExItems_BeginUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItems_Clear)
void
ComboExItems_Clear(TComboExItems AObj) {
    GET_FUNC_ADDR(ComboExItems_Clear)
    MySyscall(pComboExItems_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItems_Delete)
void
ComboExItems_Delete(TComboExItems AObj, int32_t Index) {
    GET_FUNC_ADDR(ComboExItems_Delete)
    MySyscall(pComboExItems_Delete, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItems_EndUpdate)
void
ComboExItems_EndUpdate(TComboExItems AObj) {
    GET_FUNC_ADDR(ComboExItems_EndUpdate)
    MySyscall(pComboExItems_EndUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItems_FindItemID)
TCollectionItem
ComboExItems_FindItemID(TComboExItems AObj, int32_t ID) {
    GET_FUNC_ADDR(ComboExItems_FindItemID)
    return (TCollectionItem)MySyscall(pComboExItems_FindItemID, 2, AObj, ID ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItems_GetNamePath)
char*
ComboExItems_GetNamePath(TComboExItems AObj) {
    GET_FUNC_ADDR(ComboExItems_GetNamePath)
    return (char*)MySyscall(pComboExItems_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItems_ClassType)
TClass
ComboExItems_ClassType(TComboExItems AObj) {
    GET_FUNC_ADDR(ComboExItems_ClassType)
    return (TClass)MySyscall(pComboExItems_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItems_ClassName)
char*
ComboExItems_ClassName(TComboExItems AObj) {
    GET_FUNC_ADDR(ComboExItems_ClassName)
    return (char*)MySyscall(pComboExItems_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItems_InstanceSize)
int32_t
ComboExItems_InstanceSize(TComboExItems AObj) {
    GET_FUNC_ADDR(ComboExItems_InstanceSize)
    return (int32_t)MySyscall(pComboExItems_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItems_InheritsFrom)
BOOL
ComboExItems_InheritsFrom(TComboExItems AObj, TClass AClass) {
    GET_FUNC_ADDR(ComboExItems_InheritsFrom)
    return (BOOL)MySyscall(pComboExItems_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItems_Equals)
BOOL
ComboExItems_Equals(TComboExItems AObj, TObject Obj) {
    GET_FUNC_ADDR(ComboExItems_Equals)
    return (BOOL)MySyscall(pComboExItems_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItems_GetHashCode)
int32_t
ComboExItems_GetHashCode(TComboExItems AObj) {
    GET_FUNC_ADDR(ComboExItems_GetHashCode)
    return (int32_t)MySyscall(pComboExItems_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItems_ToString)
char*
ComboExItems_ToString(TComboExItems AObj) {
    GET_FUNC_ADDR(ComboExItems_ToString)
    return (char*)MySyscall(pComboExItems_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItems_GetCount)
int32_t
ComboExItems_GetCount(TComboExItems AObj) {
    GET_FUNC_ADDR(ComboExItems_GetCount)
    return (int32_t)MySyscall(pComboExItems_GetCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItems_GetComboItems)
TComboExItem
ComboExItems_GetComboItems(TComboExItems AObj, int32_t Index) {
    GET_FUNC_ADDR(ComboExItems_GetComboItems)
    return (TComboExItem)MySyscall(pComboExItems_GetComboItems, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItems_StaticClassType)
TClass
ComboExItems_StaticClassType() {
    GET_FUNC_ADDR(ComboExItems_StaticClassType)
    return (TClass)MySyscall(pComboExItems_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TComboExItem-------------------

DEFINE_FUNC_PTR(ComboExItem_Assign)
void
ComboExItem_Assign(TComboExItem AObj, TObject Source) {
    GET_FUNC_ADDR(ComboExItem_Assign)
    MySyscall(pComboExItem_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItem_GetNamePath)
char*
ComboExItem_GetNamePath(TComboExItem AObj) {
    GET_FUNC_ADDR(ComboExItem_GetNamePath)
    return (char*)MySyscall(pComboExItem_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItem_ClassType)
TClass
ComboExItem_ClassType(TComboExItem AObj) {
    GET_FUNC_ADDR(ComboExItem_ClassType)
    return (TClass)MySyscall(pComboExItem_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItem_ClassName)
char*
ComboExItem_ClassName(TComboExItem AObj) {
    GET_FUNC_ADDR(ComboExItem_ClassName)
    return (char*)MySyscall(pComboExItem_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItem_InstanceSize)
int32_t
ComboExItem_InstanceSize(TComboExItem AObj) {
    GET_FUNC_ADDR(ComboExItem_InstanceSize)
    return (int32_t)MySyscall(pComboExItem_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItem_InheritsFrom)
BOOL
ComboExItem_InheritsFrom(TComboExItem AObj, TClass AClass) {
    GET_FUNC_ADDR(ComboExItem_InheritsFrom)
    return (BOOL)MySyscall(pComboExItem_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItem_Equals)
BOOL
ComboExItem_Equals(TComboExItem AObj, TObject Obj) {
    GET_FUNC_ADDR(ComboExItem_Equals)
    return (BOOL)MySyscall(pComboExItem_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItem_GetHashCode)
int32_t
ComboExItem_GetHashCode(TComboExItem AObj) {
    GET_FUNC_ADDR(ComboExItem_GetHashCode)
    return (int32_t)MySyscall(pComboExItem_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItem_ToString)
char*
ComboExItem_ToString(TComboExItem AObj) {
    GET_FUNC_ADDR(ComboExItem_ToString)
    return (char*)MySyscall(pComboExItem_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItem_GetIndent)
int32_t
ComboExItem_GetIndent(TComboExItem AObj) {
    GET_FUNC_ADDR(ComboExItem_GetIndent)
    return (int32_t)MySyscall(pComboExItem_GetIndent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItem_SetIndent)
void
ComboExItem_SetIndent(TComboExItem AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboExItem_SetIndent)
    MySyscall(pComboExItem_SetIndent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItem_GetOverlayImageIndex)
int32_t
ComboExItem_GetOverlayImageIndex(TComboExItem AObj) {
    GET_FUNC_ADDR(ComboExItem_GetOverlayImageIndex)
    return (int32_t)MySyscall(pComboExItem_GetOverlayImageIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItem_SetOverlayImageIndex)
void
ComboExItem_SetOverlayImageIndex(TComboExItem AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboExItem_SetOverlayImageIndex)
    MySyscall(pComboExItem_SetOverlayImageIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItem_GetData)
void*
ComboExItem_GetData(TComboExItem AObj) {
    GET_FUNC_ADDR(ComboExItem_GetData)
    return (void*)MySyscall(pComboExItem_GetData, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItem_SetData)
void
ComboExItem_SetData(TComboExItem AObj, void* AValue) {
    GET_FUNC_ADDR(ComboExItem_SetData)
    MySyscall(pComboExItem_SetData, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItem_GetCaption)
char*
ComboExItem_GetCaption(TComboExItem AObj) {
    GET_FUNC_ADDR(ComboExItem_GetCaption)
    return (char*)MySyscall(pComboExItem_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItem_SetCaption)
void
ComboExItem_SetCaption(TComboExItem AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ComboExItem_SetCaption)
    MySyscall(pComboExItem_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItem_GetImageIndex)
int32_t
ComboExItem_GetImageIndex(TComboExItem AObj) {
    GET_FUNC_ADDR(ComboExItem_GetImageIndex)
    return (int32_t)MySyscall(pComboExItem_GetImageIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItem_SetImageIndex)
void
ComboExItem_SetImageIndex(TComboExItem AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboExItem_SetImageIndex)
    MySyscall(pComboExItem_SetImageIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItem_GetCollection)
TCollection
ComboExItem_GetCollection(TComboExItem AObj) {
    GET_FUNC_ADDR(ComboExItem_GetCollection)
    return (TCollection)MySyscall(pComboExItem_GetCollection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItem_SetCollection)
void
ComboExItem_SetCollection(TComboExItem AObj, TCollection AValue) {
    GET_FUNC_ADDR(ComboExItem_SetCollection)
    MySyscall(pComboExItem_SetCollection, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItem_GetIndex)
int32_t
ComboExItem_GetIndex(TComboExItem AObj) {
    GET_FUNC_ADDR(ComboExItem_GetIndex)
    return (int32_t)MySyscall(pComboExItem_GetIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItem_SetIndex)
void
ComboExItem_SetIndex(TComboExItem AObj, int32_t AValue) {
    GET_FUNC_ADDR(ComboExItem_SetIndex)
    MySyscall(pComboExItem_SetIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItem_GetDisplayName)
char*
ComboExItem_GetDisplayName(TComboExItem AObj) {
    GET_FUNC_ADDR(ComboExItem_GetDisplayName)
    return (char*)MySyscall(pComboExItem_GetDisplayName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItem_SetDisplayName)
void
ComboExItem_SetDisplayName(TComboExItem AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ComboExItem_SetDisplayName)
    MySyscall(pComboExItem_SetDisplayName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ComboExItem_StaticClassType)
TClass
ComboExItem_StaticClassType() {
    GET_FUNC_ADDR(ComboExItem_StaticClassType)
    return (TClass)MySyscall(pComboExItem_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TFrame-------------------

DEFINE_FUNC_PTR(Frame_Create)
TFrame
Frame_Create(TComponent AOwner) {
    GET_FUNC_ADDR(Frame_Create)
    return (TFrame)MySyscall(pFrame_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_Free)
void
Frame_Free(TFrame AObj) {
    GET_FUNC_ADDR(Frame_Free)
    MySyscall(pFrame_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_ScrollInView)
void
Frame_ScrollInView(TFrame AObj, TControl AControl) {
    GET_FUNC_ADDR(Frame_ScrollInView)
    MySyscall(pFrame_ScrollInView, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_CanFocus)
BOOL
Frame_CanFocus(TFrame AObj) {
    GET_FUNC_ADDR(Frame_CanFocus)
    return (BOOL)MySyscall(pFrame_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_ContainsControl)
BOOL
Frame_ContainsControl(TFrame AObj, TControl Control) {
    GET_FUNC_ADDR(Frame_ContainsControl)
    return (BOOL)MySyscall(pFrame_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_ControlAtPos)
TControl
Frame_ControlAtPos(TFrame AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(Frame_ControlAtPos)
    return (TControl)MySyscall(pFrame_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_DisableAlign)
void
Frame_DisableAlign(TFrame AObj) {
    GET_FUNC_ADDR(Frame_DisableAlign)
    MySyscall(pFrame_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_EnableAlign)
void
Frame_EnableAlign(TFrame AObj) {
    GET_FUNC_ADDR(Frame_EnableAlign)
    MySyscall(pFrame_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_FindChildControl)
TControl
Frame_FindChildControl(TFrame AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(Frame_FindChildControl)
    return (TControl)MySyscall(pFrame_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_FlipChildren)
void
Frame_FlipChildren(TFrame AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(Frame_FlipChildren)
    MySyscall(pFrame_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_Focused)
BOOL
Frame_Focused(TFrame AObj) {
    GET_FUNC_ADDR(Frame_Focused)
    return (BOOL)MySyscall(pFrame_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_HandleAllocated)
BOOL
Frame_HandleAllocated(TFrame AObj) {
    GET_FUNC_ADDR(Frame_HandleAllocated)
    return (BOOL)MySyscall(pFrame_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_InsertControl)
void
Frame_InsertControl(TFrame AObj, TControl AControl) {
    GET_FUNC_ADDR(Frame_InsertControl)
    MySyscall(pFrame_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_Invalidate)
void
Frame_Invalidate(TFrame AObj) {
    GET_FUNC_ADDR(Frame_Invalidate)
    MySyscall(pFrame_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_PaintTo)
void
Frame_PaintTo(TFrame AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(Frame_PaintTo)
    MySyscall(pFrame_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_RemoveControl)
void
Frame_RemoveControl(TFrame AObj, TControl AControl) {
    GET_FUNC_ADDR(Frame_RemoveControl)
    MySyscall(pFrame_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_Realign)
void
Frame_Realign(TFrame AObj) {
    GET_FUNC_ADDR(Frame_Realign)
    MySyscall(pFrame_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_Repaint)
void
Frame_Repaint(TFrame AObj) {
    GET_FUNC_ADDR(Frame_Repaint)
    MySyscall(pFrame_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_ScaleBy)
void
Frame_ScaleBy(TFrame AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(Frame_ScaleBy)
    MySyscall(pFrame_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_ScrollBy)
void
Frame_ScrollBy(TFrame AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(Frame_ScrollBy)
    MySyscall(pFrame_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetBounds)
void
Frame_SetBounds(TFrame AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(Frame_SetBounds)
    MySyscall(pFrame_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetFocus)
void
Frame_SetFocus(TFrame AObj) {
    GET_FUNC_ADDR(Frame_SetFocus)
    MySyscall(pFrame_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_Update)
void
Frame_Update(TFrame AObj) {
    GET_FUNC_ADDR(Frame_Update)
    MySyscall(pFrame_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_BringToFront)
void
Frame_BringToFront(TFrame AObj) {
    GET_FUNC_ADDR(Frame_BringToFront)
    MySyscall(pFrame_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_ClientToScreen)
TPoint
Frame_ClientToScreen(TFrame AObj, TPoint Point) {
    GET_FUNC_ADDR(Frame_ClientToScreen)
    TPoint result;
    MySyscall(pFrame_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Frame_ClientToParent)
TPoint
Frame_ClientToParent(TFrame AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Frame_ClientToParent)
    TPoint result;
    MySyscall(pFrame_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Frame_Dragging)
BOOL
Frame_Dragging(TFrame AObj) {
    GET_FUNC_ADDR(Frame_Dragging)
    return (BOOL)MySyscall(pFrame_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_HasParent)
BOOL
Frame_HasParent(TFrame AObj) {
    GET_FUNC_ADDR(Frame_HasParent)
    return (BOOL)MySyscall(pFrame_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_Hide)
void
Frame_Hide(TFrame AObj) {
    GET_FUNC_ADDR(Frame_Hide)
    MySyscall(pFrame_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_Perform)
intptr_t
Frame_Perform(TFrame AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(Frame_Perform)
    return (intptr_t)MySyscall(pFrame_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_Refresh)
void
Frame_Refresh(TFrame AObj) {
    GET_FUNC_ADDR(Frame_Refresh)
    MySyscall(pFrame_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_ScreenToClient)
TPoint
Frame_ScreenToClient(TFrame AObj, TPoint Point) {
    GET_FUNC_ADDR(Frame_ScreenToClient)
    TPoint result;
    MySyscall(pFrame_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Frame_ParentToClient)
TPoint
Frame_ParentToClient(TFrame AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(Frame_ParentToClient)
    TPoint result;
    MySyscall(pFrame_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Frame_SendToBack)
void
Frame_SendToBack(TFrame AObj) {
    GET_FUNC_ADDR(Frame_SendToBack)
    MySyscall(pFrame_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_Show)
void
Frame_Show(TFrame AObj) {
    GET_FUNC_ADDR(Frame_Show)
    MySyscall(pFrame_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetTextBuf)
int32_t
Frame_GetTextBuf(TFrame AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(Frame_GetTextBuf)
    return (int32_t)MySyscall(pFrame_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetTextLen)
int32_t
Frame_GetTextLen(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetTextLen)
    return (int32_t)MySyscall(pFrame_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetTextBuf)
void
Frame_SetTextBuf(TFrame AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(Frame_SetTextBuf)
    MySyscall(pFrame_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_FindComponent)
TComponent
Frame_FindComponent(TFrame AObj, CChar char* AName) {
    GET_FUNC_ADDR(Frame_FindComponent)
    return (TComponent)MySyscall(pFrame_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetNamePath)
char*
Frame_GetNamePath(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetNamePath)
    return (char*)MySyscall(pFrame_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_Assign)
void
Frame_Assign(TFrame AObj, TObject Source) {
    GET_FUNC_ADDR(Frame_Assign)
    MySyscall(pFrame_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_ClassType)
TClass
Frame_ClassType(TFrame AObj) {
    GET_FUNC_ADDR(Frame_ClassType)
    return (TClass)MySyscall(pFrame_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_ClassName)
char*
Frame_ClassName(TFrame AObj) {
    GET_FUNC_ADDR(Frame_ClassName)
    return (char*)MySyscall(pFrame_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_InstanceSize)
int32_t
Frame_InstanceSize(TFrame AObj) {
    GET_FUNC_ADDR(Frame_InstanceSize)
    return (int32_t)MySyscall(pFrame_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_InheritsFrom)
BOOL
Frame_InheritsFrom(TFrame AObj, TClass AClass) {
    GET_FUNC_ADDR(Frame_InheritsFrom)
    return (BOOL)MySyscall(pFrame_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_Equals)
BOOL
Frame_Equals(TFrame AObj, TObject Obj) {
    GET_FUNC_ADDR(Frame_Equals)
    return (BOOL)MySyscall(pFrame_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetHashCode)
int32_t
Frame_GetHashCode(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetHashCode)
    return (int32_t)MySyscall(pFrame_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_ToString)
char*
Frame_ToString(TFrame AObj) {
    GET_FUNC_ADDR(Frame_ToString)
    return (char*)MySyscall(pFrame_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_AnchorToNeighbour)
void
Frame_AnchorToNeighbour(TFrame AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Frame_AnchorToNeighbour)
    MySyscall(pFrame_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_AnchorParallel)
void
Frame_AnchorParallel(TFrame AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(Frame_AnchorParallel)
    MySyscall(pFrame_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_AnchorHorizontalCenterTo)
void
Frame_AnchorHorizontalCenterTo(TFrame AObj, TControl ASibling) {
    GET_FUNC_ADDR(Frame_AnchorHorizontalCenterTo)
    MySyscall(pFrame_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_AnchorVerticalCenterTo)
void
Frame_AnchorVerticalCenterTo(TFrame AObj, TControl ASibling) {
    GET_FUNC_ADDR(Frame_AnchorVerticalCenterTo)
    MySyscall(pFrame_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_AnchorSame)
void
Frame_AnchorSame(TFrame AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(Frame_AnchorSame)
    MySyscall(pFrame_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_AnchorAsAlign)
void
Frame_AnchorAsAlign(TFrame AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(Frame_AnchorAsAlign)
    MySyscall(pFrame_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_AnchorClient)
void
Frame_AnchorClient(TFrame AObj, int32_t ASpace) {
    GET_FUNC_ADDR(Frame_AnchorClient)
    MySyscall(pFrame_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_ScaleDesignToForm)
int32_t
Frame_ScaleDesignToForm(TFrame AObj, int32_t ASize) {
    GET_FUNC_ADDR(Frame_ScaleDesignToForm)
    return (int32_t)MySyscall(pFrame_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_ScaleFormToDesign)
int32_t
Frame_ScaleFormToDesign(TFrame AObj, int32_t ASize) {
    GET_FUNC_ADDR(Frame_ScaleFormToDesign)
    return (int32_t)MySyscall(pFrame_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_Scale96ToForm)
int32_t
Frame_Scale96ToForm(TFrame AObj, int32_t ASize) {
    GET_FUNC_ADDR(Frame_Scale96ToForm)
    return (int32_t)MySyscall(pFrame_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_ScaleFormTo96)
int32_t
Frame_ScaleFormTo96(TFrame AObj, int32_t ASize) {
    GET_FUNC_ADDR(Frame_ScaleFormTo96)
    return (int32_t)MySyscall(pFrame_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_Scale96ToFont)
int32_t
Frame_Scale96ToFont(TFrame AObj, int32_t ASize) {
    GET_FUNC_ADDR(Frame_Scale96ToFont)
    return (int32_t)MySyscall(pFrame_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_ScaleFontTo96)
int32_t
Frame_ScaleFontTo96(TFrame AObj, int32_t ASize) {
    GET_FUNC_ADDR(Frame_ScaleFontTo96)
    return (int32_t)MySyscall(pFrame_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_ScaleScreenToFont)
int32_t
Frame_ScaleScreenToFont(TFrame AObj, int32_t ASize) {
    GET_FUNC_ADDR(Frame_ScaleScreenToFont)
    return (int32_t)MySyscall(pFrame_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_ScaleFontToScreen)
int32_t
Frame_ScaleFontToScreen(TFrame AObj, int32_t ASize) {
    GET_FUNC_ADDR(Frame_ScaleFontToScreen)
    return (int32_t)MySyscall(pFrame_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_Scale96ToScreen)
int32_t
Frame_Scale96ToScreen(TFrame AObj, int32_t ASize) {
    GET_FUNC_ADDR(Frame_Scale96ToScreen)
    return (int32_t)MySyscall(pFrame_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_ScaleScreenTo96)
int32_t
Frame_ScaleScreenTo96(TFrame AObj, int32_t ASize) {
    GET_FUNC_ADDR(Frame_ScaleScreenTo96)
    return (int32_t)MySyscall(pFrame_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_AutoAdjustLayout)
void
Frame_AutoAdjustLayout(TFrame AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(Frame_AutoAdjustLayout)
    MySyscall(pFrame_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_FixDesignFontsPPI)
void
Frame_FixDesignFontsPPI(TFrame AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(Frame_FixDesignFontsPPI)
    MySyscall(pFrame_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_ScaleFontsPPI)
void
Frame_ScaleFontsPPI(TFrame AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(Frame_ScaleFontsPPI)
    MySyscall(pFrame_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetDesignTimePPI)
int32_t
Frame_GetDesignTimePPI(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetDesignTimePPI)
    return (int32_t)MySyscall(pFrame_GetDesignTimePPI, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetDesignTimePPI)
void
Frame_SetDesignTimePPI(TFrame AObj, int32_t AValue) {
    GET_FUNC_ADDR(Frame_SetDesignTimePPI)
    MySyscall(pFrame_SetDesignTimePPI, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetAlign)
TAlign
Frame_GetAlign(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetAlign)
    return (TAlign)MySyscall(pFrame_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetAlign)
void
Frame_SetAlign(TFrame AObj, TAlign AValue) {
    GET_FUNC_ADDR(Frame_SetAlign)
    MySyscall(pFrame_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetAnchors)
TAnchors
Frame_GetAnchors(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetAnchors)
    return (TAnchors)MySyscall(pFrame_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetAnchors)
void
Frame_SetAnchors(TFrame AObj, TAnchors AValue) {
    GET_FUNC_ADDR(Frame_SetAnchors)
    MySyscall(pFrame_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetAutoScroll)
BOOL
Frame_GetAutoScroll(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetAutoScroll)
    return (BOOL)MySyscall(pFrame_GetAutoScroll, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetAutoScroll)
void
Frame_SetAutoScroll(TFrame AObj, BOOL AValue) {
    GET_FUNC_ADDR(Frame_SetAutoScroll)
    MySyscall(pFrame_SetAutoScroll, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetAutoSize)
BOOL
Frame_GetAutoSize(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetAutoSize)
    return (BOOL)MySyscall(pFrame_GetAutoSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetAutoSize)
void
Frame_SetAutoSize(TFrame AObj, BOOL AValue) {
    GET_FUNC_ADDR(Frame_SetAutoSize)
    MySyscall(pFrame_SetAutoSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetBiDiMode)
TBiDiMode
Frame_GetBiDiMode(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetBiDiMode)
    return (TBiDiMode)MySyscall(pFrame_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetBiDiMode)
void
Frame_SetBiDiMode(TFrame AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(Frame_SetBiDiMode)
    MySyscall(pFrame_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetConstraints)
TSizeConstraints
Frame_GetConstraints(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetConstraints)
    return (TSizeConstraints)MySyscall(pFrame_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetConstraints)
void
Frame_SetConstraints(TFrame AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(Frame_SetConstraints)
    MySyscall(pFrame_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetDockSite)
BOOL
Frame_GetDockSite(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetDockSite)
    return (BOOL)MySyscall(pFrame_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetDockSite)
void
Frame_SetDockSite(TFrame AObj, BOOL AValue) {
    GET_FUNC_ADDR(Frame_SetDockSite)
    MySyscall(pFrame_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetDoubleBuffered)
BOOL
Frame_GetDoubleBuffered(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetDoubleBuffered)
    return (BOOL)MySyscall(pFrame_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetDoubleBuffered)
void
Frame_SetDoubleBuffered(TFrame AObj, BOOL AValue) {
    GET_FUNC_ADDR(Frame_SetDoubleBuffered)
    MySyscall(pFrame_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetDragCursor)
TCursor
Frame_GetDragCursor(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetDragCursor)
    return (TCursor)MySyscall(pFrame_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetDragCursor)
void
Frame_SetDragCursor(TFrame AObj, TCursor AValue) {
    GET_FUNC_ADDR(Frame_SetDragCursor)
    MySyscall(pFrame_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetDragKind)
TDragKind
Frame_GetDragKind(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetDragKind)
    return (TDragKind)MySyscall(pFrame_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetDragKind)
void
Frame_SetDragKind(TFrame AObj, TDragKind AValue) {
    GET_FUNC_ADDR(Frame_SetDragKind)
    MySyscall(pFrame_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetDragMode)
TDragMode
Frame_GetDragMode(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetDragMode)
    return (TDragMode)MySyscall(pFrame_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetDragMode)
void
Frame_SetDragMode(TFrame AObj, TDragMode AValue) {
    GET_FUNC_ADDR(Frame_SetDragMode)
    MySyscall(pFrame_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetEnabled)
BOOL
Frame_GetEnabled(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetEnabled)
    return (BOOL)MySyscall(pFrame_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetEnabled)
void
Frame_SetEnabled(TFrame AObj, BOOL AValue) {
    GET_FUNC_ADDR(Frame_SetEnabled)
    MySyscall(pFrame_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetColor)
TColor
Frame_GetColor(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetColor)
    return (TColor)MySyscall(pFrame_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetColor)
void
Frame_SetColor(TFrame AObj, TColor AValue) {
    GET_FUNC_ADDR(Frame_SetColor)
    MySyscall(pFrame_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetFont)
TFont
Frame_GetFont(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetFont)
    return (TFont)MySyscall(pFrame_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetFont)
void
Frame_SetFont(TFrame AObj, TFont AValue) {
    GET_FUNC_ADDR(Frame_SetFont)
    MySyscall(pFrame_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetParentBackground)
BOOL
Frame_GetParentBackground(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetParentBackground)
    return (BOOL)MySyscall(pFrame_GetParentBackground, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetParentBackground)
void
Frame_SetParentBackground(TFrame AObj, BOOL AValue) {
    GET_FUNC_ADDR(Frame_SetParentBackground)
    MySyscall(pFrame_SetParentBackground, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetParentColor)
BOOL
Frame_GetParentColor(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetParentColor)
    return (BOOL)MySyscall(pFrame_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetParentColor)
void
Frame_SetParentColor(TFrame AObj, BOOL AValue) {
    GET_FUNC_ADDR(Frame_SetParentColor)
    MySyscall(pFrame_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetParentDoubleBuffered)
BOOL
Frame_GetParentDoubleBuffered(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pFrame_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetParentDoubleBuffered)
void
Frame_SetParentDoubleBuffered(TFrame AObj, BOOL AValue) {
    GET_FUNC_ADDR(Frame_SetParentDoubleBuffered)
    MySyscall(pFrame_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetParentFont)
BOOL
Frame_GetParentFont(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetParentFont)
    return (BOOL)MySyscall(pFrame_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetParentFont)
void
Frame_SetParentFont(TFrame AObj, BOOL AValue) {
    GET_FUNC_ADDR(Frame_SetParentFont)
    MySyscall(pFrame_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetParentShowHint)
BOOL
Frame_GetParentShowHint(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetParentShowHint)
    return (BOOL)MySyscall(pFrame_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetParentShowHint)
void
Frame_SetParentShowHint(TFrame AObj, BOOL AValue) {
    GET_FUNC_ADDR(Frame_SetParentShowHint)
    MySyscall(pFrame_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetPopupMenu)
TPopupMenu
Frame_GetPopupMenu(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetPopupMenu)
    return (TPopupMenu)MySyscall(pFrame_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetPopupMenu)
void
Frame_SetPopupMenu(TFrame AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(Frame_SetPopupMenu)
    MySyscall(pFrame_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetShowHint)
BOOL
Frame_GetShowHint(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetShowHint)
    return (BOOL)MySyscall(pFrame_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetShowHint)
void
Frame_SetShowHint(TFrame AObj, BOOL AValue) {
    GET_FUNC_ADDR(Frame_SetShowHint)
    MySyscall(pFrame_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetTabOrder)
TTabOrder
Frame_GetTabOrder(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetTabOrder)
    return (TTabOrder)MySyscall(pFrame_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetTabOrder)
void
Frame_SetTabOrder(TFrame AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(Frame_SetTabOrder)
    MySyscall(pFrame_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetTabStop)
BOOL
Frame_GetTabStop(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetTabStop)
    return (BOOL)MySyscall(pFrame_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetTabStop)
void
Frame_SetTabStop(TFrame AObj, BOOL AValue) {
    GET_FUNC_ADDR(Frame_SetTabStop)
    MySyscall(pFrame_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetVisible)
BOOL
Frame_GetVisible(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetVisible)
    return (BOOL)MySyscall(pFrame_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetVisible)
void
Frame_SetVisible(TFrame AObj, BOOL AValue) {
    GET_FUNC_ADDR(Frame_SetVisible)
    MySyscall(pFrame_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetOnAlignPosition)
void
Frame_SetOnAlignPosition(TFrame AObj, TAlignPositionEvent AEventData) {
    GET_FUNC_ADDR(Frame_SetOnAlignPosition)
    MySyscall(pFrame_SetOnAlignPosition, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetOnClick)
void
Frame_SetOnClick(TFrame AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Frame_SetOnClick)
    MySyscall(pFrame_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetOnConstrainedResize)
void
Frame_SetOnConstrainedResize(TFrame AObj, TConstrainedResizeEvent AEventData) {
    GET_FUNC_ADDR(Frame_SetOnConstrainedResize)
    MySyscall(pFrame_SetOnConstrainedResize, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetOnContextPopup)
void
Frame_SetOnContextPopup(TFrame AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(Frame_SetOnContextPopup)
    MySyscall(pFrame_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetOnDblClick)
void
Frame_SetOnDblClick(TFrame AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Frame_SetOnDblClick)
    MySyscall(pFrame_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetOnDockDrop)
void
Frame_SetOnDockDrop(TFrame AObj, TDockDropEvent AEventData) {
    GET_FUNC_ADDR(Frame_SetOnDockDrop)
    MySyscall(pFrame_SetOnDockDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetOnDragDrop)
void
Frame_SetOnDragDrop(TFrame AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(Frame_SetOnDragDrop)
    MySyscall(pFrame_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetOnDragOver)
void
Frame_SetOnDragOver(TFrame AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(Frame_SetOnDragOver)
    MySyscall(pFrame_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetOnEndDock)
void
Frame_SetOnEndDock(TFrame AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(Frame_SetOnEndDock)
    MySyscall(pFrame_SetOnEndDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetOnEndDrag)
void
Frame_SetOnEndDrag(TFrame AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(Frame_SetOnEndDrag)
    MySyscall(pFrame_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetOnEnter)
void
Frame_SetOnEnter(TFrame AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Frame_SetOnEnter)
    MySyscall(pFrame_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetOnExit)
void
Frame_SetOnExit(TFrame AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Frame_SetOnExit)
    MySyscall(pFrame_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetOnGetSiteInfo)
void
Frame_SetOnGetSiteInfo(TFrame AObj, TGetSiteInfoEvent AEventData) {
    GET_FUNC_ADDR(Frame_SetOnGetSiteInfo)
    MySyscall(pFrame_SetOnGetSiteInfo, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetOnMouseDown)
void
Frame_SetOnMouseDown(TFrame AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(Frame_SetOnMouseDown)
    MySyscall(pFrame_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetOnMouseEnter)
void
Frame_SetOnMouseEnter(TFrame AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Frame_SetOnMouseEnter)
    MySyscall(pFrame_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetOnMouseLeave)
void
Frame_SetOnMouseLeave(TFrame AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Frame_SetOnMouseLeave)
    MySyscall(pFrame_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetOnMouseMove)
void
Frame_SetOnMouseMove(TFrame AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(Frame_SetOnMouseMove)
    MySyscall(pFrame_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetOnMouseUp)
void
Frame_SetOnMouseUp(TFrame AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(Frame_SetOnMouseUp)
    MySyscall(pFrame_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetOnMouseWheel)
void
Frame_SetOnMouseWheel(TFrame AObj, TMouseWheelEvent AEventData) {
    GET_FUNC_ADDR(Frame_SetOnMouseWheel)
    MySyscall(pFrame_SetOnMouseWheel, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetOnMouseWheelDown)
void
Frame_SetOnMouseWheelDown(TFrame AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(Frame_SetOnMouseWheelDown)
    MySyscall(pFrame_SetOnMouseWheelDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetOnMouseWheelUp)
void
Frame_SetOnMouseWheelUp(TFrame AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(Frame_SetOnMouseWheelUp)
    MySyscall(pFrame_SetOnMouseWheelUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetOnResize)
void
Frame_SetOnResize(TFrame AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(Frame_SetOnResize)
    MySyscall(pFrame_SetOnResize, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetOnStartDock)
void
Frame_SetOnStartDock(TFrame AObj, TStartDockEvent AEventData) {
    GET_FUNC_ADDR(Frame_SetOnStartDock)
    MySyscall(pFrame_SetOnStartDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetOnUnDock)
void
Frame_SetOnUnDock(TFrame AObj, TUnDockEvent AEventData) {
    GET_FUNC_ADDR(Frame_SetOnUnDock)
    MySyscall(pFrame_SetOnUnDock, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetHorzScrollBar)
TControlScrollBar
Frame_GetHorzScrollBar(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetHorzScrollBar)
    return (TControlScrollBar)MySyscall(pFrame_GetHorzScrollBar, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetHorzScrollBar)
void
Frame_SetHorzScrollBar(TFrame AObj, TControlScrollBar AValue) {
    GET_FUNC_ADDR(Frame_SetHorzScrollBar)
    MySyscall(pFrame_SetHorzScrollBar, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetVertScrollBar)
TControlScrollBar
Frame_GetVertScrollBar(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetVertScrollBar)
    return (TControlScrollBar)MySyscall(pFrame_GetVertScrollBar, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetVertScrollBar)
void
Frame_SetVertScrollBar(TFrame AObj, TControlScrollBar AValue) {
    GET_FUNC_ADDR(Frame_SetVertScrollBar)
    MySyscall(pFrame_SetVertScrollBar, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetDockClientCount)
int32_t
Frame_GetDockClientCount(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetDockClientCount)
    return (int32_t)MySyscall(pFrame_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetMouseInClient)
BOOL
Frame_GetMouseInClient(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetMouseInClient)
    return (BOOL)MySyscall(pFrame_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetVisibleDockClientCount)
int32_t
Frame_GetVisibleDockClientCount(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pFrame_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetBrush)
TBrush
Frame_GetBrush(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetBrush)
    return (TBrush)MySyscall(pFrame_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetControlCount)
int32_t
Frame_GetControlCount(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetControlCount)
    return (int32_t)MySyscall(pFrame_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetHandle)
HWND
Frame_GetHandle(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetHandle)
    return (HWND)MySyscall(pFrame_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetParentWindow)
HWND
Frame_GetParentWindow(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetParentWindow)
    return (HWND)MySyscall(pFrame_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetParentWindow)
void
Frame_SetParentWindow(TFrame AObj, HWND AValue) {
    GET_FUNC_ADDR(Frame_SetParentWindow)
    MySyscall(pFrame_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetShowing)
BOOL
Frame_GetShowing(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetShowing)
    return (BOOL)MySyscall(pFrame_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetUseDockManager)
BOOL
Frame_GetUseDockManager(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetUseDockManager)
    return (BOOL)MySyscall(pFrame_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetUseDockManager)
void
Frame_SetUseDockManager(TFrame AObj, BOOL AValue) {
    GET_FUNC_ADDR(Frame_SetUseDockManager)
    MySyscall(pFrame_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetAction)
TAction
Frame_GetAction(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetAction)
    return (TAction)MySyscall(pFrame_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetAction)
void
Frame_SetAction(TFrame AObj, TAction AValue) {
    GET_FUNC_ADDR(Frame_SetAction)
    MySyscall(pFrame_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetBoundsRect)
TRect
Frame_GetBoundsRect(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetBoundsRect)
    TRect result;
    MySyscall(pFrame_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Frame_SetBoundsRect)
void
Frame_SetBoundsRect(TFrame AObj, TRect AValue) {
    GET_FUNC_ADDR(Frame_SetBoundsRect)
    MySyscall(pFrame_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetClientHeight)
int32_t
Frame_GetClientHeight(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetClientHeight)
    return (int32_t)MySyscall(pFrame_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetClientHeight)
void
Frame_SetClientHeight(TFrame AObj, int32_t AValue) {
    GET_FUNC_ADDR(Frame_SetClientHeight)
    MySyscall(pFrame_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetClientOrigin)
TPoint
Frame_GetClientOrigin(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetClientOrigin)
    TPoint result;
    MySyscall(pFrame_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Frame_GetClientRect)
TRect
Frame_GetClientRect(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetClientRect)
    TRect result;
    MySyscall(pFrame_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(Frame_GetClientWidth)
int32_t
Frame_GetClientWidth(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetClientWidth)
    return (int32_t)MySyscall(pFrame_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetClientWidth)
void
Frame_SetClientWidth(TFrame AObj, int32_t AValue) {
    GET_FUNC_ADDR(Frame_SetClientWidth)
    MySyscall(pFrame_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetControlState)
TControlState
Frame_GetControlState(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetControlState)
    return (TControlState)MySyscall(pFrame_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetControlState)
void
Frame_SetControlState(TFrame AObj, TControlState AValue) {
    GET_FUNC_ADDR(Frame_SetControlState)
    MySyscall(pFrame_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetControlStyle)
TControlStyle
Frame_GetControlStyle(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetControlStyle)
    return (TControlStyle)MySyscall(pFrame_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetControlStyle)
void
Frame_SetControlStyle(TFrame AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(Frame_SetControlStyle)
    MySyscall(pFrame_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetFloating)
BOOL
Frame_GetFloating(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetFloating)
    return (BOOL)MySyscall(pFrame_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetParent)
TWinControl
Frame_GetParent(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetParent)
    return (TWinControl)MySyscall(pFrame_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetParent)
void
Frame_SetParent(TFrame AObj, TWinControl AValue) {
    GET_FUNC_ADDR(Frame_SetParent)
    MySyscall(pFrame_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetLeft)
int32_t
Frame_GetLeft(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetLeft)
    return (int32_t)MySyscall(pFrame_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetLeft)
void
Frame_SetLeft(TFrame AObj, int32_t AValue) {
    GET_FUNC_ADDR(Frame_SetLeft)
    MySyscall(pFrame_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetTop)
int32_t
Frame_GetTop(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetTop)
    return (int32_t)MySyscall(pFrame_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetTop)
void
Frame_SetTop(TFrame AObj, int32_t AValue) {
    GET_FUNC_ADDR(Frame_SetTop)
    MySyscall(pFrame_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetWidth)
int32_t
Frame_GetWidth(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetWidth)
    return (int32_t)MySyscall(pFrame_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetWidth)
void
Frame_SetWidth(TFrame AObj, int32_t AValue) {
    GET_FUNC_ADDR(Frame_SetWidth)
    MySyscall(pFrame_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetHeight)
int32_t
Frame_GetHeight(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetHeight)
    return (int32_t)MySyscall(pFrame_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetHeight)
void
Frame_SetHeight(TFrame AObj, int32_t AValue) {
    GET_FUNC_ADDR(Frame_SetHeight)
    MySyscall(pFrame_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetCursor)
TCursor
Frame_GetCursor(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetCursor)
    return (TCursor)MySyscall(pFrame_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetCursor)
void
Frame_SetCursor(TFrame AObj, TCursor AValue) {
    GET_FUNC_ADDR(Frame_SetCursor)
    MySyscall(pFrame_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetHint)
char*
Frame_GetHint(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetHint)
    return (char*)MySyscall(pFrame_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetHint)
void
Frame_SetHint(TFrame AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Frame_SetHint)
    MySyscall(pFrame_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetComponentCount)
int32_t
Frame_GetComponentCount(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetComponentCount)
    return (int32_t)MySyscall(pFrame_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetComponentIndex)
int32_t
Frame_GetComponentIndex(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetComponentIndex)
    return (int32_t)MySyscall(pFrame_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetComponentIndex)
void
Frame_SetComponentIndex(TFrame AObj, int32_t AValue) {
    GET_FUNC_ADDR(Frame_SetComponentIndex)
    MySyscall(pFrame_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetOwner)
TComponent
Frame_GetOwner(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetOwner)
    return (TComponent)MySyscall(pFrame_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetName)
char*
Frame_GetName(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetName)
    return (char*)MySyscall(pFrame_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetName)
void
Frame_SetName(TFrame AObj, CChar char* AValue) {
    GET_FUNC_ADDR(Frame_SetName)
    MySyscall(pFrame_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetTag)
intptr_t
Frame_GetTag(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetTag)
    return (intptr_t)MySyscall(pFrame_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetTag)
void
Frame_SetTag(TFrame AObj, intptr_t AValue) {
    GET_FUNC_ADDR(Frame_SetTag)
    MySyscall(pFrame_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetAnchorSideLeft)
TAnchorSide
Frame_GetAnchorSideLeft(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pFrame_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetAnchorSideLeft)
void
Frame_SetAnchorSideLeft(TFrame AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Frame_SetAnchorSideLeft)
    MySyscall(pFrame_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetAnchorSideTop)
TAnchorSide
Frame_GetAnchorSideTop(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pFrame_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetAnchorSideTop)
void
Frame_SetAnchorSideTop(TFrame AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Frame_SetAnchorSideTop)
    MySyscall(pFrame_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetAnchorSideRight)
TAnchorSide
Frame_GetAnchorSideRight(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pFrame_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetAnchorSideRight)
void
Frame_SetAnchorSideRight(TFrame AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Frame_SetAnchorSideRight)
    MySyscall(pFrame_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetAnchorSideBottom)
TAnchorSide
Frame_GetAnchorSideBottom(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pFrame_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetAnchorSideBottom)
void
Frame_SetAnchorSideBottom(TFrame AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(Frame_SetAnchorSideBottom)
    MySyscall(pFrame_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetChildSizing)
TControlChildSizing
Frame_GetChildSizing(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetChildSizing)
    return (TControlChildSizing)MySyscall(pFrame_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetChildSizing)
void
Frame_SetChildSizing(TFrame AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(Frame_SetChildSizing)
    MySyscall(pFrame_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetBorderSpacing)
TControlBorderSpacing
Frame_GetBorderSpacing(TFrame AObj) {
    GET_FUNC_ADDR(Frame_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pFrame_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_SetBorderSpacing)
void
Frame_SetBorderSpacing(TFrame AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(Frame_SetBorderSpacing)
    MySyscall(pFrame_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetDockClients)
TControl
Frame_GetDockClients(TFrame AObj, int32_t Index) {
    GET_FUNC_ADDR(Frame_GetDockClients)
    return (TControl)MySyscall(pFrame_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetControls)
TControl
Frame_GetControls(TFrame AObj, int32_t Index) {
    GET_FUNC_ADDR(Frame_GetControls)
    return (TControl)MySyscall(pFrame_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetComponents)
TComponent
Frame_GetComponents(TFrame AObj, int32_t AIndex) {
    GET_FUNC_ADDR(Frame_GetComponents)
    return (TComponent)MySyscall(pFrame_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_GetAnchorSide)
TAnchorSide
Frame_GetAnchorSide(TFrame AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(Frame_GetAnchorSide)
    return (TAnchorSide)MySyscall(pFrame_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(Frame_StaticClassType)
TClass
Frame_StaticClassType() {
    GET_FUNC_ADDR(Frame_StaticClassType)
    return (TClass)MySyscall(pFrame_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TControlScrollBar-------------------

DEFINE_FUNC_PTR(ControlScrollBar_Assign)
void
ControlScrollBar_Assign(TControlScrollBar AObj, TObject Source) {
    GET_FUNC_ADDR(ControlScrollBar_Assign)
    MySyscall(pControlScrollBar_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlScrollBar_IsScrollBarVisible)
BOOL
ControlScrollBar_IsScrollBarVisible(TControlScrollBar AObj) {
    GET_FUNC_ADDR(ControlScrollBar_IsScrollBarVisible)
    return (BOOL)MySyscall(pControlScrollBar_IsScrollBarVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlScrollBar_GetNamePath)
char*
ControlScrollBar_GetNamePath(TControlScrollBar AObj) {
    GET_FUNC_ADDR(ControlScrollBar_GetNamePath)
    return (char*)MySyscall(pControlScrollBar_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlScrollBar_ClassType)
TClass
ControlScrollBar_ClassType(TControlScrollBar AObj) {
    GET_FUNC_ADDR(ControlScrollBar_ClassType)
    return (TClass)MySyscall(pControlScrollBar_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlScrollBar_ClassName)
char*
ControlScrollBar_ClassName(TControlScrollBar AObj) {
    GET_FUNC_ADDR(ControlScrollBar_ClassName)
    return (char*)MySyscall(pControlScrollBar_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlScrollBar_InstanceSize)
int32_t
ControlScrollBar_InstanceSize(TControlScrollBar AObj) {
    GET_FUNC_ADDR(ControlScrollBar_InstanceSize)
    return (int32_t)MySyscall(pControlScrollBar_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlScrollBar_InheritsFrom)
BOOL
ControlScrollBar_InheritsFrom(TControlScrollBar AObj, TClass AClass) {
    GET_FUNC_ADDR(ControlScrollBar_InheritsFrom)
    return (BOOL)MySyscall(pControlScrollBar_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlScrollBar_Equals)
BOOL
ControlScrollBar_Equals(TControlScrollBar AObj, TObject Obj) {
    GET_FUNC_ADDR(ControlScrollBar_Equals)
    return (BOOL)MySyscall(pControlScrollBar_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlScrollBar_GetHashCode)
int32_t
ControlScrollBar_GetHashCode(TControlScrollBar AObj) {
    GET_FUNC_ADDR(ControlScrollBar_GetHashCode)
    return (int32_t)MySyscall(pControlScrollBar_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlScrollBar_ToString)
char*
ControlScrollBar_ToString(TControlScrollBar AObj) {
    GET_FUNC_ADDR(ControlScrollBar_ToString)
    return (char*)MySyscall(pControlScrollBar_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlScrollBar_GetKind)
TScrollBarKind
ControlScrollBar_GetKind(TControlScrollBar AObj) {
    GET_FUNC_ADDR(ControlScrollBar_GetKind)
    return (TScrollBarKind)MySyscall(pControlScrollBar_GetKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlScrollBar_GetScrollPos)
int32_t
ControlScrollBar_GetScrollPos(TControlScrollBar AObj) {
    GET_FUNC_ADDR(ControlScrollBar_GetScrollPos)
    return (int32_t)MySyscall(pControlScrollBar_GetScrollPos, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlScrollBar_GetIncrement)
TScrollBarInc
ControlScrollBar_GetIncrement(TControlScrollBar AObj) {
    GET_FUNC_ADDR(ControlScrollBar_GetIncrement)
    return (TScrollBarInc)MySyscall(pControlScrollBar_GetIncrement, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlScrollBar_SetIncrement)
void
ControlScrollBar_SetIncrement(TControlScrollBar AObj, TScrollBarInc AValue) {
    GET_FUNC_ADDR(ControlScrollBar_SetIncrement)
    MySyscall(pControlScrollBar_SetIncrement, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlScrollBar_GetPosition)
int32_t
ControlScrollBar_GetPosition(TControlScrollBar AObj) {
    GET_FUNC_ADDR(ControlScrollBar_GetPosition)
    return (int32_t)MySyscall(pControlScrollBar_GetPosition, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlScrollBar_SetPosition)
void
ControlScrollBar_SetPosition(TControlScrollBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ControlScrollBar_SetPosition)
    MySyscall(pControlScrollBar_SetPosition, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlScrollBar_GetRange)
int32_t
ControlScrollBar_GetRange(TControlScrollBar AObj) {
    GET_FUNC_ADDR(ControlScrollBar_GetRange)
    return (int32_t)MySyscall(pControlScrollBar_GetRange, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlScrollBar_SetRange)
void
ControlScrollBar_SetRange(TControlScrollBar AObj, int32_t AValue) {
    GET_FUNC_ADDR(ControlScrollBar_SetRange)
    MySyscall(pControlScrollBar_SetRange, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlScrollBar_GetSmooth)
BOOL
ControlScrollBar_GetSmooth(TControlScrollBar AObj) {
    GET_FUNC_ADDR(ControlScrollBar_GetSmooth)
    return (BOOL)MySyscall(pControlScrollBar_GetSmooth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlScrollBar_SetSmooth)
void
ControlScrollBar_SetSmooth(TControlScrollBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ControlScrollBar_SetSmooth)
    MySyscall(pControlScrollBar_SetSmooth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlScrollBar_GetTracking)
BOOL
ControlScrollBar_GetTracking(TControlScrollBar AObj) {
    GET_FUNC_ADDR(ControlScrollBar_GetTracking)
    return (BOOL)MySyscall(pControlScrollBar_GetTracking, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlScrollBar_SetTracking)
void
ControlScrollBar_SetTracking(TControlScrollBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ControlScrollBar_SetTracking)
    MySyscall(pControlScrollBar_SetTracking, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlScrollBar_GetVisible)
BOOL
ControlScrollBar_GetVisible(TControlScrollBar AObj) {
    GET_FUNC_ADDR(ControlScrollBar_GetVisible)
    return (BOOL)MySyscall(pControlScrollBar_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlScrollBar_SetVisible)
void
ControlScrollBar_SetVisible(TControlScrollBar AObj, BOOL AValue) {
    GET_FUNC_ADDR(ControlScrollBar_SetVisible)
    MySyscall(pControlScrollBar_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlScrollBar_StaticClassType)
TClass
ControlScrollBar_StaticClassType() {
    GET_FUNC_ADDR(ControlScrollBar_StaticClassType)
    return (TClass)MySyscall(pControlScrollBar_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TSizeConstraints-------------------

DEFINE_FUNC_PTR(SizeConstraints_Assign)
void
SizeConstraints_Assign(TSizeConstraints AObj, TObject Source) {
    GET_FUNC_ADDR(SizeConstraints_Assign)
    MySyscall(pSizeConstraints_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SizeConstraints_GetNamePath)
char*
SizeConstraints_GetNamePath(TSizeConstraints AObj) {
    GET_FUNC_ADDR(SizeConstraints_GetNamePath)
    return (char*)MySyscall(pSizeConstraints_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SizeConstraints_ClassType)
TClass
SizeConstraints_ClassType(TSizeConstraints AObj) {
    GET_FUNC_ADDR(SizeConstraints_ClassType)
    return (TClass)MySyscall(pSizeConstraints_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SizeConstraints_ClassName)
char*
SizeConstraints_ClassName(TSizeConstraints AObj) {
    GET_FUNC_ADDR(SizeConstraints_ClassName)
    return (char*)MySyscall(pSizeConstraints_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SizeConstraints_InstanceSize)
int32_t
SizeConstraints_InstanceSize(TSizeConstraints AObj) {
    GET_FUNC_ADDR(SizeConstraints_InstanceSize)
    return (int32_t)MySyscall(pSizeConstraints_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SizeConstraints_InheritsFrom)
BOOL
SizeConstraints_InheritsFrom(TSizeConstraints AObj, TClass AClass) {
    GET_FUNC_ADDR(SizeConstraints_InheritsFrom)
    return (BOOL)MySyscall(pSizeConstraints_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SizeConstraints_Equals)
BOOL
SizeConstraints_Equals(TSizeConstraints AObj, TObject Obj) {
    GET_FUNC_ADDR(SizeConstraints_Equals)
    return (BOOL)MySyscall(pSizeConstraints_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SizeConstraints_GetHashCode)
int32_t
SizeConstraints_GetHashCode(TSizeConstraints AObj) {
    GET_FUNC_ADDR(SizeConstraints_GetHashCode)
    return (int32_t)MySyscall(pSizeConstraints_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SizeConstraints_ToString)
char*
SizeConstraints_ToString(TSizeConstraints AObj) {
    GET_FUNC_ADDR(SizeConstraints_ToString)
    return (char*)MySyscall(pSizeConstraints_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SizeConstraints_SetOnChange)
void
SizeConstraints_SetOnChange(TSizeConstraints AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(SizeConstraints_SetOnChange)
    MySyscall(pSizeConstraints_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SizeConstraints_GetMaxHeight)
TConstraintSize
SizeConstraints_GetMaxHeight(TSizeConstraints AObj) {
    GET_FUNC_ADDR(SizeConstraints_GetMaxHeight)
    return (TConstraintSize)MySyscall(pSizeConstraints_GetMaxHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SizeConstraints_SetMaxHeight)
void
SizeConstraints_SetMaxHeight(TSizeConstraints AObj, TConstraintSize AValue) {
    GET_FUNC_ADDR(SizeConstraints_SetMaxHeight)
    MySyscall(pSizeConstraints_SetMaxHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SizeConstraints_GetMaxWidth)
TConstraintSize
SizeConstraints_GetMaxWidth(TSizeConstraints AObj) {
    GET_FUNC_ADDR(SizeConstraints_GetMaxWidth)
    return (TConstraintSize)MySyscall(pSizeConstraints_GetMaxWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SizeConstraints_SetMaxWidth)
void
SizeConstraints_SetMaxWidth(TSizeConstraints AObj, TConstraintSize AValue) {
    GET_FUNC_ADDR(SizeConstraints_SetMaxWidth)
    MySyscall(pSizeConstraints_SetMaxWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SizeConstraints_GetMinHeight)
TConstraintSize
SizeConstraints_GetMinHeight(TSizeConstraints AObj) {
    GET_FUNC_ADDR(SizeConstraints_GetMinHeight)
    return (TConstraintSize)MySyscall(pSizeConstraints_GetMinHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SizeConstraints_SetMinHeight)
void
SizeConstraints_SetMinHeight(TSizeConstraints AObj, TConstraintSize AValue) {
    GET_FUNC_ADDR(SizeConstraints_SetMinHeight)
    MySyscall(pSizeConstraints_SetMinHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SizeConstraints_GetMinWidth)
TConstraintSize
SizeConstraints_GetMinWidth(TSizeConstraints AObj) {
    GET_FUNC_ADDR(SizeConstraints_GetMinWidth)
    return (TConstraintSize)MySyscall(pSizeConstraints_GetMinWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SizeConstraints_SetMinWidth)
void
SizeConstraints_SetMinWidth(TSizeConstraints AObj, TConstraintSize AValue) {
    GET_FUNC_ADDR(SizeConstraints_SetMinWidth)
    MySyscall(pSizeConstraints_SetMinWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(SizeConstraints_StaticClassType)
TClass
SizeConstraints_StaticClassType() {
    GET_FUNC_ADDR(SizeConstraints_StaticClassType)
    return (TClass)MySyscall(pSizeConstraints_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TXButton-------------------

DEFINE_FUNC_PTR(XButton_Create)
TXButton
XButton_Create(TComponent AOwner) {
    GET_FUNC_ADDR(XButton_Create)
    return (TXButton)MySyscall(pXButton_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_Free)
void
XButton_Free(TXButton AObj) {
    GET_FUNC_ADDR(XButton_Free)
    MySyscall(pXButton_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_BringToFront)
void
XButton_BringToFront(TXButton AObj) {
    GET_FUNC_ADDR(XButton_BringToFront)
    MySyscall(pXButton_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_ClientToScreen)
TPoint
XButton_ClientToScreen(TXButton AObj, TPoint Point) {
    GET_FUNC_ADDR(XButton_ClientToScreen)
    TPoint result;
    MySyscall(pXButton_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(XButton_ClientToParent)
TPoint
XButton_ClientToParent(TXButton AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(XButton_ClientToParent)
    TPoint result;
    MySyscall(pXButton_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(XButton_Dragging)
BOOL
XButton_Dragging(TXButton AObj) {
    GET_FUNC_ADDR(XButton_Dragging)
    return (BOOL)MySyscall(pXButton_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_HasParent)
BOOL
XButton_HasParent(TXButton AObj) {
    GET_FUNC_ADDR(XButton_HasParent)
    return (BOOL)MySyscall(pXButton_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_Hide)
void
XButton_Hide(TXButton AObj) {
    GET_FUNC_ADDR(XButton_Hide)
    MySyscall(pXButton_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_Invalidate)
void
XButton_Invalidate(TXButton AObj) {
    GET_FUNC_ADDR(XButton_Invalidate)
    MySyscall(pXButton_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_Perform)
intptr_t
XButton_Perform(TXButton AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(XButton_Perform)
    return (intptr_t)MySyscall(pXButton_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_Refresh)
void
XButton_Refresh(TXButton AObj) {
    GET_FUNC_ADDR(XButton_Refresh)
    MySyscall(pXButton_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_Repaint)
void
XButton_Repaint(TXButton AObj) {
    GET_FUNC_ADDR(XButton_Repaint)
    MySyscall(pXButton_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_ScreenToClient)
TPoint
XButton_ScreenToClient(TXButton AObj, TPoint Point) {
    GET_FUNC_ADDR(XButton_ScreenToClient)
    TPoint result;
    MySyscall(pXButton_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(XButton_ParentToClient)
TPoint
XButton_ParentToClient(TXButton AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(XButton_ParentToClient)
    TPoint result;
    MySyscall(pXButton_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(XButton_SendToBack)
void
XButton_SendToBack(TXButton AObj) {
    GET_FUNC_ADDR(XButton_SendToBack)
    MySyscall(pXButton_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetBounds)
void
XButton_SetBounds(TXButton AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(XButton_SetBounds)
    MySyscall(pXButton_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_Show)
void
XButton_Show(TXButton AObj) {
    GET_FUNC_ADDR(XButton_Show)
    MySyscall(pXButton_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_Update)
void
XButton_Update(TXButton AObj) {
    GET_FUNC_ADDR(XButton_Update)
    MySyscall(pXButton_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetTextBuf)
int32_t
XButton_GetTextBuf(TXButton AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(XButton_GetTextBuf)
    return (int32_t)MySyscall(pXButton_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetTextLen)
int32_t
XButton_GetTextLen(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetTextLen)
    return (int32_t)MySyscall(pXButton_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetTextBuf)
void
XButton_SetTextBuf(TXButton AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(XButton_SetTextBuf)
    MySyscall(pXButton_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_FindComponent)
TComponent
XButton_FindComponent(TXButton AObj, CChar char* AName) {
    GET_FUNC_ADDR(XButton_FindComponent)
    return (TComponent)MySyscall(pXButton_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetNamePath)
char*
XButton_GetNamePath(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetNamePath)
    return (char*)MySyscall(pXButton_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_Assign)
void
XButton_Assign(TXButton AObj, TObject Source) {
    GET_FUNC_ADDR(XButton_Assign)
    MySyscall(pXButton_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_ClassType)
TClass
XButton_ClassType(TXButton AObj) {
    GET_FUNC_ADDR(XButton_ClassType)
    return (TClass)MySyscall(pXButton_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_ClassName)
char*
XButton_ClassName(TXButton AObj) {
    GET_FUNC_ADDR(XButton_ClassName)
    return (char*)MySyscall(pXButton_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_InstanceSize)
int32_t
XButton_InstanceSize(TXButton AObj) {
    GET_FUNC_ADDR(XButton_InstanceSize)
    return (int32_t)MySyscall(pXButton_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_InheritsFrom)
BOOL
XButton_InheritsFrom(TXButton AObj, TClass AClass) {
    GET_FUNC_ADDR(XButton_InheritsFrom)
    return (BOOL)MySyscall(pXButton_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_Equals)
BOOL
XButton_Equals(TXButton AObj, TObject Obj) {
    GET_FUNC_ADDR(XButton_Equals)
    return (BOOL)MySyscall(pXButton_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetHashCode)
int32_t
XButton_GetHashCode(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetHashCode)
    return (int32_t)MySyscall(pXButton_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_ToString)
char*
XButton_ToString(TXButton AObj) {
    GET_FUNC_ADDR(XButton_ToString)
    return (char*)MySyscall(pXButton_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_AnchorToNeighbour)
void
XButton_AnchorToNeighbour(TXButton AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(XButton_AnchorToNeighbour)
    MySyscall(pXButton_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_AnchorParallel)
void
XButton_AnchorParallel(TXButton AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(XButton_AnchorParallel)
    MySyscall(pXButton_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_AnchorHorizontalCenterTo)
void
XButton_AnchorHorizontalCenterTo(TXButton AObj, TControl ASibling) {
    GET_FUNC_ADDR(XButton_AnchorHorizontalCenterTo)
    MySyscall(pXButton_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_AnchorVerticalCenterTo)
void
XButton_AnchorVerticalCenterTo(TXButton AObj, TControl ASibling) {
    GET_FUNC_ADDR(XButton_AnchorVerticalCenterTo)
    MySyscall(pXButton_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_AnchorSame)
void
XButton_AnchorSame(TXButton AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(XButton_AnchorSame)
    MySyscall(pXButton_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_AnchorAsAlign)
void
XButton_AnchorAsAlign(TXButton AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(XButton_AnchorAsAlign)
    MySyscall(pXButton_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_AnchorClient)
void
XButton_AnchorClient(TXButton AObj, int32_t ASpace) {
    GET_FUNC_ADDR(XButton_AnchorClient)
    MySyscall(pXButton_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_ScaleDesignToForm)
int32_t
XButton_ScaleDesignToForm(TXButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(XButton_ScaleDesignToForm)
    return (int32_t)MySyscall(pXButton_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_ScaleFormToDesign)
int32_t
XButton_ScaleFormToDesign(TXButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(XButton_ScaleFormToDesign)
    return (int32_t)MySyscall(pXButton_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_Scale96ToForm)
int32_t
XButton_Scale96ToForm(TXButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(XButton_Scale96ToForm)
    return (int32_t)MySyscall(pXButton_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_ScaleFormTo96)
int32_t
XButton_ScaleFormTo96(TXButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(XButton_ScaleFormTo96)
    return (int32_t)MySyscall(pXButton_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_Scale96ToFont)
int32_t
XButton_Scale96ToFont(TXButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(XButton_Scale96ToFont)
    return (int32_t)MySyscall(pXButton_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_ScaleFontTo96)
int32_t
XButton_ScaleFontTo96(TXButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(XButton_ScaleFontTo96)
    return (int32_t)MySyscall(pXButton_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_ScaleScreenToFont)
int32_t
XButton_ScaleScreenToFont(TXButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(XButton_ScaleScreenToFont)
    return (int32_t)MySyscall(pXButton_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_ScaleFontToScreen)
int32_t
XButton_ScaleFontToScreen(TXButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(XButton_ScaleFontToScreen)
    return (int32_t)MySyscall(pXButton_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_Scale96ToScreen)
int32_t
XButton_Scale96ToScreen(TXButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(XButton_Scale96ToScreen)
    return (int32_t)MySyscall(pXButton_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_ScaleScreenTo96)
int32_t
XButton_ScaleScreenTo96(TXButton AObj, int32_t ASize) {
    GET_FUNC_ADDR(XButton_ScaleScreenTo96)
    return (int32_t)MySyscall(pXButton_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_AutoAdjustLayout)
void
XButton_AutoAdjustLayout(TXButton AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(XButton_AutoAdjustLayout)
    MySyscall(pXButton_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_FixDesignFontsPPI)
void
XButton_FixDesignFontsPPI(TXButton AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(XButton_FixDesignFontsPPI)
    MySyscall(pXButton_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_ScaleFontsPPI)
void
XButton_ScaleFontsPPI(TXButton AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(XButton_ScaleFontsPPI)
    MySyscall(pXButton_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetCaption)
char*
XButton_GetCaption(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetCaption)
    return (char*)MySyscall(pXButton_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetCaption)
void
XButton_SetCaption(TXButton AObj, CChar char* AValue) {
    GET_FUNC_ADDR(XButton_SetCaption)
    MySyscall(pXButton_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetShowCaption)
BOOL
XButton_GetShowCaption(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetShowCaption)
    return (BOOL)MySyscall(pXButton_GetShowCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetShowCaption)
void
XButton_SetShowCaption(TXButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(XButton_SetShowCaption)
    MySyscall(pXButton_SetShowCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetBackColor)
TColor
XButton_GetBackColor(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetBackColor)
    return (TColor)MySyscall(pXButton_GetBackColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetBackColor)
void
XButton_SetBackColor(TXButton AObj, TColor AValue) {
    GET_FUNC_ADDR(XButton_SetBackColor)
    MySyscall(pXButton_SetBackColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetHoverColor)
TColor
XButton_GetHoverColor(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetHoverColor)
    return (TColor)MySyscall(pXButton_GetHoverColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetHoverColor)
void
XButton_SetHoverColor(TXButton AObj, TColor AValue) {
    GET_FUNC_ADDR(XButton_SetHoverColor)
    MySyscall(pXButton_SetHoverColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetDownColor)
TColor
XButton_GetDownColor(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetDownColor)
    return (TColor)MySyscall(pXButton_GetDownColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetDownColor)
void
XButton_SetDownColor(TXButton AObj, TColor AValue) {
    GET_FUNC_ADDR(XButton_SetDownColor)
    MySyscall(pXButton_SetDownColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetBorderWidth)
int32_t
XButton_GetBorderWidth(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetBorderWidth)
    return (int32_t)MySyscall(pXButton_GetBorderWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetBorderWidth)
void
XButton_SetBorderWidth(TXButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(XButton_SetBorderWidth)
    MySyscall(pXButton_SetBorderWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetBorderColor)
TColor
XButton_GetBorderColor(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetBorderColor)
    return (TColor)MySyscall(pXButton_GetBorderColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetBorderColor)
void
XButton_SetBorderColor(TXButton AObj, TColor AValue) {
    GET_FUNC_ADDR(XButton_SetBorderColor)
    MySyscall(pXButton_SetBorderColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetPicture)
TPicture
XButton_GetPicture(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetPicture)
    return (TPicture)MySyscall(pXButton_GetPicture, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetPicture)
void
XButton_SetPicture(TXButton AObj, TPicture AValue) {
    GET_FUNC_ADDR(XButton_SetPicture)
    MySyscall(pXButton_SetPicture, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetDrawMode)
TDrawImageMode
XButton_GetDrawMode(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetDrawMode)
    return (TDrawImageMode)MySyscall(pXButton_GetDrawMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetDrawMode)
void
XButton_SetDrawMode(TXButton AObj, TDrawImageMode AValue) {
    GET_FUNC_ADDR(XButton_SetDrawMode)
    MySyscall(pXButton_SetDrawMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetNormalFontColor)
TColor
XButton_GetNormalFontColor(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetNormalFontColor)
    return (TColor)MySyscall(pXButton_GetNormalFontColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetNormalFontColor)
void
XButton_SetNormalFontColor(TXButton AObj, TColor AValue) {
    GET_FUNC_ADDR(XButton_SetNormalFontColor)
    MySyscall(pXButton_SetNormalFontColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetDownFontColor)
TColor
XButton_GetDownFontColor(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetDownFontColor)
    return (TColor)MySyscall(pXButton_GetDownFontColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetDownFontColor)
void
XButton_SetDownFontColor(TXButton AObj, TColor AValue) {
    GET_FUNC_ADDR(XButton_SetDownFontColor)
    MySyscall(pXButton_SetDownFontColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetHoverFontColor)
TColor
XButton_GetHoverFontColor(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetHoverFontColor)
    return (TColor)MySyscall(pXButton_GetHoverFontColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetHoverFontColor)
void
XButton_SetHoverFontColor(TXButton AObj, TColor AValue) {
    GET_FUNC_ADDR(XButton_SetHoverFontColor)
    MySyscall(pXButton_SetHoverFontColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetAction)
TAction
XButton_GetAction(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetAction)
    return (TAction)MySyscall(pXButton_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetAction)
void
XButton_SetAction(TXButton AObj, TAction AValue) {
    GET_FUNC_ADDR(XButton_SetAction)
    MySyscall(pXButton_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetAlign)
TAlign
XButton_GetAlign(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetAlign)
    return (TAlign)MySyscall(pXButton_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetAlign)
void
XButton_SetAlign(TXButton AObj, TAlign AValue) {
    GET_FUNC_ADDR(XButton_SetAlign)
    MySyscall(pXButton_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetAnchors)
TAnchors
XButton_GetAnchors(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetAnchors)
    return (TAnchors)MySyscall(pXButton_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetAnchors)
void
XButton_SetAnchors(TXButton AObj, TAnchors AValue) {
    GET_FUNC_ADDR(XButton_SetAnchors)
    MySyscall(pXButton_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetBiDiMode)
TBiDiMode
XButton_GetBiDiMode(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetBiDiMode)
    return (TBiDiMode)MySyscall(pXButton_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetBiDiMode)
void
XButton_SetBiDiMode(TXButton AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(XButton_SetBiDiMode)
    MySyscall(pXButton_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetConstraints)
TSizeConstraints
XButton_GetConstraints(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetConstraints)
    return (TSizeConstraints)MySyscall(pXButton_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetConstraints)
void
XButton_SetConstraints(TXButton AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(XButton_SetConstraints)
    MySyscall(pXButton_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetEnabled)
BOOL
XButton_GetEnabled(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetEnabled)
    return (BOOL)MySyscall(pXButton_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetEnabled)
void
XButton_SetEnabled(TXButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(XButton_SetEnabled)
    MySyscall(pXButton_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetFont)
TFont
XButton_GetFont(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetFont)
    return (TFont)MySyscall(pXButton_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetFont)
void
XButton_SetFont(TXButton AObj, TFont AValue) {
    GET_FUNC_ADDR(XButton_SetFont)
    MySyscall(pXButton_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetParentFont)
BOOL
XButton_GetParentFont(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetParentFont)
    return (BOOL)MySyscall(pXButton_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetParentFont)
void
XButton_SetParentFont(TXButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(XButton_SetParentFont)
    MySyscall(pXButton_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetParentShowHint)
BOOL
XButton_GetParentShowHint(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetParentShowHint)
    return (BOOL)MySyscall(pXButton_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetParentShowHint)
void
XButton_SetParentShowHint(TXButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(XButton_SetParentShowHint)
    MySyscall(pXButton_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetPopupMenu)
TPopupMenu
XButton_GetPopupMenu(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetPopupMenu)
    return (TPopupMenu)MySyscall(pXButton_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetPopupMenu)
void
XButton_SetPopupMenu(TXButton AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(XButton_SetPopupMenu)
    MySyscall(pXButton_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetShowHint)
BOOL
XButton_GetShowHint(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetShowHint)
    return (BOOL)MySyscall(pXButton_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetShowHint)
void
XButton_SetShowHint(TXButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(XButton_SetShowHint)
    MySyscall(pXButton_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetVisible)
BOOL
XButton_GetVisible(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetVisible)
    return (BOOL)MySyscall(pXButton_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetVisible)
void
XButton_SetVisible(TXButton AObj, BOOL AValue) {
    GET_FUNC_ADDR(XButton_SetVisible)
    MySyscall(pXButton_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetOnClick)
void
XButton_SetOnClick(TXButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(XButton_SetOnClick)
    MySyscall(pXButton_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetOnDblClick)
void
XButton_SetOnDblClick(TXButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(XButton_SetOnDblClick)
    MySyscall(pXButton_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetOnMouseDown)
void
XButton_SetOnMouseDown(TXButton AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(XButton_SetOnMouseDown)
    MySyscall(pXButton_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetOnMouseEnter)
void
XButton_SetOnMouseEnter(TXButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(XButton_SetOnMouseEnter)
    MySyscall(pXButton_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetOnMouseLeave)
void
XButton_SetOnMouseLeave(TXButton AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(XButton_SetOnMouseLeave)
    MySyscall(pXButton_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetOnMouseMove)
void
XButton_SetOnMouseMove(TXButton AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(XButton_SetOnMouseMove)
    MySyscall(pXButton_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetOnMouseUp)
void
XButton_SetOnMouseUp(TXButton AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(XButton_SetOnMouseUp)
    MySyscall(pXButton_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetBoundsRect)
TRect
XButton_GetBoundsRect(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetBoundsRect)
    TRect result;
    MySyscall(pXButton_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(XButton_SetBoundsRect)
void
XButton_SetBoundsRect(TXButton AObj, TRect AValue) {
    GET_FUNC_ADDR(XButton_SetBoundsRect)
    MySyscall(pXButton_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetClientHeight)
int32_t
XButton_GetClientHeight(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetClientHeight)
    return (int32_t)MySyscall(pXButton_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetClientHeight)
void
XButton_SetClientHeight(TXButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(XButton_SetClientHeight)
    MySyscall(pXButton_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetClientOrigin)
TPoint
XButton_GetClientOrigin(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetClientOrigin)
    TPoint result;
    MySyscall(pXButton_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(XButton_GetClientRect)
TRect
XButton_GetClientRect(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetClientRect)
    TRect result;
    MySyscall(pXButton_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(XButton_GetClientWidth)
int32_t
XButton_GetClientWidth(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetClientWidth)
    return (int32_t)MySyscall(pXButton_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetClientWidth)
void
XButton_SetClientWidth(TXButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(XButton_SetClientWidth)
    MySyscall(pXButton_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetControlState)
TControlState
XButton_GetControlState(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetControlState)
    return (TControlState)MySyscall(pXButton_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetControlState)
void
XButton_SetControlState(TXButton AObj, TControlState AValue) {
    GET_FUNC_ADDR(XButton_SetControlState)
    MySyscall(pXButton_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetControlStyle)
TControlStyle
XButton_GetControlStyle(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetControlStyle)
    return (TControlStyle)MySyscall(pXButton_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetControlStyle)
void
XButton_SetControlStyle(TXButton AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(XButton_SetControlStyle)
    MySyscall(pXButton_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetFloating)
BOOL
XButton_GetFloating(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetFloating)
    return (BOOL)MySyscall(pXButton_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetParent)
TWinControl
XButton_GetParent(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetParent)
    return (TWinControl)MySyscall(pXButton_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetParent)
void
XButton_SetParent(TXButton AObj, TWinControl AValue) {
    GET_FUNC_ADDR(XButton_SetParent)
    MySyscall(pXButton_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetLeft)
int32_t
XButton_GetLeft(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetLeft)
    return (int32_t)MySyscall(pXButton_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetLeft)
void
XButton_SetLeft(TXButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(XButton_SetLeft)
    MySyscall(pXButton_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetTop)
int32_t
XButton_GetTop(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetTop)
    return (int32_t)MySyscall(pXButton_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetTop)
void
XButton_SetTop(TXButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(XButton_SetTop)
    MySyscall(pXButton_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetWidth)
int32_t
XButton_GetWidth(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetWidth)
    return (int32_t)MySyscall(pXButton_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetWidth)
void
XButton_SetWidth(TXButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(XButton_SetWidth)
    MySyscall(pXButton_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetHeight)
int32_t
XButton_GetHeight(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetHeight)
    return (int32_t)MySyscall(pXButton_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetHeight)
void
XButton_SetHeight(TXButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(XButton_SetHeight)
    MySyscall(pXButton_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetCursor)
TCursor
XButton_GetCursor(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetCursor)
    return (TCursor)MySyscall(pXButton_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetCursor)
void
XButton_SetCursor(TXButton AObj, TCursor AValue) {
    GET_FUNC_ADDR(XButton_SetCursor)
    MySyscall(pXButton_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetHint)
char*
XButton_GetHint(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetHint)
    return (char*)MySyscall(pXButton_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetHint)
void
XButton_SetHint(TXButton AObj, CChar char* AValue) {
    GET_FUNC_ADDR(XButton_SetHint)
    MySyscall(pXButton_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetComponentCount)
int32_t
XButton_GetComponentCount(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetComponentCount)
    return (int32_t)MySyscall(pXButton_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetComponentIndex)
int32_t
XButton_GetComponentIndex(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetComponentIndex)
    return (int32_t)MySyscall(pXButton_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetComponentIndex)
void
XButton_SetComponentIndex(TXButton AObj, int32_t AValue) {
    GET_FUNC_ADDR(XButton_SetComponentIndex)
    MySyscall(pXButton_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetOwner)
TComponent
XButton_GetOwner(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetOwner)
    return (TComponent)MySyscall(pXButton_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetName)
char*
XButton_GetName(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetName)
    return (char*)MySyscall(pXButton_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetName)
void
XButton_SetName(TXButton AObj, CChar char* AValue) {
    GET_FUNC_ADDR(XButton_SetName)
    MySyscall(pXButton_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetTag)
intptr_t
XButton_GetTag(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetTag)
    return (intptr_t)MySyscall(pXButton_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetTag)
void
XButton_SetTag(TXButton AObj, intptr_t AValue) {
    GET_FUNC_ADDR(XButton_SetTag)
    MySyscall(pXButton_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetAnchorSideLeft)
TAnchorSide
XButton_GetAnchorSideLeft(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pXButton_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetAnchorSideLeft)
void
XButton_SetAnchorSideLeft(TXButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(XButton_SetAnchorSideLeft)
    MySyscall(pXButton_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetAnchorSideTop)
TAnchorSide
XButton_GetAnchorSideTop(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pXButton_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetAnchorSideTop)
void
XButton_SetAnchorSideTop(TXButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(XButton_SetAnchorSideTop)
    MySyscall(pXButton_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetAnchorSideRight)
TAnchorSide
XButton_GetAnchorSideRight(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pXButton_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetAnchorSideRight)
void
XButton_SetAnchorSideRight(TXButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(XButton_SetAnchorSideRight)
    MySyscall(pXButton_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetAnchorSideBottom)
TAnchorSide
XButton_GetAnchorSideBottom(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pXButton_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetAnchorSideBottom)
void
XButton_SetAnchorSideBottom(TXButton AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(XButton_SetAnchorSideBottom)
    MySyscall(pXButton_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetBorderSpacing)
TControlBorderSpacing
XButton_GetBorderSpacing(TXButton AObj) {
    GET_FUNC_ADDR(XButton_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pXButton_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_SetBorderSpacing)
void
XButton_SetBorderSpacing(TXButton AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(XButton_SetBorderSpacing)
    MySyscall(pXButton_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetComponents)
TComponent
XButton_GetComponents(TXButton AObj, int32_t AIndex) {
    GET_FUNC_ADDR(XButton_GetComponents)
    return (TComponent)MySyscall(pXButton_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_GetAnchorSide)
TAnchorSide
XButton_GetAnchorSide(TXButton AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(XButton_GetAnchorSide)
    return (TAnchorSide)MySyscall(pXButton_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(XButton_StaticClassType)
TClass
XButton_StaticClassType() {
    GET_FUNC_ADDR(XButton_StaticClassType)
    return (TClass)MySyscall(pXButton_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TAnchorSide-------------------

DEFINE_FUNC_PTR(AnchorSide_Assign)
void
AnchorSide_Assign(TAnchorSide AObj, TObject Source) {
    GET_FUNC_ADDR(AnchorSide_Assign)
    MySyscall(pAnchorSide_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(AnchorSide_GetNamePath)
char*
AnchorSide_GetNamePath(TAnchorSide AObj) {
    GET_FUNC_ADDR(AnchorSide_GetNamePath)
    return (char*)MySyscall(pAnchorSide_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(AnchorSide_ClassType)
TClass
AnchorSide_ClassType(TAnchorSide AObj) {
    GET_FUNC_ADDR(AnchorSide_ClassType)
    return (TClass)MySyscall(pAnchorSide_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(AnchorSide_ClassName)
char*
AnchorSide_ClassName(TAnchorSide AObj) {
    GET_FUNC_ADDR(AnchorSide_ClassName)
    return (char*)MySyscall(pAnchorSide_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(AnchorSide_InstanceSize)
int32_t
AnchorSide_InstanceSize(TAnchorSide AObj) {
    GET_FUNC_ADDR(AnchorSide_InstanceSize)
    return (int32_t)MySyscall(pAnchorSide_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(AnchorSide_InheritsFrom)
BOOL
AnchorSide_InheritsFrom(TAnchorSide AObj, TClass AClass) {
    GET_FUNC_ADDR(AnchorSide_InheritsFrom)
    return (BOOL)MySyscall(pAnchorSide_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(AnchorSide_Equals)
BOOL
AnchorSide_Equals(TAnchorSide AObj, TObject Obj) {
    GET_FUNC_ADDR(AnchorSide_Equals)
    return (BOOL)MySyscall(pAnchorSide_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(AnchorSide_GetHashCode)
int32_t
AnchorSide_GetHashCode(TAnchorSide AObj) {
    GET_FUNC_ADDR(AnchorSide_GetHashCode)
    return (int32_t)MySyscall(pAnchorSide_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(AnchorSide_ToString)
char*
AnchorSide_ToString(TAnchorSide AObj) {
    GET_FUNC_ADDR(AnchorSide_ToString)
    return (char*)MySyscall(pAnchorSide_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(AnchorSide_GetOwner)
TControl
AnchorSide_GetOwner(TAnchorSide AObj) {
    GET_FUNC_ADDR(AnchorSide_GetOwner)
    return (TControl)MySyscall(pAnchorSide_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(AnchorSide_GetKind)
TAnchorKind
AnchorSide_GetKind(TAnchorSide AObj) {
    GET_FUNC_ADDR(AnchorSide_GetKind)
    return (TAnchorKind)MySyscall(pAnchorSide_GetKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(AnchorSide_GetControl)
TControl
AnchorSide_GetControl(TAnchorSide AObj) {
    GET_FUNC_ADDR(AnchorSide_GetControl)
    return (TControl)MySyscall(pAnchorSide_GetControl, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(AnchorSide_SetControl)
void
AnchorSide_SetControl(TAnchorSide AObj, TControl AValue) {
    GET_FUNC_ADDR(AnchorSide_SetControl)
    MySyscall(pAnchorSide_SetControl, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(AnchorSide_GetSide)
TAnchorSideReference
AnchorSide_GetSide(TAnchorSide AObj) {
    GET_FUNC_ADDR(AnchorSide_GetSide)
    return (TAnchorSideReference)MySyscall(pAnchorSide_GetSide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(AnchorSide_SetSide)
void
AnchorSide_SetSide(TAnchorSide AObj, TAnchorSideReference AValue) {
    GET_FUNC_ADDR(AnchorSide_SetSide)
    MySyscall(pAnchorSide_SetSide, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(AnchorSide_StaticClassType)
TClass
AnchorSide_StaticClassType() {
    GET_FUNC_ADDR(AnchorSide_StaticClassType)
    return (TClass)MySyscall(pAnchorSide_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TControlBorderSpacing-------------------

DEFINE_FUNC_PTR(ControlBorderSpacing_Assign)
void
ControlBorderSpacing_Assign(TControlBorderSpacing AObj, TObject Source) {
    GET_FUNC_ADDR(ControlBorderSpacing_Assign)
    MySyscall(pControlBorderSpacing_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_GetNamePath)
char*
ControlBorderSpacing_GetNamePath(TControlBorderSpacing AObj) {
    GET_FUNC_ADDR(ControlBorderSpacing_GetNamePath)
    return (char*)MySyscall(pControlBorderSpacing_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_ClassType)
TClass
ControlBorderSpacing_ClassType(TControlBorderSpacing AObj) {
    GET_FUNC_ADDR(ControlBorderSpacing_ClassType)
    return (TClass)MySyscall(pControlBorderSpacing_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_ClassName)
char*
ControlBorderSpacing_ClassName(TControlBorderSpacing AObj) {
    GET_FUNC_ADDR(ControlBorderSpacing_ClassName)
    return (char*)MySyscall(pControlBorderSpacing_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_InstanceSize)
int32_t
ControlBorderSpacing_InstanceSize(TControlBorderSpacing AObj) {
    GET_FUNC_ADDR(ControlBorderSpacing_InstanceSize)
    return (int32_t)MySyscall(pControlBorderSpacing_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_InheritsFrom)
BOOL
ControlBorderSpacing_InheritsFrom(TControlBorderSpacing AObj, TClass AClass) {
    GET_FUNC_ADDR(ControlBorderSpacing_InheritsFrom)
    return (BOOL)MySyscall(pControlBorderSpacing_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_Equals)
BOOL
ControlBorderSpacing_Equals(TControlBorderSpacing AObj, TObject Obj) {
    GET_FUNC_ADDR(ControlBorderSpacing_Equals)
    return (BOOL)MySyscall(pControlBorderSpacing_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_GetHashCode)
int32_t
ControlBorderSpacing_GetHashCode(TControlBorderSpacing AObj) {
    GET_FUNC_ADDR(ControlBorderSpacing_GetHashCode)
    return (int32_t)MySyscall(pControlBorderSpacing_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_ToString)
char*
ControlBorderSpacing_ToString(TControlBorderSpacing AObj) {
    GET_FUNC_ADDR(ControlBorderSpacing_ToString)
    return (char*)MySyscall(pControlBorderSpacing_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_GetControl)
TControl
ControlBorderSpacing_GetControl(TControlBorderSpacing AObj) {
    GET_FUNC_ADDR(ControlBorderSpacing_GetControl)
    return (TControl)MySyscall(pControlBorderSpacing_GetControl, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_GetAroundLeft)
int32_t
ControlBorderSpacing_GetAroundLeft(TControlBorderSpacing AObj) {
    GET_FUNC_ADDR(ControlBorderSpacing_GetAroundLeft)
    return (int32_t)MySyscall(pControlBorderSpacing_GetAroundLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_GetAroundTop)
int32_t
ControlBorderSpacing_GetAroundTop(TControlBorderSpacing AObj) {
    GET_FUNC_ADDR(ControlBorderSpacing_GetAroundTop)
    return (int32_t)MySyscall(pControlBorderSpacing_GetAroundTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_GetAroundRight)
int32_t
ControlBorderSpacing_GetAroundRight(TControlBorderSpacing AObj) {
    GET_FUNC_ADDR(ControlBorderSpacing_GetAroundRight)
    return (int32_t)MySyscall(pControlBorderSpacing_GetAroundRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_GetAroundBottom)
int32_t
ControlBorderSpacing_GetAroundBottom(TControlBorderSpacing AObj) {
    GET_FUNC_ADDR(ControlBorderSpacing_GetAroundBottom)
    return (int32_t)MySyscall(pControlBorderSpacing_GetAroundBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_GetControlLeft)
int32_t
ControlBorderSpacing_GetControlLeft(TControlBorderSpacing AObj) {
    GET_FUNC_ADDR(ControlBorderSpacing_GetControlLeft)
    return (int32_t)MySyscall(pControlBorderSpacing_GetControlLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_GetControlTop)
int32_t
ControlBorderSpacing_GetControlTop(TControlBorderSpacing AObj) {
    GET_FUNC_ADDR(ControlBorderSpacing_GetControlTop)
    return (int32_t)MySyscall(pControlBorderSpacing_GetControlTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_GetControlWidth)
int32_t
ControlBorderSpacing_GetControlWidth(TControlBorderSpacing AObj) {
    GET_FUNC_ADDR(ControlBorderSpacing_GetControlWidth)
    return (int32_t)MySyscall(pControlBorderSpacing_GetControlWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_GetControlHeight)
int32_t
ControlBorderSpacing_GetControlHeight(TControlBorderSpacing AObj) {
    GET_FUNC_ADDR(ControlBorderSpacing_GetControlHeight)
    return (int32_t)MySyscall(pControlBorderSpacing_GetControlHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_GetControlRight)
int32_t
ControlBorderSpacing_GetControlRight(TControlBorderSpacing AObj) {
    GET_FUNC_ADDR(ControlBorderSpacing_GetControlRight)
    return (int32_t)MySyscall(pControlBorderSpacing_GetControlRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_GetControlBottom)
int32_t
ControlBorderSpacing_GetControlBottom(TControlBorderSpacing AObj) {
    GET_FUNC_ADDR(ControlBorderSpacing_GetControlBottom)
    return (int32_t)MySyscall(pControlBorderSpacing_GetControlBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_SetOnChange)
void
ControlBorderSpacing_SetOnChange(TControlBorderSpacing AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ControlBorderSpacing_SetOnChange)
    MySyscall(pControlBorderSpacing_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_GetLeft)
int32_t
ControlBorderSpacing_GetLeft(TControlBorderSpacing AObj) {
    GET_FUNC_ADDR(ControlBorderSpacing_GetLeft)
    return (int32_t)MySyscall(pControlBorderSpacing_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_SetLeft)
void
ControlBorderSpacing_SetLeft(TControlBorderSpacing AObj, int32_t AValue) {
    GET_FUNC_ADDR(ControlBorderSpacing_SetLeft)
    MySyscall(pControlBorderSpacing_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_GetTop)
int32_t
ControlBorderSpacing_GetTop(TControlBorderSpacing AObj) {
    GET_FUNC_ADDR(ControlBorderSpacing_GetTop)
    return (int32_t)MySyscall(pControlBorderSpacing_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_SetTop)
void
ControlBorderSpacing_SetTop(TControlBorderSpacing AObj, int32_t AValue) {
    GET_FUNC_ADDR(ControlBorderSpacing_SetTop)
    MySyscall(pControlBorderSpacing_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_GetRight)
int32_t
ControlBorderSpacing_GetRight(TControlBorderSpacing AObj) {
    GET_FUNC_ADDR(ControlBorderSpacing_GetRight)
    return (int32_t)MySyscall(pControlBorderSpacing_GetRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_SetRight)
void
ControlBorderSpacing_SetRight(TControlBorderSpacing AObj, int32_t AValue) {
    GET_FUNC_ADDR(ControlBorderSpacing_SetRight)
    MySyscall(pControlBorderSpacing_SetRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_GetBottom)
int32_t
ControlBorderSpacing_GetBottom(TControlBorderSpacing AObj) {
    GET_FUNC_ADDR(ControlBorderSpacing_GetBottom)
    return (int32_t)MySyscall(pControlBorderSpacing_GetBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_SetBottom)
void
ControlBorderSpacing_SetBottom(TControlBorderSpacing AObj, int32_t AValue) {
    GET_FUNC_ADDR(ControlBorderSpacing_SetBottom)
    MySyscall(pControlBorderSpacing_SetBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_GetAround)
int32_t
ControlBorderSpacing_GetAround(TControlBorderSpacing AObj) {
    GET_FUNC_ADDR(ControlBorderSpacing_GetAround)
    return (int32_t)MySyscall(pControlBorderSpacing_GetAround, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_SetAround)
void
ControlBorderSpacing_SetAround(TControlBorderSpacing AObj, int32_t AValue) {
    GET_FUNC_ADDR(ControlBorderSpacing_SetAround)
    MySyscall(pControlBorderSpacing_SetAround, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_GetInnerBorder)
int32_t
ControlBorderSpacing_GetInnerBorder(TControlBorderSpacing AObj) {
    GET_FUNC_ADDR(ControlBorderSpacing_GetInnerBorder)
    return (int32_t)MySyscall(pControlBorderSpacing_GetInnerBorder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_SetInnerBorder)
void
ControlBorderSpacing_SetInnerBorder(TControlBorderSpacing AObj, int32_t AValue) {
    GET_FUNC_ADDR(ControlBorderSpacing_SetInnerBorder)
    MySyscall(pControlBorderSpacing_SetInnerBorder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_GetCellAlignHorizontal)
TControlCellAlign
ControlBorderSpacing_GetCellAlignHorizontal(TControlBorderSpacing AObj) {
    GET_FUNC_ADDR(ControlBorderSpacing_GetCellAlignHorizontal)
    return (TControlCellAlign)MySyscall(pControlBorderSpacing_GetCellAlignHorizontal, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_SetCellAlignHorizontal)
void
ControlBorderSpacing_SetCellAlignHorizontal(TControlBorderSpacing AObj, TControlCellAlign AValue) {
    GET_FUNC_ADDR(ControlBorderSpacing_SetCellAlignHorizontal)
    MySyscall(pControlBorderSpacing_SetCellAlignHorizontal, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_GetCellAlignVertical)
TControlCellAlign
ControlBorderSpacing_GetCellAlignVertical(TControlBorderSpacing AObj) {
    GET_FUNC_ADDR(ControlBorderSpacing_GetCellAlignVertical)
    return (TControlCellAlign)MySyscall(pControlBorderSpacing_GetCellAlignVertical, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_SetCellAlignVertical)
void
ControlBorderSpacing_SetCellAlignVertical(TControlBorderSpacing AObj, TControlCellAlign AValue) {
    GET_FUNC_ADDR(ControlBorderSpacing_SetCellAlignVertical)
    MySyscall(pControlBorderSpacing_SetCellAlignVertical, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_GetSpace)
int32_t
ControlBorderSpacing_GetSpace(TControlBorderSpacing AObj, TAnchorKind Kind) {
    GET_FUNC_ADDR(ControlBorderSpacing_GetSpace)
    return (int32_t)MySyscall(pControlBorderSpacing_GetSpace, 2, AObj, Kind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_SetSpace)
void
ControlBorderSpacing_SetSpace(TControlBorderSpacing AObj, TAnchorKind Kind, int32_t AValue) {
    GET_FUNC_ADDR(ControlBorderSpacing_SetSpace)
    MySyscall(pControlBorderSpacing_SetSpace, 3, AObj, Kind, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlBorderSpacing_StaticClassType)
TClass
ControlBorderSpacing_StaticClassType() {
    GET_FUNC_ADDR(ControlBorderSpacing_StaticClassType)
    return (TClass)MySyscall(pControlBorderSpacing_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TControlChildSizing-------------------

DEFINE_FUNC_PTR(ControlChildSizing_Assign)
void
ControlChildSizing_Assign(TControlChildSizing AObj, TObject Source) {
    GET_FUNC_ADDR(ControlChildSizing_Assign)
    MySyscall(pControlChildSizing_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_GetNamePath)
char*
ControlChildSizing_GetNamePath(TControlChildSizing AObj) {
    GET_FUNC_ADDR(ControlChildSizing_GetNamePath)
    return (char*)MySyscall(pControlChildSizing_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_ClassType)
TClass
ControlChildSizing_ClassType(TControlChildSizing AObj) {
    GET_FUNC_ADDR(ControlChildSizing_ClassType)
    return (TClass)MySyscall(pControlChildSizing_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_ClassName)
char*
ControlChildSizing_ClassName(TControlChildSizing AObj) {
    GET_FUNC_ADDR(ControlChildSizing_ClassName)
    return (char*)MySyscall(pControlChildSizing_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_InstanceSize)
int32_t
ControlChildSizing_InstanceSize(TControlChildSizing AObj) {
    GET_FUNC_ADDR(ControlChildSizing_InstanceSize)
    return (int32_t)MySyscall(pControlChildSizing_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_InheritsFrom)
BOOL
ControlChildSizing_InheritsFrom(TControlChildSizing AObj, TClass AClass) {
    GET_FUNC_ADDR(ControlChildSizing_InheritsFrom)
    return (BOOL)MySyscall(pControlChildSizing_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_Equals)
BOOL
ControlChildSizing_Equals(TControlChildSizing AObj, TObject Obj) {
    GET_FUNC_ADDR(ControlChildSizing_Equals)
    return (BOOL)MySyscall(pControlChildSizing_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_GetHashCode)
int32_t
ControlChildSizing_GetHashCode(TControlChildSizing AObj) {
    GET_FUNC_ADDR(ControlChildSizing_GetHashCode)
    return (int32_t)MySyscall(pControlChildSizing_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_ToString)
char*
ControlChildSizing_ToString(TControlChildSizing AObj) {
    GET_FUNC_ADDR(ControlChildSizing_ToString)
    return (char*)MySyscall(pControlChildSizing_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_GetControl)
TWinControl
ControlChildSizing_GetControl(TControlChildSizing AObj) {
    GET_FUNC_ADDR(ControlChildSizing_GetControl)
    return (TWinControl)MySyscall(pControlChildSizing_GetControl, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_SetOnChange)
void
ControlChildSizing_SetOnChange(TControlChildSizing AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ControlChildSizing_SetOnChange)
    MySyscall(pControlChildSizing_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_GetLeftRightSpacing)
int32_t
ControlChildSizing_GetLeftRightSpacing(TControlChildSizing AObj) {
    GET_FUNC_ADDR(ControlChildSizing_GetLeftRightSpacing)
    return (int32_t)MySyscall(pControlChildSizing_GetLeftRightSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_SetLeftRightSpacing)
void
ControlChildSizing_SetLeftRightSpacing(TControlChildSizing AObj, int32_t AValue) {
    GET_FUNC_ADDR(ControlChildSizing_SetLeftRightSpacing)
    MySyscall(pControlChildSizing_SetLeftRightSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_GetTopBottomSpacing)
int32_t
ControlChildSizing_GetTopBottomSpacing(TControlChildSizing AObj) {
    GET_FUNC_ADDR(ControlChildSizing_GetTopBottomSpacing)
    return (int32_t)MySyscall(pControlChildSizing_GetTopBottomSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_SetTopBottomSpacing)
void
ControlChildSizing_SetTopBottomSpacing(TControlChildSizing AObj, int32_t AValue) {
    GET_FUNC_ADDR(ControlChildSizing_SetTopBottomSpacing)
    MySyscall(pControlChildSizing_SetTopBottomSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_GetHorizontalSpacing)
int32_t
ControlChildSizing_GetHorizontalSpacing(TControlChildSizing AObj) {
    GET_FUNC_ADDR(ControlChildSizing_GetHorizontalSpacing)
    return (int32_t)MySyscall(pControlChildSizing_GetHorizontalSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_SetHorizontalSpacing)
void
ControlChildSizing_SetHorizontalSpacing(TControlChildSizing AObj, int32_t AValue) {
    GET_FUNC_ADDR(ControlChildSizing_SetHorizontalSpacing)
    MySyscall(pControlChildSizing_SetHorizontalSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_GetVerticalSpacing)
int32_t
ControlChildSizing_GetVerticalSpacing(TControlChildSizing AObj) {
    GET_FUNC_ADDR(ControlChildSizing_GetVerticalSpacing)
    return (int32_t)MySyscall(pControlChildSizing_GetVerticalSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_SetVerticalSpacing)
void
ControlChildSizing_SetVerticalSpacing(TControlChildSizing AObj, int32_t AValue) {
    GET_FUNC_ADDR(ControlChildSizing_SetVerticalSpacing)
    MySyscall(pControlChildSizing_SetVerticalSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_GetEnlargeHorizontal)
TChildControlResizeStyle
ControlChildSizing_GetEnlargeHorizontal(TControlChildSizing AObj) {
    GET_FUNC_ADDR(ControlChildSizing_GetEnlargeHorizontal)
    return (TChildControlResizeStyle)MySyscall(pControlChildSizing_GetEnlargeHorizontal, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_SetEnlargeHorizontal)
void
ControlChildSizing_SetEnlargeHorizontal(TControlChildSizing AObj, TChildControlResizeStyle AValue) {
    GET_FUNC_ADDR(ControlChildSizing_SetEnlargeHorizontal)
    MySyscall(pControlChildSizing_SetEnlargeHorizontal, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_GetEnlargeVertical)
TChildControlResizeStyle
ControlChildSizing_GetEnlargeVertical(TControlChildSizing AObj) {
    GET_FUNC_ADDR(ControlChildSizing_GetEnlargeVertical)
    return (TChildControlResizeStyle)MySyscall(pControlChildSizing_GetEnlargeVertical, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_SetEnlargeVertical)
void
ControlChildSizing_SetEnlargeVertical(TControlChildSizing AObj, TChildControlResizeStyle AValue) {
    GET_FUNC_ADDR(ControlChildSizing_SetEnlargeVertical)
    MySyscall(pControlChildSizing_SetEnlargeVertical, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_GetShrinkHorizontal)
TChildControlResizeStyle
ControlChildSizing_GetShrinkHorizontal(TControlChildSizing AObj) {
    GET_FUNC_ADDR(ControlChildSizing_GetShrinkHorizontal)
    return (TChildControlResizeStyle)MySyscall(pControlChildSizing_GetShrinkHorizontal, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_SetShrinkHorizontal)
void
ControlChildSizing_SetShrinkHorizontal(TControlChildSizing AObj, TChildControlResizeStyle AValue) {
    GET_FUNC_ADDR(ControlChildSizing_SetShrinkHorizontal)
    MySyscall(pControlChildSizing_SetShrinkHorizontal, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_GetShrinkVertical)
TChildControlResizeStyle
ControlChildSizing_GetShrinkVertical(TControlChildSizing AObj) {
    GET_FUNC_ADDR(ControlChildSizing_GetShrinkVertical)
    return (TChildControlResizeStyle)MySyscall(pControlChildSizing_GetShrinkVertical, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_SetShrinkVertical)
void
ControlChildSizing_SetShrinkVertical(TControlChildSizing AObj, TChildControlResizeStyle AValue) {
    GET_FUNC_ADDR(ControlChildSizing_SetShrinkVertical)
    MySyscall(pControlChildSizing_SetShrinkVertical, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_GetLayout)
TControlChildrenLayout
ControlChildSizing_GetLayout(TControlChildSizing AObj) {
    GET_FUNC_ADDR(ControlChildSizing_GetLayout)
    return (TControlChildrenLayout)MySyscall(pControlChildSizing_GetLayout, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_SetLayout)
void
ControlChildSizing_SetLayout(TControlChildSizing AObj, TControlChildrenLayout AValue) {
    GET_FUNC_ADDR(ControlChildSizing_SetLayout)
    MySyscall(pControlChildSizing_SetLayout, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_GetControlsPerLine)
int32_t
ControlChildSizing_GetControlsPerLine(TControlChildSizing AObj) {
    GET_FUNC_ADDR(ControlChildSizing_GetControlsPerLine)
    return (int32_t)MySyscall(pControlChildSizing_GetControlsPerLine, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_SetControlsPerLine)
void
ControlChildSizing_SetControlsPerLine(TControlChildSizing AObj, int32_t AValue) {
    GET_FUNC_ADDR(ControlChildSizing_SetControlsPerLine)
    MySyscall(pControlChildSizing_SetControlsPerLine, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ControlChildSizing_StaticClassType)
TClass
ControlChildSizing_StaticClassType() {
    GET_FUNC_ADDR(ControlChildSizing_StaticClassType)
    return (TClass)MySyscall(pControlChildSizing_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TCheckGroup-------------------

DEFINE_FUNC_PTR(CheckGroup_Create)
TCheckGroup
CheckGroup_Create(TComponent AOwner) {
    GET_FUNC_ADDR(CheckGroup_Create)
    return (TCheckGroup)MySyscall(pCheckGroup_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_Free)
void
CheckGroup_Free(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_Free)
    MySyscall(pCheckGroup_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_FlipChildren)
void
CheckGroup_FlipChildren(TCheckGroup AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(CheckGroup_FlipChildren)
    MySyscall(pCheckGroup_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_Rows)
int32_t
CheckGroup_Rows(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_Rows)
    return (int32_t)MySyscall(pCheckGroup_Rows, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_CanFocus)
BOOL
CheckGroup_CanFocus(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_CanFocus)
    return (BOOL)MySyscall(pCheckGroup_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_ContainsControl)
BOOL
CheckGroup_ContainsControl(TCheckGroup AObj, TControl Control) {
    GET_FUNC_ADDR(CheckGroup_ContainsControl)
    return (BOOL)MySyscall(pCheckGroup_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_ControlAtPos)
TControl
CheckGroup_ControlAtPos(TCheckGroup AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(CheckGroup_ControlAtPos)
    return (TControl)MySyscall(pCheckGroup_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_DisableAlign)
void
CheckGroup_DisableAlign(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_DisableAlign)
    MySyscall(pCheckGroup_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_EnableAlign)
void
CheckGroup_EnableAlign(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_EnableAlign)
    MySyscall(pCheckGroup_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_FindChildControl)
TControl
CheckGroup_FindChildControl(TCheckGroup AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(CheckGroup_FindChildControl)
    return (TControl)MySyscall(pCheckGroup_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_Focused)
BOOL
CheckGroup_Focused(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_Focused)
    return (BOOL)MySyscall(pCheckGroup_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_HandleAllocated)
BOOL
CheckGroup_HandleAllocated(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_HandleAllocated)
    return (BOOL)MySyscall(pCheckGroup_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_InsertControl)
void
CheckGroup_InsertControl(TCheckGroup AObj, TControl AControl) {
    GET_FUNC_ADDR(CheckGroup_InsertControl)
    MySyscall(pCheckGroup_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_Invalidate)
void
CheckGroup_Invalidate(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_Invalidate)
    MySyscall(pCheckGroup_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_PaintTo)
void
CheckGroup_PaintTo(TCheckGroup AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(CheckGroup_PaintTo)
    MySyscall(pCheckGroup_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_RemoveControl)
void
CheckGroup_RemoveControl(TCheckGroup AObj, TControl AControl) {
    GET_FUNC_ADDR(CheckGroup_RemoveControl)
    MySyscall(pCheckGroup_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_Realign)
void
CheckGroup_Realign(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_Realign)
    MySyscall(pCheckGroup_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_Repaint)
void
CheckGroup_Repaint(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_Repaint)
    MySyscall(pCheckGroup_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_ScaleBy)
void
CheckGroup_ScaleBy(TCheckGroup AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(CheckGroup_ScaleBy)
    MySyscall(pCheckGroup_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_ScrollBy)
void
CheckGroup_ScrollBy(TCheckGroup AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(CheckGroup_ScrollBy)
    MySyscall(pCheckGroup_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetBounds)
void
CheckGroup_SetBounds(TCheckGroup AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(CheckGroup_SetBounds)
    MySyscall(pCheckGroup_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetFocus)
void
CheckGroup_SetFocus(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_SetFocus)
    MySyscall(pCheckGroup_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_Update)
void
CheckGroup_Update(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_Update)
    MySyscall(pCheckGroup_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_BringToFront)
void
CheckGroup_BringToFront(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_BringToFront)
    MySyscall(pCheckGroup_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_ClientToScreen)
TPoint
CheckGroup_ClientToScreen(TCheckGroup AObj, TPoint Point) {
    GET_FUNC_ADDR(CheckGroup_ClientToScreen)
    TPoint result;
    MySyscall(pCheckGroup_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckGroup_ClientToParent)
TPoint
CheckGroup_ClientToParent(TCheckGroup AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(CheckGroup_ClientToParent)
    TPoint result;
    MySyscall(pCheckGroup_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckGroup_Dragging)
BOOL
CheckGroup_Dragging(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_Dragging)
    return (BOOL)MySyscall(pCheckGroup_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_HasParent)
BOOL
CheckGroup_HasParent(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_HasParent)
    return (BOOL)MySyscall(pCheckGroup_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_Hide)
void
CheckGroup_Hide(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_Hide)
    MySyscall(pCheckGroup_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_Perform)
intptr_t
CheckGroup_Perform(TCheckGroup AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(CheckGroup_Perform)
    return (intptr_t)MySyscall(pCheckGroup_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_Refresh)
void
CheckGroup_Refresh(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_Refresh)
    MySyscall(pCheckGroup_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_ScreenToClient)
TPoint
CheckGroup_ScreenToClient(TCheckGroup AObj, TPoint Point) {
    GET_FUNC_ADDR(CheckGroup_ScreenToClient)
    TPoint result;
    MySyscall(pCheckGroup_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckGroup_ParentToClient)
TPoint
CheckGroup_ParentToClient(TCheckGroup AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(CheckGroup_ParentToClient)
    TPoint result;
    MySyscall(pCheckGroup_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckGroup_SendToBack)
void
CheckGroup_SendToBack(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_SendToBack)
    MySyscall(pCheckGroup_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_Show)
void
CheckGroup_Show(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_Show)
    MySyscall(pCheckGroup_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetTextBuf)
int32_t
CheckGroup_GetTextBuf(TCheckGroup AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(CheckGroup_GetTextBuf)
    return (int32_t)MySyscall(pCheckGroup_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetTextLen)
int32_t
CheckGroup_GetTextLen(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetTextLen)
    return (int32_t)MySyscall(pCheckGroup_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetTextBuf)
void
CheckGroup_SetTextBuf(TCheckGroup AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(CheckGroup_SetTextBuf)
    MySyscall(pCheckGroup_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_FindComponent)
TComponent
CheckGroup_FindComponent(TCheckGroup AObj, CChar char* AName) {
    GET_FUNC_ADDR(CheckGroup_FindComponent)
    return (TComponent)MySyscall(pCheckGroup_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetNamePath)
char*
CheckGroup_GetNamePath(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetNamePath)
    return (char*)MySyscall(pCheckGroup_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_Assign)
void
CheckGroup_Assign(TCheckGroup AObj, TObject Source) {
    GET_FUNC_ADDR(CheckGroup_Assign)
    MySyscall(pCheckGroup_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_ClassType)
TClass
CheckGroup_ClassType(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_ClassType)
    return (TClass)MySyscall(pCheckGroup_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_ClassName)
char*
CheckGroup_ClassName(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_ClassName)
    return (char*)MySyscall(pCheckGroup_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_InstanceSize)
int32_t
CheckGroup_InstanceSize(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_InstanceSize)
    return (int32_t)MySyscall(pCheckGroup_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_InheritsFrom)
BOOL
CheckGroup_InheritsFrom(TCheckGroup AObj, TClass AClass) {
    GET_FUNC_ADDR(CheckGroup_InheritsFrom)
    return (BOOL)MySyscall(pCheckGroup_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_Equals)
BOOL
CheckGroup_Equals(TCheckGroup AObj, TObject Obj) {
    GET_FUNC_ADDR(CheckGroup_Equals)
    return (BOOL)MySyscall(pCheckGroup_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetHashCode)
int32_t
CheckGroup_GetHashCode(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetHashCode)
    return (int32_t)MySyscall(pCheckGroup_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_ToString)
char*
CheckGroup_ToString(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_ToString)
    return (char*)MySyscall(pCheckGroup_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_AnchorToNeighbour)
void
CheckGroup_AnchorToNeighbour(TCheckGroup AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(CheckGroup_AnchorToNeighbour)
    MySyscall(pCheckGroup_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_AnchorParallel)
void
CheckGroup_AnchorParallel(TCheckGroup AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(CheckGroup_AnchorParallel)
    MySyscall(pCheckGroup_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_AnchorHorizontalCenterTo)
void
CheckGroup_AnchorHorizontalCenterTo(TCheckGroup AObj, TControl ASibling) {
    GET_FUNC_ADDR(CheckGroup_AnchorHorizontalCenterTo)
    MySyscall(pCheckGroup_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_AnchorVerticalCenterTo)
void
CheckGroup_AnchorVerticalCenterTo(TCheckGroup AObj, TControl ASibling) {
    GET_FUNC_ADDR(CheckGroup_AnchorVerticalCenterTo)
    MySyscall(pCheckGroup_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_AnchorSame)
void
CheckGroup_AnchorSame(TCheckGroup AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(CheckGroup_AnchorSame)
    MySyscall(pCheckGroup_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_AnchorAsAlign)
void
CheckGroup_AnchorAsAlign(TCheckGroup AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(CheckGroup_AnchorAsAlign)
    MySyscall(pCheckGroup_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_AnchorClient)
void
CheckGroup_AnchorClient(TCheckGroup AObj, int32_t ASpace) {
    GET_FUNC_ADDR(CheckGroup_AnchorClient)
    MySyscall(pCheckGroup_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_ScaleDesignToForm)
int32_t
CheckGroup_ScaleDesignToForm(TCheckGroup AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckGroup_ScaleDesignToForm)
    return (int32_t)MySyscall(pCheckGroup_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_ScaleFormToDesign)
int32_t
CheckGroup_ScaleFormToDesign(TCheckGroup AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckGroup_ScaleFormToDesign)
    return (int32_t)MySyscall(pCheckGroup_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_Scale96ToForm)
int32_t
CheckGroup_Scale96ToForm(TCheckGroup AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckGroup_Scale96ToForm)
    return (int32_t)MySyscall(pCheckGroup_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_ScaleFormTo96)
int32_t
CheckGroup_ScaleFormTo96(TCheckGroup AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckGroup_ScaleFormTo96)
    return (int32_t)MySyscall(pCheckGroup_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_Scale96ToFont)
int32_t
CheckGroup_Scale96ToFont(TCheckGroup AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckGroup_Scale96ToFont)
    return (int32_t)MySyscall(pCheckGroup_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_ScaleFontTo96)
int32_t
CheckGroup_ScaleFontTo96(TCheckGroup AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckGroup_ScaleFontTo96)
    return (int32_t)MySyscall(pCheckGroup_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_ScaleScreenToFont)
int32_t
CheckGroup_ScaleScreenToFont(TCheckGroup AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckGroup_ScaleScreenToFont)
    return (int32_t)MySyscall(pCheckGroup_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_ScaleFontToScreen)
int32_t
CheckGroup_ScaleFontToScreen(TCheckGroup AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckGroup_ScaleFontToScreen)
    return (int32_t)MySyscall(pCheckGroup_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_Scale96ToScreen)
int32_t
CheckGroup_Scale96ToScreen(TCheckGroup AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckGroup_Scale96ToScreen)
    return (int32_t)MySyscall(pCheckGroup_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_ScaleScreenTo96)
int32_t
CheckGroup_ScaleScreenTo96(TCheckGroup AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckGroup_ScaleScreenTo96)
    return (int32_t)MySyscall(pCheckGroup_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_AutoAdjustLayout)
void
CheckGroup_AutoAdjustLayout(TCheckGroup AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(CheckGroup_AutoAdjustLayout)
    MySyscall(pCheckGroup_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_FixDesignFontsPPI)
void
CheckGroup_FixDesignFontsPPI(TCheckGroup AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(CheckGroup_FixDesignFontsPPI)
    MySyscall(pCheckGroup_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_ScaleFontsPPI)
void
CheckGroup_ScaleFontsPPI(TCheckGroup AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(CheckGroup_ScaleFontsPPI)
    MySyscall(pCheckGroup_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetAlign)
TAlign
CheckGroup_GetAlign(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetAlign)
    return (TAlign)MySyscall(pCheckGroup_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetAlign)
void
CheckGroup_SetAlign(TCheckGroup AObj, TAlign AValue) {
    GET_FUNC_ADDR(CheckGroup_SetAlign)
    MySyscall(pCheckGroup_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetAnchors)
TAnchors
CheckGroup_GetAnchors(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetAnchors)
    return (TAnchors)MySyscall(pCheckGroup_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetAnchors)
void
CheckGroup_SetAnchors(TCheckGroup AObj, TAnchors AValue) {
    GET_FUNC_ADDR(CheckGroup_SetAnchors)
    MySyscall(pCheckGroup_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetAutoFill)
BOOL
CheckGroup_GetAutoFill(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetAutoFill)
    return (BOOL)MySyscall(pCheckGroup_GetAutoFill, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetAutoFill)
void
CheckGroup_SetAutoFill(TCheckGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckGroup_SetAutoFill)
    MySyscall(pCheckGroup_SetAutoFill, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetAutoSize)
BOOL
CheckGroup_GetAutoSize(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetAutoSize)
    return (BOOL)MySyscall(pCheckGroup_GetAutoSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetAutoSize)
void
CheckGroup_SetAutoSize(TCheckGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckGroup_SetAutoSize)
    MySyscall(pCheckGroup_SetAutoSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetBiDiMode)
TBiDiMode
CheckGroup_GetBiDiMode(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetBiDiMode)
    return (TBiDiMode)MySyscall(pCheckGroup_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetBiDiMode)
void
CheckGroup_SetBiDiMode(TCheckGroup AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(CheckGroup_SetBiDiMode)
    MySyscall(pCheckGroup_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetCaption)
char*
CheckGroup_GetCaption(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetCaption)
    return (char*)MySyscall(pCheckGroup_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetCaption)
void
CheckGroup_SetCaption(TCheckGroup AObj, CChar char* AValue) {
    GET_FUNC_ADDR(CheckGroup_SetCaption)
    MySyscall(pCheckGroup_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetClientHeight)
int32_t
CheckGroup_GetClientHeight(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetClientHeight)
    return (int32_t)MySyscall(pCheckGroup_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetClientHeight)
void
CheckGroup_SetClientHeight(TCheckGroup AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckGroup_SetClientHeight)
    MySyscall(pCheckGroup_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetClientWidth)
int32_t
CheckGroup_GetClientWidth(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetClientWidth)
    return (int32_t)MySyscall(pCheckGroup_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetClientWidth)
void
CheckGroup_SetClientWidth(TCheckGroup AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckGroup_SetClientWidth)
    MySyscall(pCheckGroup_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetColor)
TColor
CheckGroup_GetColor(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetColor)
    return (TColor)MySyscall(pCheckGroup_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetColor)
void
CheckGroup_SetColor(TCheckGroup AObj, TColor AValue) {
    GET_FUNC_ADDR(CheckGroup_SetColor)
    MySyscall(pCheckGroup_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetColumnLayout)
TColumnLayout
CheckGroup_GetColumnLayout(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetColumnLayout)
    return (TColumnLayout)MySyscall(pCheckGroup_GetColumnLayout, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetColumnLayout)
void
CheckGroup_SetColumnLayout(TCheckGroup AObj, TColumnLayout AValue) {
    GET_FUNC_ADDR(CheckGroup_SetColumnLayout)
    MySyscall(pCheckGroup_SetColumnLayout, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetColumns)
int32_t
CheckGroup_GetColumns(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetColumns)
    return (int32_t)MySyscall(pCheckGroup_GetColumns, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetColumns)
void
CheckGroup_SetColumns(TCheckGroup AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckGroup_SetColumns)
    MySyscall(pCheckGroup_SetColumns, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetConstraints)
TSizeConstraints
CheckGroup_GetConstraints(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetConstraints)
    return (TSizeConstraints)MySyscall(pCheckGroup_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetConstraints)
void
CheckGroup_SetConstraints(TCheckGroup AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(CheckGroup_SetConstraints)
    MySyscall(pCheckGroup_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetDoubleBuffered)
BOOL
CheckGroup_GetDoubleBuffered(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetDoubleBuffered)
    return (BOOL)MySyscall(pCheckGroup_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetDoubleBuffered)
void
CheckGroup_SetDoubleBuffered(TCheckGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckGroup_SetDoubleBuffered)
    MySyscall(pCheckGroup_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetDragCursor)
TCursor
CheckGroup_GetDragCursor(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetDragCursor)
    return (TCursor)MySyscall(pCheckGroup_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetDragCursor)
void
CheckGroup_SetDragCursor(TCheckGroup AObj, TCursor AValue) {
    GET_FUNC_ADDR(CheckGroup_SetDragCursor)
    MySyscall(pCheckGroup_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetDragMode)
TDragMode
CheckGroup_GetDragMode(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetDragMode)
    return (TDragMode)MySyscall(pCheckGroup_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetDragMode)
void
CheckGroup_SetDragMode(TCheckGroup AObj, TDragMode AValue) {
    GET_FUNC_ADDR(CheckGroup_SetDragMode)
    MySyscall(pCheckGroup_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetEnabled)
BOOL
CheckGroup_GetEnabled(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetEnabled)
    return (BOOL)MySyscall(pCheckGroup_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetEnabled)
void
CheckGroup_SetEnabled(TCheckGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckGroup_SetEnabled)
    MySyscall(pCheckGroup_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetFont)
TFont
CheckGroup_GetFont(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetFont)
    return (TFont)MySyscall(pCheckGroup_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetFont)
void
CheckGroup_SetFont(TCheckGroup AObj, TFont AValue) {
    GET_FUNC_ADDR(CheckGroup_SetFont)
    MySyscall(pCheckGroup_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetItems)
TStrings
CheckGroup_GetItems(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetItems)
    return (TStrings)MySyscall(pCheckGroup_GetItems, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetItems)
void
CheckGroup_SetItems(TCheckGroup AObj, TStrings AValue) {
    GET_FUNC_ADDR(CheckGroup_SetItems)
    MySyscall(pCheckGroup_SetItems, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetOnClick)
void
CheckGroup_SetOnClick(TCheckGroup AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckGroup_SetOnClick)
    MySyscall(pCheckGroup_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetOnDblClick)
void
CheckGroup_SetOnDblClick(TCheckGroup AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckGroup_SetOnDblClick)
    MySyscall(pCheckGroup_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetOnDragDrop)
void
CheckGroup_SetOnDragDrop(TCheckGroup AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(CheckGroup_SetOnDragDrop)
    MySyscall(pCheckGroup_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetOnDragOver)
void
CheckGroup_SetOnDragOver(TCheckGroup AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(CheckGroup_SetOnDragOver)
    MySyscall(pCheckGroup_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetOnEndDrag)
void
CheckGroup_SetOnEndDrag(TCheckGroup AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(CheckGroup_SetOnEndDrag)
    MySyscall(pCheckGroup_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetOnEnter)
void
CheckGroup_SetOnEnter(TCheckGroup AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckGroup_SetOnEnter)
    MySyscall(pCheckGroup_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetOnExit)
void
CheckGroup_SetOnExit(TCheckGroup AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckGroup_SetOnExit)
    MySyscall(pCheckGroup_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetOnItemClick)
void
CheckGroup_SetOnItemClick(TCheckGroup AObj, TCheckGroupClicked AEventData) {
    GET_FUNC_ADDR(CheckGroup_SetOnItemClick)
    MySyscall(pCheckGroup_SetOnItemClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetOnKeyDown)
void
CheckGroup_SetOnKeyDown(TCheckGroup AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(CheckGroup_SetOnKeyDown)
    MySyscall(pCheckGroup_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetOnKeyPress)
void
CheckGroup_SetOnKeyPress(TCheckGroup AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(CheckGroup_SetOnKeyPress)
    MySyscall(pCheckGroup_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetOnKeyUp)
void
CheckGroup_SetOnKeyUp(TCheckGroup AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(CheckGroup_SetOnKeyUp)
    MySyscall(pCheckGroup_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetOnMouseDown)
void
CheckGroup_SetOnMouseDown(TCheckGroup AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(CheckGroup_SetOnMouseDown)
    MySyscall(pCheckGroup_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetOnMouseEnter)
void
CheckGroup_SetOnMouseEnter(TCheckGroup AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckGroup_SetOnMouseEnter)
    MySyscall(pCheckGroup_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetOnMouseLeave)
void
CheckGroup_SetOnMouseLeave(TCheckGroup AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckGroup_SetOnMouseLeave)
    MySyscall(pCheckGroup_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetOnMouseMove)
void
CheckGroup_SetOnMouseMove(TCheckGroup AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(CheckGroup_SetOnMouseMove)
    MySyscall(pCheckGroup_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetOnMouseUp)
void
CheckGroup_SetOnMouseUp(TCheckGroup AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(CheckGroup_SetOnMouseUp)
    MySyscall(pCheckGroup_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetOnMouseWheel)
void
CheckGroup_SetOnMouseWheel(TCheckGroup AObj, TMouseWheelEvent AEventData) {
    GET_FUNC_ADDR(CheckGroup_SetOnMouseWheel)
    MySyscall(pCheckGroup_SetOnMouseWheel, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetOnMouseWheelDown)
void
CheckGroup_SetOnMouseWheelDown(TCheckGroup AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(CheckGroup_SetOnMouseWheelDown)
    MySyscall(pCheckGroup_SetOnMouseWheelDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetOnMouseWheelUp)
void
CheckGroup_SetOnMouseWheelUp(TCheckGroup AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(CheckGroup_SetOnMouseWheelUp)
    MySyscall(pCheckGroup_SetOnMouseWheelUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetOnResize)
void
CheckGroup_SetOnResize(TCheckGroup AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckGroup_SetOnResize)
    MySyscall(pCheckGroup_SetOnResize, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetParentFont)
BOOL
CheckGroup_GetParentFont(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetParentFont)
    return (BOOL)MySyscall(pCheckGroup_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetParentFont)
void
CheckGroup_SetParentFont(TCheckGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckGroup_SetParentFont)
    MySyscall(pCheckGroup_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetParentColor)
BOOL
CheckGroup_GetParentColor(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetParentColor)
    return (BOOL)MySyscall(pCheckGroup_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetParentColor)
void
CheckGroup_SetParentColor(TCheckGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckGroup_SetParentColor)
    MySyscall(pCheckGroup_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetParentDoubleBuffered)
BOOL
CheckGroup_GetParentDoubleBuffered(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pCheckGroup_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetParentDoubleBuffered)
void
CheckGroup_SetParentDoubleBuffered(TCheckGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckGroup_SetParentDoubleBuffered)
    MySyscall(pCheckGroup_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetParentShowHint)
BOOL
CheckGroup_GetParentShowHint(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetParentShowHint)
    return (BOOL)MySyscall(pCheckGroup_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetParentShowHint)
void
CheckGroup_SetParentShowHint(TCheckGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckGroup_SetParentShowHint)
    MySyscall(pCheckGroup_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetPopupMenu)
TPopupMenu
CheckGroup_GetPopupMenu(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetPopupMenu)
    return (TPopupMenu)MySyscall(pCheckGroup_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetPopupMenu)
void
CheckGroup_SetPopupMenu(TCheckGroup AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(CheckGroup_SetPopupMenu)
    MySyscall(pCheckGroup_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetShowHint)
BOOL
CheckGroup_GetShowHint(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetShowHint)
    return (BOOL)MySyscall(pCheckGroup_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetShowHint)
void
CheckGroup_SetShowHint(TCheckGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckGroup_SetShowHint)
    MySyscall(pCheckGroup_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetTabOrder)
TTabOrder
CheckGroup_GetTabOrder(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetTabOrder)
    return (TTabOrder)MySyscall(pCheckGroup_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetTabOrder)
void
CheckGroup_SetTabOrder(TCheckGroup AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(CheckGroup_SetTabOrder)
    MySyscall(pCheckGroup_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetTabStop)
BOOL
CheckGroup_GetTabStop(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetTabStop)
    return (BOOL)MySyscall(pCheckGroup_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetTabStop)
void
CheckGroup_SetTabStop(TCheckGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckGroup_SetTabStop)
    MySyscall(pCheckGroup_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetVisible)
BOOL
CheckGroup_GetVisible(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetVisible)
    return (BOOL)MySyscall(pCheckGroup_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetVisible)
void
CheckGroup_SetVisible(TCheckGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckGroup_SetVisible)
    MySyscall(pCheckGroup_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetParentBackground)
BOOL
CheckGroup_GetParentBackground(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetParentBackground)
    return (BOOL)MySyscall(pCheckGroup_GetParentBackground, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetParentBackground)
void
CheckGroup_SetParentBackground(TCheckGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckGroup_SetParentBackground)
    MySyscall(pCheckGroup_SetParentBackground, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetDockClientCount)
int32_t
CheckGroup_GetDockClientCount(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetDockClientCount)
    return (int32_t)MySyscall(pCheckGroup_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetDockSite)
BOOL
CheckGroup_GetDockSite(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetDockSite)
    return (BOOL)MySyscall(pCheckGroup_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetDockSite)
void
CheckGroup_SetDockSite(TCheckGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckGroup_SetDockSite)
    MySyscall(pCheckGroup_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetMouseInClient)
BOOL
CheckGroup_GetMouseInClient(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetMouseInClient)
    return (BOOL)MySyscall(pCheckGroup_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetVisibleDockClientCount)
int32_t
CheckGroup_GetVisibleDockClientCount(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pCheckGroup_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetBrush)
TBrush
CheckGroup_GetBrush(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetBrush)
    return (TBrush)MySyscall(pCheckGroup_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetControlCount)
int32_t
CheckGroup_GetControlCount(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetControlCount)
    return (int32_t)MySyscall(pCheckGroup_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetHandle)
HWND
CheckGroup_GetHandle(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetHandle)
    return (HWND)MySyscall(pCheckGroup_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetParentWindow)
HWND
CheckGroup_GetParentWindow(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetParentWindow)
    return (HWND)MySyscall(pCheckGroup_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetParentWindow)
void
CheckGroup_SetParentWindow(TCheckGroup AObj, HWND AValue) {
    GET_FUNC_ADDR(CheckGroup_SetParentWindow)
    MySyscall(pCheckGroup_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetShowing)
BOOL
CheckGroup_GetShowing(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetShowing)
    return (BOOL)MySyscall(pCheckGroup_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetUseDockManager)
BOOL
CheckGroup_GetUseDockManager(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetUseDockManager)
    return (BOOL)MySyscall(pCheckGroup_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetUseDockManager)
void
CheckGroup_SetUseDockManager(TCheckGroup AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckGroup_SetUseDockManager)
    MySyscall(pCheckGroup_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetAction)
TAction
CheckGroup_GetAction(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetAction)
    return (TAction)MySyscall(pCheckGroup_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetAction)
void
CheckGroup_SetAction(TCheckGroup AObj, TAction AValue) {
    GET_FUNC_ADDR(CheckGroup_SetAction)
    MySyscall(pCheckGroup_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetBoundsRect)
TRect
CheckGroup_GetBoundsRect(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetBoundsRect)
    TRect result;
    MySyscall(pCheckGroup_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckGroup_SetBoundsRect)
void
CheckGroup_SetBoundsRect(TCheckGroup AObj, TRect AValue) {
    GET_FUNC_ADDR(CheckGroup_SetBoundsRect)
    MySyscall(pCheckGroup_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetClientOrigin)
TPoint
CheckGroup_GetClientOrigin(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetClientOrigin)
    TPoint result;
    MySyscall(pCheckGroup_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckGroup_GetClientRect)
TRect
CheckGroup_GetClientRect(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetClientRect)
    TRect result;
    MySyscall(pCheckGroup_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckGroup_GetControlState)
TControlState
CheckGroup_GetControlState(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetControlState)
    return (TControlState)MySyscall(pCheckGroup_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetControlState)
void
CheckGroup_SetControlState(TCheckGroup AObj, TControlState AValue) {
    GET_FUNC_ADDR(CheckGroup_SetControlState)
    MySyscall(pCheckGroup_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetControlStyle)
TControlStyle
CheckGroup_GetControlStyle(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetControlStyle)
    return (TControlStyle)MySyscall(pCheckGroup_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetControlStyle)
void
CheckGroup_SetControlStyle(TCheckGroup AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(CheckGroup_SetControlStyle)
    MySyscall(pCheckGroup_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetFloating)
BOOL
CheckGroup_GetFloating(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetFloating)
    return (BOOL)MySyscall(pCheckGroup_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetParent)
TWinControl
CheckGroup_GetParent(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetParent)
    return (TWinControl)MySyscall(pCheckGroup_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetParent)
void
CheckGroup_SetParent(TCheckGroup AObj, TWinControl AValue) {
    GET_FUNC_ADDR(CheckGroup_SetParent)
    MySyscall(pCheckGroup_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetLeft)
int32_t
CheckGroup_GetLeft(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetLeft)
    return (int32_t)MySyscall(pCheckGroup_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetLeft)
void
CheckGroup_SetLeft(TCheckGroup AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckGroup_SetLeft)
    MySyscall(pCheckGroup_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetTop)
int32_t
CheckGroup_GetTop(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetTop)
    return (int32_t)MySyscall(pCheckGroup_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetTop)
void
CheckGroup_SetTop(TCheckGroup AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckGroup_SetTop)
    MySyscall(pCheckGroup_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetWidth)
int32_t
CheckGroup_GetWidth(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetWidth)
    return (int32_t)MySyscall(pCheckGroup_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetWidth)
void
CheckGroup_SetWidth(TCheckGroup AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckGroup_SetWidth)
    MySyscall(pCheckGroup_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetHeight)
int32_t
CheckGroup_GetHeight(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetHeight)
    return (int32_t)MySyscall(pCheckGroup_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetHeight)
void
CheckGroup_SetHeight(TCheckGroup AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckGroup_SetHeight)
    MySyscall(pCheckGroup_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetCursor)
TCursor
CheckGroup_GetCursor(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetCursor)
    return (TCursor)MySyscall(pCheckGroup_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetCursor)
void
CheckGroup_SetCursor(TCheckGroup AObj, TCursor AValue) {
    GET_FUNC_ADDR(CheckGroup_SetCursor)
    MySyscall(pCheckGroup_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetHint)
char*
CheckGroup_GetHint(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetHint)
    return (char*)MySyscall(pCheckGroup_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetHint)
void
CheckGroup_SetHint(TCheckGroup AObj, CChar char* AValue) {
    GET_FUNC_ADDR(CheckGroup_SetHint)
    MySyscall(pCheckGroup_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetComponentCount)
int32_t
CheckGroup_GetComponentCount(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetComponentCount)
    return (int32_t)MySyscall(pCheckGroup_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetComponentIndex)
int32_t
CheckGroup_GetComponentIndex(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetComponentIndex)
    return (int32_t)MySyscall(pCheckGroup_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetComponentIndex)
void
CheckGroup_SetComponentIndex(TCheckGroup AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckGroup_SetComponentIndex)
    MySyscall(pCheckGroup_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetOwner)
TComponent
CheckGroup_GetOwner(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetOwner)
    return (TComponent)MySyscall(pCheckGroup_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetName)
char*
CheckGroup_GetName(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetName)
    return (char*)MySyscall(pCheckGroup_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetName)
void
CheckGroup_SetName(TCheckGroup AObj, CChar char* AValue) {
    GET_FUNC_ADDR(CheckGroup_SetName)
    MySyscall(pCheckGroup_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetTag)
intptr_t
CheckGroup_GetTag(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetTag)
    return (intptr_t)MySyscall(pCheckGroup_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetTag)
void
CheckGroup_SetTag(TCheckGroup AObj, intptr_t AValue) {
    GET_FUNC_ADDR(CheckGroup_SetTag)
    MySyscall(pCheckGroup_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetAnchorSideLeft)
TAnchorSide
CheckGroup_GetAnchorSideLeft(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pCheckGroup_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetAnchorSideLeft)
void
CheckGroup_SetAnchorSideLeft(TCheckGroup AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(CheckGroup_SetAnchorSideLeft)
    MySyscall(pCheckGroup_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetAnchorSideTop)
TAnchorSide
CheckGroup_GetAnchorSideTop(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pCheckGroup_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetAnchorSideTop)
void
CheckGroup_SetAnchorSideTop(TCheckGroup AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(CheckGroup_SetAnchorSideTop)
    MySyscall(pCheckGroup_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetAnchorSideRight)
TAnchorSide
CheckGroup_GetAnchorSideRight(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pCheckGroup_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetAnchorSideRight)
void
CheckGroup_SetAnchorSideRight(TCheckGroup AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(CheckGroup_SetAnchorSideRight)
    MySyscall(pCheckGroup_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetAnchorSideBottom)
TAnchorSide
CheckGroup_GetAnchorSideBottom(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pCheckGroup_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetAnchorSideBottom)
void
CheckGroup_SetAnchorSideBottom(TCheckGroup AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(CheckGroup_SetAnchorSideBottom)
    MySyscall(pCheckGroup_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetChildSizing)
TControlChildSizing
CheckGroup_GetChildSizing(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetChildSizing)
    return (TControlChildSizing)MySyscall(pCheckGroup_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetChildSizing)
void
CheckGroup_SetChildSizing(TCheckGroup AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(CheckGroup_SetChildSizing)
    MySyscall(pCheckGroup_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetBorderSpacing)
TControlBorderSpacing
CheckGroup_GetBorderSpacing(TCheckGroup AObj) {
    GET_FUNC_ADDR(CheckGroup_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pCheckGroup_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetBorderSpacing)
void
CheckGroup_SetBorderSpacing(TCheckGroup AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(CheckGroup_SetBorderSpacing)
    MySyscall(pCheckGroup_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetChecked)
BOOL
CheckGroup_GetChecked(TCheckGroup AObj, int32_t Index) {
    GET_FUNC_ADDR(CheckGroup_GetChecked)
    return (BOOL)MySyscall(pCheckGroup_GetChecked, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetChecked)
void
CheckGroup_SetChecked(TCheckGroup AObj, int32_t Index, BOOL AValue) {
    GET_FUNC_ADDR(CheckGroup_SetChecked)
    MySyscall(pCheckGroup_SetChecked, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetCheckEnabled)
BOOL
CheckGroup_GetCheckEnabled(TCheckGroup AObj, int32_t Index) {
    GET_FUNC_ADDR(CheckGroup_GetCheckEnabled)
    return (BOOL)MySyscall(pCheckGroup_GetCheckEnabled, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_SetCheckEnabled)
void
CheckGroup_SetCheckEnabled(TCheckGroup AObj, int32_t Index, BOOL AValue) {
    GET_FUNC_ADDR(CheckGroup_SetCheckEnabled)
    MySyscall(pCheckGroup_SetCheckEnabled, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetDockClients)
TControl
CheckGroup_GetDockClients(TCheckGroup AObj, int32_t Index) {
    GET_FUNC_ADDR(CheckGroup_GetDockClients)
    return (TControl)MySyscall(pCheckGroup_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetControls)
TControl
CheckGroup_GetControls(TCheckGroup AObj, int32_t Index) {
    GET_FUNC_ADDR(CheckGroup_GetControls)
    return (TControl)MySyscall(pCheckGroup_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetComponents)
TComponent
CheckGroup_GetComponents(TCheckGroup AObj, int32_t AIndex) {
    GET_FUNC_ADDR(CheckGroup_GetComponents)
    return (TComponent)MySyscall(pCheckGroup_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_GetAnchorSide)
TAnchorSide
CheckGroup_GetAnchorSide(TCheckGroup AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(CheckGroup_GetAnchorSide)
    return (TAnchorSide)MySyscall(pCheckGroup_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckGroup_StaticClassType)
TClass
CheckGroup_StaticClassType() {
    GET_FUNC_ADDR(CheckGroup_StaticClassType)
    return (TClass)MySyscall(pCheckGroup_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TToggleBox-------------------

DEFINE_FUNC_PTR(ToggleBox_Create)
TToggleBox
ToggleBox_Create(TComponent AOwner) {
    GET_FUNC_ADDR(ToggleBox_Create)
    return (TToggleBox)MySyscall(pToggleBox_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_Free)
void
ToggleBox_Free(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_Free)
    MySyscall(pToggleBox_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_CanFocus)
BOOL
ToggleBox_CanFocus(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_CanFocus)
    return (BOOL)MySyscall(pToggleBox_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_ContainsControl)
BOOL
ToggleBox_ContainsControl(TToggleBox AObj, TControl Control) {
    GET_FUNC_ADDR(ToggleBox_ContainsControl)
    return (BOOL)MySyscall(pToggleBox_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_ControlAtPos)
TControl
ToggleBox_ControlAtPos(TToggleBox AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(ToggleBox_ControlAtPos)
    return (TControl)MySyscall(pToggleBox_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_DisableAlign)
void
ToggleBox_DisableAlign(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_DisableAlign)
    MySyscall(pToggleBox_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_EnableAlign)
void
ToggleBox_EnableAlign(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_EnableAlign)
    MySyscall(pToggleBox_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_FindChildControl)
TControl
ToggleBox_FindChildControl(TToggleBox AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(ToggleBox_FindChildControl)
    return (TControl)MySyscall(pToggleBox_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_FlipChildren)
void
ToggleBox_FlipChildren(TToggleBox AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(ToggleBox_FlipChildren)
    MySyscall(pToggleBox_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_Focused)
BOOL
ToggleBox_Focused(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_Focused)
    return (BOOL)MySyscall(pToggleBox_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_HandleAllocated)
BOOL
ToggleBox_HandleAllocated(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_HandleAllocated)
    return (BOOL)MySyscall(pToggleBox_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_InsertControl)
void
ToggleBox_InsertControl(TToggleBox AObj, TControl AControl) {
    GET_FUNC_ADDR(ToggleBox_InsertControl)
    MySyscall(pToggleBox_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_Invalidate)
void
ToggleBox_Invalidate(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_Invalidate)
    MySyscall(pToggleBox_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_PaintTo)
void
ToggleBox_PaintTo(TToggleBox AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(ToggleBox_PaintTo)
    MySyscall(pToggleBox_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_RemoveControl)
void
ToggleBox_RemoveControl(TToggleBox AObj, TControl AControl) {
    GET_FUNC_ADDR(ToggleBox_RemoveControl)
    MySyscall(pToggleBox_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_Realign)
void
ToggleBox_Realign(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_Realign)
    MySyscall(pToggleBox_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_Repaint)
void
ToggleBox_Repaint(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_Repaint)
    MySyscall(pToggleBox_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_ScaleBy)
void
ToggleBox_ScaleBy(TToggleBox AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(ToggleBox_ScaleBy)
    MySyscall(pToggleBox_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_ScrollBy)
void
ToggleBox_ScrollBy(TToggleBox AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(ToggleBox_ScrollBy)
    MySyscall(pToggleBox_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetBounds)
void
ToggleBox_SetBounds(TToggleBox AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(ToggleBox_SetBounds)
    MySyscall(pToggleBox_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetFocus)
void
ToggleBox_SetFocus(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_SetFocus)
    MySyscall(pToggleBox_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_Update)
void
ToggleBox_Update(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_Update)
    MySyscall(pToggleBox_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_BringToFront)
void
ToggleBox_BringToFront(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_BringToFront)
    MySyscall(pToggleBox_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_ClientToScreen)
TPoint
ToggleBox_ClientToScreen(TToggleBox AObj, TPoint Point) {
    GET_FUNC_ADDR(ToggleBox_ClientToScreen)
    TPoint result;
    MySyscall(pToggleBox_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ToggleBox_ClientToParent)
TPoint
ToggleBox_ClientToParent(TToggleBox AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ToggleBox_ClientToParent)
    TPoint result;
    MySyscall(pToggleBox_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ToggleBox_Dragging)
BOOL
ToggleBox_Dragging(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_Dragging)
    return (BOOL)MySyscall(pToggleBox_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_HasParent)
BOOL
ToggleBox_HasParent(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_HasParent)
    return (BOOL)MySyscall(pToggleBox_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_Hide)
void
ToggleBox_Hide(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_Hide)
    MySyscall(pToggleBox_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_Perform)
intptr_t
ToggleBox_Perform(TToggleBox AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(ToggleBox_Perform)
    return (intptr_t)MySyscall(pToggleBox_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_Refresh)
void
ToggleBox_Refresh(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_Refresh)
    MySyscall(pToggleBox_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_ScreenToClient)
TPoint
ToggleBox_ScreenToClient(TToggleBox AObj, TPoint Point) {
    GET_FUNC_ADDR(ToggleBox_ScreenToClient)
    TPoint result;
    MySyscall(pToggleBox_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ToggleBox_ParentToClient)
TPoint
ToggleBox_ParentToClient(TToggleBox AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(ToggleBox_ParentToClient)
    TPoint result;
    MySyscall(pToggleBox_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ToggleBox_SendToBack)
void
ToggleBox_SendToBack(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_SendToBack)
    MySyscall(pToggleBox_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_Show)
void
ToggleBox_Show(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_Show)
    MySyscall(pToggleBox_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetTextBuf)
int32_t
ToggleBox_GetTextBuf(TToggleBox AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(ToggleBox_GetTextBuf)
    return (int32_t)MySyscall(pToggleBox_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetTextLen)
int32_t
ToggleBox_GetTextLen(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetTextLen)
    return (int32_t)MySyscall(pToggleBox_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetTextBuf)
void
ToggleBox_SetTextBuf(TToggleBox AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(ToggleBox_SetTextBuf)
    MySyscall(pToggleBox_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_FindComponent)
TComponent
ToggleBox_FindComponent(TToggleBox AObj, CChar char* AName) {
    GET_FUNC_ADDR(ToggleBox_FindComponent)
    return (TComponent)MySyscall(pToggleBox_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetNamePath)
char*
ToggleBox_GetNamePath(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetNamePath)
    return (char*)MySyscall(pToggleBox_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_Assign)
void
ToggleBox_Assign(TToggleBox AObj, TObject Source) {
    GET_FUNC_ADDR(ToggleBox_Assign)
    MySyscall(pToggleBox_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_ClassType)
TClass
ToggleBox_ClassType(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_ClassType)
    return (TClass)MySyscall(pToggleBox_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_ClassName)
char*
ToggleBox_ClassName(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_ClassName)
    return (char*)MySyscall(pToggleBox_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_InstanceSize)
int32_t
ToggleBox_InstanceSize(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_InstanceSize)
    return (int32_t)MySyscall(pToggleBox_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_InheritsFrom)
BOOL
ToggleBox_InheritsFrom(TToggleBox AObj, TClass AClass) {
    GET_FUNC_ADDR(ToggleBox_InheritsFrom)
    return (BOOL)MySyscall(pToggleBox_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_Equals)
BOOL
ToggleBox_Equals(TToggleBox AObj, TObject Obj) {
    GET_FUNC_ADDR(ToggleBox_Equals)
    return (BOOL)MySyscall(pToggleBox_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetHashCode)
int32_t
ToggleBox_GetHashCode(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetHashCode)
    return (int32_t)MySyscall(pToggleBox_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_ToString)
char*
ToggleBox_ToString(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_ToString)
    return (char*)MySyscall(pToggleBox_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_AnchorToNeighbour)
void
ToggleBox_AnchorToNeighbour(TToggleBox AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ToggleBox_AnchorToNeighbour)
    MySyscall(pToggleBox_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_AnchorParallel)
void
ToggleBox_AnchorParallel(TToggleBox AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(ToggleBox_AnchorParallel)
    MySyscall(pToggleBox_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_AnchorHorizontalCenterTo)
void
ToggleBox_AnchorHorizontalCenterTo(TToggleBox AObj, TControl ASibling) {
    GET_FUNC_ADDR(ToggleBox_AnchorHorizontalCenterTo)
    MySyscall(pToggleBox_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_AnchorVerticalCenterTo)
void
ToggleBox_AnchorVerticalCenterTo(TToggleBox AObj, TControl ASibling) {
    GET_FUNC_ADDR(ToggleBox_AnchorVerticalCenterTo)
    MySyscall(pToggleBox_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_AnchorSame)
void
ToggleBox_AnchorSame(TToggleBox AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(ToggleBox_AnchorSame)
    MySyscall(pToggleBox_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_AnchorAsAlign)
void
ToggleBox_AnchorAsAlign(TToggleBox AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(ToggleBox_AnchorAsAlign)
    MySyscall(pToggleBox_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_AnchorClient)
void
ToggleBox_AnchorClient(TToggleBox AObj, int32_t ASpace) {
    GET_FUNC_ADDR(ToggleBox_AnchorClient)
    MySyscall(pToggleBox_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_ScaleDesignToForm)
int32_t
ToggleBox_ScaleDesignToForm(TToggleBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToggleBox_ScaleDesignToForm)
    return (int32_t)MySyscall(pToggleBox_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_ScaleFormToDesign)
int32_t
ToggleBox_ScaleFormToDesign(TToggleBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToggleBox_ScaleFormToDesign)
    return (int32_t)MySyscall(pToggleBox_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_Scale96ToForm)
int32_t
ToggleBox_Scale96ToForm(TToggleBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToggleBox_Scale96ToForm)
    return (int32_t)MySyscall(pToggleBox_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_ScaleFormTo96)
int32_t
ToggleBox_ScaleFormTo96(TToggleBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToggleBox_ScaleFormTo96)
    return (int32_t)MySyscall(pToggleBox_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_Scale96ToFont)
int32_t
ToggleBox_Scale96ToFont(TToggleBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToggleBox_Scale96ToFont)
    return (int32_t)MySyscall(pToggleBox_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_ScaleFontTo96)
int32_t
ToggleBox_ScaleFontTo96(TToggleBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToggleBox_ScaleFontTo96)
    return (int32_t)MySyscall(pToggleBox_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_ScaleScreenToFont)
int32_t
ToggleBox_ScaleScreenToFont(TToggleBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToggleBox_ScaleScreenToFont)
    return (int32_t)MySyscall(pToggleBox_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_ScaleFontToScreen)
int32_t
ToggleBox_ScaleFontToScreen(TToggleBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToggleBox_ScaleFontToScreen)
    return (int32_t)MySyscall(pToggleBox_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_Scale96ToScreen)
int32_t
ToggleBox_Scale96ToScreen(TToggleBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToggleBox_Scale96ToScreen)
    return (int32_t)MySyscall(pToggleBox_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_ScaleScreenTo96)
int32_t
ToggleBox_ScaleScreenTo96(TToggleBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(ToggleBox_ScaleScreenTo96)
    return (int32_t)MySyscall(pToggleBox_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_AutoAdjustLayout)
void
ToggleBox_AutoAdjustLayout(TToggleBox AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(ToggleBox_AutoAdjustLayout)
    MySyscall(pToggleBox_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_FixDesignFontsPPI)
void
ToggleBox_FixDesignFontsPPI(TToggleBox AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(ToggleBox_FixDesignFontsPPI)
    MySyscall(pToggleBox_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_ScaleFontsPPI)
void
ToggleBox_ScaleFontsPPI(TToggleBox AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(ToggleBox_ScaleFontsPPI)
    MySyscall(pToggleBox_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetAllowGrayed)
BOOL
ToggleBox_GetAllowGrayed(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetAllowGrayed)
    return (BOOL)MySyscall(pToggleBox_GetAllowGrayed, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetAllowGrayed)
void
ToggleBox_SetAllowGrayed(TToggleBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToggleBox_SetAllowGrayed)
    MySyscall(pToggleBox_SetAllowGrayed, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetAlign)
TAlign
ToggleBox_GetAlign(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetAlign)
    return (TAlign)MySyscall(pToggleBox_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetAlign)
void
ToggleBox_SetAlign(TToggleBox AObj, TAlign AValue) {
    GET_FUNC_ADDR(ToggleBox_SetAlign)
    MySyscall(pToggleBox_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetAnchors)
TAnchors
ToggleBox_GetAnchors(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetAnchors)
    return (TAnchors)MySyscall(pToggleBox_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetAnchors)
void
ToggleBox_SetAnchors(TToggleBox AObj, TAnchors AValue) {
    GET_FUNC_ADDR(ToggleBox_SetAnchors)
    MySyscall(pToggleBox_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetAutoSize)
BOOL
ToggleBox_GetAutoSize(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetAutoSize)
    return (BOOL)MySyscall(pToggleBox_GetAutoSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetAutoSize)
void
ToggleBox_SetAutoSize(TToggleBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToggleBox_SetAutoSize)
    MySyscall(pToggleBox_SetAutoSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetCaption)
char*
ToggleBox_GetCaption(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetCaption)
    return (char*)MySyscall(pToggleBox_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetCaption)
void
ToggleBox_SetCaption(TToggleBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ToggleBox_SetCaption)
    MySyscall(pToggleBox_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetChecked)
BOOL
ToggleBox_GetChecked(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetChecked)
    return (BOOL)MySyscall(pToggleBox_GetChecked, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetChecked)
void
ToggleBox_SetChecked(TToggleBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToggleBox_SetChecked)
    MySyscall(pToggleBox_SetChecked, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetColor)
TColor
ToggleBox_GetColor(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetColor)
    return (TColor)MySyscall(pToggleBox_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetColor)
void
ToggleBox_SetColor(TToggleBox AObj, TColor AValue) {
    GET_FUNC_ADDR(ToggleBox_SetColor)
    MySyscall(pToggleBox_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetConstraints)
TSizeConstraints
ToggleBox_GetConstraints(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetConstraints)
    return (TSizeConstraints)MySyscall(pToggleBox_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetConstraints)
void
ToggleBox_SetConstraints(TToggleBox AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(ToggleBox_SetConstraints)
    MySyscall(pToggleBox_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetDoubleBuffered)
BOOL
ToggleBox_GetDoubleBuffered(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetDoubleBuffered)
    return (BOOL)MySyscall(pToggleBox_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetDoubleBuffered)
void
ToggleBox_SetDoubleBuffered(TToggleBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToggleBox_SetDoubleBuffered)
    MySyscall(pToggleBox_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetDragCursor)
TCursor
ToggleBox_GetDragCursor(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetDragCursor)
    return (TCursor)MySyscall(pToggleBox_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetDragCursor)
void
ToggleBox_SetDragCursor(TToggleBox AObj, TCursor AValue) {
    GET_FUNC_ADDR(ToggleBox_SetDragCursor)
    MySyscall(pToggleBox_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetDragKind)
TDragKind
ToggleBox_GetDragKind(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetDragKind)
    return (TDragKind)MySyscall(pToggleBox_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetDragKind)
void
ToggleBox_SetDragKind(TToggleBox AObj, TDragKind AValue) {
    GET_FUNC_ADDR(ToggleBox_SetDragKind)
    MySyscall(pToggleBox_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetDragMode)
TDragMode
ToggleBox_GetDragMode(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetDragMode)
    return (TDragMode)MySyscall(pToggleBox_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetDragMode)
void
ToggleBox_SetDragMode(TToggleBox AObj, TDragMode AValue) {
    GET_FUNC_ADDR(ToggleBox_SetDragMode)
    MySyscall(pToggleBox_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetEnabled)
BOOL
ToggleBox_GetEnabled(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetEnabled)
    return (BOOL)MySyscall(pToggleBox_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetEnabled)
void
ToggleBox_SetEnabled(TToggleBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToggleBox_SetEnabled)
    MySyscall(pToggleBox_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetFont)
TFont
ToggleBox_GetFont(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetFont)
    return (TFont)MySyscall(pToggleBox_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetFont)
void
ToggleBox_SetFont(TToggleBox AObj, TFont AValue) {
    GET_FUNC_ADDR(ToggleBox_SetFont)
    MySyscall(pToggleBox_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetHint)
char*
ToggleBox_GetHint(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetHint)
    return (char*)MySyscall(pToggleBox_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetHint)
void
ToggleBox_SetHint(TToggleBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ToggleBox_SetHint)
    MySyscall(pToggleBox_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetOnChange)
void
ToggleBox_SetOnChange(TToggleBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ToggleBox_SetOnChange)
    MySyscall(pToggleBox_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetOnClick)
void
ToggleBox_SetOnClick(TToggleBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ToggleBox_SetOnClick)
    MySyscall(pToggleBox_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetOnDragDrop)
void
ToggleBox_SetOnDragDrop(TToggleBox AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(ToggleBox_SetOnDragDrop)
    MySyscall(pToggleBox_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetOnDragOver)
void
ToggleBox_SetOnDragOver(TToggleBox AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(ToggleBox_SetOnDragOver)
    MySyscall(pToggleBox_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetOnEndDrag)
void
ToggleBox_SetOnEndDrag(TToggleBox AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(ToggleBox_SetOnEndDrag)
    MySyscall(pToggleBox_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetOnEnter)
void
ToggleBox_SetOnEnter(TToggleBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ToggleBox_SetOnEnter)
    MySyscall(pToggleBox_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetOnExit)
void
ToggleBox_SetOnExit(TToggleBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ToggleBox_SetOnExit)
    MySyscall(pToggleBox_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetOnMouseDown)
void
ToggleBox_SetOnMouseDown(TToggleBox AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(ToggleBox_SetOnMouseDown)
    MySyscall(pToggleBox_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetOnMouseEnter)
void
ToggleBox_SetOnMouseEnter(TToggleBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ToggleBox_SetOnMouseEnter)
    MySyscall(pToggleBox_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetOnMouseLeave)
void
ToggleBox_SetOnMouseLeave(TToggleBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(ToggleBox_SetOnMouseLeave)
    MySyscall(pToggleBox_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetOnMouseMove)
void
ToggleBox_SetOnMouseMove(TToggleBox AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(ToggleBox_SetOnMouseMove)
    MySyscall(pToggleBox_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetOnMouseUp)
void
ToggleBox_SetOnMouseUp(TToggleBox AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(ToggleBox_SetOnMouseUp)
    MySyscall(pToggleBox_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetOnMouseWheel)
void
ToggleBox_SetOnMouseWheel(TToggleBox AObj, TMouseWheelEvent AEventData) {
    GET_FUNC_ADDR(ToggleBox_SetOnMouseWheel)
    MySyscall(pToggleBox_SetOnMouseWheel, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetOnMouseWheelDown)
void
ToggleBox_SetOnMouseWheelDown(TToggleBox AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(ToggleBox_SetOnMouseWheelDown)
    MySyscall(pToggleBox_SetOnMouseWheelDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetOnMouseWheelUp)
void
ToggleBox_SetOnMouseWheelUp(TToggleBox AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(ToggleBox_SetOnMouseWheelUp)
    MySyscall(pToggleBox_SetOnMouseWheelUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetParentDoubleBuffered)
BOOL
ToggleBox_GetParentDoubleBuffered(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pToggleBox_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetParentDoubleBuffered)
void
ToggleBox_SetParentDoubleBuffered(TToggleBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToggleBox_SetParentDoubleBuffered)
    MySyscall(pToggleBox_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetParentFont)
BOOL
ToggleBox_GetParentFont(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetParentFont)
    return (BOOL)MySyscall(pToggleBox_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetParentFont)
void
ToggleBox_SetParentFont(TToggleBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToggleBox_SetParentFont)
    MySyscall(pToggleBox_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetParentShowHint)
BOOL
ToggleBox_GetParentShowHint(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetParentShowHint)
    return (BOOL)MySyscall(pToggleBox_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetParentShowHint)
void
ToggleBox_SetParentShowHint(TToggleBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToggleBox_SetParentShowHint)
    MySyscall(pToggleBox_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetPopupMenu)
TPopupMenu
ToggleBox_GetPopupMenu(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetPopupMenu)
    return (TPopupMenu)MySyscall(pToggleBox_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetPopupMenu)
void
ToggleBox_SetPopupMenu(TToggleBox AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(ToggleBox_SetPopupMenu)
    MySyscall(pToggleBox_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetShowHint)
BOOL
ToggleBox_GetShowHint(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetShowHint)
    return (BOOL)MySyscall(pToggleBox_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetShowHint)
void
ToggleBox_SetShowHint(TToggleBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToggleBox_SetShowHint)
    MySyscall(pToggleBox_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetState)
TCheckBoxState
ToggleBox_GetState(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetState)
    return (TCheckBoxState)MySyscall(pToggleBox_GetState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetState)
void
ToggleBox_SetState(TToggleBox AObj, TCheckBoxState AValue) {
    GET_FUNC_ADDR(ToggleBox_SetState)
    MySyscall(pToggleBox_SetState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetTabOrder)
TTabOrder
ToggleBox_GetTabOrder(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetTabOrder)
    return (TTabOrder)MySyscall(pToggleBox_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetTabOrder)
void
ToggleBox_SetTabOrder(TToggleBox AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(ToggleBox_SetTabOrder)
    MySyscall(pToggleBox_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetTabStop)
BOOL
ToggleBox_GetTabStop(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetTabStop)
    return (BOOL)MySyscall(pToggleBox_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetTabStop)
void
ToggleBox_SetTabStop(TToggleBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToggleBox_SetTabStop)
    MySyscall(pToggleBox_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetVisible)
BOOL
ToggleBox_GetVisible(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetVisible)
    return (BOOL)MySyscall(pToggleBox_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetVisible)
void
ToggleBox_SetVisible(TToggleBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToggleBox_SetVisible)
    MySyscall(pToggleBox_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetDockClientCount)
int32_t
ToggleBox_GetDockClientCount(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetDockClientCount)
    return (int32_t)MySyscall(pToggleBox_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetDockSite)
BOOL
ToggleBox_GetDockSite(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetDockSite)
    return (BOOL)MySyscall(pToggleBox_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetDockSite)
void
ToggleBox_SetDockSite(TToggleBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToggleBox_SetDockSite)
    MySyscall(pToggleBox_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetMouseInClient)
BOOL
ToggleBox_GetMouseInClient(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetMouseInClient)
    return (BOOL)MySyscall(pToggleBox_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetVisibleDockClientCount)
int32_t
ToggleBox_GetVisibleDockClientCount(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pToggleBox_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetBrush)
TBrush
ToggleBox_GetBrush(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetBrush)
    return (TBrush)MySyscall(pToggleBox_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetControlCount)
int32_t
ToggleBox_GetControlCount(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetControlCount)
    return (int32_t)MySyscall(pToggleBox_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetHandle)
HWND
ToggleBox_GetHandle(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetHandle)
    return (HWND)MySyscall(pToggleBox_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetParentWindow)
HWND
ToggleBox_GetParentWindow(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetParentWindow)
    return (HWND)MySyscall(pToggleBox_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetParentWindow)
void
ToggleBox_SetParentWindow(TToggleBox AObj, HWND AValue) {
    GET_FUNC_ADDR(ToggleBox_SetParentWindow)
    MySyscall(pToggleBox_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetShowing)
BOOL
ToggleBox_GetShowing(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetShowing)
    return (BOOL)MySyscall(pToggleBox_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetUseDockManager)
BOOL
ToggleBox_GetUseDockManager(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetUseDockManager)
    return (BOOL)MySyscall(pToggleBox_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetUseDockManager)
void
ToggleBox_SetUseDockManager(TToggleBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(ToggleBox_SetUseDockManager)
    MySyscall(pToggleBox_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetAction)
TAction
ToggleBox_GetAction(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetAction)
    return (TAction)MySyscall(pToggleBox_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetAction)
void
ToggleBox_SetAction(TToggleBox AObj, TAction AValue) {
    GET_FUNC_ADDR(ToggleBox_SetAction)
    MySyscall(pToggleBox_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetBiDiMode)
TBiDiMode
ToggleBox_GetBiDiMode(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetBiDiMode)
    return (TBiDiMode)MySyscall(pToggleBox_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetBiDiMode)
void
ToggleBox_SetBiDiMode(TToggleBox AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(ToggleBox_SetBiDiMode)
    MySyscall(pToggleBox_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetBoundsRect)
TRect
ToggleBox_GetBoundsRect(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetBoundsRect)
    TRect result;
    MySyscall(pToggleBox_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ToggleBox_SetBoundsRect)
void
ToggleBox_SetBoundsRect(TToggleBox AObj, TRect AValue) {
    GET_FUNC_ADDR(ToggleBox_SetBoundsRect)
    MySyscall(pToggleBox_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetClientHeight)
int32_t
ToggleBox_GetClientHeight(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetClientHeight)
    return (int32_t)MySyscall(pToggleBox_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetClientHeight)
void
ToggleBox_SetClientHeight(TToggleBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToggleBox_SetClientHeight)
    MySyscall(pToggleBox_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetClientOrigin)
TPoint
ToggleBox_GetClientOrigin(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetClientOrigin)
    TPoint result;
    MySyscall(pToggleBox_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ToggleBox_GetClientRect)
TRect
ToggleBox_GetClientRect(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetClientRect)
    TRect result;
    MySyscall(pToggleBox_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(ToggleBox_GetClientWidth)
int32_t
ToggleBox_GetClientWidth(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetClientWidth)
    return (int32_t)MySyscall(pToggleBox_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetClientWidth)
void
ToggleBox_SetClientWidth(TToggleBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToggleBox_SetClientWidth)
    MySyscall(pToggleBox_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetControlState)
TControlState
ToggleBox_GetControlState(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetControlState)
    return (TControlState)MySyscall(pToggleBox_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetControlState)
void
ToggleBox_SetControlState(TToggleBox AObj, TControlState AValue) {
    GET_FUNC_ADDR(ToggleBox_SetControlState)
    MySyscall(pToggleBox_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetControlStyle)
TControlStyle
ToggleBox_GetControlStyle(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetControlStyle)
    return (TControlStyle)MySyscall(pToggleBox_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetControlStyle)
void
ToggleBox_SetControlStyle(TToggleBox AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(ToggleBox_SetControlStyle)
    MySyscall(pToggleBox_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetFloating)
BOOL
ToggleBox_GetFloating(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetFloating)
    return (BOOL)MySyscall(pToggleBox_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetParent)
TWinControl
ToggleBox_GetParent(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetParent)
    return (TWinControl)MySyscall(pToggleBox_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetParent)
void
ToggleBox_SetParent(TToggleBox AObj, TWinControl AValue) {
    GET_FUNC_ADDR(ToggleBox_SetParent)
    MySyscall(pToggleBox_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetLeft)
int32_t
ToggleBox_GetLeft(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetLeft)
    return (int32_t)MySyscall(pToggleBox_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetLeft)
void
ToggleBox_SetLeft(TToggleBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToggleBox_SetLeft)
    MySyscall(pToggleBox_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetTop)
int32_t
ToggleBox_GetTop(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetTop)
    return (int32_t)MySyscall(pToggleBox_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetTop)
void
ToggleBox_SetTop(TToggleBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToggleBox_SetTop)
    MySyscall(pToggleBox_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetWidth)
int32_t
ToggleBox_GetWidth(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetWidth)
    return (int32_t)MySyscall(pToggleBox_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetWidth)
void
ToggleBox_SetWidth(TToggleBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToggleBox_SetWidth)
    MySyscall(pToggleBox_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetHeight)
int32_t
ToggleBox_GetHeight(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetHeight)
    return (int32_t)MySyscall(pToggleBox_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetHeight)
void
ToggleBox_SetHeight(TToggleBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToggleBox_SetHeight)
    MySyscall(pToggleBox_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetCursor)
TCursor
ToggleBox_GetCursor(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetCursor)
    return (TCursor)MySyscall(pToggleBox_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetCursor)
void
ToggleBox_SetCursor(TToggleBox AObj, TCursor AValue) {
    GET_FUNC_ADDR(ToggleBox_SetCursor)
    MySyscall(pToggleBox_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetComponentCount)
int32_t
ToggleBox_GetComponentCount(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetComponentCount)
    return (int32_t)MySyscall(pToggleBox_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetComponentIndex)
int32_t
ToggleBox_GetComponentIndex(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetComponentIndex)
    return (int32_t)MySyscall(pToggleBox_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetComponentIndex)
void
ToggleBox_SetComponentIndex(TToggleBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(ToggleBox_SetComponentIndex)
    MySyscall(pToggleBox_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetOwner)
TComponent
ToggleBox_GetOwner(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetOwner)
    return (TComponent)MySyscall(pToggleBox_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetName)
char*
ToggleBox_GetName(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetName)
    return (char*)MySyscall(pToggleBox_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetName)
void
ToggleBox_SetName(TToggleBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(ToggleBox_SetName)
    MySyscall(pToggleBox_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetTag)
intptr_t
ToggleBox_GetTag(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetTag)
    return (intptr_t)MySyscall(pToggleBox_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetTag)
void
ToggleBox_SetTag(TToggleBox AObj, intptr_t AValue) {
    GET_FUNC_ADDR(ToggleBox_SetTag)
    MySyscall(pToggleBox_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetAnchorSideLeft)
TAnchorSide
ToggleBox_GetAnchorSideLeft(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pToggleBox_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetAnchorSideLeft)
void
ToggleBox_SetAnchorSideLeft(TToggleBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ToggleBox_SetAnchorSideLeft)
    MySyscall(pToggleBox_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetAnchorSideTop)
TAnchorSide
ToggleBox_GetAnchorSideTop(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pToggleBox_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetAnchorSideTop)
void
ToggleBox_SetAnchorSideTop(TToggleBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ToggleBox_SetAnchorSideTop)
    MySyscall(pToggleBox_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetAnchorSideRight)
TAnchorSide
ToggleBox_GetAnchorSideRight(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pToggleBox_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetAnchorSideRight)
void
ToggleBox_SetAnchorSideRight(TToggleBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ToggleBox_SetAnchorSideRight)
    MySyscall(pToggleBox_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetAnchorSideBottom)
TAnchorSide
ToggleBox_GetAnchorSideBottom(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pToggleBox_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetAnchorSideBottom)
void
ToggleBox_SetAnchorSideBottom(TToggleBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(ToggleBox_SetAnchorSideBottom)
    MySyscall(pToggleBox_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetChildSizing)
TControlChildSizing
ToggleBox_GetChildSizing(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetChildSizing)
    return (TControlChildSizing)MySyscall(pToggleBox_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetChildSizing)
void
ToggleBox_SetChildSizing(TToggleBox AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(ToggleBox_SetChildSizing)
    MySyscall(pToggleBox_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetBorderSpacing)
TControlBorderSpacing
ToggleBox_GetBorderSpacing(TToggleBox AObj) {
    GET_FUNC_ADDR(ToggleBox_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pToggleBox_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_SetBorderSpacing)
void
ToggleBox_SetBorderSpacing(TToggleBox AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(ToggleBox_SetBorderSpacing)
    MySyscall(pToggleBox_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetDockClients)
TControl
ToggleBox_GetDockClients(TToggleBox AObj, int32_t Index) {
    GET_FUNC_ADDR(ToggleBox_GetDockClients)
    return (TControl)MySyscall(pToggleBox_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetControls)
TControl
ToggleBox_GetControls(TToggleBox AObj, int32_t Index) {
    GET_FUNC_ADDR(ToggleBox_GetControls)
    return (TControl)MySyscall(pToggleBox_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetComponents)
TComponent
ToggleBox_GetComponents(TToggleBox AObj, int32_t AIndex) {
    GET_FUNC_ADDR(ToggleBox_GetComponents)
    return (TComponent)MySyscall(pToggleBox_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_GetAnchorSide)
TAnchorSide
ToggleBox_GetAnchorSide(TToggleBox AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(ToggleBox_GetAnchorSide)
    return (TAnchorSide)MySyscall(pToggleBox_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(ToggleBox_StaticClassType)
TClass
ToggleBox_StaticClassType() {
    GET_FUNC_ADDR(ToggleBox_StaticClassType)
    return (TClass)MySyscall(pToggleBox_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TCheckComboBox-------------------

DEFINE_FUNC_PTR(CheckComboBox_Create)
TCheckComboBox
CheckComboBox_Create(TComponent AOwner) {
    GET_FUNC_ADDR(CheckComboBox_Create)
    return (TCheckComboBox)MySyscall(pCheckComboBox_Create, 1, AOwner ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_Free)
void
CheckComboBox_Free(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_Free)
    MySyscall(pCheckComboBox_Free, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_AddItem)
void
CheckComboBox_AddItem(TCheckComboBox AObj, CChar char* AItem, TCheckBoxState AState, BOOL AEnabled) {
    GET_FUNC_ADDR(CheckComboBox_AddItem)
    MySyscall(pCheckComboBox_AddItem, 4, AObj, AItem, AState, AEnabled ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_AssignItems)
void
CheckComboBox_AssignItems(TCheckComboBox AObj, TStrings AItems) {
    GET_FUNC_ADDR(CheckComboBox_AssignItems)
    MySyscall(pCheckComboBox_AssignItems, 2, AObj, AItems ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_Clear)
void
CheckComboBox_Clear(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_Clear)
    MySyscall(pCheckComboBox_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_DeleteItem)
void
CheckComboBox_DeleteItem(TCheckComboBox AObj, int32_t AIndex) {
    GET_FUNC_ADDR(CheckComboBox_DeleteItem)
    MySyscall(pCheckComboBox_DeleteItem, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_CheckAll)
void
CheckComboBox_CheckAll(TCheckComboBox AObj, TCheckBoxState AState, BOOL AAllowGrayed, BOOL AAllowDisabled) {
    GET_FUNC_ADDR(CheckComboBox_CheckAll)
    MySyscall(pCheckComboBox_CheckAll, 4, AObj, AState, AAllowGrayed, AAllowDisabled ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_Toggle)
void
CheckComboBox_Toggle(TCheckComboBox AObj, int32_t AIndex) {
    GET_FUNC_ADDR(CheckComboBox_Toggle)
    MySyscall(pCheckComboBox_Toggle, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_ClearSelection)
void
CheckComboBox_ClearSelection(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_ClearSelection)
    MySyscall(pCheckComboBox_ClearSelection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_Focused)
BOOL
CheckComboBox_Focused(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_Focused)
    return (BOOL)MySyscall(pCheckComboBox_Focused, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SelectAll)
void
CheckComboBox_SelectAll(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_SelectAll)
    MySyscall(pCheckComboBox_SelectAll, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_CanFocus)
BOOL
CheckComboBox_CanFocus(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_CanFocus)
    return (BOOL)MySyscall(pCheckComboBox_CanFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_ContainsControl)
BOOL
CheckComboBox_ContainsControl(TCheckComboBox AObj, TControl Control) {
    GET_FUNC_ADDR(CheckComboBox_ContainsControl)
    return (BOOL)MySyscall(pCheckComboBox_ContainsControl, 2, AObj, Control ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_ControlAtPos)
TControl
CheckComboBox_ControlAtPos(TCheckComboBox AObj, TPoint Pos, BOOL AllowDisabled, BOOL AllowWinControls) {
    GET_FUNC_ADDR(CheckComboBox_ControlAtPos)
    return (TControl)MySyscall(pCheckComboBox_ControlAtPos, 4, AObj, &Pos, AllowDisabled, AllowWinControls ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_DisableAlign)
void
CheckComboBox_DisableAlign(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_DisableAlign)
    MySyscall(pCheckComboBox_DisableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_EnableAlign)
void
CheckComboBox_EnableAlign(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_EnableAlign)
    MySyscall(pCheckComboBox_EnableAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_FindChildControl)
TControl
CheckComboBox_FindChildControl(TCheckComboBox AObj, CChar char* ControlName) {
    GET_FUNC_ADDR(CheckComboBox_FindChildControl)
    return (TControl)MySyscall(pCheckComboBox_FindChildControl, 2, AObj, ControlName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_FlipChildren)
void
CheckComboBox_FlipChildren(TCheckComboBox AObj, BOOL AllLevels) {
    GET_FUNC_ADDR(CheckComboBox_FlipChildren)
    MySyscall(pCheckComboBox_FlipChildren, 2, AObj, AllLevels ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_HandleAllocated)
BOOL
CheckComboBox_HandleAllocated(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_HandleAllocated)
    return (BOOL)MySyscall(pCheckComboBox_HandleAllocated, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_InsertControl)
void
CheckComboBox_InsertControl(TCheckComboBox AObj, TControl AControl) {
    GET_FUNC_ADDR(CheckComboBox_InsertControl)
    MySyscall(pCheckComboBox_InsertControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_Invalidate)
void
CheckComboBox_Invalidate(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_Invalidate)
    MySyscall(pCheckComboBox_Invalidate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_PaintTo)
void
CheckComboBox_PaintTo(TCheckComboBox AObj, HDC DC, int32_t X, int32_t Y) {
    GET_FUNC_ADDR(CheckComboBox_PaintTo)
    MySyscall(pCheckComboBox_PaintTo, 4, AObj, DC, X, Y ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_RemoveControl)
void
CheckComboBox_RemoveControl(TCheckComboBox AObj, TControl AControl) {
    GET_FUNC_ADDR(CheckComboBox_RemoveControl)
    MySyscall(pCheckComboBox_RemoveControl, 2, AObj, AControl ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_Realign)
void
CheckComboBox_Realign(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_Realign)
    MySyscall(pCheckComboBox_Realign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_Repaint)
void
CheckComboBox_Repaint(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_Repaint)
    MySyscall(pCheckComboBox_Repaint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_ScaleBy)
void
CheckComboBox_ScaleBy(TCheckComboBox AObj, int32_t M, int32_t D) {
    GET_FUNC_ADDR(CheckComboBox_ScaleBy)
    MySyscall(pCheckComboBox_ScaleBy, 3, AObj, M, D ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_ScrollBy)
void
CheckComboBox_ScrollBy(TCheckComboBox AObj, int32_t DeltaX, int32_t DeltaY) {
    GET_FUNC_ADDR(CheckComboBox_ScrollBy)
    MySyscall(pCheckComboBox_ScrollBy, 3, AObj, DeltaX, DeltaY ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetBounds)
void
CheckComboBox_SetBounds(TCheckComboBox AObj, int32_t ALeft, int32_t ATop, int32_t AWidth, int32_t AHeight) {
    GET_FUNC_ADDR(CheckComboBox_SetBounds)
    MySyscall(pCheckComboBox_SetBounds, 5, AObj, ALeft, ATop, AWidth, AHeight ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetFocus)
void
CheckComboBox_SetFocus(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_SetFocus)
    MySyscall(pCheckComboBox_SetFocus, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_Update)
void
CheckComboBox_Update(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_Update)
    MySyscall(pCheckComboBox_Update, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_BringToFront)
void
CheckComboBox_BringToFront(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_BringToFront)
    MySyscall(pCheckComboBox_BringToFront, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_ClientToScreen)
TPoint
CheckComboBox_ClientToScreen(TCheckComboBox AObj, TPoint Point) {
    GET_FUNC_ADDR(CheckComboBox_ClientToScreen)
    TPoint result;
    MySyscall(pCheckComboBox_ClientToScreen, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckComboBox_ClientToParent)
TPoint
CheckComboBox_ClientToParent(TCheckComboBox AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(CheckComboBox_ClientToParent)
    TPoint result;
    MySyscall(pCheckComboBox_ClientToParent, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckComboBox_Dragging)
BOOL
CheckComboBox_Dragging(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_Dragging)
    return (BOOL)MySyscall(pCheckComboBox_Dragging, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_HasParent)
BOOL
CheckComboBox_HasParent(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_HasParent)
    return (BOOL)MySyscall(pCheckComboBox_HasParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_Hide)
void
CheckComboBox_Hide(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_Hide)
    MySyscall(pCheckComboBox_Hide, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_Perform)
intptr_t
CheckComboBox_Perform(TCheckComboBox AObj, uint32_t Msg, uintptr_t WParam, intptr_t LParam) {
    GET_FUNC_ADDR(CheckComboBox_Perform)
    return (intptr_t)MySyscall(pCheckComboBox_Perform, 4, AObj, Msg, WParam, LParam ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_Refresh)
void
CheckComboBox_Refresh(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_Refresh)
    MySyscall(pCheckComboBox_Refresh, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_ScreenToClient)
TPoint
CheckComboBox_ScreenToClient(TCheckComboBox AObj, TPoint Point) {
    GET_FUNC_ADDR(CheckComboBox_ScreenToClient)
    TPoint result;
    MySyscall(pCheckComboBox_ScreenToClient, 3, AObj, &Point, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckComboBox_ParentToClient)
TPoint
CheckComboBox_ParentToClient(TCheckComboBox AObj, TPoint Point, TWinControl AParent) {
    GET_FUNC_ADDR(CheckComboBox_ParentToClient)
    TPoint result;
    MySyscall(pCheckComboBox_ParentToClient, 4, AObj, &Point, AParent, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckComboBox_SendToBack)
void
CheckComboBox_SendToBack(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_SendToBack)
    MySyscall(pCheckComboBox_SendToBack, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_Show)
void
CheckComboBox_Show(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_Show)
    MySyscall(pCheckComboBox_Show, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetTextBuf)
int32_t
CheckComboBox_GetTextBuf(TCheckComboBox AObj, CChar char* Buffer, int32_t BufSize) {
    GET_FUNC_ADDR(CheckComboBox_GetTextBuf)
    return (int32_t)MySyscall(pCheckComboBox_GetTextBuf, 3, AObj, Buffer, BufSize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetTextLen)
int32_t
CheckComboBox_GetTextLen(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetTextLen)
    return (int32_t)MySyscall(pCheckComboBox_GetTextLen, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetTextBuf)
void
CheckComboBox_SetTextBuf(TCheckComboBox AObj, CChar char* Buffer) {
    GET_FUNC_ADDR(CheckComboBox_SetTextBuf)
    MySyscall(pCheckComboBox_SetTextBuf, 2, AObj, Buffer ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_FindComponent)
TComponent
CheckComboBox_FindComponent(TCheckComboBox AObj, CChar char* AName) {
    GET_FUNC_ADDR(CheckComboBox_FindComponent)
    return (TComponent)MySyscall(pCheckComboBox_FindComponent, 2, AObj, AName ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetNamePath)
char*
CheckComboBox_GetNamePath(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetNamePath)
    return (char*)MySyscall(pCheckComboBox_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_Assign)
void
CheckComboBox_Assign(TCheckComboBox AObj, TObject Source) {
    GET_FUNC_ADDR(CheckComboBox_Assign)
    MySyscall(pCheckComboBox_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_ClassType)
TClass
CheckComboBox_ClassType(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_ClassType)
    return (TClass)MySyscall(pCheckComboBox_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_ClassName)
char*
CheckComboBox_ClassName(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_ClassName)
    return (char*)MySyscall(pCheckComboBox_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_InstanceSize)
int32_t
CheckComboBox_InstanceSize(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_InstanceSize)
    return (int32_t)MySyscall(pCheckComboBox_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_InheritsFrom)
BOOL
CheckComboBox_InheritsFrom(TCheckComboBox AObj, TClass AClass) {
    GET_FUNC_ADDR(CheckComboBox_InheritsFrom)
    return (BOOL)MySyscall(pCheckComboBox_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_Equals)
BOOL
CheckComboBox_Equals(TCheckComboBox AObj, TObject Obj) {
    GET_FUNC_ADDR(CheckComboBox_Equals)
    return (BOOL)MySyscall(pCheckComboBox_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetHashCode)
int32_t
CheckComboBox_GetHashCode(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetHashCode)
    return (int32_t)MySyscall(pCheckComboBox_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_ToString)
char*
CheckComboBox_ToString(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_ToString)
    return (char*)MySyscall(pCheckComboBox_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_AnchorToNeighbour)
void
CheckComboBox_AnchorToNeighbour(TCheckComboBox AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(CheckComboBox_AnchorToNeighbour)
    MySyscall(pCheckComboBox_AnchorToNeighbour, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_AnchorParallel)
void
CheckComboBox_AnchorParallel(TCheckComboBox AObj, TAnchorKind ASide, int32_t ASpace, TControl ASibling) {
    GET_FUNC_ADDR(CheckComboBox_AnchorParallel)
    MySyscall(pCheckComboBox_AnchorParallel, 4, AObj, ASide, ASpace, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_AnchorHorizontalCenterTo)
void
CheckComboBox_AnchorHorizontalCenterTo(TCheckComboBox AObj, TControl ASibling) {
    GET_FUNC_ADDR(CheckComboBox_AnchorHorizontalCenterTo)
    MySyscall(pCheckComboBox_AnchorHorizontalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_AnchorVerticalCenterTo)
void
CheckComboBox_AnchorVerticalCenterTo(TCheckComboBox AObj, TControl ASibling) {
    GET_FUNC_ADDR(CheckComboBox_AnchorVerticalCenterTo)
    MySyscall(pCheckComboBox_AnchorVerticalCenterTo, 2, AObj, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_AnchorSame)
void
CheckComboBox_AnchorSame(TCheckComboBox AObj, TAnchorKind ASide, TControl ASibling) {
    GET_FUNC_ADDR(CheckComboBox_AnchorSame)
    MySyscall(pCheckComboBox_AnchorSame, 3, AObj, ASide, ASibling ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_AnchorAsAlign)
void
CheckComboBox_AnchorAsAlign(TCheckComboBox AObj, TAlign ATheAlign, int32_t ASpace) {
    GET_FUNC_ADDR(CheckComboBox_AnchorAsAlign)
    MySyscall(pCheckComboBox_AnchorAsAlign, 3, AObj, ATheAlign, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_AnchorClient)
void
CheckComboBox_AnchorClient(TCheckComboBox AObj, int32_t ASpace) {
    GET_FUNC_ADDR(CheckComboBox_AnchorClient)
    MySyscall(pCheckComboBox_AnchorClient, 2, AObj, ASpace ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_ScaleDesignToForm)
int32_t
CheckComboBox_ScaleDesignToForm(TCheckComboBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckComboBox_ScaleDesignToForm)
    return (int32_t)MySyscall(pCheckComboBox_ScaleDesignToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_ScaleFormToDesign)
int32_t
CheckComboBox_ScaleFormToDesign(TCheckComboBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckComboBox_ScaleFormToDesign)
    return (int32_t)MySyscall(pCheckComboBox_ScaleFormToDesign, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_Scale96ToForm)
int32_t
CheckComboBox_Scale96ToForm(TCheckComboBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckComboBox_Scale96ToForm)
    return (int32_t)MySyscall(pCheckComboBox_Scale96ToForm, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_ScaleFormTo96)
int32_t
CheckComboBox_ScaleFormTo96(TCheckComboBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckComboBox_ScaleFormTo96)
    return (int32_t)MySyscall(pCheckComboBox_ScaleFormTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_Scale96ToFont)
int32_t
CheckComboBox_Scale96ToFont(TCheckComboBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckComboBox_Scale96ToFont)
    return (int32_t)MySyscall(pCheckComboBox_Scale96ToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_ScaleFontTo96)
int32_t
CheckComboBox_ScaleFontTo96(TCheckComboBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckComboBox_ScaleFontTo96)
    return (int32_t)MySyscall(pCheckComboBox_ScaleFontTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_ScaleScreenToFont)
int32_t
CheckComboBox_ScaleScreenToFont(TCheckComboBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckComboBox_ScaleScreenToFont)
    return (int32_t)MySyscall(pCheckComboBox_ScaleScreenToFont, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_ScaleFontToScreen)
int32_t
CheckComboBox_ScaleFontToScreen(TCheckComboBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckComboBox_ScaleFontToScreen)
    return (int32_t)MySyscall(pCheckComboBox_ScaleFontToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_Scale96ToScreen)
int32_t
CheckComboBox_Scale96ToScreen(TCheckComboBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckComboBox_Scale96ToScreen)
    return (int32_t)MySyscall(pCheckComboBox_Scale96ToScreen, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_ScaleScreenTo96)
int32_t
CheckComboBox_ScaleScreenTo96(TCheckComboBox AObj, int32_t ASize) {
    GET_FUNC_ADDR(CheckComboBox_ScaleScreenTo96)
    return (int32_t)MySyscall(pCheckComboBox_ScaleScreenTo96, 2, AObj, ASize ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_AutoAdjustLayout)
void
CheckComboBox_AutoAdjustLayout(TCheckComboBox AObj, TLayoutAdjustmentPolicy AMode, int32_t AFromPPI, int32_t AToPPI, int32_t AOldFormWidth, int32_t ANewFormWidth) {
    GET_FUNC_ADDR(CheckComboBox_AutoAdjustLayout)
    MySyscall(pCheckComboBox_AutoAdjustLayout, 6, AObj, AMode, AFromPPI, AToPPI, AOldFormWidth, ANewFormWidth ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_FixDesignFontsPPI)
void
CheckComboBox_FixDesignFontsPPI(TCheckComboBox AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(CheckComboBox_FixDesignFontsPPI)
    MySyscall(pCheckComboBox_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_ScaleFontsPPI)
void
CheckComboBox_ScaleFontsPPI(TCheckComboBox AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(CheckComboBox_ScaleFontsPPI)
    MySyscall(pCheckComboBox_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetAlign)
TAlign
CheckComboBox_GetAlign(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetAlign)
    return (TAlign)MySyscall(pCheckComboBox_GetAlign, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetAlign)
void
CheckComboBox_SetAlign(TCheckComboBox AObj, TAlign AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetAlign)
    MySyscall(pCheckComboBox_SetAlign, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetAllowGrayed)
BOOL
CheckComboBox_GetAllowGrayed(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetAllowGrayed)
    return (BOOL)MySyscall(pCheckComboBox_GetAllowGrayed, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetAllowGrayed)
void
CheckComboBox_SetAllowGrayed(TCheckComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetAllowGrayed)
    MySyscall(pCheckComboBox_SetAllowGrayed, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetAnchors)
TAnchors
CheckComboBox_GetAnchors(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetAnchors)
    return (TAnchors)MySyscall(pCheckComboBox_GetAnchors, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetAnchors)
void
CheckComboBox_SetAnchors(TCheckComboBox AObj, TAnchors AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetAnchors)
    MySyscall(pCheckComboBox_SetAnchors, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetAutoDropDown)
BOOL
CheckComboBox_GetAutoDropDown(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetAutoDropDown)
    return (BOOL)MySyscall(pCheckComboBox_GetAutoDropDown, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetAutoDropDown)
void
CheckComboBox_SetAutoDropDown(TCheckComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetAutoDropDown)
    MySyscall(pCheckComboBox_SetAutoDropDown, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetAutoSize)
BOOL
CheckComboBox_GetAutoSize(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetAutoSize)
    return (BOOL)MySyscall(pCheckComboBox_GetAutoSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetAutoSize)
void
CheckComboBox_SetAutoSize(TCheckComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetAutoSize)
    MySyscall(pCheckComboBox_SetAutoSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetColor)
TColor
CheckComboBox_GetColor(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetColor)
    return (TColor)MySyscall(pCheckComboBox_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetColor)
void
CheckComboBox_SetColor(TCheckComboBox AObj, TColor AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetColor)
    MySyscall(pCheckComboBox_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetConstraints)
TSizeConstraints
CheckComboBox_GetConstraints(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetConstraints)
    return (TSizeConstraints)MySyscall(pCheckComboBox_GetConstraints, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetConstraints)
void
CheckComboBox_SetConstraints(TCheckComboBox AObj, TSizeConstraints AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetConstraints)
    MySyscall(pCheckComboBox_SetConstraints, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetCount)
int32_t
CheckComboBox_GetCount(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetCount)
    return (int32_t)MySyscall(pCheckComboBox_GetCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetDragCursor)
TCursor
CheckComboBox_GetDragCursor(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetDragCursor)
    return (TCursor)MySyscall(pCheckComboBox_GetDragCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetDragCursor)
void
CheckComboBox_SetDragCursor(TCheckComboBox AObj, TCursor AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetDragCursor)
    MySyscall(pCheckComboBox_SetDragCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetDragKind)
TDragKind
CheckComboBox_GetDragKind(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetDragKind)
    return (TDragKind)MySyscall(pCheckComboBox_GetDragKind, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetDragKind)
void
CheckComboBox_SetDragKind(TCheckComboBox AObj, TDragKind AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetDragKind)
    MySyscall(pCheckComboBox_SetDragKind, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetDragMode)
TDragMode
CheckComboBox_GetDragMode(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetDragMode)
    return (TDragMode)MySyscall(pCheckComboBox_GetDragMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetDragMode)
void
CheckComboBox_SetDragMode(TCheckComboBox AObj, TDragMode AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetDragMode)
    MySyscall(pCheckComboBox_SetDragMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetDropDownCount)
int32_t
CheckComboBox_GetDropDownCount(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetDropDownCount)
    return (int32_t)MySyscall(pCheckComboBox_GetDropDownCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetDropDownCount)
void
CheckComboBox_SetDropDownCount(TCheckComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetDropDownCount)
    MySyscall(pCheckComboBox_SetDropDownCount, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetEnabled)
BOOL
CheckComboBox_GetEnabled(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetEnabled)
    return (BOOL)MySyscall(pCheckComboBox_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetEnabled)
void
CheckComboBox_SetEnabled(TCheckComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetEnabled)
    MySyscall(pCheckComboBox_SetEnabled, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetFont)
TFont
CheckComboBox_GetFont(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetFont)
    return (TFont)MySyscall(pCheckComboBox_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetFont)
void
CheckComboBox_SetFont(TCheckComboBox AObj, TFont AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetFont)
    MySyscall(pCheckComboBox_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetItemHeight)
int32_t
CheckComboBox_GetItemHeight(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetItemHeight)
    return (int32_t)MySyscall(pCheckComboBox_GetItemHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetItemHeight)
void
CheckComboBox_SetItemHeight(TCheckComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetItemHeight)
    MySyscall(pCheckComboBox_SetItemHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetItemIndex)
int32_t
CheckComboBox_GetItemIndex(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetItemIndex)
    return (int32_t)MySyscall(pCheckComboBox_GetItemIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetItemIndex)
void
CheckComboBox_SetItemIndex(TCheckComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetItemIndex)
    MySyscall(pCheckComboBox_SetItemIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetItems)
TStrings
CheckComboBox_GetItems(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetItems)
    return (TStrings)MySyscall(pCheckComboBox_GetItems, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetItems)
void
CheckComboBox_SetItems(TCheckComboBox AObj, TStrings AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetItems)
    MySyscall(pCheckComboBox_SetItems, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetItemWidth)
int32_t
CheckComboBox_GetItemWidth(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetItemWidth)
    return (int32_t)MySyscall(pCheckComboBox_GetItemWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetItemWidth)
void
CheckComboBox_SetItemWidth(TCheckComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetItemWidth)
    MySyscall(pCheckComboBox_SetItemWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetMaxLength)
int32_t
CheckComboBox_GetMaxLength(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetMaxLength)
    return (int32_t)MySyscall(pCheckComboBox_GetMaxLength, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetMaxLength)
void
CheckComboBox_SetMaxLength(TCheckComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetMaxLength)
    MySyscall(pCheckComboBox_SetMaxLength, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetOnChange)
void
CheckComboBox_SetOnChange(TCheckComboBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckComboBox_SetOnChange)
    MySyscall(pCheckComboBox_SetOnChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetOnClick)
void
CheckComboBox_SetOnClick(TCheckComboBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckComboBox_SetOnClick)
    MySyscall(pCheckComboBox_SetOnClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetOnCloseUp)
void
CheckComboBox_SetOnCloseUp(TCheckComboBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckComboBox_SetOnCloseUp)
    MySyscall(pCheckComboBox_SetOnCloseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetOnContextPopup)
void
CheckComboBox_SetOnContextPopup(TCheckComboBox AObj, TContextPopupEvent AEventData) {
    GET_FUNC_ADDR(CheckComboBox_SetOnContextPopup)
    MySyscall(pCheckComboBox_SetOnContextPopup, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetOnDblClick)
void
CheckComboBox_SetOnDblClick(TCheckComboBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckComboBox_SetOnDblClick)
    MySyscall(pCheckComboBox_SetOnDblClick, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetOnDragDrop)
void
CheckComboBox_SetOnDragDrop(TCheckComboBox AObj, TDragDropEvent AEventData) {
    GET_FUNC_ADDR(CheckComboBox_SetOnDragDrop)
    MySyscall(pCheckComboBox_SetOnDragDrop, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetOnDragOver)
void
CheckComboBox_SetOnDragOver(TCheckComboBox AObj, TDragOverEvent AEventData) {
    GET_FUNC_ADDR(CheckComboBox_SetOnDragOver)
    MySyscall(pCheckComboBox_SetOnDragOver, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetOnEndDrag)
void
CheckComboBox_SetOnEndDrag(TCheckComboBox AObj, TEndDragEvent AEventData) {
    GET_FUNC_ADDR(CheckComboBox_SetOnEndDrag)
    MySyscall(pCheckComboBox_SetOnEndDrag, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetOnDropDown)
void
CheckComboBox_SetOnDropDown(TCheckComboBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckComboBox_SetOnDropDown)
    MySyscall(pCheckComboBox_SetOnDropDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetOnEnter)
void
CheckComboBox_SetOnEnter(TCheckComboBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckComboBox_SetOnEnter)
    MySyscall(pCheckComboBox_SetOnEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetOnExit)
void
CheckComboBox_SetOnExit(TCheckComboBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckComboBox_SetOnExit)
    MySyscall(pCheckComboBox_SetOnExit, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetOnItemChange)
void
CheckComboBox_SetOnItemChange(TCheckComboBox AObj, TCheckItemChange AEventData) {
    GET_FUNC_ADDR(CheckComboBox_SetOnItemChange)
    MySyscall(pCheckComboBox_SetOnItemChange, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetOnKeyDown)
void
CheckComboBox_SetOnKeyDown(TCheckComboBox AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(CheckComboBox_SetOnKeyDown)
    MySyscall(pCheckComboBox_SetOnKeyDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetOnKeyPress)
void
CheckComboBox_SetOnKeyPress(TCheckComboBox AObj, TKeyPressEvent AEventData) {
    GET_FUNC_ADDR(CheckComboBox_SetOnKeyPress)
    MySyscall(pCheckComboBox_SetOnKeyPress, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetOnKeyUp)
void
CheckComboBox_SetOnKeyUp(TCheckComboBox AObj, TKeyEvent AEventData) {
    GET_FUNC_ADDR(CheckComboBox_SetOnKeyUp)
    MySyscall(pCheckComboBox_SetOnKeyUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetOnMouseDown)
void
CheckComboBox_SetOnMouseDown(TCheckComboBox AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(CheckComboBox_SetOnMouseDown)
    MySyscall(pCheckComboBox_SetOnMouseDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetOnMouseEnter)
void
CheckComboBox_SetOnMouseEnter(TCheckComboBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckComboBox_SetOnMouseEnter)
    MySyscall(pCheckComboBox_SetOnMouseEnter, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetOnMouseLeave)
void
CheckComboBox_SetOnMouseLeave(TCheckComboBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckComboBox_SetOnMouseLeave)
    MySyscall(pCheckComboBox_SetOnMouseLeave, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetOnMouseMove)
void
CheckComboBox_SetOnMouseMove(TCheckComboBox AObj, TMouseMoveEvent AEventData) {
    GET_FUNC_ADDR(CheckComboBox_SetOnMouseMove)
    MySyscall(pCheckComboBox_SetOnMouseMove, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetOnMouseUp)
void
CheckComboBox_SetOnMouseUp(TCheckComboBox AObj, TMouseEvent AEventData) {
    GET_FUNC_ADDR(CheckComboBox_SetOnMouseUp)
    MySyscall(pCheckComboBox_SetOnMouseUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetOnMouseWheel)
void
CheckComboBox_SetOnMouseWheel(TCheckComboBox AObj, TMouseWheelEvent AEventData) {
    GET_FUNC_ADDR(CheckComboBox_SetOnMouseWheel)
    MySyscall(pCheckComboBox_SetOnMouseWheel, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetOnMouseWheelDown)
void
CheckComboBox_SetOnMouseWheelDown(TCheckComboBox AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(CheckComboBox_SetOnMouseWheelDown)
    MySyscall(pCheckComboBox_SetOnMouseWheelDown, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetOnMouseWheelUp)
void
CheckComboBox_SetOnMouseWheelUp(TCheckComboBox AObj, TMouseWheelUpDownEvent AEventData) {
    GET_FUNC_ADDR(CheckComboBox_SetOnMouseWheelUp)
    MySyscall(pCheckComboBox_SetOnMouseWheelUp, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetOnSelect)
void
CheckComboBox_SetOnSelect(TCheckComboBox AObj, TNotifyEvent AEventData) {
    GET_FUNC_ADDR(CheckComboBox_SetOnSelect)
    MySyscall(pCheckComboBox_SetOnSelect, 2, AObj, AEventData ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetParentColor)
BOOL
CheckComboBox_GetParentColor(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetParentColor)
    return (BOOL)MySyscall(pCheckComboBox_GetParentColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetParentColor)
void
CheckComboBox_SetParentColor(TCheckComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetParentColor)
    MySyscall(pCheckComboBox_SetParentColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetParentFont)
BOOL
CheckComboBox_GetParentFont(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetParentFont)
    return (BOOL)MySyscall(pCheckComboBox_GetParentFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetParentFont)
void
CheckComboBox_SetParentFont(TCheckComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetParentFont)
    MySyscall(pCheckComboBox_SetParentFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetParentShowHint)
BOOL
CheckComboBox_GetParentShowHint(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetParentShowHint)
    return (BOOL)MySyscall(pCheckComboBox_GetParentShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetParentShowHint)
void
CheckComboBox_SetParentShowHint(TCheckComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetParentShowHint)
    MySyscall(pCheckComboBox_SetParentShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetPopupMenu)
TPopupMenu
CheckComboBox_GetPopupMenu(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetPopupMenu)
    return (TPopupMenu)MySyscall(pCheckComboBox_GetPopupMenu, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetPopupMenu)
void
CheckComboBox_SetPopupMenu(TCheckComboBox AObj, TPopupMenu AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetPopupMenu)
    MySyscall(pCheckComboBox_SetPopupMenu, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetShowHint)
BOOL
CheckComboBox_GetShowHint(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetShowHint)
    return (BOOL)MySyscall(pCheckComboBox_GetShowHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetShowHint)
void
CheckComboBox_SetShowHint(TCheckComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetShowHint)
    MySyscall(pCheckComboBox_SetShowHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetSorted)
BOOL
CheckComboBox_GetSorted(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetSorted)
    return (BOOL)MySyscall(pCheckComboBox_GetSorted, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetSorted)
void
CheckComboBox_SetSorted(TCheckComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetSorted)
    MySyscall(pCheckComboBox_SetSorted, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetTabOrder)
TTabOrder
CheckComboBox_GetTabOrder(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetTabOrder)
    return (TTabOrder)MySyscall(pCheckComboBox_GetTabOrder, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetTabOrder)
void
CheckComboBox_SetTabOrder(TCheckComboBox AObj, TTabOrder AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetTabOrder)
    MySyscall(pCheckComboBox_SetTabOrder, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetTabStop)
BOOL
CheckComboBox_GetTabStop(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetTabStop)
    return (BOOL)MySyscall(pCheckComboBox_GetTabStop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetTabStop)
void
CheckComboBox_SetTabStop(TCheckComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetTabStop)
    MySyscall(pCheckComboBox_SetTabStop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetText)
char*
CheckComboBox_GetText(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetText)
    return (char*)MySyscall(pCheckComboBox_GetText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetText)
void
CheckComboBox_SetText(TCheckComboBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetText)
    MySyscall(pCheckComboBox_SetText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetTextHint)
char*
CheckComboBox_GetTextHint(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetTextHint)
    return (char*)MySyscall(pCheckComboBox_GetTextHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetTextHint)
void
CheckComboBox_SetTextHint(TCheckComboBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetTextHint)
    MySyscall(pCheckComboBox_SetTextHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetVisible)
BOOL
CheckComboBox_GetVisible(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetVisible)
    return (BOOL)MySyscall(pCheckComboBox_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetVisible)
void
CheckComboBox_SetVisible(TCheckComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetVisible)
    MySyscall(pCheckComboBox_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetAutoComplete)
BOOL
CheckComboBox_GetAutoComplete(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetAutoComplete)
    return (BOOL)MySyscall(pCheckComboBox_GetAutoComplete, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetAutoComplete)
void
CheckComboBox_SetAutoComplete(TCheckComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetAutoComplete)
    MySyscall(pCheckComboBox_SetAutoComplete, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetCharCase)
TEditCharCase
CheckComboBox_GetCharCase(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetCharCase)
    return (TEditCharCase)MySyscall(pCheckComboBox_GetCharCase, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetCharCase)
void
CheckComboBox_SetCharCase(TCheckComboBox AObj, TEditCharCase AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetCharCase)
    MySyscall(pCheckComboBox_SetCharCase, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetSelText)
char*
CheckComboBox_GetSelText(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetSelText)
    return (char*)MySyscall(pCheckComboBox_GetSelText, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetSelText)
void
CheckComboBox_SetSelText(TCheckComboBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetSelText)
    MySyscall(pCheckComboBox_SetSelText, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetCanvas)
TCanvas
CheckComboBox_GetCanvas(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetCanvas)
    return (TCanvas)MySyscall(pCheckComboBox_GetCanvas, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetDroppedDown)
BOOL
CheckComboBox_GetDroppedDown(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetDroppedDown)
    return (BOOL)MySyscall(pCheckComboBox_GetDroppedDown, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetDroppedDown)
void
CheckComboBox_SetDroppedDown(TCheckComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetDroppedDown)
    MySyscall(pCheckComboBox_SetDroppedDown, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetSelLength)
int32_t
CheckComboBox_GetSelLength(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetSelLength)
    return (int32_t)MySyscall(pCheckComboBox_GetSelLength, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetSelLength)
void
CheckComboBox_SetSelLength(TCheckComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetSelLength)
    MySyscall(pCheckComboBox_SetSelLength, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetSelStart)
int32_t
CheckComboBox_GetSelStart(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetSelStart)
    return (int32_t)MySyscall(pCheckComboBox_GetSelStart, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetSelStart)
void
CheckComboBox_SetSelStart(TCheckComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetSelStart)
    MySyscall(pCheckComboBox_SetSelStart, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetDockClientCount)
int32_t
CheckComboBox_GetDockClientCount(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetDockClientCount)
    return (int32_t)MySyscall(pCheckComboBox_GetDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetDockSite)
BOOL
CheckComboBox_GetDockSite(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetDockSite)
    return (BOOL)MySyscall(pCheckComboBox_GetDockSite, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetDockSite)
void
CheckComboBox_SetDockSite(TCheckComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetDockSite)
    MySyscall(pCheckComboBox_SetDockSite, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetDoubleBuffered)
BOOL
CheckComboBox_GetDoubleBuffered(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetDoubleBuffered)
    return (BOOL)MySyscall(pCheckComboBox_GetDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetDoubleBuffered)
void
CheckComboBox_SetDoubleBuffered(TCheckComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetDoubleBuffered)
    MySyscall(pCheckComboBox_SetDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetMouseInClient)
BOOL
CheckComboBox_GetMouseInClient(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetMouseInClient)
    return (BOOL)MySyscall(pCheckComboBox_GetMouseInClient, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetVisibleDockClientCount)
int32_t
CheckComboBox_GetVisibleDockClientCount(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetVisibleDockClientCount)
    return (int32_t)MySyscall(pCheckComboBox_GetVisibleDockClientCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetBrush)
TBrush
CheckComboBox_GetBrush(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetBrush)
    return (TBrush)MySyscall(pCheckComboBox_GetBrush, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetControlCount)
int32_t
CheckComboBox_GetControlCount(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetControlCount)
    return (int32_t)MySyscall(pCheckComboBox_GetControlCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetHandle)
HWND
CheckComboBox_GetHandle(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetHandle)
    return (HWND)MySyscall(pCheckComboBox_GetHandle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetParentDoubleBuffered)
BOOL
CheckComboBox_GetParentDoubleBuffered(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetParentDoubleBuffered)
    return (BOOL)MySyscall(pCheckComboBox_GetParentDoubleBuffered, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetParentDoubleBuffered)
void
CheckComboBox_SetParentDoubleBuffered(TCheckComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetParentDoubleBuffered)
    MySyscall(pCheckComboBox_SetParentDoubleBuffered, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetParentWindow)
HWND
CheckComboBox_GetParentWindow(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetParentWindow)
    return (HWND)MySyscall(pCheckComboBox_GetParentWindow, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetParentWindow)
void
CheckComboBox_SetParentWindow(TCheckComboBox AObj, HWND AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetParentWindow)
    MySyscall(pCheckComboBox_SetParentWindow, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetShowing)
BOOL
CheckComboBox_GetShowing(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetShowing)
    return (BOOL)MySyscall(pCheckComboBox_GetShowing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetUseDockManager)
BOOL
CheckComboBox_GetUseDockManager(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetUseDockManager)
    return (BOOL)MySyscall(pCheckComboBox_GetUseDockManager, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetUseDockManager)
void
CheckComboBox_SetUseDockManager(TCheckComboBox AObj, BOOL AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetUseDockManager)
    MySyscall(pCheckComboBox_SetUseDockManager, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetAction)
TAction
CheckComboBox_GetAction(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetAction)
    return (TAction)MySyscall(pCheckComboBox_GetAction, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetAction)
void
CheckComboBox_SetAction(TCheckComboBox AObj, TAction AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetAction)
    MySyscall(pCheckComboBox_SetAction, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetBiDiMode)
TBiDiMode
CheckComboBox_GetBiDiMode(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetBiDiMode)
    return (TBiDiMode)MySyscall(pCheckComboBox_GetBiDiMode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetBiDiMode)
void
CheckComboBox_SetBiDiMode(TCheckComboBox AObj, TBiDiMode AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetBiDiMode)
    MySyscall(pCheckComboBox_SetBiDiMode, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetBoundsRect)
TRect
CheckComboBox_GetBoundsRect(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetBoundsRect)
    TRect result;
    MySyscall(pCheckComboBox_GetBoundsRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckComboBox_SetBoundsRect)
void
CheckComboBox_SetBoundsRect(TCheckComboBox AObj, TRect AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetBoundsRect)
    MySyscall(pCheckComboBox_SetBoundsRect, 2, AObj, &AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetClientHeight)
int32_t
CheckComboBox_GetClientHeight(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetClientHeight)
    return (int32_t)MySyscall(pCheckComboBox_GetClientHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetClientHeight)
void
CheckComboBox_SetClientHeight(TCheckComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetClientHeight)
    MySyscall(pCheckComboBox_SetClientHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetClientOrigin)
TPoint
CheckComboBox_GetClientOrigin(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetClientOrigin)
    TPoint result;
    MySyscall(pCheckComboBox_GetClientOrigin, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckComboBox_GetClientRect)
TRect
CheckComboBox_GetClientRect(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetClientRect)
    TRect result;
    MySyscall(pCheckComboBox_GetClientRect, 2, AObj, &result ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
    return result;
}

DEFINE_FUNC_PTR(CheckComboBox_GetClientWidth)
int32_t
CheckComboBox_GetClientWidth(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetClientWidth)
    return (int32_t)MySyscall(pCheckComboBox_GetClientWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetClientWidth)
void
CheckComboBox_SetClientWidth(TCheckComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetClientWidth)
    MySyscall(pCheckComboBox_SetClientWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetControlState)
TControlState
CheckComboBox_GetControlState(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetControlState)
    return (TControlState)MySyscall(pCheckComboBox_GetControlState, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetControlState)
void
CheckComboBox_SetControlState(TCheckComboBox AObj, TControlState AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetControlState)
    MySyscall(pCheckComboBox_SetControlState, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetControlStyle)
TControlStyle
CheckComboBox_GetControlStyle(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetControlStyle)
    return (TControlStyle)MySyscall(pCheckComboBox_GetControlStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetControlStyle)
void
CheckComboBox_SetControlStyle(TCheckComboBox AObj, TControlStyle AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetControlStyle)
    MySyscall(pCheckComboBox_SetControlStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetFloating)
BOOL
CheckComboBox_GetFloating(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetFloating)
    return (BOOL)MySyscall(pCheckComboBox_GetFloating, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetParent)
TWinControl
CheckComboBox_GetParent(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetParent)
    return (TWinControl)MySyscall(pCheckComboBox_GetParent, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetParent)
void
CheckComboBox_SetParent(TCheckComboBox AObj, TWinControl AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetParent)
    MySyscall(pCheckComboBox_SetParent, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetLeft)
int32_t
CheckComboBox_GetLeft(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetLeft)
    return (int32_t)MySyscall(pCheckComboBox_GetLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetLeft)
void
CheckComboBox_SetLeft(TCheckComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetLeft)
    MySyscall(pCheckComboBox_SetLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetTop)
int32_t
CheckComboBox_GetTop(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetTop)
    return (int32_t)MySyscall(pCheckComboBox_GetTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetTop)
void
CheckComboBox_SetTop(TCheckComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetTop)
    MySyscall(pCheckComboBox_SetTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetWidth)
int32_t
CheckComboBox_GetWidth(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetWidth)
    return (int32_t)MySyscall(pCheckComboBox_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetWidth)
void
CheckComboBox_SetWidth(TCheckComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetWidth)
    MySyscall(pCheckComboBox_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetHeight)
int32_t
CheckComboBox_GetHeight(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetHeight)
    return (int32_t)MySyscall(pCheckComboBox_GetHeight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetHeight)
void
CheckComboBox_SetHeight(TCheckComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetHeight)
    MySyscall(pCheckComboBox_SetHeight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetCursor)
TCursor
CheckComboBox_GetCursor(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetCursor)
    return (TCursor)MySyscall(pCheckComboBox_GetCursor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetCursor)
void
CheckComboBox_SetCursor(TCheckComboBox AObj, TCursor AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetCursor)
    MySyscall(pCheckComboBox_SetCursor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetHint)
char*
CheckComboBox_GetHint(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetHint)
    return (char*)MySyscall(pCheckComboBox_GetHint, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetHint)
void
CheckComboBox_SetHint(TCheckComboBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetHint)
    MySyscall(pCheckComboBox_SetHint, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetComponentCount)
int32_t
CheckComboBox_GetComponentCount(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetComponentCount)
    return (int32_t)MySyscall(pCheckComboBox_GetComponentCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetComponentIndex)
int32_t
CheckComboBox_GetComponentIndex(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetComponentIndex)
    return (int32_t)MySyscall(pCheckComboBox_GetComponentIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetComponentIndex)
void
CheckComboBox_SetComponentIndex(TCheckComboBox AObj, int32_t AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetComponentIndex)
    MySyscall(pCheckComboBox_SetComponentIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetOwner)
TComponent
CheckComboBox_GetOwner(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetOwner)
    return (TComponent)MySyscall(pCheckComboBox_GetOwner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetName)
char*
CheckComboBox_GetName(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetName)
    return (char*)MySyscall(pCheckComboBox_GetName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetName)
void
CheckComboBox_SetName(TCheckComboBox AObj, CChar char* AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetName)
    MySyscall(pCheckComboBox_SetName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetTag)
intptr_t
CheckComboBox_GetTag(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetTag)
    return (intptr_t)MySyscall(pCheckComboBox_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetTag)
void
CheckComboBox_SetTag(TCheckComboBox AObj, intptr_t AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetTag)
    MySyscall(pCheckComboBox_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetAnchorSideLeft)
TAnchorSide
CheckComboBox_GetAnchorSideLeft(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetAnchorSideLeft)
    return (TAnchorSide)MySyscall(pCheckComboBox_GetAnchorSideLeft, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetAnchorSideLeft)
void
CheckComboBox_SetAnchorSideLeft(TCheckComboBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetAnchorSideLeft)
    MySyscall(pCheckComboBox_SetAnchorSideLeft, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetAnchorSideTop)
TAnchorSide
CheckComboBox_GetAnchorSideTop(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetAnchorSideTop)
    return (TAnchorSide)MySyscall(pCheckComboBox_GetAnchorSideTop, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetAnchorSideTop)
void
CheckComboBox_SetAnchorSideTop(TCheckComboBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetAnchorSideTop)
    MySyscall(pCheckComboBox_SetAnchorSideTop, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetAnchorSideRight)
TAnchorSide
CheckComboBox_GetAnchorSideRight(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetAnchorSideRight)
    return (TAnchorSide)MySyscall(pCheckComboBox_GetAnchorSideRight, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetAnchorSideRight)
void
CheckComboBox_SetAnchorSideRight(TCheckComboBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetAnchorSideRight)
    MySyscall(pCheckComboBox_SetAnchorSideRight, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetAnchorSideBottom)
TAnchorSide
CheckComboBox_GetAnchorSideBottom(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetAnchorSideBottom)
    return (TAnchorSide)MySyscall(pCheckComboBox_GetAnchorSideBottom, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetAnchorSideBottom)
void
CheckComboBox_SetAnchorSideBottom(TCheckComboBox AObj, TAnchorSide AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetAnchorSideBottom)
    MySyscall(pCheckComboBox_SetAnchorSideBottom, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetChildSizing)
TControlChildSizing
CheckComboBox_GetChildSizing(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetChildSizing)
    return (TControlChildSizing)MySyscall(pCheckComboBox_GetChildSizing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetChildSizing)
void
CheckComboBox_SetChildSizing(TCheckComboBox AObj, TControlChildSizing AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetChildSizing)
    MySyscall(pCheckComboBox_SetChildSizing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetBorderSpacing)
TControlBorderSpacing
CheckComboBox_GetBorderSpacing(TCheckComboBox AObj) {
    GET_FUNC_ADDR(CheckComboBox_GetBorderSpacing)
    return (TControlBorderSpacing)MySyscall(pCheckComboBox_GetBorderSpacing, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetBorderSpacing)
void
CheckComboBox_SetBorderSpacing(TCheckComboBox AObj, TControlBorderSpacing AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetBorderSpacing)
    MySyscall(pCheckComboBox_SetBorderSpacing, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetChecked)
BOOL
CheckComboBox_GetChecked(TCheckComboBox AObj, int32_t AIndex) {
    GET_FUNC_ADDR(CheckComboBox_GetChecked)
    return (BOOL)MySyscall(pCheckComboBox_GetChecked, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetChecked)
void
CheckComboBox_SetChecked(TCheckComboBox AObj, int32_t AIndex, BOOL AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetChecked)
    MySyscall(pCheckComboBox_SetChecked, 3, AObj, AIndex, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetItemEnabled)
BOOL
CheckComboBox_GetItemEnabled(TCheckComboBox AObj, int32_t AIndex) {
    GET_FUNC_ADDR(CheckComboBox_GetItemEnabled)
    return (BOOL)MySyscall(pCheckComboBox_GetItemEnabled, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetItemEnabled)
void
CheckComboBox_SetItemEnabled(TCheckComboBox AObj, int32_t AIndex, BOOL AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetItemEnabled)
    MySyscall(pCheckComboBox_SetItemEnabled, 3, AObj, AIndex, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetObjects)
TObject
CheckComboBox_GetObjects(TCheckComboBox AObj, int32_t AIndex) {
    GET_FUNC_ADDR(CheckComboBox_GetObjects)
    return (TObject)MySyscall(pCheckComboBox_GetObjects, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetObjects)
void
CheckComboBox_SetObjects(TCheckComboBox AObj, int32_t AIndex, TObject AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetObjects)
    MySyscall(pCheckComboBox_SetObjects, 3, AObj, AIndex, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetState)
TCheckBoxState
CheckComboBox_GetState(TCheckComboBox AObj, int32_t AIndex) {
    GET_FUNC_ADDR(CheckComboBox_GetState)
    return (TCheckBoxState)MySyscall(pCheckComboBox_GetState, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_SetState)
void
CheckComboBox_SetState(TCheckComboBox AObj, int32_t AIndex, TCheckBoxState AValue) {
    GET_FUNC_ADDR(CheckComboBox_SetState)
    MySyscall(pCheckComboBox_SetState, 3, AObj, AIndex, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetDockClients)
TControl
CheckComboBox_GetDockClients(TCheckComboBox AObj, int32_t Index) {
    GET_FUNC_ADDR(CheckComboBox_GetDockClients)
    return (TControl)MySyscall(pCheckComboBox_GetDockClients, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetControls)
TControl
CheckComboBox_GetControls(TCheckComboBox AObj, int32_t Index) {
    GET_FUNC_ADDR(CheckComboBox_GetControls)
    return (TControl)MySyscall(pCheckComboBox_GetControls, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetComponents)
TComponent
CheckComboBox_GetComponents(TCheckComboBox AObj, int32_t AIndex) {
    GET_FUNC_ADDR(CheckComboBox_GetComponents)
    return (TComponent)MySyscall(pCheckComboBox_GetComponents, 2, AObj, AIndex ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_GetAnchorSide)
TAnchorSide
CheckComboBox_GetAnchorSide(TCheckComboBox AObj, TAnchorKind AKind) {
    GET_FUNC_ADDR(CheckComboBox_GetAnchorSide)
    return (TAnchorSide)MySyscall(pCheckComboBox_GetAnchorSide, 2, AObj, AKind ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(CheckComboBox_StaticClassType)
TClass
CheckComboBox_StaticClassType() {
    GET_FUNC_ADDR(CheckComboBox_StaticClassType)
    return (TClass)MySyscall(pCheckComboBox_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TGridColumnTitle-------------------

DEFINE_FUNC_PTR(GridColumnTitle_Assign)
void
GridColumnTitle_Assign(TGridColumnTitle AObj, TObject Source) {
    GET_FUNC_ADDR(GridColumnTitle_Assign)
    MySyscall(pGridColumnTitle_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_FillTitleDefaultFont)
void
GridColumnTitle_FillTitleDefaultFont(TGridColumnTitle AObj) {
    GET_FUNC_ADDR(GridColumnTitle_FillTitleDefaultFont)
    MySyscall(pGridColumnTitle_FillTitleDefaultFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_FixDesignFontsPPI)
void
GridColumnTitle_FixDesignFontsPPI(TGridColumnTitle AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(GridColumnTitle_FixDesignFontsPPI)
    MySyscall(pGridColumnTitle_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_ScaleFontsPPI)
void
GridColumnTitle_ScaleFontsPPI(TGridColumnTitle AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(GridColumnTitle_ScaleFontsPPI)
    MySyscall(pGridColumnTitle_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_IsDefault)
BOOL
GridColumnTitle_IsDefault(TGridColumnTitle AObj) {
    GET_FUNC_ADDR(GridColumnTitle_IsDefault)
    return (BOOL)MySyscall(pGridColumnTitle_IsDefault, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_GetNamePath)
char*
GridColumnTitle_GetNamePath(TGridColumnTitle AObj) {
    GET_FUNC_ADDR(GridColumnTitle_GetNamePath)
    return (char*)MySyscall(pGridColumnTitle_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_ClassType)
TClass
GridColumnTitle_ClassType(TGridColumnTitle AObj) {
    GET_FUNC_ADDR(GridColumnTitle_ClassType)
    return (TClass)MySyscall(pGridColumnTitle_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_ClassName)
char*
GridColumnTitle_ClassName(TGridColumnTitle AObj) {
    GET_FUNC_ADDR(GridColumnTitle_ClassName)
    return (char*)MySyscall(pGridColumnTitle_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_InstanceSize)
int32_t
GridColumnTitle_InstanceSize(TGridColumnTitle AObj) {
    GET_FUNC_ADDR(GridColumnTitle_InstanceSize)
    return (int32_t)MySyscall(pGridColumnTitle_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_InheritsFrom)
BOOL
GridColumnTitle_InheritsFrom(TGridColumnTitle AObj, TClass AClass) {
    GET_FUNC_ADDR(GridColumnTitle_InheritsFrom)
    return (BOOL)MySyscall(pGridColumnTitle_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_Equals)
BOOL
GridColumnTitle_Equals(TGridColumnTitle AObj, TObject Obj) {
    GET_FUNC_ADDR(GridColumnTitle_Equals)
    return (BOOL)MySyscall(pGridColumnTitle_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_GetHashCode)
int32_t
GridColumnTitle_GetHashCode(TGridColumnTitle AObj) {
    GET_FUNC_ADDR(GridColumnTitle_GetHashCode)
    return (int32_t)MySyscall(pGridColumnTitle_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_ToString)
char*
GridColumnTitle_ToString(TGridColumnTitle AObj) {
    GET_FUNC_ADDR(GridColumnTitle_ToString)
    return (char*)MySyscall(pGridColumnTitle_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_GetColumn)
TGridColumn
GridColumnTitle_GetColumn(TGridColumnTitle AObj) {
    GET_FUNC_ADDR(GridColumnTitle_GetColumn)
    return (TGridColumn)MySyscall(pGridColumnTitle_GetColumn, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_GetAlignment)
TAlignment
GridColumnTitle_GetAlignment(TGridColumnTitle AObj) {
    GET_FUNC_ADDR(GridColumnTitle_GetAlignment)
    return (TAlignment)MySyscall(pGridColumnTitle_GetAlignment, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_SetAlignment)
void
GridColumnTitle_SetAlignment(TGridColumnTitle AObj, TAlignment AValue) {
    GET_FUNC_ADDR(GridColumnTitle_SetAlignment)
    MySyscall(pGridColumnTitle_SetAlignment, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_GetCaption)
char*
GridColumnTitle_GetCaption(TGridColumnTitle AObj) {
    GET_FUNC_ADDR(GridColumnTitle_GetCaption)
    return (char*)MySyscall(pGridColumnTitle_GetCaption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_SetCaption)
void
GridColumnTitle_SetCaption(TGridColumnTitle AObj, CChar char* AValue) {
    GET_FUNC_ADDR(GridColumnTitle_SetCaption)
    MySyscall(pGridColumnTitle_SetCaption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_GetColor)
TColor
GridColumnTitle_GetColor(TGridColumnTitle AObj) {
    GET_FUNC_ADDR(GridColumnTitle_GetColor)
    return (TColor)MySyscall(pGridColumnTitle_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_SetColor)
void
GridColumnTitle_SetColor(TGridColumnTitle AObj, TColor AValue) {
    GET_FUNC_ADDR(GridColumnTitle_SetColor)
    MySyscall(pGridColumnTitle_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_GetFont)
TFont
GridColumnTitle_GetFont(TGridColumnTitle AObj) {
    GET_FUNC_ADDR(GridColumnTitle_GetFont)
    return (TFont)MySyscall(pGridColumnTitle_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_SetFont)
void
GridColumnTitle_SetFont(TGridColumnTitle AObj, TFont AValue) {
    GET_FUNC_ADDR(GridColumnTitle_SetFont)
    MySyscall(pGridColumnTitle_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_GetImageIndex)
int32_t
GridColumnTitle_GetImageIndex(TGridColumnTitle AObj) {
    GET_FUNC_ADDR(GridColumnTitle_GetImageIndex)
    return (int32_t)MySyscall(pGridColumnTitle_GetImageIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_SetImageIndex)
void
GridColumnTitle_SetImageIndex(TGridColumnTitle AObj, int32_t AValue) {
    GET_FUNC_ADDR(GridColumnTitle_SetImageIndex)
    MySyscall(pGridColumnTitle_SetImageIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_GetImageLayout)
TButtonLayout
GridColumnTitle_GetImageLayout(TGridColumnTitle AObj) {
    GET_FUNC_ADDR(GridColumnTitle_GetImageLayout)
    return (TButtonLayout)MySyscall(pGridColumnTitle_GetImageLayout, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_SetImageLayout)
void
GridColumnTitle_SetImageLayout(TGridColumnTitle AObj, TButtonLayout AValue) {
    GET_FUNC_ADDR(GridColumnTitle_SetImageLayout)
    MySyscall(pGridColumnTitle_SetImageLayout, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_GetLayout)
TTextLayout
GridColumnTitle_GetLayout(TGridColumnTitle AObj) {
    GET_FUNC_ADDR(GridColumnTitle_GetLayout)
    return (TTextLayout)MySyscall(pGridColumnTitle_GetLayout, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_SetLayout)
void
GridColumnTitle_SetLayout(TGridColumnTitle AObj, TTextLayout AValue) {
    GET_FUNC_ADDR(GridColumnTitle_SetLayout)
    MySyscall(pGridColumnTitle_SetLayout, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_GetMultiLine)
BOOL
GridColumnTitle_GetMultiLine(TGridColumnTitle AObj) {
    GET_FUNC_ADDR(GridColumnTitle_GetMultiLine)
    return (BOOL)MySyscall(pGridColumnTitle_GetMultiLine, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_SetMultiLine)
void
GridColumnTitle_SetMultiLine(TGridColumnTitle AObj, BOOL AValue) {
    GET_FUNC_ADDR(GridColumnTitle_SetMultiLine)
    MySyscall(pGridColumnTitle_SetMultiLine, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_GetPrefixOption)
TPrefixOption
GridColumnTitle_GetPrefixOption(TGridColumnTitle AObj) {
    GET_FUNC_ADDR(GridColumnTitle_GetPrefixOption)
    return (TPrefixOption)MySyscall(pGridColumnTitle_GetPrefixOption, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_SetPrefixOption)
void
GridColumnTitle_SetPrefixOption(TGridColumnTitle AObj, TPrefixOption AValue) {
    GET_FUNC_ADDR(GridColumnTitle_SetPrefixOption)
    MySyscall(pGridColumnTitle_SetPrefixOption, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumnTitle_StaticClassType)
TClass
GridColumnTitle_StaticClassType() {
    GET_FUNC_ADDR(GridColumnTitle_StaticClassType)
    return (TClass)MySyscall(pGridColumnTitle_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TGridColumn-------------------

DEFINE_FUNC_PTR(GridColumn_Assign)
void
GridColumn_Assign(TGridColumn AObj, TObject Source) {
    GET_FUNC_ADDR(GridColumn_Assign)
    MySyscall(pGridColumn_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_FixDesignFontsPPI)
void
GridColumn_FixDesignFontsPPI(TGridColumn AObj, int32_t ADesignTimePPI) {
    GET_FUNC_ADDR(GridColumn_FixDesignFontsPPI)
    MySyscall(pGridColumn_FixDesignFontsPPI, 2, AObj, ADesignTimePPI ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_ScaleFontsPPI)
void
GridColumn_ScaleFontsPPI(TGridColumn AObj, int32_t AToPPI, double AProportion) {
    GET_FUNC_ADDR(GridColumn_ScaleFontsPPI)
    MySyscall(pGridColumn_ScaleFontsPPI, 3, AObj, AToPPI, &AProportion ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_IsDefault)
BOOL
GridColumn_IsDefault(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_IsDefault)
    return (BOOL)MySyscall(pGridColumn_IsDefault, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetNamePath)
char*
GridColumn_GetNamePath(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetNamePath)
    return (char*)MySyscall(pGridColumn_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_ClassType)
TClass
GridColumn_ClassType(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_ClassType)
    return (TClass)MySyscall(pGridColumn_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_ClassName)
char*
GridColumn_ClassName(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_ClassName)
    return (char*)MySyscall(pGridColumn_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_InstanceSize)
int32_t
GridColumn_InstanceSize(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_InstanceSize)
    return (int32_t)MySyscall(pGridColumn_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_InheritsFrom)
BOOL
GridColumn_InheritsFrom(TGridColumn AObj, TClass AClass) {
    GET_FUNC_ADDR(GridColumn_InheritsFrom)
    return (BOOL)MySyscall(pGridColumn_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_Equals)
BOOL
GridColumn_Equals(TGridColumn AObj, TObject Obj) {
    GET_FUNC_ADDR(GridColumn_Equals)
    return (BOOL)MySyscall(pGridColumn_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetHashCode)
int32_t
GridColumn_GetHashCode(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetHashCode)
    return (int32_t)MySyscall(pGridColumn_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_ToString)
char*
GridColumn_ToString(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_ToString)
    return (char*)MySyscall(pGridColumn_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetGrid)
TStringGrid
GridColumn_GetGrid(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetGrid)
    return (TStringGrid)MySyscall(pGridColumn_GetGrid, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetDefaultWidth)
int32_t
GridColumn_GetDefaultWidth(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetDefaultWidth)
    return (int32_t)MySyscall(pGridColumn_GetDefaultWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetStoredWidth)
int32_t
GridColumn_GetStoredWidth(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetStoredWidth)
    return (int32_t)MySyscall(pGridColumn_GetStoredWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetWidthChanged)
BOOL
GridColumn_GetWidthChanged(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetWidthChanged)
    return (BOOL)MySyscall(pGridColumn_GetWidthChanged, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetAlignment)
TAlignment
GridColumn_GetAlignment(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetAlignment)
    return (TAlignment)MySyscall(pGridColumn_GetAlignment, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_SetAlignment)
void
GridColumn_SetAlignment(TGridColumn AObj, TAlignment AValue) {
    GET_FUNC_ADDR(GridColumn_SetAlignment)
    MySyscall(pGridColumn_SetAlignment, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetButtonStyle)
TColumnButtonStyle
GridColumn_GetButtonStyle(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetButtonStyle)
    return (TColumnButtonStyle)MySyscall(pGridColumn_GetButtonStyle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_SetButtonStyle)
void
GridColumn_SetButtonStyle(TGridColumn AObj, TColumnButtonStyle AValue) {
    GET_FUNC_ADDR(GridColumn_SetButtonStyle)
    MySyscall(pGridColumn_SetButtonStyle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetColor)
TColor
GridColumn_GetColor(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetColor)
    return (TColor)MySyscall(pGridColumn_GetColor, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_SetColor)
void
GridColumn_SetColor(TGridColumn AObj, TColor AValue) {
    GET_FUNC_ADDR(GridColumn_SetColor)
    MySyscall(pGridColumn_SetColor, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetDropDownRows)
int32_t
GridColumn_GetDropDownRows(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetDropDownRows)
    return (int32_t)MySyscall(pGridColumn_GetDropDownRows, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_SetDropDownRows)
void
GridColumn_SetDropDownRows(TGridColumn AObj, int32_t AValue) {
    GET_FUNC_ADDR(GridColumn_SetDropDownRows)
    MySyscall(pGridColumn_SetDropDownRows, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetExpanded)
BOOL
GridColumn_GetExpanded(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetExpanded)
    return (BOOL)MySyscall(pGridColumn_GetExpanded, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_SetExpanded)
void
GridColumn_SetExpanded(TGridColumn AObj, BOOL AValue) {
    GET_FUNC_ADDR(GridColumn_SetExpanded)
    MySyscall(pGridColumn_SetExpanded, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetFont)
TFont
GridColumn_GetFont(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetFont)
    return (TFont)MySyscall(pGridColumn_GetFont, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_SetFont)
void
GridColumn_SetFont(TGridColumn AObj, TFont AValue) {
    GET_FUNC_ADDR(GridColumn_SetFont)
    MySyscall(pGridColumn_SetFont, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetLayout)
TTextLayout
GridColumn_GetLayout(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetLayout)
    return (TTextLayout)MySyscall(pGridColumn_GetLayout, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_SetLayout)
void
GridColumn_SetLayout(TGridColumn AObj, TTextLayout AValue) {
    GET_FUNC_ADDR(GridColumn_SetLayout)
    MySyscall(pGridColumn_SetLayout, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetMinSize)
int32_t
GridColumn_GetMinSize(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetMinSize)
    return (int32_t)MySyscall(pGridColumn_GetMinSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_SetMinSize)
void
GridColumn_SetMinSize(TGridColumn AObj, int32_t AValue) {
    GET_FUNC_ADDR(GridColumn_SetMinSize)
    MySyscall(pGridColumn_SetMinSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetMaxSize)
int32_t
GridColumn_GetMaxSize(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetMaxSize)
    return (int32_t)MySyscall(pGridColumn_GetMaxSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_SetMaxSize)
void
GridColumn_SetMaxSize(TGridColumn AObj, int32_t AValue) {
    GET_FUNC_ADDR(GridColumn_SetMaxSize)
    MySyscall(pGridColumn_SetMaxSize, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetPickList)
TStrings
GridColumn_GetPickList(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetPickList)
    return (TStrings)MySyscall(pGridColumn_GetPickList, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_SetPickList)
void
GridColumn_SetPickList(TGridColumn AObj, TStrings AValue) {
    GET_FUNC_ADDR(GridColumn_SetPickList)
    MySyscall(pGridColumn_SetPickList, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetReadOnly)
BOOL
GridColumn_GetReadOnly(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetReadOnly)
    return (BOOL)MySyscall(pGridColumn_GetReadOnly, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_SetReadOnly)
void
GridColumn_SetReadOnly(TGridColumn AObj, BOOL AValue) {
    GET_FUNC_ADDR(GridColumn_SetReadOnly)
    MySyscall(pGridColumn_SetReadOnly, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetSizePriority)
int32_t
GridColumn_GetSizePriority(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetSizePriority)
    return (int32_t)MySyscall(pGridColumn_GetSizePriority, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_SetSizePriority)
void
GridColumn_SetSizePriority(TGridColumn AObj, int32_t AValue) {
    GET_FUNC_ADDR(GridColumn_SetSizePriority)
    MySyscall(pGridColumn_SetSizePriority, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetTag)
intptr_t
GridColumn_GetTag(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetTag)
    return (intptr_t)MySyscall(pGridColumn_GetTag, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_SetTag)
void
GridColumn_SetTag(TGridColumn AObj, intptr_t AValue) {
    GET_FUNC_ADDR(GridColumn_SetTag)
    MySyscall(pGridColumn_SetTag, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetTitle)
TGridColumnTitle
GridColumn_GetTitle(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetTitle)
    return (TGridColumnTitle)MySyscall(pGridColumn_GetTitle, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_SetTitle)
void
GridColumn_SetTitle(TGridColumn AObj, TGridColumnTitle AValue) {
    GET_FUNC_ADDR(GridColumn_SetTitle)
    MySyscall(pGridColumn_SetTitle, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetWidth)
int32_t
GridColumn_GetWidth(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetWidth)
    return (int32_t)MySyscall(pGridColumn_GetWidth, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_SetWidth)
void
GridColumn_SetWidth(TGridColumn AObj, int32_t AValue) {
    GET_FUNC_ADDR(GridColumn_SetWidth)
    MySyscall(pGridColumn_SetWidth, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetVisible)
BOOL
GridColumn_GetVisible(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetVisible)
    return (BOOL)MySyscall(pGridColumn_GetVisible, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_SetVisible)
void
GridColumn_SetVisible(TGridColumn AObj, BOOL AValue) {
    GET_FUNC_ADDR(GridColumn_SetVisible)
    MySyscall(pGridColumn_SetVisible, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetValueChecked)
char*
GridColumn_GetValueChecked(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetValueChecked)
    return (char*)MySyscall(pGridColumn_GetValueChecked, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_SetValueChecked)
void
GridColumn_SetValueChecked(TGridColumn AObj, CChar char* AValue) {
    GET_FUNC_ADDR(GridColumn_SetValueChecked)
    MySyscall(pGridColumn_SetValueChecked, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetValueUnchecked)
char*
GridColumn_GetValueUnchecked(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetValueUnchecked)
    return (char*)MySyscall(pGridColumn_GetValueUnchecked, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_SetValueUnchecked)
void
GridColumn_SetValueUnchecked(TGridColumn AObj, CChar char* AValue) {
    GET_FUNC_ADDR(GridColumn_SetValueUnchecked)
    MySyscall(pGridColumn_SetValueUnchecked, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetCollection)
TCollection
GridColumn_GetCollection(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetCollection)
    return (TCollection)MySyscall(pGridColumn_GetCollection, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_SetCollection)
void
GridColumn_SetCollection(TGridColumn AObj, TCollection AValue) {
    GET_FUNC_ADDR(GridColumn_SetCollection)
    MySyscall(pGridColumn_SetCollection, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetIndex)
int32_t
GridColumn_GetIndex(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetIndex)
    return (int32_t)MySyscall(pGridColumn_GetIndex, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_SetIndex)
void
GridColumn_SetIndex(TGridColumn AObj, int32_t AValue) {
    GET_FUNC_ADDR(GridColumn_SetIndex)
    MySyscall(pGridColumn_SetIndex, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_GetDisplayName)
char*
GridColumn_GetDisplayName(TGridColumn AObj) {
    GET_FUNC_ADDR(GridColumn_GetDisplayName)
    return (char*)MySyscall(pGridColumn_GetDisplayName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_SetDisplayName)
void
GridColumn_SetDisplayName(TGridColumn AObj, CChar char* AValue) {
    GET_FUNC_ADDR(GridColumn_SetDisplayName)
    MySyscall(pGridColumn_SetDisplayName, 2, AObj, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumn_StaticClassType)
TClass
GridColumn_StaticClassType() {
    GET_FUNC_ADDR(GridColumn_StaticClassType)
    return (TClass)MySyscall(pGridColumn_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

// -------------------TGridColumns-------------------

DEFINE_FUNC_PTR(GridColumns_Add)
TGridColumn
GridColumns_Add(TGridColumns AObj) {
    GET_FUNC_ADDR(GridColumns_Add)
    return (TGridColumn)MySyscall(pGridColumns_Add, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_Clear)
void
GridColumns_Clear(TGridColumns AObj) {
    GET_FUNC_ADDR(GridColumns_Clear)
    MySyscall(pGridColumns_Clear, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_RealIndex)
int32_t
GridColumns_RealIndex(TGridColumns AObj, int32_t Index) {
    GET_FUNC_ADDR(GridColumns_RealIndex)
    return (int32_t)MySyscall(pGridColumns_RealIndex, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_IndexOf)
int32_t
GridColumns_IndexOf(TGridColumns AObj, TGridColumn Column) {
    GET_FUNC_ADDR(GridColumns_IndexOf)
    return (int32_t)MySyscall(pGridColumns_IndexOf, 2, AObj, Column ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_IsDefault)
BOOL
GridColumns_IsDefault(TGridColumns AObj) {
    GET_FUNC_ADDR(GridColumns_IsDefault)
    return (BOOL)MySyscall(pGridColumns_IsDefault, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_HasIndex)
BOOL
GridColumns_HasIndex(TGridColumns AObj, int32_t Index) {
    GET_FUNC_ADDR(GridColumns_HasIndex)
    return (BOOL)MySyscall(pGridColumns_HasIndex, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_Owner)
TObject
GridColumns_Owner(TGridColumns AObj) {
    GET_FUNC_ADDR(GridColumns_Owner)
    return (TObject)MySyscall(pGridColumns_Owner, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_Assign)
void
GridColumns_Assign(TGridColumns AObj, TObject Source) {
    GET_FUNC_ADDR(GridColumns_Assign)
    MySyscall(pGridColumns_Assign, 2, AObj, Source ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_BeginUpdate)
void
GridColumns_BeginUpdate(TGridColumns AObj) {
    GET_FUNC_ADDR(GridColumns_BeginUpdate)
    MySyscall(pGridColumns_BeginUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_Delete)
void
GridColumns_Delete(TGridColumns AObj, int32_t Index) {
    GET_FUNC_ADDR(GridColumns_Delete)
    MySyscall(pGridColumns_Delete, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_EndUpdate)
void
GridColumns_EndUpdate(TGridColumns AObj) {
    GET_FUNC_ADDR(GridColumns_EndUpdate)
    MySyscall(pGridColumns_EndUpdate, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_FindItemID)
TCollectionItem
GridColumns_FindItemID(TGridColumns AObj, int32_t ID) {
    GET_FUNC_ADDR(GridColumns_FindItemID)
    return (TCollectionItem)MySyscall(pGridColumns_FindItemID, 2, AObj, ID ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_GetNamePath)
char*
GridColumns_GetNamePath(TGridColumns AObj) {
    GET_FUNC_ADDR(GridColumns_GetNamePath)
    return (char*)MySyscall(pGridColumns_GetNamePath, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_Insert)
TCollectionItem
GridColumns_Insert(TGridColumns AObj, int32_t Index) {
    GET_FUNC_ADDR(GridColumns_Insert)
    return (TCollectionItem)MySyscall(pGridColumns_Insert, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_ClassType)
TClass
GridColumns_ClassType(TGridColumns AObj) {
    GET_FUNC_ADDR(GridColumns_ClassType)
    return (TClass)MySyscall(pGridColumns_ClassType, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_ClassName)
char*
GridColumns_ClassName(TGridColumns AObj) {
    GET_FUNC_ADDR(GridColumns_ClassName)
    return (char*)MySyscall(pGridColumns_ClassName, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_InstanceSize)
int32_t
GridColumns_InstanceSize(TGridColumns AObj) {
    GET_FUNC_ADDR(GridColumns_InstanceSize)
    return (int32_t)MySyscall(pGridColumns_InstanceSize, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_InheritsFrom)
BOOL
GridColumns_InheritsFrom(TGridColumns AObj, TClass AClass) {
    GET_FUNC_ADDR(GridColumns_InheritsFrom)
    return (BOOL)MySyscall(pGridColumns_InheritsFrom, 2, AObj, AClass ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_Equals)
BOOL
GridColumns_Equals(TGridColumns AObj, TObject Obj) {
    GET_FUNC_ADDR(GridColumns_Equals)
    return (BOOL)MySyscall(pGridColumns_Equals, 2, AObj, Obj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_GetHashCode)
int32_t
GridColumns_GetHashCode(TGridColumns AObj) {
    GET_FUNC_ADDR(GridColumns_GetHashCode)
    return (int32_t)MySyscall(pGridColumns_GetHashCode, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_ToString)
char*
GridColumns_ToString(TGridColumns AObj) {
    GET_FUNC_ADDR(GridColumns_ToString)
    return (char*)MySyscall(pGridColumns_ToString, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_GetGrid)
TStringGrid
GridColumns_GetGrid(TGridColumns AObj) {
    GET_FUNC_ADDR(GridColumns_GetGrid)
    return (TStringGrid)MySyscall(pGridColumns_GetGrid, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_GetVisibleCount)
int32_t
GridColumns_GetVisibleCount(TGridColumns AObj) {
    GET_FUNC_ADDR(GridColumns_GetVisibleCount)
    return (int32_t)MySyscall(pGridColumns_GetVisibleCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_GetEnabled)
BOOL
GridColumns_GetEnabled(TGridColumns AObj) {
    GET_FUNC_ADDR(GridColumns_GetEnabled)
    return (BOOL)MySyscall(pGridColumns_GetEnabled, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_GetCount)
int32_t
GridColumns_GetCount(TGridColumns AObj) {
    GET_FUNC_ADDR(GridColumns_GetCount)
    return (int32_t)MySyscall(pGridColumns_GetCount, 1, AObj ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_GetItems)
TGridColumn
GridColumns_GetItems(TGridColumns AObj, int32_t Index) {
    GET_FUNC_ADDR(GridColumns_GetItems)
    return (TGridColumn)MySyscall(pGridColumns_GetItems, 2, AObj, Index ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_SetItems)
void
GridColumns_SetItems(TGridColumns AObj, int32_t Index, TGridColumn AValue) {
    GET_FUNC_ADDR(GridColumns_SetItems)
    MySyscall(pGridColumns_SetItems, 3, AObj, Index, AValue ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}

DEFINE_FUNC_PTR(GridColumns_StaticClassType)
TClass
GridColumns_StaticClassType() {
    GET_FUNC_ADDR(GridColumns_StaticClassType)
    return (TClass)MySyscall(pGridColumns_StaticClassType, 0 ,0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0);
}


/* ------------------函数重定义------------------------------- */
static inline char* GetFPStringArrayMember(void* P, intptr_t AIndex) {
    return GetStringArrOf(P, AIndex);
}

// 不知道有什么方法可以简化下
typedef void(*SYSCALL0)();
typedef void(*SYSCALL1)(intptr_t);
typedef void(*SYSCALL2)(intptr_t, uintptr_t);
typedef void(*SYSCALL3)(intptr_t, uintptr_t, uintptr_t);
typedef void(*SYSCALL4)(intptr_t, uintptr_t, uintptr_t, uintptr_t);
typedef void(*SYSCALL5)(intptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t);
typedef void(*SYSCALL6)(intptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t);
typedef void(*SYSCALL7)(intptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t);
typedef void(*SYSCALL8)(intptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t);
typedef void(*SYSCALL9)(intptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t);
typedef void(*SYSCALL10)(intptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t);
typedef void(*SYSCALL11)(intptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t);
typedef void(*SYSCALL12)(intptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t);


// getParam 从指定索引和地址获取事件中的参数
#define getParamOf(index, ptr) \
 (*((uintptr_t*)((uintptr_t)ptr + (uintptr_t)index*sizeof(uintptr_t))))


// 事件回调
static void* LCLAPI doEventCallbackProc(void* f, void* args, long argCount) {

	// 获取参数的宏
	#define _A_(index) \
	   getParamOf(index, args)

    switch (argCount) {
    case 0:  ((SYSCALL0) (f))(); break;
    case 1:  ((SYSCALL1) (f))(_A_(0)); break;
    case 2:  ((SYSCALL2) (f))(_A_(0), _A_(1)); break;
    case 3:  ((SYSCALL3) (f))(_A_(0), _A_(1), _A_(2)); break;
    case 4:  ((SYSCALL4) (f))(_A_(0), _A_(1), _A_(2), _A_(2)); break;
    case 5:  ((SYSCALL5) (f))(_A_(0), _A_(1), _A_(2), _A_(3), _A_(4)); break;
    case 6:  ((SYSCALL6) (f))(_A_(0), _A_(1), _A_(2), _A_(3), _A_(4), _A_(5)); break;
    case 7:  ((SYSCALL7) (f))(_A_(0), _A_(1), _A_(2), _A_(3), _A_(4), _A_(5), _A_(6)); break;
    case 8:  ((SYSCALL8) (f))(_A_(0), _A_(1), _A_(2), _A_(3), _A_(4), _A_(5), _A_(6), _A_(7)); break;
    case 9:  ((SYSCALL9) (f))(_A_(0), _A_(1), _A_(2), _A_(3), _A_(4), _A_(5), _A_(6), _A_(7), _A_(8)); break;
    case 10: ((SYSCALL10)(f))(_A_(0), _A_(1), _A_(2), _A_(3), _A_(4), _A_(5), _A_(6), _A_(7), _A_(8), _A_(9)); break;
    case 11: ((SYSCALL11)(f))(_A_(0), _A_(1), _A_(2), _A_(3), _A_(4), _A_(5), _A_(6), _A_(7), _A_(8), _A_(9), _A_(10)); break;
    case 12: ((SYSCALL12)(f))(_A_(0), _A_(1), _A_(2), _A_(3), _A_(4), _A_(5), _A_(6), _A_(7), _A_(8), _A_(9), _A_(10), _A_(11)); break;
    }
    return NULL;
}


// 消息回调
static void* LCLAPI doMessageCallbackProc(void* f, void* msg) {
   ((void(*)(void*))f)(msg);
    return NULL;
}

// 线程同步过程
static TThreadProc threadSyncProc;
// 线程同步回调
static void* LCLAPI doThreadSyncCallbackProc() {
    if (threadSyncProc) {
        ((TThreadProc)threadSyncProc)();
        threadSyncProc = NULL;
    }
    return NULL;
}

// 线程同步方法
// 无参数，无返回值的一个函数
void ThreadSync(TThreadProc fn) {
    // 加锁
#ifdef __GNUC__
    pthread_mutex_lock(&threadSyncMutex);
#else
    EnterCriticalSection(&threadSyncMutex);
#endif
    threadSyncProc = fn;
    Synchronize(FALSE);
    threadSyncProc = NULL;
#ifdef __GNUC__
    pthread_mutex_unlock(&threadSyncMutex);
#else
    LeaveCriticalSection(&threadSyncMutex);
#endif

}

#define GET_CALLBACK(name) \
  (void*)&name

static void init_lib_lcl() {
#ifdef __GNUC__
    pthread_mutex_init(&threadSyncMutex, NULL);
#else
    InitializeCriticalSection(&threadSyncMutex);
#endif

    // 设置事件的回调函数
	SetEventCallback(GET_CALLBACK(doEventCallbackProc));
	// 消息回调
	SetMessageCallback(GET_CALLBACK(doMessageCallbackProc));
	// 线程同步回调
	SetThreadSyncCallback(GET_CALLBACK(doThreadSyncCallbackProc));

    Application = Application_Instance();
    Screen = Screen_Instance();
    Mouse = Mouse_Instance();
    Clipboard = Clipboard_Instance();
    Printer = Printer_Instance();

}

static void un_init_lib_lcl() {
#ifdef __GNUC__
    pthread_mutex_destroy(&threadSyncMutex);
#else
    DeleteCriticalSection(&threadSyncMutex);
#endif
}

//#ifdef __cplusplus
//}
//#endif

#endif // _LIBLCL_H
